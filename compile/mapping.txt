react.Base -> CoUJ:
    3:3:void <init>() -> <init>
    1:2:void msg(org.bukkit.command.CommandSender,java.lang.String) -> CoUJ
react.Info -> kjuf:
    java.lang.String CORE_REACT_DOT -> CoUJ
    java.lang.String CORE_NAME -> kjuf
    java.lang.String CORE_CACHE -> jEpG
    java.lang.String CORE_DOTYML -> prVK
    java.lang.String COMMAND_ACT_DESCRIPTION -> gEWd
    java.lang.String COMMAND_ACT -> SCNa
    java.lang.String COMMAND_ACT_ALIAS_1 -> DigG
    java.lang.String COMMAND_ACT_ALIAS_2 -> SurP
    java.lang.String COMMAND_ACT_USAGE -> xGHv
    java.lang.String COMMAND_HELP_DESCRIPTION -> Hmbe
    java.lang.String COMMAND_HELP -> UtIN
    java.lang.String COMMAND_HELP_ALIAS_1 -> qBTH
    java.lang.String COMMAND_HELP_ALIAS_2 -> tTNS
    java.lang.String COMMAND_HELP_USAGE -> rEWF
    java.lang.String COMMAND_MONITOR_DESCRIPTION -> NgDc
    java.lang.String COMMAND_MONITOR -> Nnsm
    java.lang.String COMMAND_MONITOR_ALIAS_1 -> awLH
    java.lang.String COMMAND_MONITOR_ALIAS_2 -> uVod
    java.lang.String COMMAND_MONITOR_USAGE -> uhRQ
    java.lang.String COMMAND_REACT -> kcEc
    java.lang.String MSG_PERMISSION -> tBjm
    java.lang.String MSG_MONITORING_STARTED -> PlhO
    java.lang.String MSG_MONITORING_STOPPED -> RGyg
    java.lang.String NAME_TICK -> TNaT
    java.lang.String NAME_MEMORY -> SeQK
    java.lang.String NAME_CHUNKS -> sQJe
    java.lang.String NAME_ENTITIES -> VvjN
    java.lang.String STATE_MONITORING_TAB -> idoP
    java.lang.String STATE_MONITORING_ENABLED -> HeQc
    java.lang.String STATE_MAPPING_ENABLED -> RGym
    java.lang.String STATE_SOUND_PLAYS -> avjQ
    java.lang.String STATE_MONITORING_POSTED -> nIjV
    java.lang.String STATE_MONITORING_LASTTAB -> SSoA
    java.lang.String STATE_MONITORING_SWITCHNOTIFICATION -> UQcy
    java.lang.String STATE_PLAYER_HOTBAR -> VCew
    java.lang.String STATE_PLAYER_SHIFT -> xWgw
    java.lang.String STATE_PLAYER_SCROLL -> AFkM
    java.lang.String STATE_PLAYER_HEIGHT_CURRENT -> KUIX
    java.lang.String STATE_PLAYER_HEIGHT_CHANGING -> Lhln
    java.lang.String PERM_ACCESS -> MJMh
    java.lang.String PERM_MONITOR -> kQcJ
    java.lang.String PERM_MONITOR_TITLE -> pjGa
    java.lang.String PERM_MONITOR_MAP -> IErx
    java.lang.String PERM_MONITOR_ENVIRONMENT -> ivTX
    java.lang.String PERM_ACT -> vsiB
    java.lang.String PERM_RELOAD -> AhpF
    java.lang.String SAMPLER_TPS -> idrI
    java.lang.String SAMPLER_TICK -> gEYe
    java.lang.String SAMPLER_TIU -> uEpp
    java.lang.String SAMPLER_MEM -> GPoO
    java.lang.String SAMPLER_FREEMEM -> upfC
    java.lang.String SAMPLER_MAXMEM -> wfKT
    java.lang.String SAMPLER_ALLOCMEM -> aLYj
    java.lang.String SAMPLER_MAHS -> lfJp
    java.lang.String SAMPLER_CHK -> afMA
    java.lang.String SAMPLER_CHKS -> qSWV
    java.lang.String SAMPLER_ENT -> tvST
    java.lang.String SAMPLER_ENTLIV -> LrBM
    java.lang.String SAMPLER_ENTDROP -> imbe
    java.lang.String SAMPLER_ENTTILE -> kcGy
    java.lang.String[] ACTION_PURGE_ENTITIES_TAGS -> JAGk
    java.lang.String ACTION_PURGE_ENTITIES_STATUS -> vsgu
    java.lang.String ACTION_PURGE_ENTITIES_NAME -> sbNi
    java.lang.String ACTION_PURGE_ENTITIES_DESCRIPTION -> TVsW
    boolean b -> b
    20:20:void <init>() -> <init>
    1:65:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.React -> jEpG:
    react.React instance -> qRud
    react.controller.SampleController sampleController -> gNJW
    react.controller.PlayerController playerController -> Dqwp
    react.controller.MonitorController monitorController -> Ubgh
    react.controller.CommandController commandController -> mFjF
    react.controller.ActionController actionController -> QEYt
    3:3:void <init>() -> <init>
    2:2:void enable() -> enable
    1:1:void disable() -> disable
react.action.ActionPurgeEntities -> prVK:
    long l -> lDHI
    boolean m -> m
    java.lang.String n -> CVEd
    15:36:void <init>() -> <init>
    1:35:void enact(react.api.IActionSource,react.api.ISelector[]) -> CoUJ
    2:37:void purge(org.bukkit.Chunk,java.lang.Runnable,react.api.IActionSource,react.api.ISelector[]) -> CoUJ
    21:21:void access$0(react.action.ActionPurgeEntities,long) -> CoUJ
    3:3:long access$1(react.action.ActionPurgeEntities) -> CoUJ
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.action.ActionPurgeEntities$1 -> prVK$1:
    react.action.ActionPurgeEntities this$0 -> QDxp
    5:6:void <init>(react.action.ActionPurgeEntities) -> <init>
    1:4:react.api.ISelector get() -> CoUJ
    2:2:java.lang.Object get() -> get
react.action.ActionPurgeEntities$2 -> prVK$2:
    react.action.ActionPurgeEntities this$0 -> QDxp
    2:3:void <init>(react.action.ActionPurgeEntities) -> <init>
    1:7:react.api.ISelector get() -> CoUJ
    4:4:java.lang.Object get() -> get
react.action.ActionPurgeEntities$3 -> prVK$3:
    react.action.ActionPurgeEntities this$0 -> QDxp
    surge.util.FinalInteger val$completed -> onrn
    surge.util.FinalInteger val$total -> kYvE
    java.lang.String[] a -> a
    7:10:void <init>(react.action.ActionPurgeEntities,surge.util.FinalInteger,surge.util.FinalInteger) -> <init>
    1:13:void run() -> run
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.action.ActionPurgeEntities$4 -> prVK$4:
    react.action.ActionPurgeEntities this$0 -> QDxp
    3:4:void <init>(react.action.ActionPurgeEntities,java.lang.String,int) -> <init>
    1:6:void run() -> run
react.action.ActionPurgeEntities$5 -> prVK$5:
    react.action.ActionPurgeEntities this$0 -> QDxp
    org.bukkit.entity.Entity val$i -> UHtx
    int val$k -> RQNf
    org.bukkit.Chunk val$chunk -> kYuH
    java.lang.Runnable val$cb -> Jsiv
    1:5:void <init>(react.action.ActionPurgeEntities,org.bukkit.entity.Entity,int,org.bukkit.Chunk,java.lang.Runnable) -> <init>
    2:6:void run() -> run
react.api.Action -> gEWd:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String[] d -> pHBl
    react.api.ActionHandle e -> hPlK
    react.api.ActionState f -> owcj
    react.api.ActionTargetType g -> Btcs
    react.api.ActionType h -> yIka
    react.api.IActionSource i -> Ynvo
    double j -> KTlj
    surge.collection.GMap k -> oxGn
    12:30:void <init>(react.api.ActionType) -> <init>
    8:46:void <init>(java.lang.String,java.lang.String,react.api.ActionHandle,react.api.ActionTargetType,react.api.ActionType) -> <init>
    5:48:react.api.ISelector[] biselect(react.api.ISelector[]) -> CoUJ
    4:40:void setDefaultSelector(java.lang.Class,surge.util.Callback) -> CoUJ
    1:1:java.lang.String getName() -> getName
    20:20:java.lang.String getDescription() -> getDescription
    7:7:react.api.ActionHandle getHandleType() -> kjuf
    27:27:react.api.ActionState getState() -> jEpG
    37:37:java.lang.String getStatus() -> getStatus
    2:3:void setStatus(java.lang.String) -> kjuf
    25:25:double getProgress() -> getProgress
    6:11:void setProgress(double) -> setProgress
    13:13:react.api.ActionTargetType getTarget() -> prVK
    49:49:react.api.ActionType getType() -> gEWd
    21:21:surge.collection.GMap getDefaultSelectors() -> SCNa
    24:51:void act(react.api.IActionSource,react.api.ISelector[]) -> kjuf
    36:43:void completeAction() -> DigG
    19:19:react.api.IActionSource getCurrentSource() -> SurP
    29:29:java.lang.String[] getNodes() -> xGHv
    22:23:void setNodes(java.lang.String[]) -> CoUJ
    void enact(react.api.IActionSource,react.api.ISelector[]) -> CoUJ
react.api.ActionAlreadyRunningException -> SCNa:
    long serialVersionUID -> serialVersionUID
    1:1:void <init>() -> <init>
react.api.ActionException -> DigG:
    long serialVersionUID -> serialVersionUID
    1:1:void <init>() -> <init>
react.api.ActionHandle -> SurP:
    react.api.ActionHandle AUTOMATIC -> GPpn
    react.api.ActionHandle MANUAL -> Ynve
    react.api.ActionHandle MUTEX -> VTlf
    react.api.ActionHandle[] a -> wvls
    5:5:react.api.ActionHandle[] values() -> values
    4:4:react.api.ActionHandle valueOf(java.lang.String) -> valueOf
    2:2:void <init>(java.lang.String,int) -> <init>
    1:7:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.api.ActionNotRunningException -> xGHv:
    long serialVersionUID -> serialVersionUID
    1:1:void <init>() -> <init>
react.api.ActionState -> Hmbe:
    react.api.ActionState IDLE -> FhAs
    react.api.ActionState RUNNING -> gooL
    react.api.ActionState[] a -> YVFh
    6:6:react.api.ActionState[] values() -> values
    5:5:react.api.ActionState valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    1:4:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.api.ActionTargetType -> UtIN:
    react.api.ActionTargetType POSITIONAL -> tLBW
    react.api.ActionTargetType SYSTEM -> cdDY
    react.api.ActionTargetType[] a -> MdEk
    1:1:react.api.ActionTargetType[] values() -> values
    5:5:react.api.ActionTargetType valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    2:4:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.api.ActionType -> qBTH:
    react.api.ActionType PURGE_ENTITIES -> uhWN
    java.lang.String a -> a
    java.lang.String b -> b
    react.api.ActionHandle c -> wvlw
    react.api.ActionTargetType d -> rMjy
    react.api.ActionType[] e -> SeUJ
    8:8:react.api.ActionType[] values() -> values
    11:11:react.api.ActionType valueOf(java.lang.String) -> valueOf
    1:14:void <init>(java.lang.String,int,react.api.ActionHandle,react.api.ActionTargetType,java.lang.String,java.lang.String) -> <init>
    10:10:java.lang.String getName() -> getName
    2:2:java.lang.String getDescription() -> getDescription
    13:13:react.api.ActionHandle getHandle() -> Hmbe
    3:3:react.api.ActionTargetType getTarget() -> prVK
    6:9:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.api.CommandSenderActionSource -> tTNS:
    org.bukkit.command.CommandSender a -> yImw
    1:4:void <init>(org.bukkit.command.CommandSender) -> <init>
    2:2:org.bukkit.command.CommandSender getSender() -> getSender
react.api.ConsoleActionSource -> rEWF:
    1:1:void <init>() -> <init>
react.api.Gate -> NgDc:
    2:2:void <init>() -> <init>
    1:3:void removeEntity(org.bukkit.entity.Entity) -> CoUJ
react.api.IAction -> Nnsm:
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    react.api.ActionHandle getHandleType() -> kjuf
    void act(react.api.IActionSource,react.api.ISelector[]) -> kjuf
    void enact(react.api.IActionSource,react.api.ISelector[]) -> CoUJ
    react.api.ActionState getState() -> jEpG
    react.api.ActionTargetType getTarget() -> prVK
    void setNodes(java.lang.String[]) -> CoUJ
    java.lang.String[] getNodes() -> xGHv
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> kjuf
    double getProgress() -> getProgress
    void setProgress(double) -> setProgress
    react.api.ActionType getType() -> gEWd
    surge.collection.GMap getDefaultSelectors() -> SCNa
    void setDefaultSelector(java.lang.Class,surge.util.Callback) -> CoUJ
    react.api.ISelector[] biselect(react.api.ISelector[]) -> CoUJ
    react.api.IActionSource getCurrentSource() -> SurP
    void completeAction() -> DigG
react.api.IActionSource -> awLH:
react.api.ICommand -> uVod:
    java.lang.String getCommand() -> getCommand
    java.lang.String[] getAliases() -> UtIN
    java.lang.String[] getPermissions() -> qBTH
    java.lang.String getUsage() -> getUsage
    java.lang.String getDescription() -> getDescription
    react.api.SideGate getSideGate() -> tTNS
    void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> CoUJ
react.api.ISampler -> uhRQ:
    java.lang.String getID() -> getID
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    void setID(java.lang.String) -> setID
    void setName(java.lang.String) -> setName
    void setDescription(java.lang.String) -> setDescription
    surge.util.C getColor() -> rEWF
    surge.util.C getAltColor() -> NgDc
    void setColor(surge.util.C,surge.util.C) -> CoUJ
    int getInterval() -> getInterval
    void setInterval(int) -> CoUJ
    void sample() -> Nnsm
    java.lang.String get() -> get
    void construct() -> awLH
    void setValue(double) -> setValue
    double getValue() -> getValue
react.api.ISelector -> kcEc:
    react.api.SelectionMode getMode() -> uVod
    java.lang.Class getType() -> getType
    boolean can(java.lang.Object) -> CoUJ
    surge.collection.GSet getList() -> uhRQ
    surge.collection.GSet getPossibilities() -> kcEc
    int parse(org.bukkit.command.CommandSender,java.lang.String) -> kjuf
    java.lang.String getName() -> getName
react.api.Lang -> tBjm:
    java.lang.String value() -> value
react.api.MSampler -> PlhO:
    1:1:void <init>() -> <init>
    2:2:surge.server.SuperSampler a() -> tBjm
react.api.MonitorHeading -> RGyg:
    react.api.ISampler a -> TFUG
    surge.collection.GList b -> gomy
    java.lang.String c -> c
    4:20:void <init>(java.lang.String,react.api.ISampler) -> <init>
    9:11:void addSampler(react.api.ISampler) -> CoUJ
    3:3:react.api.ISampler getHead() -> PlhO
    6:14:void setHead(react.api.ISampler) -> kjuf
    15:15:surge.collection.GList getChildren() -> RGyg
    7:7:java.lang.String getHeadText() -> TNaT
    1:23:java.lang.String getChildText() -> SeQK
    21:21:java.lang.String getName() -> getName
    22:24:void setName(java.lang.String) -> setName
    5:25:void setChildren(surge.collection.GList) -> CoUJ
react.api.Permissable -> TNaT:
    react.api.Permissable ACCESS -> OjJP
    react.api.Permissable MONITOR -> IyYs
    react.api.Permissable MONITOR_TITLE -> TyYU
    react.api.Permissable MONITOR_MAP -> VTkO
    react.api.Permissable MONITOR_ENVIRONMENT -> JAHY
    react.api.Permissable ACT -> fmLa
    react.api.Permissable RELOAD -> pOto
    java.lang.String a -> a
    react.api.Permissable[] b -> eOuL
    2:2:react.api.Permissable[] values() -> values
    16:16:react.api.Permissable valueOf(java.lang.String) -> valueOf
    7:14:void <init>(java.lang.String,int,java.lang.String) -> <init>
    9:9:boolean has(org.bukkit.command.CommandSender) -> CoUJ
    15:15:java.lang.String getNode() -> sQJe
    1:17:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.api.PlayerActionSource -> SeQK:
    org.bukkit.entity.Player a -> mrAC
    1:3:void <init>(org.bukkit.entity.Player) -> <init>
    4:4:org.bukkit.entity.Player getPlayer() -> getPlayer
react.api.ReactActionSource -> sQJe:
    1:1:void <init>() -> <init>
react.api.ReactCommand -> VvjN:
    java.lang.String a -> a
    java.lang.String[] b -> dnvF
    java.lang.String[] c -> xWkm
    java.lang.String d -> d
    java.lang.String e -> e
    react.api.SideGate f -> UAHM
    1:7:void <init>() -> <init>
    8:8:java.lang.String getCommand() -> getCommand
    2:2:java.lang.String[] getAliases() -> UtIN
    4:4:java.lang.String[] getPermissions() -> qBTH
    5:5:java.lang.String getUsage() -> getUsage
    6:6:java.lang.String getDescription() -> getDescription
    3:3:react.api.SideGate getSideGate() -> tTNS
react.api.ReactException -> idoP:
    long serialVersionUID -> serialVersionUID
    3:4:void <init>(java.lang.String) -> <init>
    1:2:void <init>() -> <init>
react.api.ReactPlayer -> HeQc:
    surge.collection.GMap keystore -> rpMr
    boolean monitoring -> monitoring
    boolean mapping -> UIWs
    int monitorSelection -> oEAv
    int plays -> tmcT
    boolean monitorPosted -> xXLw
    int monitorLastSelection -> KfQY
    int switchNotification -> DjNJ
    int hotbarSlot -> bFnr
    boolean shift -> GkFi
    int scroll -> ndEd
    double lastHeight -> HnIh
    boolean heightMovement -> tnGi
    org.bukkit.entity.Player a -> mrAC
    2:81:void <init>(org.bukkit.entity.Player) -> <init>
    28:72:void save() -> save
    19:67:void load() -> load
    11:11:boolean isMonitoring() -> VvjN
    30:30:boolean isMapping() -> idoP
    36:36:org.bukkit.entity.Player getP() -> HeQc
    21:69:void setMonitoring(boolean) -> CoUJ
    9:65:void setMapping(boolean) -> kjuf
    26:26:int getMonitorSelection() -> RGym
    51:70:void setMonitorSelection(int) -> kjuf
    3:3:int getHotbarSlot() -> avjQ
    4:32:void setHotbarSlot(int) -> jEpG
    47:47:boolean isShifting() -> nIjV
    37:74:void setShifting(boolean) -> jEpG
    66:66:boolean isShift() -> SSoA
    49:58:void setShift(boolean) -> prVK
    50:50:int getScroll() -> UQcy
    31:79:void setScroll(int) -> prVK
    41:41:int getMonitorLastSelection() -> VCew
    14:80:void setMonitorLastSelection(int) -> gEWd
    15:71:void setP(org.bukkit.entity.Player) -> CoUJ
    82:82:double getLastHeight() -> xWgw
    27:45:void setLastHeight(double) -> CoUJ
    13:13:boolean isHeightMovement() -> AFkM
    20:22:void setHeightMovement(boolean) -> gEWd
    12:12:int getSwitchNotification() -> KUIX
    10:56:void setSwitchNotification(int) -> SCNa
    35:35:boolean getMonitorPosted() -> Lhln
    25:59:void setMonitorPosted(boolean) -> SCNa
    44:44:int getPlays() -> MJMh
    18:29:void setPlays(int) -> DigG
    1:78:void <clinit>() -> <clinit>
react.api.SampledType -> RGym:
    react.api.SampledType TPS -> sjce
    react.api.SampledType TICK -> HeYJ
    react.api.SampledType TIU -> Usms
    react.api.SampledType MEM -> BAbt
    react.api.SampledType FREEMEM -> Forx
    react.api.SampledType MAXMEM -> HmiW
    react.api.SampledType ALLOCMEM -> bhrh
    react.api.SampledType MAHS -> BdGQ
    react.api.SampledType CHK -> dxKR
    react.api.SampledType CHKS -> ctfo
    react.api.SampledType ENT -> TEvx
    react.api.SampledType ENTLIV -> uOFn
    react.api.SampledType ENTDROP -> vQiQ
    react.api.SampledType ENTTILE -> WGPt
    java.lang.String a -> a
    react.api.SampledType[] b -> Xceo
    12:12:react.api.SampledType[] values() -> values
    21:21:react.api.SampledType valueOf(java.lang.String) -> valueOf
    7:20:void <init>(java.lang.String,int,java.lang.String) -> <init>
    14:14:java.lang.String getNode() -> sQJe
    1:23:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.api.Sampler -> avjQ:
    double a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    surge.util.C e -> AiSm
    surge.util.C f -> LGRS
    int g -> g
    boolean h -> h
    5:16:void <init>() -> <init>
    15:15:java.lang.String getID() -> getID
    1:1:java.lang.String getName() -> getName
    13:13:java.lang.String getDescription() -> getDescription
    2:2:surge.util.C getColor() -> rEWF
    12:12:surge.util.C getAltColor() -> NgDc
    3:3:int getInterval() -> getInterval
    void sample() -> Nnsm
    void construct() -> awLH
    java.lang.String get() -> get
    4:8:void setValue(double) -> setValue
    14:14:double getValue() -> getValue
    17:18:void setID(java.lang.String) -> setID
    6:21:void setName(java.lang.String) -> setName
    10:19:void setDescription(java.lang.String) -> setDescription
    9:23:void setColor(surge.util.C,surge.util.C) -> CoUJ
    11:22:void setInterval(int) -> CoUJ
react.api.SelectionException -> nIjV:
    long serialVersionUID -> serialVersionUID
    1:2:void <init>(java.lang.String) -> <init>
react.api.SelectionMode -> SSoA:
    react.api.SelectionMode WHITELIST -> cdFV
    react.api.SelectionMode BLACKLIST -> Yfhp
    react.api.SelectionMode[] a -> NgIU
    2:2:react.api.SelectionMode[] values() -> values
    6:6:react.api.SelectionMode valueOf(java.lang.String) -> valueOf
    5:5:void <init>(java.lang.String,int) -> <init>
    1:4:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.api.Selector -> UQcy:
    java.lang.Class a -> a
    react.api.SelectionMode b -> YLtj
    surge.collection.GSet c -> YUfU
    surge.collection.GSet d -> JtOF
    int e -> e
    java.lang.String[] f -> dVFa
    13:13:void <clinit>() -> <clinit>
    1:31:void <init>(java.lang.Class,react.api.SelectionMode) -> <init>
    11:11:react.api.SelectionMode getMode() -> uVod
    6:6:java.lang.Class getType() -> getType
    7:7:boolean can(java.lang.Object) -> CoUJ
    15:15:surge.collection.GSet getList() -> uhRQ
    20:20:surge.collection.GSet getPossibilities() -> kcEc
    int parse(org.bukkit.command.CommandSender,java.lang.String) -> kjuf
    2:29:react.api.ISelector createSelector(org.bukkit.command.CommandSender,java.lang.String) -> jEpG
    14:23:int pop() -> pop
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.api.SelectorEntityType -> VCew:
    java.lang.String g -> YxJT
    1:9:void <init>(react.api.SelectionMode) -> <init>
    3:8:void add(org.bukkit.entity.EntityType) -> CoUJ
    7:7:int parse(org.bukkit.command.CommandSender,java.lang.String) -> kjuf
    6:6:java.lang.String getName() -> getName
    void <clinit>() -> <clinit>
    char[] b(java.lang.String) -> jEpG
    java.lang.String b(char[]) -> kjuf
react.api.SelectorParseException -> xWgw:
    long serialVersionUID -> serialVersionUID
    1:2:void <init>(java.lang.String) -> <init>
react.api.SelectorPosition -> AFkM:
    java.lang.String[] g -> PmOT
    49:96:void <init>() -> <init>
    15:110:void add(org.bukkit.Chunk) -> CoUJ
    48:73:void add(org.bukkit.Chunk,int) -> CoUJ
    23:104:void add(org.bukkit.World) -> CoUJ
    17:55:void addAll() -> kQcJ
    5:114:int parse(org.bukkit.command.CommandSender,java.lang.String) -> kjuf
    1:113:surge.collection.GSet parseNode(org.bukkit.command.CommandSender,java.lang.String) -> prVK
    44:44:java.lang.String getName() -> getName
    void <clinit>() -> <clinit>
    char[] b(java.lang.String) -> jEpG
    java.lang.String b(char[]) -> kjuf
react.api.Side -> KUIX:
    react.api.Side PLAYERS -> PmNt
    react.api.Side CONSOLE -> DHIj
    java.lang.String a -> a
    react.api.Side[] b -> Smfy
    6:6:react.api.Side[] values() -> values
    4:4:react.api.Side valueOf(java.lang.String) -> valueOf
    3:11:void <init>(java.lang.String,int,java.lang.String) -> <init>
    9:9:java.lang.String ss() -> pjGa
    8:12:react.api.Side get(org.bukkit.command.CommandSender) -> kjuf
    1:5:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.api.SideGate -> Lhln:
    react.api.SideGate PLAYERS_ONLY -> vYxo
    react.api.SideGate CONSOLES_ONLY -> KUOQ
    react.api.SideGate ANYTHING -> DHJV
    react.api.SideGate[] a -> qAxL
    16:16:react.api.SideGate[] values() -> values
    1:1:react.api.SideGate valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    2:17:boolean supports(react.api.Side) -> CoUJ
    3:14:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.api.SideGate$1 -> Lhln$1:
    int[] a -> a
    1:1:void <clinit>() -> <clinit>
react.api.TitleMonitor -> MJMh:
    surge.collection.GList a -> dVFp
    3:38:void <init>() -> <init>
    6:32:void addHeading(react.api.MonitorHeading) -> CoUJ
    13:13:int getMaxSelection() -> IErx
    7:36:int left(int) -> SurP
    8:33:int right(int) -> xGHv
    14:14:react.api.MonitorHeading getHeadFor(int) -> Hmbe
    1:39:java.lang.String getHotbarHeadFor(int,boolean,react.controller.MonitorController,react.api.ReactPlayer,int) -> CoUJ
    2:35:java.lang.String getHotbarFor(int,boolean) -> CoUJ
react.command.CommandAct -> kQcJ:
    java.lang.String[] g -> PmOT
    1:51:void <init>() -> <init>
    3:60:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> CoUJ
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.command.CommandHelp -> pjGa:
    java.lang.String g -> YxJT
    2:10:void <init>() -> <init>
    1:3:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> CoUJ
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.command.CommandMonitor -> IErx:
    int g -> g
    1:10:void <init>() -> <init>
    8:11:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> CoUJ
react.controller.ActionController -> ivTX:
    surge.collection.GMap a -> tnFQ
    30:30:void <init>() -> <init>
    1:28:void start() -> start
    5:5:react.api.IAction getAction(react.api.ActionType) -> CoUJ
    3:20:void registerAction(react.api.IAction) -> CoUJ
    17:17:void stop() -> stop
    29:29:void tick() -> tick
    27:27:surge.collection.GList getActions() -> ivTX
react.controller.CommandController -> vsiB:
    surge.collection.GList a -> dVFp
    boolean c -> c
    java.lang.String[] d -> pHBl
    31:31:void <init>() -> <init>
    6:27:void start() -> start
    41:70:void stop() -> stop
    3:73:void begin() -> begin
    1:37:void tick() -> tick
    21:64:void msg(org.bukkit.command.CommandSender,java.lang.String) -> CoUJ
    26:74:void f(org.bukkit.command.CommandSender,java.lang.String) -> gEWd
    2:77:boolean onCommand(org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String,java.lang.String[]) -> onCommand
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.controller.MonitorController -> AhpF:
    int maxCooldown -> oUdh
    react.api.TitleMonitor a -> WiSS
    surge.collection.GMap c -> myrT
    java.lang.String[] d -> pHBl
    80:148:void <init>() -> <init>
    12:173:void start() -> start
    38:170:void toggleMonitoring(org.bukkit.entity.Player) -> kjuf
    35:110:void stop() -> stop
    19:162:void constructMonitor() -> vsiB
    1:70:float calcVolume(react.api.ReactPlayer) -> CoUJ
    26:26:boolean canMonitor(org.bukkit.entity.Player) -> jEpG
    99:164:boolean isMonitoring(org.bukkit.entity.Player) -> prVK
    2:111:void startMonitoring(org.bukkit.entity.Player) -> gEWd
    4:144:void stopMonitoring(org.bukkit.entity.Player) -> SCNa
    88:88:void tick() -> tick
    53:104:void a(react.api.ReactPlayer) -> kjuf
    39:161:void b(react.api.ReactPlayer) -> jEpG
    7:168:void c(react.api.ReactPlayer) -> prVK
    10:123:void d(react.api.ReactPlayer) -> gEWd
    18:169:void e(react.api.ReactPlayer) -> SCNa
    3:158:void f(react.api.ReactPlayer) -> DigG
    24:167:java.lang.String prefixFor(react.api.ReactPlayer,int,int) -> CoUJ
    5:172:java.lang.String prefixForSub(react.api.ReactPlayer,surge.util.C,int) -> CoUJ
    11:163:void tickMonitor(react.api.ReactPlayer) -> SurP
    9:9:react.api.TitleMonitor getTitleMonitor() -> AhpF
    42:83:void on(org.bukkit.event.player.PlayerJoinEvent) -> CoUJ
    13:171:void on(org.bukkit.event.player.PlayerToggleSneakEvent) -> CoUJ
    32:137:void onTick() -> idrI
    14:14:java.lang.String getTickName() -> gEYe
    79:79:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.controller.PlayerController -> idrI:
    surge.collection.GList a -> dVFp
    1:1:void <init>() -> <init>
    2:22:void start() -> start
    6:21:void stop() -> stop
    5:5:void tick() -> tick
    3:24:boolean has(org.bukkit.entity.Player) -> DigG
    4:23:react.api.ReactPlayer getPlayer(org.bukkit.entity.Player) -> SurP
    14:14:surge.collection.GList getPlayers() -> uEpp
    7:20:void on(org.bukkit.event.player.PlayerQuitEvent) -> CoUJ
react.controller.SampleController -> gEYe:
    surge.collection.GMap a -> tnFQ
    surge.server.SuperSampler c -> CUhX
    boolean d -> d
    java.lang.String[] e -> WaBn
    7:51:void <init>() -> <init>
    22:25:void registerSampler(react.api.ISampler) -> jEpG
    50:50:react.api.ISampler getSampler(java.lang.String) -> prVK
    2:54:void a() -> a
    6:43:void start() -> start
    20:53:void stop() -> stop
    23:23:void tick() -> tick
    39:39:surge.server.SuperSampler getSuperSampler() -> GPoO
    1:48:void onTick() -> idrI
    16:16:java.lang.String getTickName() -> gEYe
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleChunksLoaded -> uEpp:
    java.lang.String[] i -> quaQ
    7:7:void <init>() -> <init>
    1:11:void construct() -> awLH
    5:10:void sample() -> Nnsm
    2:2:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleChunksLoadedPerSecond -> GPoO:
    surge.math.Average i -> pYKy
    java.lang.String[] j -> kQlX
    5:6:void <init>() -> <init>
    1:12:void construct() -> awLH
    4:13:void sample() -> Nnsm
    10:10:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleEntitiesDrops -> upfC:
    java.lang.String[] i -> quaQ
    7:7:void <init>() -> <init>
    2:11:void construct() -> awLH
    8:10:void sample() -> Nnsm
    1:1:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleEntitiesLiving -> wfKT:
    java.lang.String[] i -> quaQ
    5:5:void <init>() -> <init>
    1:11:void construct() -> awLH
    4:9:void sample() -> Nnsm
    10:10:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleEntitiesTiles -> aLYj:
    java.lang.String[] i -> quaQ
    7:7:void <init>() -> <init>
    2:11:void construct() -> awLH
    1:10:void sample() -> Nnsm
    6:6:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleEntitiesTotal -> lfJp:
    java.lang.String[] i -> quaQ
    6:6:void <init>() -> <init>
    2:10:void construct() -> awLH
    1:7:void sample() -> Nnsm
    11:11:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleMemoryAllocated -> afMA:
    java.lang.String i -> DsAV
    1:1:void <init>() -> <init>
    3:11:void construct() -> awLH
    2:7:void sample() -> Nnsm
    10:10:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleMemoryAllocationPerSecond -> qSWV:
    java.lang.String[] i -> quaQ
    9:9:void <init>() -> <init>
    1:10:void construct() -> awLH
    4:6:void sample() -> Nnsm
    11:11:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleMemoryFree -> tvST:
    java.lang.String[] i -> quaQ
    7:7:void <init>() -> <init>
    1:10:void construct() -> awLH
    6:11:void sample() -> Nnsm
    8:8:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleMemoryMax -> LrBM:
    java.lang.String[] i -> quaQ
    8:8:void <init>() -> <init>
    1:11:void construct() -> awLH
    4:7:void sample() -> Nnsm
    3:3:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleMemoryUse -> imbe:
    java.lang.String[] i -> quaQ
    9:9:void <init>() -> <init>
    2:10:void construct() -> awLH
    4:11:void sample() -> Nnsm
    1:1:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleTickTime -> kcGy:
    java.lang.String[] i -> quaQ
    8:8:void <init>() -> <init>
    1:11:void construct() -> awLH
    5:9:void sample() -> Nnsm
    4:4:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleTickUtilization -> JAGk:
    java.lang.String[] i -> quaQ
    3:3:void <init>() -> <init>
    1:11:void construct() -> awLH
    9:10:void sample() -> Nnsm
    5:5:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
react.sampler.SampleTicksPerSecond -> vsgu:
    int i -> i
    java.lang.String[] j -> kQlX
    5:5:void <init>() -> <init>
    2:12:void construct() -> awLH
    4:13:void sample() -> Nnsm
    1:9:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.Main -> sbNi:
    surge.collection.GList d -> mhtP
    surge.collection.GMap e -> XAdj
    surge.collection.GList f -> baDk
    surge.collection.GMap anchors -> DjPT
    java.lang.String[] g -> PmOT
    119:119:void <init>() -> <init>
    101:101:void onControllerRegistry() -> upfC
    1:173:void onStart(surge.util.Protocol) -> CoUJ
    3:129:void onStop() -> wfKT
    110:110:void onPostInit() -> aLYj
    88:88:void onPreInit() -> lfJp
    13:177:void a() -> a
    2:180:void b() -> b
    5:175:void c() -> c
    23:179:void onTick() -> idrI
    void <clinit>() -> <clinit>
    char[] b(java.lang.String) -> jEpG
    java.lang.String b(char[]) -> kjuf
surge.PluginAmp -> TVsW:
    surge.control.AmpedPlugin a -> CxNe
    boolean b -> b
    int c -> c
    java.lang.String[] d -> pHBl
    11:30:void <init>(surge.control.AmpedPlugin) -> <init>
    23:23:surge.control.AmpedPlugin getPluginInstance() -> afMA
    25:25:boolean isConnected() -> isConnected
    2:28:void connect() -> connect
    7:31:void a() -> a
    9:35:void disconnect() -> disconnect
    1:22:int startTask(int,java.lang.Runnable) -> CoUJ
    5:32:int startRepeatingTask(int,int,java.lang.Runnable) -> CoUJ
    4:19:void stopTask(int) -> UtIN
    34:34:void access$000(surge.PluginAmp) -> CoUJ
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.PluginAmp$1 -> TVsW$1:
    surge.PluginAmp this$0 -> UcOe
    java.lang.String a -> a
    2:2:void <init>(surge.PluginAmp) -> <init>
    1:4:void run() -> run
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.PluginAmp$2 -> TVsW$2:
    surge.PluginAmp this$0 -> UcOe
    1:1:void <init>(surge.PluginAmp) -> <init>
    2:3:void run() -> run
surge.Surge -> qRud:
    surge.PluginAmp a -> NVKM
    surge.collection.GList b -> gomy
    surge.collection.GList c -> YLwj
    surge.sched.TaskManager d -> dDfg
    surge.hotload.HotloadManager e -> gWBS
    java.lang.Thread f -> BchU
    boolean g -> g
    11:40:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    5:29:void register(org.bukkit.event.Listener) -> CoUJ
    1:18:void unregister(org.bukkit.event.Listener) -> unregister
    35:35:java.io.File folder(java.lang.String) -> gEWd
    33:33:java.io.File folder() -> qSWV
    8:27:java.io.File getPluginJarFile() -> tvST
    9:19:void a() -> a
    10:10:java.lang.Thread getServerThread() -> LrBM
    25:25:surge.collection.GList getTickComponents() -> imbe
    32:32:surge.collection.GList getAsyncTickComponents() -> kcGy
    6:41:void registerTicked(surge.sched.IMasterTickComponent) -> CoUJ
    3:34:void unregisterTicked(surge.sched.IMasterTickComponent) -> kjuf
    4:36:surge.PluginAmp createAmp(surge.control.AmpedPlugin) -> CoUJ
    2:2:boolean isMainThread() -> isMainThread
    13:21:void b() -> b
    20:20:boolean hasAmp() -> JAGk
    23:23:surge.PluginAmp getAmp() -> vsgu
    37:37:surge.sched.TaskManager getTaskManager() -> sbNi
    38:38:surge.hotload.HotloadManager getHotloadManager() -> TVsW
surge.cluster.Cluster -> gNJW:
    surge.cluster.ClusterType a -> clXl
    java.lang.Object b -> FyGi
    int c -> c
    1:8:void <init>(surge.cluster.ClusterType,java.lang.Object) -> <init>
    2:2:surge.cluster.ClusterType getType() -> qRud
    5:7:void set(java.lang.Object) -> set
    3:3:java.lang.Object get() -> get
surge.cluster.ClusterBoolean -> Dqwp:
    1:2:void <init>(java.lang.Boolean) -> <init>
surge.cluster.ClusterDouble -> Ubgh:
    1:2:void <init>(java.lang.Double) -> <init>
surge.cluster.ClusterInt -> mFjF:
    1:2:void <init>(java.lang.Integer) -> <init>
surge.cluster.ClusterLong -> QEYt:
    1:2:void <init>(java.lang.Long) -> <init>
surge.cluster.ClusterString -> lDHI:
    1:2:void <init>(java.lang.String) -> <init>
surge.cluster.ClusterStringList -> CVEd:
    1:2:void <init>(java.util.List) -> <init>
surge.cluster.ClusterType -> QDxp:
    surge.cluster.ClusterType INT -> DXmq
    surge.cluster.ClusterType BOOLEAN -> yuHM
    surge.cluster.ClusterType STRING -> Cwms
    surge.cluster.ClusterType STRING_LIST -> GryG
    surge.cluster.ClusterType DOUBLE -> QEae
    surge.cluster.ClusterType LONG -> mXSU
    surge.cluster.ClusterType[] a -> JAKt
    3:3:surge.cluster.ClusterType[] values() -> values
    5:5:surge.cluster.ClusterType valueOf(java.lang.String) -> valueOf
    4:4:void <init>(java.lang.String,int) -> <init>
    1:2:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.cluster.ConfigurationDataInput -> onrn:
    int[] a -> a
    java.lang.String[] b -> dnvF
    25:25:void <init>() -> <init>
    3:130:void read(surge.cluster.IConfigurable,java.io.File) -> CoUJ
    1:131:surge.cluster.DataCluster fillDefaults(surge.cluster.IConfigurable) -> CoUJ
    5:5:int[] a() -> gNJW
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.cluster.ConfigurationDataOutput -> kYvE:
    java.lang.String[] a -> a
    1:1:void <init>() -> <init>
    2:71:void write(surge.cluster.IConfigurable,java.io.File) -> kjuf
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.cluster.DataCluster -> UHtx:
    surge.collection.GMap a -> tnFQ
    java.lang.String b -> b
    5:38:void <init>() -> <init>
    34:34:surge.collection.GList keys() -> Dqwp
    9:70:void fromJson(surge.json.JSONObject) -> CoUJ
    12:72:surge.json.JSONObject toJson() -> Ubgh
    28:74:org.bukkit.configuration.file.FileConfiguration toFileConfiguration() -> mFjF
    3:73:void fromFileConfiguration(org.bukkit.configuration.file.FileConfiguration) -> CoUJ
    32:32:boolean contains(java.lang.String) -> contains
    8:8:surge.cluster.ClusterType getType(java.lang.String) -> SCNa
    19:19:int getInt(java.lang.String) -> getInt
    46:46:java.lang.Object get(java.lang.String) -> get
    25:25:long getLong(java.lang.String) -> getLong
    7:7:java.lang.String getString(java.lang.String) -> getString
    21:21:double getDouble(java.lang.String) -> getDouble
    10:10:boolean getBoolean(java.lang.String) -> getBoolean
    44:44:java.util.List getStringList(java.lang.String) -> getStringList
    2:76:void trySet(java.lang.String,java.lang.Object) -> CoUJ
    39:57:void set(java.lang.String,int) -> CoUJ
    14:63:void set(java.lang.String,boolean) -> CoUJ
    1:52:void set(java.lang.String,double) -> CoUJ
    64:71:void set(java.lang.String,long) -> CoUJ
    16:35:void set(java.lang.String,java.lang.String) -> set
    22:24:void set(java.lang.String,java.util.List) -> CoUJ
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.cluster.ICluster -> RQNf:
    surge.cluster.ClusterType getType() -> qRud
    void set(java.lang.Object) -> set
    java.lang.Object get() -> get
surge.cluster.IConfigurable -> kYuH:
surge.cluster.IDataInput -> Jsiv:
    surge.cluster.DataCluster read(java.io.File) -> CoUJ
surge.cluster.IDataOutput -> pHBl:
    void write(surge.cluster.DataCluster,java.io.File) -> CoUJ
surge.cluster.Key -> hPlK:
    java.lang.String value() -> value
surge.cluster.KeyPointer -> owcj:
    int value() -> value
surge.cluster.KeyStore -> Btcs:
surge.cluster.ReflectedConfigurationException -> yIka:
    long serialVersionUID -> serialVersionUID
    1:1:void <init>() -> <init>
surge.cluster.YamlDataInput -> Ynvo:
    9:9:void <init>() -> <init>
    1:8:surge.cluster.DataCluster read(java.io.File) -> CoUJ
surge.cluster.YamlDataOutput -> KTlj:
    3:3:void <init>() -> <init>
    1:6:void write(surge.cluster.DataCluster,java.io.File) -> CoUJ
surge.collection.GBiset -> oxGn:
    java.lang.Object b -> FyGi
    java.lang.Object c -> MSFf
    1:7:void <init>(java.lang.Object,java.lang.Object) -> <init>
    8:8:java.lang.Object getA() -> QEYt
    4:10:void setA(java.lang.Object) -> kjuf
    9:9:java.lang.Object getB() -> lDHI
    5:6:void setB(java.lang.Object) -> jEpG
surge.collection.GList -> GPpn:
    long serialVersionUID -> serialVersionUID
    int b -> b
    java.lang.String a -> a
    29:65:void <init>() -> <init>
    13:110:void <init>(java.lang.Object[]) -> <init>
    14:117:void <init>(java.util.Iterator) -> <init>
    52:119:void <init>(java.util.List) -> <init>
    24:112:java.lang.Object mostCommon() -> CVEd
    19:99:void remove(surge.collection.GList) -> kjuf
    37:87:surge.collection.GList shuffle() -> QDxp
    1:121:surge.collection.GList split() -> onrn
    75:75:boolean hasIndex(int) -> qBTH
    113:114:java.lang.Object pickRandom() -> kYvE
    10:96:void <init>(java.util.Set) -> <init>
    3:45:void <init>(java.util.Collection) -> <init>
    36:94:void <init>(surge.collection.GList) -> <init>
    15:91:surge.collection.GList stringList() -> UHtx
    30:120:surge.collection.GList removeDuplicates() -> RQNf
    26:26:boolean hasDuplicates() -> kYuH
    2:4:void sort() -> sort
    23:115:void push(java.lang.Object,int) -> CoUJ
    11:35:void addFirst(java.lang.Object) -> addFirst
    16:98:void add(java.lang.Object[]) -> add
    17:108:surge.collection.GList qadd(java.lang.Object) -> prVK
    25:59:void add(java.util.List) -> CoUJ
    7:104:java.lang.String toString(java.lang.String) -> toString
    8:63:surge.collection.GList reverse() -> Jsiv
    33:33:java.lang.String toString() -> toString
    54:118:surge.collection.GList copy() -> pHBl
    82:97:surge.collection.GList qdel(java.lang.Object) -> gEWd
    12:101:java.lang.Object pop() -> pop
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.collection.GList$1 -> GPpn$1:
    surge.collection.GList this$0 -> vAJQ
    2:2:void <init>(surge.collection.GList) -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
surge.collection.GMap -> Ynve:
    long serialVersionUID -> serialVersionUID
    java.lang.String a -> a
    46:46:void <init>() -> <init>
    6:50:surge.collection.GMap copy() -> hPlK
    1:49:java.lang.Object findKey(java.lang.Object) -> SCNa
    15:39:surge.collection.GMap qput(java.lang.Object,java.lang.Object) -> CoUJ
    4:60:surge.collection.GMap flip() -> owcj
    2:35:java.lang.String toString() -> toString
    19:55:surge.collection.GMap append(surge.collection.GMap) -> CoUJ
    41:41:surge.collection.GList k() -> Btcs
    64:64:surge.collection.GList v() -> yIka
    12:44:void putNVD(java.lang.Object,java.lang.Object) -> kjuf
    5:37:surge.collection.GList get(surge.collection.GList) -> jEpG
    40:63:surge.collection.GMap removeDuplicateKeys() -> Ynvo
    14:56:surge.collection.GMap removeDuplicateValues() -> KTlj
    10:62:void put(surge.collection.GList,surge.collection.GList) -> CoUJ
    8:58:void put(surge.collection.GMap) -> kjuf
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.collection.GQuadraset -> VTlf:
    long serialVersionUID -> serialVersionUID
    java.lang.Object b -> FyGi
    java.lang.Object c -> MSFf
    java.lang.Object d -> bGPt
    java.lang.Object e -> EmRN
    1:11:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    14:14:java.lang.Object getA() -> QEYt
    12:18:void setA(java.lang.Object) -> kjuf
    17:17:java.lang.Object getB() -> lDHI
    4:7:void setB(java.lang.Object) -> jEpG
    3:3:java.lang.Object getC() -> oxGn
    15:16:void setC(java.lang.Object) -> DigG
    6:6:java.lang.Object getD() -> GPpn
    8:13:void setD(java.lang.Object) -> SurP
surge.collection.GSet -> wvls:
    long serialVersionUID -> serialVersionUID
    3:6:void <init>() -> <init>
    1:8:void <init>(java.util.Collection) -> <init>
    2:4:void <init>(int,float) -> <init>
    5:7:void <init>(int) -> <init>
surge.collection.GSound -> FhAs:
    java.lang.String a -> a
    org.bukkit.Sound b -> cthB
    java.lang.Float c -> wwQc
    java.lang.Float d -> BSHp
    java.lang.String[] e -> WaBn
    17:47:void <init>(java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    22:50:void <init>(java.lang.String) -> <init>
    9:42:void <init>(org.bukkit.Sound,java.lang.Float,java.lang.Float) -> <init>
    1:29:void <init>(org.bukkit.Sound) -> <init>
    38:51:void play(org.bukkit.entity.Player) -> xGHv
    8:46:void play(org.bukkit.Location) -> CoUJ
    2:37:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> CoUJ
    16:16:java.lang.String getSound() -> Ynve
    7:25:void setSound(java.lang.String) -> DigG
    13:13:org.bukkit.Sound getiSound() -> VTlf
    19:49:void setiSound(org.bukkit.Sound) -> CoUJ
    3:3:java.lang.Float getVolume() -> wvls
    4:5:void setVolume(java.lang.Float) -> CoUJ
    32:32:java.lang.Float getPitch() -> FhAs
    14:28:void setPitch(java.lang.Float) -> kjuf
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.collection.GTriset -> gooL:
    java.lang.Object b -> FyGi
    java.lang.Object c -> MSFf
    java.lang.Object d -> bGPt
    1:13:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    3:3:java.lang.Object getA() -> QEYt
    5:8:void setA(java.lang.Object) -> kjuf
    12:12:java.lang.Object getB() -> lDHI
    9:10:void setB(java.lang.Object) -> jEpG
    2:2:java.lang.Object getC() -> oxGn
    6:14:void setC(java.lang.Object) -> DigG
surge.collection.Snippet -> YVFh:
    1:1:void <init>() -> <init>
surge.control.AmpedPlugin -> tLBW:
    surge.collection.GList a -> dVFp
    surge.pool.ParallelPoolManager b -> BJWg
    surge.server.CoreTickThread c -> hbUS
    java.lang.String[] d -> pHBl
    1:32:void <init>() -> <init>
    4:24:void onLoad() -> onLoad
    5:38:void onEnable() -> onEnable
    7:29:void onDisable() -> onDisable
    3:3:surge.collection.GList getControllers() -> gooL
    16:17:void registerController(surge.control.IController) -> CoUJ
    6:37:void onTick() -> idrI
    33:33:java.lang.String getTickName() -> gEYe
    21:21:surge.pool.ParallelPoolManager getThreadPool() -> YVFh
    void onControllerRegistry() -> upfC
    void onStart(surge.util.Protocol) -> CoUJ
    void onStop() -> wfKT
    void onPostInit() -> aLYj
    void onPreInit() -> lfJp
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.control.Control -> cdDY:
surge.control.Controller -> MdEk:
    boolean b -> b
    1:2:void <init>() -> <init>
surge.control.Disable -> uhWN:
surge.control.Enable -> wvlw:
surge.control.IController -> rMjy:
    void start() -> start
    void stop() -> stop
    void tick() -> tick
surge.control.Instance -> SeUJ:
surge.control.Plugin -> yImw:
surge.control.SurgePlugin -> TFUG:
    void onStart(surge.util.Protocol) -> CoUJ
    void onStop() -> wfKT
    void onPostInit() -> aLYj
    void onPreInit() -> lfJp
    void onControllerRegistry() -> upfC
    void registerController(surge.control.IController) -> CoUJ
    surge.collection.GList getControllers() -> gooL
    surge.pool.ParallelPoolManager getThreadPool() -> YVFh
surge.hotload.HotloadManager -> gomy:
    surge.collection.GMap a -> tnFQ
    surge.collection.GMap b -> SBto
    surge.collection.GMap c -> myrT
    boolean d -> d
    java.lang.String[] e -> WaBn
    1:26:void <init>() -> <init>
    4:22:void track(java.io.File,java.lang.Runnable) -> CoUJ
    2:27:void untrack(java.io.File) -> kjuf
    8:30:void untrackall() -> tLBW
    3:32:void onTick() -> idrI
    13:13:java.lang.String getTickName() -> gEYe
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.json.HTTP -> OjJP:
    java.lang.String CRLF -> Keqf
    java.lang.String[] a -> a
    4:4:void <init>() -> <init>
    2:48:surge.json.JSONObject toJSONObject(java.lang.String) -> SurP
    1:49:java.lang.String toString(surge.json.JSONObject) -> kjuf
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.json.HTTPTokener -> IyYs:
    java.lang.String i -> DsAV
    4:8:void <init>(java.lang.String) -> <init>
    1:17:java.lang.String nextToken() -> nextToken
    void <clinit>() -> <clinit>
    char[] b(java.lang.String) -> jEpG
    java.lang.String b(char[]) -> kjuf
surge.json.JSONArray -> TyYU:
    java.util.ArrayList a -> UtOv
    java.lang.String[] b -> dnvF
    38:51:void <init>() -> <init>
    34:235:void <init>(surge.json.JSONTokener) -> <init>
    55:67:void <init>(java.lang.String) -> <init>
    9:231:void <init>(java.util.Collection) -> <init>
    90:232:void <init>(java.lang.Object) -> <init>
    99:99:java.util.Iterator iterator() -> iterator
    124:146:java.lang.Object get(int) -> get
    22:216:boolean getBoolean(int) -> getBoolean
    3:112:double getDouble(int) -> getDouble
    93:143:java.lang.Enum getEnum(java.lang.Class,int) -> CoUJ
    5:109:java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    13:230:java.math.BigInteger getBigInteger(int) -> tTNS
    35:135:int getInt(int) -> getInt
    56:227:surge.json.JSONArray getJSONArray(int) -> rEWF
    27:233:surge.json.JSONObject getJSONObject(int) -> NgDc
    180:223:long getLong(int) -> getLong
    40:161:java.lang.String getString(int) -> getString
    200:200:boolean isNull(int) -> isNull
    12:211:java.lang.String join(java.lang.String) -> xGHv
    37:37:int length() -> length
    43:43:java.lang.Object opt(int) -> Nnsm
    25:25:boolean optBoolean(int) -> awLH
    10:148:boolean optBoolean(int,boolean) -> kjuf
    94:94:double optDouble(int) -> uVod
    28:191:double optDouble(int,double) -> CoUJ
    186:186:int optInt(int) -> uhRQ
    60:234:int optInt(int,int) -> CoUJ
    177:177:java.lang.Enum optEnum(java.lang.Class,int) -> kjuf
    23:228:java.lang.Enum optEnum(java.lang.Class,int,java.lang.Enum) -> CoUJ
    14:117:java.math.BigInteger optBigInteger(int,java.math.BigInteger) -> CoUJ
    2:41:java.math.BigDecimal optBigDecimal(int,java.math.BigDecimal) -> CoUJ
    29:162:surge.json.JSONArray optJSONArray(int) -> kcEc
    201:224:surge.json.JSONObject optJSONObject(int) -> tBjm
    166:166:long optLong(int) -> PlhO
    74:157:long optLong(int,long) -> CoUJ
    17:17:java.lang.String optString(int) -> RGyg
    20:78:java.lang.String optString(int,java.lang.String) -> CoUJ
    1:164:surge.json.JSONArray put(boolean) -> DigG
    6:183:surge.json.JSONArray put(java.util.Collection) -> CoUJ
    18:115:surge.json.JSONArray put(double) -> kjuf
    102:154:surge.json.JSONArray put(int) -> TNaT
    15:195:surge.json.JSONArray put(long) -> CoUJ
    64:73:surge.json.JSONArray put(java.util.Map) -> CoUJ
    111:187:surge.json.JSONArray put(java.lang.Object) -> xGHv
    7:95:surge.json.JSONArray put(int,boolean) -> jEpG
    121:170:surge.json.JSONArray put(int,java.util.Collection) -> CoUJ
    76:229:surge.json.JSONArray put(int,double) -> kjuf
    132:185:surge.json.JSONArray put(int,int) -> kjuf
    44:213:surge.json.JSONArray put(int,long) -> kjuf
    123:140:surge.json.JSONArray put(int,java.util.Map) -> CoUJ
    11:202:surge.json.JSONArray put(int,java.lang.Object) -> CoUJ
    122:122:java.lang.Object remove(int) -> remove
    33:222:boolean similar(java.lang.Object) -> Hmbe
    8:151:surge.json.JSONObject toJSONObject(surge.json.JSONArray) -> CoUJ
    165:198:java.lang.String toString() -> toString
    108:209:java.lang.String toString(int) -> toString
    87:87:java.io.Writer write(java.io.Writer) -> CoUJ
    4:212:java.io.Writer a(java.io.Writer,int,int) -> CoUJ
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.json.JSONException -> VTkO:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable a -> IOJp
    2:3:void <init>(java.lang.String) -> <init>
    1:6:void <init>(java.lang.Throwable) -> <init>
    4:4:java.lang.Throwable getCause() -> getCause
surge.json.JSONML -> JAHY:
    java.lang.String[] a -> a
    47:47:void <init>() -> <init>
    1:202:java.lang.Object a(surge.json.XMLTokener,boolean,surge.json.JSONArray) -> CoUJ
    116:116:surge.json.JSONArray toJSONArray(java.lang.String) -> Hmbe
    60:60:surge.json.JSONArray toJSONArray(surge.json.XMLTokener) -> CoUJ
    160:160:surge.json.JSONObject toJSONObject(surge.json.XMLTokener) -> kjuf
    98:98:surge.json.JSONObject toJSONObject(java.lang.String) -> SurP
    4:200:java.lang.String toString(surge.json.JSONArray) -> kjuf
    2:203:java.lang.String toString(surge.json.JSONObject) -> kjuf
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.json.JSONObject -> fmLa:
    java.util.Map a -> a
    java.lang.Object NULL -> dVHV
    int b -> b
    java.lang.String[] c -> xWkm
    300:300:void <clinit>() -> <clinit>
    265:449:void <init>() -> <init>
    85:396:void <init>(surge.json.JSONObject,java.lang.String[]) -> <init>
    24:492:void <init>(surge.json.JSONTokener) -> <init>
    30:491:void <init>(java.util.Map) -> <init>
    15:421:void <init>(java.lang.Object) -> <init>
    41:519:void <init>(java.lang.Object,java.lang.String[]) -> <init>
    135:360:void <init>(java.lang.String) -> <init>
    31:488:void <init>(java.lang.String,java.util.Locale) -> <init>
    26:522:surge.json.JSONObject accumulate(java.lang.String,java.lang.Object) -> kjuf
    69:520:surge.json.JSONObject append(java.lang.String,java.lang.Object) -> jEpG
    67:442:java.lang.String doubleToString(double) -> jEpG
    70:409:java.lang.Object get(java.lang.String) -> get
    122:474:java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    58:356:boolean getBoolean(java.lang.String) -> getBoolean
    27:412:java.math.BigInteger getBigInteger(java.lang.String) -> UtIN
    311:422:java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    87:495:double getDouble(java.lang.String) -> getDouble
    19:523:int getInt(java.lang.String) -> getInt
    35:237:surge.json.JSONArray getJSONArray(java.lang.String) -> qBTH
    28:394:surge.json.JSONObject getJSONObject(java.lang.String) -> tTNS
    134:318:long getLong(java.lang.String) -> getLong
    20:463:java.lang.String[] getNames(surge.json.JSONObject) -> jEpG
    16:433:java.lang.String[] getNames(java.lang.Object) -> UtIN
    100:515:java.lang.String getString(java.lang.String) -> getString
    397:397:boolean has(java.lang.String) -> has
    5:451:surge.json.JSONObject increment(java.lang.String) -> rEWF
    503:503:boolean isNull(java.lang.String) -> NgDc
    361:361:java.util.Iterator keys() -> keys
    185:185:java.util.Set keySet() -> keySet
    233:233:int length() -> length
    77:524:surge.json.JSONArray names() -> cdDY
    47:460:java.lang.String numberToString(java.lang.Number) -> CoUJ
    51:51:java.lang.Object opt(java.lang.String) -> Nnsm
    319:319:java.lang.Enum optEnum(java.lang.Class,java.lang.String) -> CoUJ
    8:517:java.lang.Enum optEnum(java.lang.Class,java.lang.String,java.lang.Enum) -> CoUJ
    438:438:boolean optBoolean(java.lang.String) -> awLH
    29:516:boolean optBoolean(java.lang.String,boolean) -> kjuf
    373:373:double optDouble(java.lang.String) -> uVod
    88:454:java.math.BigInteger optBigInteger(java.lang.String,java.math.BigInteger) -> CoUJ
    339:436:java.math.BigDecimal optBigDecimal(java.lang.String,java.math.BigDecimal) -> CoUJ
    49:334:double optDouble(java.lang.String,double) -> kjuf
    342:342:int optInt(java.lang.String) -> uhRQ
    13:347:int optInt(java.lang.String,int) -> kjuf
    350:467:surge.json.JSONArray optJSONArray(java.lang.String) -> kcEc
    1:139:surge.json.JSONObject optJSONObject(java.lang.String) -> tBjm
    10:10:long optLong(java.lang.String) -> PlhO
    186:461:long optLong(java.lang.String,long) -> kjuf
    115:115:java.lang.String optString(java.lang.String) -> RGyg
    127:473:java.lang.String optString(java.lang.String,java.lang.String) -> CoUJ
    38:499:void a(java.lang.Object) -> a
    308:504:surge.json.JSONObject put(java.lang.String,boolean) -> jEpG
    2:18:surge.json.JSONObject put(java.lang.String,java.util.Collection) -> CoUJ
    213:486:surge.json.JSONObject put(java.lang.String,double) -> jEpG
    55:110:surge.json.JSONObject put(java.lang.String,int) -> jEpG
    150:156:surge.json.JSONObject put(java.lang.String,long) -> jEpG
    9:36:surge.json.JSONObject put(java.lang.String,java.util.Map) -> CoUJ
    52:446:surge.json.JSONObject put(java.lang.String,java.lang.Object) -> prVK
    59:459:surge.json.JSONObject putOnce(java.lang.String,java.lang.Object) -> gEWd
    81:450:surge.json.JSONObject putOpt(java.lang.String,java.lang.Object) -> SCNa
    34:295:java.lang.String quote(java.lang.String) -> quote
    7:485:java.io.Writer quote(java.lang.String,java.io.Writer) -> CoUJ
    94:94:java.lang.Object remove(java.lang.String) -> TNaT
    3:510:boolean similar(java.lang.Object) -> Hmbe
    4:508:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    82:413:void testValidity(java.lang.Object) -> qBTH
    121:501:surge.json.JSONArray toJSONArray(surge.json.JSONArray) -> jEpG
    12:518:java.lang.String toString() -> toString
    104:498:java.lang.String toString(int) -> toString
    25:521:java.lang.String valueToString(java.lang.Object) -> valueToString
    14:502:java.lang.Object wrap(java.lang.Object) -> wrap
    357:357:java.io.Writer write(java.io.Writer) -> CoUJ
    37:514:java.io.Writer a(java.io.Writer,java.lang.Object,int,int) -> CoUJ
    80:341:void a(java.io.Writer,int) -> CoUJ
    6:494:java.io.Writer a(java.io.Writer,int,int) -> CoUJ
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.json.JSONObject$Null -> fmLa$CoUJ:
    java.lang.String a -> a
    4:4:void <init>() -> <init>
    1:1:java.lang.Object clone() -> clone
    2:2:boolean equals(java.lang.Object) -> equals
    5:5:java.lang.String toString() -> toString
    3:3:void <init>(surge.json.JSONObject$Null) -> <init>
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.json.JSONString -> pOto:
    java.lang.String toJSONString() -> toJSONString
surge.json.JSONStringer -> eOuL:
    1:2:void <init>() -> <init>
    3:3:java.lang.String toString() -> toString
surge.json.JSONTokener -> mrAC:
    long a -> a
    boolean b -> b
    long c -> BdIw
    long d -> d
    char e -> OGjg
    java.io.Reader f -> Btjf
    boolean g -> g
    java.lang.String[] h -> LFrI
    22:131:void <init>(java.io.Reader) -> <init>
    16:138:void <init>(java.io.InputStream) -> <init>
    49:134:void <init>(java.lang.String) -> <init>
    1:128:void back() -> MdEk
    54:142:int dehexchar(char) -> CoUJ
    76:76:boolean end() -> uhWN
    21:82:boolean more() -> wvlw
    2:143:char next() -> next
    7:83:char next(char) -> kjuf
    9:145:java.lang.String next(int) -> SeQK
    41:80:char nextClean() -> rMjy
    6:136:java.lang.String nextString(char) -> jEpG
    3:127:java.lang.String nextTo(char) -> prVK
    66:99:java.lang.String nextTo(java.lang.String) -> SeQK
    12:139:java.lang.Object nextValue() -> SeUJ
    18:144:char skipTo(char) -> gEWd
    36:36:surge.json.JSONException syntaxError(java.lang.String) -> sQJe
    102:102:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.json.JSONWriter -> dnvF:
    boolean a -> a
    char b -> mFnu
    surge.json.JSONObject[] c -> bObT
    int d -> d
    java.io.Writer e -> UALT
    java.lang.String[] f -> dVFa
    4:55:void <init>(java.io.Writer) -> <init>
    7:75:surge.json.JSONWriter a(java.lang.String) -> VvjN
    17:70:surge.json.JSONWriter array() -> yImw
    5:73:surge.json.JSONWriter a(char,char) -> CoUJ
    13:13:surge.json.JSONWriter endArray() -> TFUG
    39:39:surge.json.JSONWriter endObject() -> gomy
    14:76:surge.json.JSONWriter key(java.lang.String) -> idoP
    1:64:surge.json.JSONWriter object() -> OjJP
    2:74:void a(char) -> SCNa
    3:45:void a(surge.json.JSONObject) -> prVK
    72:72:surge.json.JSONWriter value(boolean) -> SurP
    38:38:surge.json.JSONWriter value(double) -> prVK
    30:30:surge.json.JSONWriter value(long) -> kjuf
    67:67:surge.json.JSONWriter value(java.lang.Object) -> tTNS
    void <clinit>() -> <clinit>
    char[] b(java.lang.String) -> jEpG
    java.lang.String a(char[]) -> CoUJ
surge.json.XML -> xWkm:
    java.lang.Character AMP -> uOGp
    java.lang.Character APOS -> MBFC
    java.lang.Character BANG -> cRdn
    java.lang.Character EQ -> xrCj
    java.lang.Character GT -> iLEk
    java.lang.Character LT -> iuxT
    java.lang.Character QUEST -> flnq
    java.lang.Character QUOT -> ieWf
    java.lang.Character SLASH -> dLwC
    java.lang.String[] a -> a
    41:197:void <clinit>() -> <clinit>
    140:140:void <init>() -> <init>
    39:209:java.lang.String escape(java.lang.String) -> escape
    10:204:void noSpace(java.lang.String) -> HeQc
    4:205:boolean a(surge.json.XMLTokener,surge.json.JSONObject,java.lang.String) -> CoUJ
    5:208:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    6:152:surge.json.JSONObject toJSONObject(java.lang.String) -> SurP
    76:76:java.lang.String toString(java.lang.Object) -> toString
    1:210:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.json.XMLTokener -> UAHM:
    java.util.HashMap entity -> tBsS
    java.lang.String[] i -> quaQ
    3:98:void <clinit>() -> <clinit>
    60:129:void <init>(java.lang.String) -> <init>
    1:107:java.lang.String nextCDATA() -> IyYs
    4:127:java.lang.Object nextContent() -> TyYU
    2:120:java.lang.Object nextEntity(char) -> DigG
    5:126:java.lang.Object nextMeta() -> VTkO
    7:125:java.lang.Object nextToken() -> JAHY
    6:128:boolean skipPast(java.lang.String) -> RGym
    char[] b(java.lang.String) -> jEpG
    java.lang.String b(char[]) -> kjuf
surge.math.ArrayUtils -> rpMr:
    1:1:void <init>() -> <init>
    2:11:void shiftRight(double[],double) -> CoUJ
    9:13:void wrapRight(double[]) -> CoUJ
    4:12:void fill(double[],double) -> fill
surge.math.Average -> UIWs:
    double[] a -> a
    double b -> b
    boolean c -> c
    4:17:void <init>(int) -> <init>
    6:12:void put(double) -> gEWd
    1:14:double getAverage() -> getAverage
    5:20:void a() -> a
surge.math.M -> oEAv:
    double[] a -> a
    float[] b -> iKhW
    boolean c -> c
    java.lang.String[] d -> pHBl
    12:173:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    68:174:double evaluate(java.lang.String) -> avjQ
    67:125:boolean r(java.lang.Double) -> CoUJ
    4:176:double evaluate(java.lang.String,java.lang.Double[]) -> CoUJ
    7:169:org.bukkit.block.Block highestBlock(org.bukkit.Location,int,int) -> CoUJ
    105:105:double tps(long,int) -> CoUJ
    19:19:double ticksFromNS(long) -> jEpG
    44:167:java.lang.String toRoman(int) -> sQJe
    1:134:java.lang.String a(java.lang.String,int) -> prVK
    42:42:int rand(int,int) -> jEpG
    2:177:int fromRoman(java.lang.String) -> nIjV
    162:162:long ns() -> fmLa
    74:74:long ms() -> pOto
    48:122:double avg(surge.collection.GList) -> prVK
    32:112:void lim(surge.collection.GList,int) -> CoUJ
    147:147:double distance(org.bukkit.Location,org.bukkit.Location) -> CoUJ
    108:108:boolean within(org.bukkit.Location,org.bukkit.Location,java.lang.Double) -> CoUJ
    60:60:float sin(float) -> sin
    28:28:float cos(float) -> cos
    22:164:int max(int[]) -> max
    9:165:int min(int[]) -> min
    137:137:boolean within(int,int,int) -> CoUJ
    150:150:float a(int) -> VvjN
    15:151:double fsqrt(double) -> SCNa
    18:18:double maxSafeRadius(org.bukkit.Location) -> kjuf
    55:55:double clip(double,double,double) -> CoUJ
    30:175:double maxSafeRadius(org.bukkit.Location,double,double) -> CoUJ
    10:133:boolean isLoaded(org.bukkit.Location,double) -> CoUJ
    3:148:surge.collection.GList cradShift(org.bukkit.Location,double) -> kjuf
    63:63:int chunkShift(int) -> idoP
    65:171:boolean isLoaded(org.bukkit.World,int,int) -> CoUJ
    29:178:boolean isLoaded(org.bukkit.Location) -> jEpG
    52:158:double dof(double,double) -> CoUJ
    31:157:surge.collection.GList getChunks(org.bukkit.Chunk,int) -> kjuf
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.math.Profiler -> tmcT:
    long a -> a
    long b -> b
    long c -> BdIw
    long d -> d
    double e -> e
    boolean f -> f
    java.lang.String[] g -> PmOT
    14:25:void <init>() -> <init>
    2:34:void begin() -> begin
    8:39:void end() -> end
    6:43:void reset() -> reset
    3:44:java.lang.String getTime(int) -> HeQc
    42:42:double getTicks() -> eOuL
    10:10:double getSeconds() -> getSeconds
    11:11:double getMinutes() -> mrAC
    30:30:double getHours() -> dnvF
    31:31:double getMilliseconds() -> xWkm
    9:9:long getNanoseconds() -> UAHM
    12:12:long getNanos() -> rpMr
    24:24:long getStartNano() -> UIWs
    1:1:long getMillis() -> getMillis
    17:17:long getStartMillis() -> oEAv
    41:41:double getTime() -> tmcT
    7:7:boolean isProfiling() -> xXLw
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.nms.NMSClass -> xXLw:
    boolean a -> a
    int b -> b
    java.lang.Class PacketPlayOutPlayerListHeaderFooter -> qeCE
    java.lang.Class IChatBaseComponent -> Vesq
    java.lang.Class ChatSerializer -> PmSy
    java.lang.Class PacketPlayOutPlayerInfo -> tdyY
    java.lang.Class PlayerInfoData -> OYPI
    java.lang.Class c -> Vess
    java.lang.Class GameProfile -> Lhwg
    java.lang.Class EnumGamemode -> xaEp
    java.lang.Class TileEntitySkull -> aoEW
    java.lang.Class LoadingCache -> gMri
    1:47:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.nms.NMSX -> KfQY:
    surge.nms.NMSX bountifulAPI -> ydIU
    boolean a -> a
    java.lang.String nmsver -> ccjH
    java.lang.Object eTimes -> xXSw
    java.lang.Object eTitle -> wTov
    java.lang.Object eSubtitle -> VwWS
    int b -> b
    java.lang.String[] c -> xWkm
    28:176:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    34:64:java.lang.String getVersion() -> getVersion
    18:150:void setAi(org.bukkit.entity.LivingEntity,boolean) -> CoUJ
    15:166:java.lang.Class getCBNMSClass(java.lang.String) -> SSoA
    17:161:java.lang.Class getCBClass(java.lang.String) -> UQcy
    10:129:java.lang.Object serializeChat(java.lang.String) -> VCew
    62:160:java.lang.reflect.Field setAccessible(java.lang.reflect.Field) -> CoUJ
    86:116:java.lang.reflect.Method setAccessible(java.lang.reflect.Method) -> CoUJ
    7:7:java.lang.String getBukkitVersion() -> getBukkitVersion
    65:65:java.lang.String nmsPackage() -> KfQY
    115:115:java.lang.String craftPackage() -> DjNJ
    20:148:void showPickup(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> CoUJ
    16:167:void sendPacket(org.bukkit.entity.Player,java.lang.Object) -> CoUJ
    77:147:java.lang.Class getNMSClass(java.lang.String) -> xWgw
    2:177:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> CoUJ
    43:80:void clearTitle(org.bukkit.entity.Player) -> Hmbe
    57:179:void sendTabTitle(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> CoUJ
    1:174:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> CoUJ
    6:170:void sendActionBar(org.bukkit.entity.Player,java.lang.String,int) -> CoUJ
    3:173:void sendActionBarToAllPlayers(java.lang.String) -> AFkM
    45:111:void sendActionBarToAllPlayers(java.lang.String,int) -> gEWd
    9:109:java.lang.String getEntityName(org.bukkit.entity.Entity) -> kjuf
    11:178:int ping(org.bukkit.entity.Player) -> UtIN
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.nms.NMSX$1 -> KfQY$1:
    org.bukkit.entity.Player val$player -> tmjR
    2:3:void <init>(org.bukkit.entity.Player) -> <init>
    1:4:void run() -> run
surge.nms.NMSX$2 -> KfQY$2:
    org.bukkit.entity.Player val$player -> tmjR
    java.lang.String val$message -> JstF
    1:4:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    2:3:void run() -> run
surge.nms.PacketUtil -> DjNJ:
    java.lang.String[] a -> a
    30:30:void <init>() -> <init>
    2:27:surge.nms.PacketUtil$V getVersion() -> bFnr
    4:29:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> CoUJ
    1:28:void clearTitle(org.bukkit.entity.Player) -> Hmbe
    3:31:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> CoUJ
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.nms.PacketUtil$V -> DjNJ$CoUJ:
    surge.nms.PacketUtil$V R17 -> fvEA
    surge.nms.PacketUtil$V R18 -> eraG
    surge.nms.PacketUtil$V R19 -> BSHw
    surge.nms.PacketUtil$V R111 -> qeAa
    surge.nms.PacketUtil$V R110 -> BSKX
    surge.nms.PacketUtil$V R112 -> hHdU
    surge.nms.PacketUtil$V[] a -> xGQx
    2:10:void <clinit>() -> <clinit>
    4:4:void <init>(java.lang.String,int) -> <init>
    3:3:surge.nms.PacketUtil$V[] values() -> values
    1:1:surge.nms.PacketUtil$V valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.nms.Title -> bFnr:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.Integer d -> SCWl
    java.lang.Integer e -> oLwo
    java.lang.Integer f -> vQmC
    7:26:void <init>() -> <init>
    3:49:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    1:41:void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    2:50:void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    5:42:void send(org.bukkit.entity.Player) -> qBTH
    43:43:java.lang.String getTitle() -> getTitle
    36:38:void setTitle(java.lang.String) -> setTitle
    27:27:java.lang.String getSubTitle() -> GkFi
    25:37:void setSubTitle(java.lang.String) -> KUIX
    30:30:java.lang.String getAction() -> getAction
    31:48:void setAction(java.lang.String) -> setAction
    33:33:java.lang.Integer getFadeIn() -> ndEd
    22:28:void setFadeIn(java.lang.Integer) -> CoUJ
    6:6:java.lang.Integer getFadeOut() -> HnIh
    17:45:void setFadeOut(java.lang.Integer) -> kjuf
    18:18:java.lang.Integer getStayTime() -> tnGi
    8:44:void setStayTime(java.lang.Integer) -> jEpG
surge.nms.VersionBukkit -> GkFi:
    surge.nms.VersionBukkit VU -> APHP
    surge.nms.VersionBukkit V7 -> OsAk
    surge.nms.VersionBukkit V8 -> tKgN
    surge.nms.VersionBukkit V9 -> QFDD
    surge.nms.VersionBukkit V11 -> UAMq
    surge.nms.VersionBukkit V111 -> Mcio
    surge.nms.VersionBukkit V112 -> ylXG
    surge.nms.VersionBukkit[] a -> TOOY
    java.lang.String[] b -> dnvF
    7:29:void <clinit>() -> <clinit>
    14:14:void <init>(java.lang.String,int) -> <init>
    5:24:boolean tc() -> sjce
    3:22:boolean uc() -> HeYJ
    1:27:surge.nms.VersionBukkit get() -> Usms
    6:6:surge.nms.VersionBukkit[] values() -> values
    30:30:surge.nms.VersionBukkit valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.pool.A -> ndEd:
    1:3:void <init>() -> <init>
surge.pool.A$1 -> ndEd$1:
    surge.pool.A this$0 -> cRjF
    2:4:void <init>(surge.pool.A) -> <init>
    1:3:void run() -> run
surge.pool.Execution -> HnIh:
    int b -> b
    1:1:void <init>() -> <init>
surge.pool.ParallelPoolManager -> tnGi:
    surge.pool.QueueMode a -> GjlQ
    surge.collection.GList b -> gomy
    int c -> c
    int d -> d
    java.util.Queue e -> LPIO
    java.lang.String f -> f
    surge.pool.ThreadInformation g -> byyi
    int[] h -> h
    java.lang.String[] i -> quaQ
    46:93:void syncQueue(surge.pool.Execution) -> CoUJ
    1:82:void tickSyncQueue() -> BAbt
    13:91:void <init>(java.lang.String,int,surge.pool.QueueMode) -> <init>
    6:96:void <init>(int,surge.pool.QueueMode) -> <init>
    19:83:long lock() -> Forx
    11:64:void start() -> start
    8:89:void shutdown() -> shutdown
    35:66:void <init>(int) -> <init>
    29:58:void queue(surge.pool.Execution) -> kjuf
    65:65:int getSize() -> getSize
    9:84:int getQueueSize() -> HmiW
    40:40:surge.pool.ParallelThread[] getThreads() -> bhrh
    4:90:void a() -> a
    16:97:surge.pool.ParallelThread b() -> BdGQ
    3:87:void a(int) -> a
    59:59:surge.pool.QueueMode getMode() -> dxKR
    38:38:int getNext() -> ctfo
    94:94:int getThreadCount() -> getThreadCount
    43:43:java.util.Queue getSqueue() -> TEvx
    85:85:java.lang.String getKey() -> getKey
    7:7:surge.pool.ThreadInformation getAverageInfo() -> uOFn
    12:12:int[] c() -> vQiQ
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.pool.ParallelPoolManager$1 -> tnGi$1:
    int[] a -> a
    1:1:void <clinit>() -> <clinit>
surge.pool.ParallelThread -> sjce:
    java.util.Queue a -> PSdJ
    surge.pool.ThreadInformation b -> aMCx
    java.lang.String[] c -> xWkm
    6:43:void <init>(java.lang.String,int) -> <init>
    1:47:void run() -> run
    12:32:void a(double) -> a
    9:48:void a(surge.pool.Execution) -> jEpG
    5:49:void a() -> a
    16:39:void queue(surge.pool.Execution) -> kjuf
    4:4:java.util.Queue getQueue() -> WGPt
    42:42:surge.pool.ThreadInformation getInfo() -> Xceo
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.pool.QueueMode -> HeYJ:
    surge.pool.QueueMode ROUND_ROBIN -> LqkO
    surge.pool.QueueMode SMALLEST -> ntmD
    surge.pool.QueueMode[] a -> pGmq
    3:3:surge.pool.QueueMode[] values() -> values
    6:6:surge.pool.QueueMode valueOf(java.lang.String) -> valueOf
    4:4:void <init>(java.lang.String,int) -> <init>
    1:5:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.pool.S -> Usms:
    1:3:void <init>() -> <init>
surge.pool.S$1 -> Usms$1:
    surge.pool.S this$0 -> SLLg
    2:3:void <init>(surge.pool.S) -> <init>
    1:4:void run() -> run
surge.pool.ThreadInformation -> BAbt:
    double a -> a
    int b -> b
    boolean c -> c
    double d -> d
    surge.math.Average e -> KUWD
    long f -> UtUs
    int g -> g
    1:27:void <init>(int) -> <init>
    28:28:double getTicksPerSecond() -> AiSm
    10:21:void setTicksPerSecond(double) -> DigG
    8:8:int getQueuedSize() -> LGRS
    19:22:void setQueuedSize(int) -> RGym
    26:26:boolean isProcessing() -> cdFV
    5:17:void setProcessing(boolean) -> xGHv
    13:13:double getUtilization() -> Yfhp
    9:18:void setUtilization(double) -> SurP
    2:2:double getTicksPerSecondAverage() -> NgIU
    4:4:long getTick() -> getTick
    15:25:void setTick(long) -> setTick
    11:11:long getTickLag() -> YLtj
    14:14:int getId() -> getId
surge.sched.IBursterator -> Forx:
    void burst(java.lang.Object) -> rEWF
    void setTimeLock(double) -> xGHv
    double getEstimatedTimeUse() -> YUfU
    int flush() -> JtOF
    int flush(surge.math.Profiler) -> CoUJ
    void queue(java.lang.Object) -> NgDc
    void queue(java.util.List) -> kjuf
    void queue(java.lang.Object[]) -> CoUJ
surge.sched.ICancellable -> HmiW:
    void cancel() -> cancel
surge.sched.IMasterTickComponent -> bhrh:
    void onTick() -> idrI
    java.lang.String getTickName() -> gEYe
surge.sched.ITask -> BdGQ:
    int getId() -> getId
    void run() -> run
    boolean isRepeating() -> dVFa
    java.lang.String getName() -> getName
    double getComputeTime() -> YxJT
    double getTotalComputeTime() -> PmOT
    double getActiveTime() -> PmNt
    boolean hasCompleted() -> DHIj
surge.sched.TICK -> dxKR:
    long tick -> KLeY
    1:1:void <clinit>() -> <clinit>
    2:2:void <init>() -> <init>
surge.sched.Task -> ctfo:
    int a -> a
    java.lang.String b -> b
    boolean c -> c
    double d -> d
    double e -> e
    double f -> f
    boolean g -> g
    surge.math.Profiler h -> tmlS
    surge.math.Profiler i -> qvEm
    int j -> j
    boolean k -> DHRG
    10:46:void <init>(java.lang.String) -> <init>
    1:38:void <init>(java.lang.String,int) -> <init>
    4:42:void <init>(java.lang.String,int,int) -> <init>
    13:48:void a(java.lang.String,boolean) -> prVK
    3:49:void cancel() -> cancel
    2:2:int getId() -> getId
    27:27:boolean isRepeating() -> dVFa
    5:5:java.lang.String getName() -> getName
    50:50:double getComputeTime() -> YxJT
    43:43:boolean hasCompleted() -> DHIj
    30:30:double getTotalComputeTime() -> PmOT
    20:20:double getActiveTime() -> PmNt
    35:35:surge.math.Profiler access$0(surge.sched.Task) -> CoUJ
    25:25:void access$1(surge.sched.Task,boolean) -> CoUJ
    23:23:surge.math.Profiler access$2(surge.sched.Task) -> kjuf
    36:36:void access$3(surge.sched.Task,double) -> CoUJ
    15:15:void access$4(surge.sched.Task,double) -> kjuf
    44:44:double access$5(surge.sched.Task) -> jEpG
    29:29:void access$6(surge.sched.Task,double) -> jEpG
    40:40:int access$7(surge.sched.Task) -> prVK
    34:34:void access$8(surge.sched.Task,int) -> CoUJ
    12:12:double access$9(surge.sched.Task) -> gEWd
    6:6:double access$10(surge.sched.Task) -> SCNa
surge.sched.Task$1 -> ctfo$1:
    surge.sched.Task this$0 -> YgPU
    3:5:void <init>(surge.sched.Task) -> <init>
    1:13:void run() -> run
surge.sched.Task$2 -> ctfo$2:
    surge.sched.Task this$0 -> YgPU
    2:14:void <init>(surge.sched.Task) -> <init>
    1:13:void run() -> run
surge.sched.Task$3 -> ctfo$3:
    surge.sched.Task this$0 -> YgPU
    int val$total -> HfAB
    1:14:void <init>(surge.sched.Task,int) -> <init>
    2:16:void run() -> run
surge.sched.TaskManager -> TEvx:
    surge.collection.GList a -> dVFp
    surge.collection.GMap b -> SBto
    java.lang.String c -> c
    3:21:void <init>() -> <init>
    2:20:void onTick() -> idrI
    7:17:void a(surge.sched.ITask) -> CoUJ
    1:19:void b(surge.sched.ITask) -> kjuf
    9:9:java.lang.String getTickName() -> gEYe
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.sched.TaskProfile -> uOFn:
    double a -> a
    double b -> b
    double c -> c
    1:11:void <init>() -> <init>
    12:12:double getActiveTime() -> PmNt
    8:14:void setActiveTime(double) -> Hmbe
    3:3:double getComputeTickTime() -> Smfy
    2:13:void setComputeTickTime(double) -> UtIN
    9:9:double getComputeTime() -> YxJT
    7:10:void setComputeTime(double) -> qBTH
surge.server.AsyncTick -> vQiQ:
surge.server.CoreTickThread -> WGPt:
    java.lang.String[] a -> a
    6:12:void <init>() -> <init>
    1:14:void run() -> run
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.server.MemoryMonitor -> Xceo:
    long a -> a
    long b -> b
    long c -> BdIw
    long d -> d
    long e -> UtVL
    long f -> UtUs
    long g -> qJpa
    long h -> h
    long i -> VnhF
    long j -> JQqL
    long k -> KTtM
    long l -> lDHI
    long m -> yuLL
    long n -> n
    java.lang.String o -> o
    5:52:void <init>() -> <init>
    void onAllocationSet() -> vYxo
    1:53:void run() -> run
    28:28:long getMemoryFree() -> KUOQ
    6:6:long getMemoryUsed() -> getMemoryUsed
    2:2:long getMemoryMax() -> DHJV
    37:37:long getLastMemoryUsed() -> qAxL
    21:21:long getMemoryUsedAfterGC() -> dVFp
    51:51:long getAllocated() -> getAllocated
    9:9:long getCollected() -> tnFQ
    4:4:long getCollections() -> oUdh
    30:30:long getSms() -> WiSS
    20:20:long getMemoryAllocatedPerTick() -> myrT
    12:12:long getMemoryCollectedPerTick() -> CUhX
    36:36:long getMemoryFullyAllocatedPerTick() -> WaBn
    16:16:long getMah() -> quaQ
    48:48:long getMahs() -> pYKy
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.server.SuperSampler -> AiSm:
    surge.math.Average a -> QggS
    surge.math.Average b -> hbXs
    surge.math.Average c -> AFwj
    double d -> d
    double e -> e
    double f -> f
    double g -> nIvv
    boolean h -> h
    double i -> NxPr
    double j -> KTlj
    double k -> rNTV
    long l -> lDHI
    long m -> yuLL
    long n -> n
    long o -> pipQ
    int p -> xrHV
    int q -> q
    int r -> r
    int s -> bhwm
    int t -> t
    int u -> u
    int v -> oVKi
    surge.server.WorldMonitor w -> ySHO
    surge.server.TPSMonitor x -> VTtG
    surge.server.MemoryMonitor y -> ntkN
    boolean z -> z
    java.lang.String A -> erag
    5:138:void <init>() -> <init>
    15:107:void start() -> start
    8:111:void stop() -> stop
    82:96:void onTick() -> idrI
    74:74:java.lang.String getTickName() -> gEYe
    141:141:surge.math.Average getTicksPerSecondL() -> kQlX
    33:33:double getTicksPerSecond() -> AiSm
    144:144:double getTicksPerSecondRaw() -> DsAV
    108:108:boolean isRunning() -> isRunning
    135:135:surge.server.TPSMonitor getTpsMonitor() -> mhtP
    24:24:surge.math.Average getTickTimeL() -> XAdj
    102:102:double getTickTime() -> baDk
    64:64:double getTickTimeRaw() -> DjPT
    59:59:double getTickUtilizationRaw() -> CxNe
    88:88:double getTickUtilization() -> UcOe
    58:58:double getLeftoverTickTime() -> NVKM
    114:114:surge.server.MemoryMonitor getMemoryMonitor() -> YLwj
    62:62:long getMemoryUse() -> dDfg
    46:46:long getMemoryAllocated() -> gWBS
    54:54:long getMemoryCollected() -> BchU
    139:139:surge.math.Average getMahL() -> clXl
    21:21:long getMahs() -> pYKy
    60:60:int getTotalChunks() -> FyGi
    119:119:int getTotalEntities() -> DXmq
    3:3:int getTotalDrops() -> yuHM
    79:79:int getTotalTiles() -> Cwms
    27:27:int getTotalLiving() -> GryG
    66:66:surge.server.WorldMonitor getWorldMonitor() -> QEae
    49:49:int getChunksLoaded() -> mXSU
    38:38:int getChunksUnloaded() -> JAKt
    11:92:void setTicksPerSecondL(surge.math.Average) -> CoUJ
    37:127:void setTickTimeL(surge.math.Average) -> kjuf
    90:142:void setMahL(surge.math.Average) -> jEpG
    34:77:void setTicksPerSecond(double) -> DigG
    23:116:void setTicksPerSecondRaw(double) -> tTNS
    31:72:void setTickTime(double) -> rEWF
    52:87:void setTickTimeRaw(double) -> NgDc
    4:67:void setRunning(boolean) -> Hmbe
    25:53:void setTickUtilizationRaw(double) -> Nnsm
    9:126:void setTickUtilization(double) -> awLH
    93:104:void setLeftoverTickTime(double) -> uVod
    26:123:void setMemoryUse(long) -> prVK
    132:140:void setMemoryAllocated(long) -> gEWd
    29:136:void setMemoryCollected(long) -> SCNa
    71:129:void setMahs(long) -> DigG
    39:85:void setTotalChunks(int) -> avjQ
    40:143:void setTotalEntities(int) -> nIjV
    86:133:void setTotalDrops(int) -> SSoA
    43:134:void setTotalTiles(int) -> UQcy
    83:106:void setTotalLiving(int) -> VCew
    57:63:void setChunksLoaded(int) -> xWgw
    7:110:void setChunksUnloaded(int) -> AFkM
    75:99:void setWorldMonitor(surge.server.WorldMonitor) -> CoUJ
    10:101:void setTpsMonitor(surge.server.TPSMonitor) -> CoUJ
    35:65:void setMemoryMonitor(surge.server.MemoryMonitor) -> CoUJ
    14:14:void access$0(surge.server.SuperSampler,int) -> CoUJ
    95:95:void access$1(surge.server.SuperSampler,int) -> kjuf
    91:91:void access$2(surge.server.SuperSampler,int) -> jEpG
    44:44:void access$3(surge.server.SuperSampler,int) -> prVK
    98:98:void access$4(surge.server.SuperSampler,int) -> gEWd
    45:45:void access$5(surge.server.SuperSampler,int) -> SCNa
    6:6:void access$6(surge.server.SuperSampler,int) -> DigG
    32:32:void access$7(surge.server.SuperSampler,double) -> CoUJ
    128:128:void access$8(surge.server.SuperSampler,double) -> kjuf
    1:1:surge.math.Average access$9(surge.server.SuperSampler) -> CoUJ
    28:28:double access$10(surge.server.SuperSampler) -> kjuf
    109:109:surge.math.Average access$11(surge.server.SuperSampler) -> jEpG
    20:20:double access$12(surge.server.SuperSampler) -> prVK
    118:118:void access$13(surge.server.SuperSampler,double) -> jEpG
    16:16:void access$14(surge.server.SuperSampler,double) -> prVK
    97:97:void access$15(surge.server.SuperSampler,double) -> gEWd
    131:131:double access$16(surge.server.SuperSampler) -> gEWd
    2:2:void access$17(surge.server.SuperSampler,double) -> SCNa
    70:70:double access$18(surge.server.SuperSampler) -> SCNa
    13:13:void access$19(surge.server.SuperSampler,double) -> DigG
    100:100:void access$20(surge.server.SuperSampler,long) -> CoUJ
    78:78:void access$21(surge.server.SuperSampler,long) -> kjuf
    19:19:void access$22(surge.server.SuperSampler,long) -> jEpG
    22:22:surge.math.Average access$23(surge.server.SuperSampler) -> DigG
    103:103:void access$24(surge.server.SuperSampler,long) -> prVK
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.server.SuperSampler$1 -> AiSm$1:
    surge.server.SuperSampler this$0 -> rovA
    7:9:void <init>(surge.server.SuperSampler) -> <init>
    1:10:void updated(int,int,int,int,int,int,int) -> CoUJ
surge.server.SuperSampler$2 -> AiSm$2:
    surge.server.SuperSampler this$0 -> rovA
    3:4:void <init>(surge.server.SuperSampler) -> <init>
    1:12:void onTicked() -> MSFf
surge.server.SuperSampler$3 -> AiSm$3:
    surge.server.SuperSampler this$0 -> rovA
    5:8:void <init>(surge.server.SuperSampler) -> <init>
    1:7:void onAllocationSet() -> vYxo
surge.server.TPSMonitor -> LGRS:
    double a -> a
    double b -> b
    surge.math.Profiler c -> OQCf
    surge.math.Profiler d -> XBKj
    boolean e -> e
    java.lang.Thread$State f -> sHiI
    double g -> nIvv
    double h -> tKkh
    long i -> VnhF
    java.lang.String j -> vQqm
    2:57:void <init>() -> <init>
    void onTicked() -> MSFf
    1:49:void run() -> run
    9:56:void a(java.lang.Thread$State) -> CoUJ
    25:25:double getTickTimeMS() -> vAJQ
    58:58:double getRawTicksPerSecond() -> bGPt
    46:46:surge.math.Profiler getTickProfiler() -> EmRN
    11:11:boolean isTicked() -> cthB
    45:48:void markTick() -> wwQc
    6:6:surge.math.Profiler getTickTimeProfiler() -> BSHp
    54:54:java.lang.Thread$State getLastState() -> BJWg
    35:35:double getActualTickTimeMS() -> hbUS
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.server.WorldMonitor -> cdFV:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    long n -> n
    java.lang.String o -> o
    10:100:void <init>() -> <init>
    3:105:void run() -> run
    void updated(int,int,int,int,int,int,int) -> CoUJ
    26:107:void on(org.bukkit.event.world.ChunkLoadEvent) -> CoUJ
    17:108:void on(org.bukkit.event.world.ChunkUnloadEvent) -> CoUJ
    34:36:void on(org.bukkit.event.entity.EntitySpawnEvent) -> CoUJ
    6:7:void on(org.bukkit.event.entity.EntityDeathEvent) -> CoUJ
    24:63:void on(org.bukkit.event.player.PlayerDropItemEvent) -> CoUJ
    5:27:void on(org.bukkit.event.player.PlayerPickupItemEvent) -> CoUJ
    16:39:void on(org.bukkit.event.entity.EntityPickupItemEvent) -> CoUJ
    66:69:void on(org.bukkit.event.block.BlockPlaceEvent) -> CoUJ
    13:64:void on(org.bukkit.event.block.BlockBreakEvent) -> CoUJ
    82:110:void a() -> a
    4:103:void b() -> b
    55:104:void c() -> c
    1:80:void d() -> d
    44:96:void e() -> e
    8:109:void f() -> f
    2:79:void g() -> g
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.text.PhantomSpinner -> Yfhp:
    surge.text.ProgressSpinner a -> pQBV
    surge.text.ProgressSpinner b -> PSfN
    1:5:void <init>(surge.util.C,surge.util.C,surge.util.C) -> <init>
    2:2:java.lang.String toString() -> toString
surge.text.ProgressSpinner -> NgIU:
    java.lang.String[] a -> a
    int b -> b
    surge.text.ProgressSpinner DEFAULT -> CUok
    surge.text.ProgressSpinner NETWORK -> CNAC
    surge.text.ProgressSpinner CIRCLES -> eQCT
    surge.text.ProgressSpinner RANDOMS -> ccnK
    surge.text.ProgressSpinner MERGERS -> uqRW
    boolean c -> c
    1:17:void <clinit>() -> <clinit>
    7:12:void <init>(java.lang.String[]) -> <init>
    10:18:void <init>() -> <init>
    3:19:java.lang.String toString() -> toString
    15:15:java.lang.String[] getChars() -> SBto
    4:4:int getIndex() -> getIndex
surge.util.Adapter -> YLtj:
    java.lang.Object adapt(java.lang.Object) -> Nnsm
    java.lang.Object onAdapt(java.lang.Object) -> awLH
surge.util.Anchor -> YUfU:
    int value() -> value
surge.util.Area -> JtOF:
    org.bukkit.Location a -> uycN
    java.lang.Double b -> Gjnf
    8:8:boolean within(org.bukkit.Location,org.bukkit.Location,double) -> CoUJ
    6:39:void <init>(org.bukkit.Location,java.lang.Double) -> <init>
    49:49:surge.util.Cuboid toCuboid() -> Keqf
    2:48:void <init>(org.bukkit.Location,java.lang.Integer) -> <init>
    22:56:java.lang.Double distance(org.bukkit.Location) -> prVK
    52:52:java.lang.Double slowDistance(org.bukkit.Location) -> gEWd
    55:55:boolean isWithin(org.bukkit.Location) -> SCNa
    27:27:boolean hasEntities() -> hasEntities
    11:58:org.bukkit.entity.Entity[] getNearbyEntities(org.bukkit.entity.EntityType) -> kjuf
    14:59:org.bukkit.entity.Entity[] getNearbyEntities(java.lang.Class) -> CoUJ
    3:57:org.bukkit.entity.Entity[] getNearbyEntities() -> UtOv
    5:36:org.bukkit.entity.Player[] getNearbyPlayers() -> IOJp
    16:16:org.bukkit.Location getLocation() -> getLocation
    12:38:void setLocation(org.bukkit.Location) -> DigG
    1:1:java.lang.Double getRadius() -> dVHV
    9:60:void setRadius(java.lang.Double) -> kjuf
    24:62:org.bukkit.Location random() -> BdIw
surge.util.Axis -> dVFa:
    surge.util.Axis X -> jNnw
    surge.util.Axis Y -> wTuB
    surge.util.Axis Z -> YDmy
    int a -> a
    int b -> b
    int c -> c
    surge.util.Axis[] d -> yBHy
    10:10:surge.util.Axis[] values() -> values
    13:13:surge.util.Axis valueOf(java.lang.String) -> valueOf
    1:6:void <init>(java.lang.String,int,int,int,int) -> <init>
    3:3:org.bukkit.util.Vector positive() -> OGjg
    9:9:org.bukkit.util.Vector negative() -> Btjf
    7:12:void <clinit>() -> <clinit>
surge.util.BlastResistance -> YxJT:
    surge.util.BlastResistance BARRIER -> tnOG
    surge.util.BlastResistance BEDROCK -> OYRw
    surge.util.BlastResistance COMMAND -> tKkS
    surge.util.BlastResistance ENDER_PORTAL -> fTDY
    surge.util.BlastResistance ENDER_PORTAL_FRAME -> AaLy
    surge.util.BlastResistance ANVIL -> qJrE
    surge.util.BlastResistance ENCHANTMENT_TABLE -> yAga
    surge.util.BlastResistance OBSIDIAN -> TXBY
    surge.util.BlastResistance ENDER_CHEST -> DGqk
    surge.util.BlastResistance WATER -> Knic
    surge.util.BlastResistance LAVA -> nclC
    surge.util.BlastResistance STATIONARY_WATER -> OXto
    surge.util.BlastResistance DRAGON_EGG -> GHmO
    surge.util.BlastResistance ENDER_STONE -> gNYe
    surge.util.BlastResistance COAL_BLOCK -> qKUr
    surge.util.BlastResistance DIAMOND_BLOCK -> uGAa
    surge.util.BlastResistance EMERALD_BLOCK -> VDWv
    surge.util.BlastResistance GOLD_BLOCK -> GIMs
    surge.util.BlastResistance IRON_BLOCK -> qJuV
    surge.util.BlastResistance REDSTONE_BLOCK -> dNAv
    surge.util.BlastResistance BRICK -> IyhO
    surge.util.BlastResistance BRICK_STAIRS -> CEQW
    surge.util.BlastResistance HARD_CLAY -> ySMb
    surge.util.BlastResistance STONE -> wfXx
    surge.util.BlastResistance SMOOTH_BRICK -> pYSw
    surge.util.BlastResistance SMOOTH_STAIRS -> SfDL
    surge.util.BlastResistance DOUBLE_STONE_SLAB2 -> hjmw
    surge.util.BlastResistance STONE_SLAB2 -> YUrM
    surge.util.BlastResistance IRON_DOOR -> lMFw
    surge.util.BlastResistance IRON_DOOR_BLOCK -> ECGK
    surge.util.BlastResistance IRON_TRAPDOOR -> qTFS
    surge.util.BlastResistance MOB_SPAWNER -> DafP
    surge.util.BlastResistance WEB -> XRnB
    surge.util.BlastResistance DISPENSER -> URVG
    surge.util.BlastResistance DROPPER -> GtBC
    surge.util.BlastResistance FURNACE -> CxVM
    surge.util.BlastResistance BURNING_FURNACE -> DYVO
    surge.util.BlastResistance BEACON -> HfBp
    surge.util.BlastResistance COAL_ORE -> Nfrq
    surge.util.BlastResistance COCOA -> AOmL
    surge.util.BlastResistance DIAMOND_ORE -> OjVw
    surge.util.BlastResistance EMERALD_ORE -> GHlc
    surge.util.BlastResistance FENCE -> cRmP
    surge.util.BlastResistance FENCE_GATE -> roye
    surge.util.BlastResistance ACACIA_FENCE_GATE -> OGrr
    surge.util.BlastResistance BIRCH_FENCE_GATE -> URUq
    surge.util.BlastResistance DARK_OAK_FENCE_GATE -> gxkh
    surge.util.BlastResistance SPRUCE_FENCE_GATE -> iUCH
    surge.util.BlastResistance JUNGLE_FENCE_GATE -> Xlbv
    surge.util.BlastResistance ACACIA_FENCE -> QyPo
    surge.util.BlastResistance BIRCH_FENCE -> RcBU
    surge.util.BlastResistance DARK_OAK_FENCE -> gyPT
    surge.util.BlastResistance SPRUCE_FENCE -> iwEp
    surge.util.BlastResistance JUNGLE_FENCE -> SLRf
    surge.util.BlastResistance ACACIA_WOOD_STAIRS -> xPLp
    surge.util.BlastResistance BIRCH_WOOD_STAIRS -> kQvm
    surge.util.BlastResistance DARK_OAK_WOOD_STAIRS -> Orip
    surge.util.BlastResistance SPRUCE_WOOD_STAIRS -> aDYs
    surge.util.BlastResistance JUNGLE_WOOD_STAIRS -> TOUl
    surge.util.BlastResistance QUARTZ_STAIRS -> uiFR
    surge.util.BlastResistance COBBLESTONE_STAIRS -> BttJ
    surge.util.BlastResistance SANDSTONE_STAIRS -> tvco
    surge.util.BlastResistance NETHER_BRICK_STAIRS -> Xcqv
    surge.util.BlastResistance WOOD_STAIRS -> dNCk
    surge.util.BlastResistance RED_SANDSTONE_STAIRS -> rxmq
    surge.util.BlastResistance ACACIA_DOOR -> uhdb
    surge.util.BlastResistance BIRCH_DOOR -> NVSw
    surge.util.BlastResistance DARK_OAK_DOOR -> XmCN
    surge.util.BlastResistance SPRUCE_DOOR -> xFyi
    surge.util.BlastResistance JUNGLE_DOOR -> gVkV
    surge.util.BlastResistance GOLD_ORE -> uGCK
    surge.util.BlastResistance HOPPER -> gxnY
    surge.util.BlastResistance IRON_ORE -> vAUB
    surge.util.BlastResistance LAPIS_BLOCK -> aDYT
    surge.util.BlastResistance LAPIS_ORE -> FqAH
    surge.util.BlastResistance QUARTZ_ORE -> dDqN
    surge.util.BlastResistance REDSTONE_ORE -> Knma
    surge.util.BlastResistance TRAP_DOOR -> kQuS
    surge.util.BlastResistance WOOD -> OsJY
    surge.util.BlastResistance CHEST -> ccpf
    surge.util.BlastResistance TRAPPED_CHEST -> cdRE
    surge.util.BlastResistance WORKBENCH -> vcVu
    surge.util.BlastResistance CAULDRON -> nmBP
    surge.util.BlastResistance LOG -> JJHe
    surge.util.BlastResistance LOG_2 -> NMfM
    surge.util.BlastResistance BOOKSHELF -> Oaix
    surge.util.BlastResistance BANNER -> pQGv
    surge.util.BlastResistance STANDING_BANNER -> XtvG
    surge.util.BlastResistance WALL_BANNER -> gWOU
    surge.util.BlastResistance JACK_O_LANTERN -> LOov
    surge.util.BlastResistance MELON_BLOCK -> RseR
    surge.util.BlastResistance SKULL -> iefF
    surge.util.BlastResistance PUMPKIN -> tnUa
    surge.util.BlastResistance SIGN -> NDtt
    surge.util.BlastResistance SIGN_POST -> pGud
    surge.util.BlastResistance WALL_SIGN -> XtvU
    surge.util.BlastResistance QUARTZ_BLOCK -> xaPL
    surge.util.BlastResistance NOTE_BLOCK -> dogn
    surge.util.BlastResistance RED_SANDSTONE -> OsMd
    surge.util.BlastResistance SANDSTONE -> dohN
    surge.util.BlastResistance WOOL -> IXIw
    surge.util.BlastResistance MONSTER_EGG -> wCxt
    surge.util.BlastResistance RAILS -> eixb
    surge.util.BlastResistance ACTIVATOR_RAIL -> uhfj
    surge.util.BlastResistance DETECTOR_RAIL -> xjAI
    surge.util.BlastResistance POWERED_RAIL -> ncrR
    surge.util.BlastResistance CLAY -> kQxH
    surge.util.BlastResistance DIRT -> hscP
    surge.util.BlastResistance GRASS -> GHov
    surge.util.BlastResistance GRAVEL -> eXvc
    surge.util.BlastResistance SPONGE -> NNEu
    surge.util.BlastResistance BREWING_STAND -> FEnE
    surge.util.BlastResistance STONE_BUTTON -> tUBa
    surge.util.BlastResistance WOOD_BUTTON -> gElG
    surge.util.BlastResistance CAKE_BLOCK -> ArTl
    surge.util.BlastResistance ICE -> DQIs
    surge.util.BlastResistance PACKED_ICE -> BBRy
    surge.util.BlastResistance LEVER -> HwIU
    surge.util.BlastResistance MYCEL -> qBjn
    surge.util.BlastResistance PISTON_BASE -> VnrE
    surge.util.BlastResistance PISTON_EXTENSION -> AYEH
    surge.util.BlastResistance PISTON_MOVING_PIECE -> DQMF
    surge.util.BlastResistance PISTON_STICKY_BASE -> cRsi
    surge.util.BlastResistance GOLD_PLATE -> scEN
    surge.util.BlastResistance IRON_PLATE -> cSTg
    surge.util.BlastResistance STONE_PLATE -> HLXC
    surge.util.BlastResistance WOOD_PLATE -> Sehj
    surge.util.BlastResistance SAND -> MdXX
    surge.util.BlastResistance SOUL_SAND -> wLky
    surge.util.BlastResistance CACTUS -> SKuo
    surge.util.BlastResistance LADDER -> eGyO
    surge.util.BlastResistance NETHERRACK -> gFOe
    surge.util.BlastResistance GLASS -> jGHV
    surge.util.BlastResistance THIN_GLASS -> HTgt
    surge.util.BlastResistance STAINED_GLASS -> Wqsa
    surge.util.BlastResistance STAINED_GLASS_PANE -> gqBi
    surge.util.BlastResistance GLOWSTONE -> vJIl
    surge.util.BlastResistance REDSTONE_LAMP_OFF -> baSA
    surge.util.BlastResistance REDSTONE_LAMP_ON -> stEY
    surge.util.BlastResistance SEA_LANTERN -> bOop
    surge.util.BlastResistance BED_BLOCK -> lwaL
    surge.util.BlastResistance DAYLIGHT_DETECTOR -> gxrU
    surge.util.BlastResistance DAYLIGHT_DETECTOR_INVERTED -> GQdA
    surge.util.BlastResistance HUGE_MUSHROOM_1 -> ofwS
    surge.util.BlastResistance HUGE_MUSHROOM_2 -> Dakw
    surge.util.BlastResistance LEAVES -> xrRj
    surge.util.BlastResistance LEAVES_2 -> kIjK
    surge.util.BlastResistance SNOW -> mPQJ
    int a -> a
    surge.util.BlastResistance[] b -> jpyq
    44:44:surge.util.BlastResistance[] values() -> values
    4:4:surge.util.BlastResistance valueOf(java.lang.String) -> valueOf
    27:114:void <init>(java.lang.String,int,int) -> <init>
    104:104:int getBlastResistance() -> LFrI
    8:153:int get(org.bukkit.Material) -> CoUJ
    1:160:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.Blocks -> PmOT:
    2:2:void <init>() -> <init>
    1:1:org.bukkit.Location getCenter(org.bukkit.block.Block) -> CoUJ
surge.util.C -> PmNt:
    surge.util.C BLACK -> XKDW
    surge.util.C DARK_BLUE -> tUEH
    surge.util.C DARK_GREEN -> QEnp
    surge.util.C DARK_AQUA -> jiJT
    surge.util.C DARK_RED -> XmHH
    surge.util.C DARK_PURPLE -> qTLT
    surge.util.C GOLD -> EnAv
    surge.util.C GRAY -> IGLQ
    surge.util.C DARK_GRAY -> jymq
    surge.util.C BLUE -> PnDI
    surge.util.C GREEN -> xjEc
    surge.util.C AQUA -> BJfp
    surge.util.C RED -> LYGF
    surge.util.C LIGHT_PURPLE -> IFlB
    surge.util.C YELLOW -> Wqvt
    surge.util.C WHITE -> uylk
    surge.util.C MAGIC -> FEsN
    surge.util.C BOLD -> mjEw
    surge.util.C STRIKETHROUGH -> GHvQ
    surge.util.C UNDERLINE -> jWji
    surge.util.C ITALIC -> Aqxg
    surge.util.C RESET -> ndVp
    char COLOR_CHAR -> COLOR_CHAR
    java.util.regex.Pattern a -> a
    int b -> b
    char c -> tTfd
    boolean d -> d
    java.lang.String e -> e
    java.util.Map f -> RHsl
    java.util.Map g -> pQKi
    java.util.Map h -> tnYY
    java.util.Map i -> bYCl
    java.util.Map j -> sIRw
    int[] k -> baSt
    surge.util.C[] l -> GRFi
    int m -> m
    java.lang.String[] n -> WOsB
    3:228:void <clinit>() -> <clinit>
    55:132:void <init>(java.lang.String,int,char,int) -> <init>
    25:125:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    209:209:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
    2:2:char getChar() -> getChar
    225:225:java.lang.String toString() -> toString
    90:90:org.bukkit.DyeColor dye() -> mFnu
    201:201:java.lang.String hex() -> bObT
    229:229:boolean isFormat() -> isFormat
    142:142:boolean isColor() -> isColor
    50:184:surge.util.C getByChar(char) -> SurP
    15:222:surge.util.C getByChar(java.lang.String) -> Lhln
    34:198:java.lang.String stripColor(java.lang.String) -> stripColor
    51:170:surge.util.C dyeToChat(org.bukkit.DyeColor) -> CoUJ
    77:185:org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) -> CoUJ
    13:120:java.lang.String chatToHex(org.bukkit.ChatColor) -> kjuf
    4:177:java.lang.String dyeToHex(org.bukkit.DyeColor) -> kjuf
    9:210:org.bukkit.Color hexToColor(java.lang.String) -> MJMh
    1:221:org.bukkit.Color rgbToColor(java.lang.String) -> kQcJ
    8:227:java.lang.String generateColorTable() -> UALT
    195:195:org.bukkit.ChatColor chatColor() -> uOGp
    41:187:java.lang.String translateAlternateColorCodes(char,java.lang.String) -> translateAlternateColorCodes
    12:139:surge.util.C fromItemMeta(byte) -> CoUJ
    20:218:byte getItemMeta() -> MBFC
    14:207:java.lang.String getLastColors(java.lang.String) -> getLastColors
    19:19:surge.util.C[] values() -> values
    101:101:surge.util.C valueOf(java.lang.String) -> valueOf
    172:172:void <init>(java.lang.String,int,char,int,surge.util.C) -> <init>
    76:76:void <init>(java.lang.String,int,char,int,boolean,surge.util.C) -> <init>
    214:214:int[] a() -> gNJW
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.C$1 -> PmNt$1:
    2:3:void <init>(java.lang.String,int,char,int) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$10 -> PmNt$2:
    1:3:void <init>(java.lang.String,int,char,int) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$11 -> PmNt$3:
    1:2:void <init>(java.lang.String,int,char,int) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$12 -> PmNt$4:
    2:3:void <init>(java.lang.String,int,char,int) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$13 -> PmNt$5:
    1:3:void <init>(java.lang.String,int,char,int) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$14 -> PmNt$6:
    1:3:void <init>(java.lang.String,int,char,int) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$15 -> PmNt$7:
    2:3:void <init>(java.lang.String,int,char,int) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$16 -> PmNt$8:
    2:3:void <init>(java.lang.String,int,char,int) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$17 -> PmNt$9:
    1:3:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$18 -> PmNt$10:
    1:3:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$19 -> PmNt$11:
    2:3:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$2 -> PmNt$12:
    2:3:void <init>(java.lang.String,int,char,int) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$20 -> PmNt$13:
    1:3:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$21 -> PmNt$14:
    1:2:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$22 -> PmNt$15:
    1:2:void <init>(java.lang.String,int,char,int) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$3 -> PmNt$16:
    1:2:void <init>(java.lang.String,int,char,int) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$4 -> PmNt$17:
    2:3:void <init>(java.lang.String,int,char,int) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$5 -> PmNt$18:
    2:3:void <init>(java.lang.String,int,char,int) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$6 -> PmNt$19:
    1:3:void <init>(java.lang.String,int,char,int) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$7 -> PmNt$20:
    1:2:void <init>(java.lang.String,int,char,int) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$8 -> PmNt$21:
    1:3:void <init>(java.lang.String,int,char,int) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$9 -> PmNt$22:
    1:2:void <init>(java.lang.String,int,char,int) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.CDou -> DHIj:
    double a -> a
    double b -> b
    1:12:void <init>(double) -> <init>
    8:15:surge.util.CDou set(double) -> uhRQ
    2:17:surge.util.CDou add(double) -> kcEc
    5:18:surge.util.CDou sub(double) -> tBjm
    13:13:double get() -> get
    3:16:void circ() -> cRdn
surge.util.CMD -> Smfy:
    java.lang.String a -> a
    org.bukkit.command.CommandSender b -> Yokr
    boolean c -> c
    java.lang.String d -> d
    1:18:void <init>(java.lang.String) -> <init>
    3:8:surge.util.CMD virtual() -> xrCj
    5:15:void execute(org.bukkit.command.CommandSender) -> jEpG
    2:17:void execute() -> execute
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.CNum -> vYxo:
    int a -> a
    int b -> b
    7:19:void <init>(int) -> <init>
    5:17:surge.util.CNum set(int) -> KUIX
    1:15:surge.util.CNum add(int) -> Lhln
    8:21:surge.util.CNum sub(int) -> MJMh
    12:12:int get() -> get
    2:10:void circ() -> cRdn
    20:20:int getMax() -> getMax
    3:22:void setMax(int) -> kQcJ
surge.util.Callback -> KUOQ:
    java.lang.Object get() -> get
surge.util.Chunks -> DHJV:
    18:18:void <init>() -> <init>
    21:21:surge.collection.GList getLoadedChunks(org.bukkit.World) -> kjuf
    8:27:surge.collection.GList getLoadedChunks() -> iLEk
    24:24:surge.collection.GList getRadius(org.bukkit.Chunk,int) -> jEpG
    28:28:boolean unload(org.bukkit.Chunk,boolean,boolean) -> CoUJ
    2:2:boolean unload(org.bukkit.Chunk,boolean) -> CoUJ
    12:12:boolean unload(org.bukkit.Chunk) -> kjuf
    5:25:int unload(surge.collection.GList,boolean,boolean) -> CoUJ
    3:3:int unload(surge.collection.GList,boolean) -> CoUJ
    4:4:int unload(surge.collection.GList) -> gEWd
    6:6:boolean isLoaded(java.lang.String,int,int) -> CoUJ
    11:29:boolean isLoaded(org.bukkit.World,int,int) -> CoUJ
    1:22:void load(surge.collection.GList) -> SCNa
surge.util.Cuboid -> qAxL:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    java.lang.String[] h -> LFrI
    35:223:void <init>(org.bukkit.Location,org.bukkit.Location) -> <init>
    5:206:int depth(surge.util.Axis) -> CoUJ
    52:238:void set(org.bukkit.Location,org.bukkit.Location) -> kjuf
    141:141:boolean hasPlayers() -> iuxT
    16:228:surge.collection.GList getPlayers() -> uEpp
    33:248:surge.collection.GList getEntities() -> flnq
    46:126:void <init>(org.bukkit.Location) -> <init>
    23:193:void <init>(surge.util.Cuboid) -> <init>
    21:235:void <init>(org.bukkit.World,int,int,int,int,int,int) -> <init>
    34:251:void <init>(java.lang.String,int,int,int,int,int,int) -> <init>
    25:246:void <init>(java.util.Map) -> <init>
    19:244:java.util.Map serialize() -> serialize
    226:226:surge.util.Cuboid flatten(int) -> pjGa
    119:119:org.bukkit.Location getLowerNE() -> ieWf
    213:213:org.bukkit.Location getUpperSW() -> dLwC
    75:155:org.bukkit.Location getCenter() -> getCenter
    36:212:org.bukkit.World getWorld() -> getWorld
    79:79:int getSizeX() -> tBsS
    207:207:int getSizeY() -> iKhW
    113:113:int getSizeZ() -> qeCE
    103:103:int getLowerX() -> Vesq
    7:7:int getLowerY() -> PmSy
    86:86:int getLowerZ() -> tdyY
    69:69:int getUpperX() -> OYPI
    122:122:int getUpperY() -> Vess
    109:109:int getUpperZ() -> Lhwg
    1:231:org.bukkit.block.Block[] corners() -> xaEp
    4:188:surge.util.Cuboid expand(surge.util.Cuboid$CuboidDirection,int) -> CoUJ
    8:8:surge.util.Cuboid shift(surge.util.Cuboid$CuboidDirection,int) -> kjuf
    9:240:surge.util.Cuboid outset(surge.util.Cuboid$CuboidDirection,int) -> jEpG
    234:234:surge.util.Cuboid inset(surge.util.Cuboid$CuboidDirection,int) -> prVK
    181:181:boolean contains(int,int,int) -> kjuf
    250:250:boolean contains(org.bukkit.block.Block) -> kjuf
    110:110:boolean contains(org.bukkit.Location) -> SurP
    90:90:int volume() -> aoEW
    43:237:byte averageLightLevel() -> gMri
    145:145:surge.util.Cuboid contract() -> ydIU
    12:252:surge.util.Cuboid contract(surge.util.Cuboid$CuboidDirection) -> CoUJ
    10:247:surge.util.Cuboid getFace(surge.util.Cuboid$CuboidDirection) -> kjuf
    50:232:boolean containsOnly(org.bukkit.Material) -> kjuf
    2:149:surge.util.Cuboid getBoundingCuboid(surge.util.Cuboid) -> CoUJ
    140:140:org.bukkit.block.Block getRelativeBlock(int,int,int) -> jEpG
    78:78:org.bukkit.block.Block getRelativeBlock(org.bukkit.World,int,int,int) -> CoUJ
    14:217:java.util.List getChunks() -> ccjH
    22:168:void fill(int,byte) -> CoUJ
    174:174:java.util.Iterator iterator() -> iterator
    73:73:surge.util.Cuboid clone() -> xXSw
    214:214:java.lang.String toString() -> toString
    15:245:int hashCode() -> hashCode
    3:242:boolean equals(java.lang.Object) -> equals
    211:211:java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.Cuboid$1 -> qAxL$1:
    surge.util.Cuboid this$0 -> CpMx
    1:1:void <init>(surge.util.Cuboid) -> <init>
    2:5:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> jEpG
    4:4:java.lang.Object onAdapt(java.lang.Object) -> awLH
surge.util.Cuboid$2 -> qAxL$2:
    int[] a -> a
    int[] b -> vkmf
    1:2:void <clinit>() -> <clinit>
surge.util.Cuboid$CuboidDirection -> qAxL$CoUJ:
    surge.util.Cuboid$CuboidDirection North -> gWQl
    surge.util.Cuboid$CuboidDirection East -> MKGd
    surge.util.Cuboid$CuboidDirection South -> rEqr
    surge.util.Cuboid$CuboidDirection West -> TiQC
    surge.util.Cuboid$CuboidDirection Up -> DQQG
    surge.util.Cuboid$CuboidDirection Down -> RRII
    surge.util.Cuboid$CuboidDirection Horizontal -> XRyM
    surge.util.Cuboid$CuboidDirection Vertical -> tfLX
    surge.util.Cuboid$CuboidDirection Both -> wwfE
    surge.util.Cuboid$CuboidDirection Unknown -> BRxy
    surge.util.Cuboid$CuboidDirection[] a -> HULl
    24:24:surge.util.Cuboid$CuboidDirection[] values() -> values
    19:19:surge.util.Cuboid$CuboidDirection valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    1:22:surge.util.Cuboid$CuboidDirection opposite() -> wTov
    3:23:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.Cuboid$CuboidIterator -> qAxL$kjuf:
    org.bukkit.World a -> eaoq
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    surge.util.Cuboid this$0 -> CpMx
    4:18:void <init>(surge.util.Cuboid,org.bukkit.World,int,int,int,int,int,int) -> <init>
    2:2:boolean hasNext() -> hasNext
    1:20:org.bukkit.block.Block next() -> next
    15:15:void remove() -> remove
    5:5:java.lang.Object next() -> next
surge.util.CuboidException -> dVFp:
    long serialVersionUID -> serialVersionUID
    1:2:void <init>(java.lang.String) -> <init>
surge.util.D -> tnFQ:
    surge.collection.GList a -> dVFp
    java.lang.String[] b -> dnvF
    41:41:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    9:42:void flush() -> flush
    11:39:void a(java.lang.String,java.lang.String) -> kjuf
    6:8:void l(java.lang.Object,java.lang.String) -> CoUJ
    21:26:void s(java.lang.Object,java.lang.String) -> kjuf
    20:25:void v(java.lang.Object,java.lang.String) -> jEpG
    30:31:void w(java.lang.Object,java.lang.String) -> prVK
    2:47:void f(java.lang.Object,java.lang.String) -> gEWd
    5:46:void l(java.lang.String) -> pjGa
    14:34:void s(java.lang.String) -> IErx
    3:40:void v(java.lang.String) -> ivTX
    1:35:void w(java.lang.String) -> vsiB
    10:43:void f(java.lang.String) -> AhpF
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.DMSRequire -> oUdh:
    surge.util.DMSRequirement value() -> VwWS
surge.util.DMSRequirement -> WiSS:
    surge.util.DMSRequirement SQL -> anvH
    surge.util.DMSRequirement[] a -> afdx
    4:5:void <clinit>() -> <clinit>
    2:2:void <init>(java.lang.String,int) -> <init>
    1:1:surge.util.DMSRequirement[] values() -> values
    3:3:surge.util.DMSRequirement valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.Depend -> myrT:
    surge.util.Depend VAULT -> fnDa
    surge.util.Depend FAWE -> qdql
    surge.util.Depend WORLDEDIT -> hIWA
    surge.util.Depend PROTOLIB -> cljv
    surge.util.Depend CITIZENS -> TiPu
    java.lang.String a -> a
    surge.util.Depend[] b -> oomA
    1:10:void <clinit>() -> <clinit>
    4:11:void <init>(java.lang.String,int,java.lang.String) -> <init>
    3:3:boolean exists() -> exists
    6:6:surge.util.Depend[] values() -> values
    12:12:surge.util.Depend valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.Dimension -> CUhX:
    int a -> a
    int b -> b
    int c -> c
    2:18:void <init>(int,int,int) -> <init>
    3:14:void <init>(int,int) -> <init>
    1:19:surge.util.DimensionFace getPane() -> tmjR
    13:13:int getWidth() -> getWidth
    7:7:int getHeight() -> getHeight
    20:20:int getDepth() -> getDepth
surge.util.DimensionFace -> WaBn:
    surge.util.DimensionFace X -> Lqww
    surge.util.DimensionFace Y -> jWlO
    surge.util.DimensionFace Z -> ycwf
    surge.util.DimensionFace[] a -> rhTu
    5:5:surge.util.DimensionFace[] values() -> values
    3:3:surge.util.DimensionFace valueOf(java.lang.String) -> valueOf
    2:2:void <init>(java.lang.String,int) -> <init>
    1:7:void <clinit>() -> <clinit>
surge.util.Direction -> quaQ:
    surge.util.Direction U -> KgEp
    surge.util.Direction D -> Pmcf
    surge.util.Direction N -> JJOt
    surge.util.Direction S -> sRFY
    surge.util.Direction E -> NNKw
    surge.util.Direction W -> ObPi
    int a -> a
    int b -> b
    int c -> c
    surge.util.Cuboid$CuboidDirection d -> TWmV
    int[] e -> ytyT
    surge.util.Direction[] f -> eQNB
    20:50:void <clinit>() -> <clinit>
    5:51:void <init>(java.lang.String,int,int,int,int,surge.util.Cuboid$CuboidDirection) -> <init>
    9:53:surge.util.Direction reverse() -> JstF
    2:2:int x() -> fvEA
    54:54:int y() -> eraG
    18:18:int z() -> z
    3:3:surge.util.Cuboid$CuboidDirection f() -> BSHw
    37:37:surge.collection.GList news() -> qeAa
    1:1:surge.collection.GList udnews() -> BSKX
    11:57:surge.util.Direction facing(org.bukkit.entity.Player) -> tTNS
    6:55:surge.util.Direction fromByte(byte) -> kjuf
    4:30:byte byteValue() -> byteValue
    28:28:surge.util.Direction[] values() -> values
    40:40:surge.util.Direction valueOf(java.lang.String) -> valueOf
    41:41:int[] a() -> gNJW
surge.util.Embedded -> pYKy:
    surge.collection.GList get() -> hHdU
    void add(java.lang.Object) -> add
surge.util.F -> kQlX:
    java.text.NumberFormat a -> LqyI
    java.text.DecimalFormat b -> b
    java.lang.String[] c -> xWkm
    java.math.BigInteger d -> BlmL
    java.util.NavigableMap e -> fCOj
    int f -> f
    java.lang.String[] g -> PmOT
    21:147:void <clinit>() -> <clinit>
    101:101:void <init>() -> <init>
    103:158:java.lang.String time(double,int) -> CoUJ
    31:31:java.lang.String b(int) -> b
    66:66:java.lang.String b(long) -> SurP
    17:17:java.lang.String b(double) -> PlhO
    3:164:java.lang.String b(java.math.BigInteger) -> CoUJ
    35:104:void a() -> a
    142:142:java.lang.String color(java.lang.String) -> idrI
    81:81:java.lang.String fileSize(long) -> xGHv
    71:71:java.lang.String memSize(long) -> Hmbe
    49:114:java.lang.String stamp(long) -> UtIN
    16:16:java.lang.String stamp() -> xGQx
    9:165:java.lang.String ofSize(long,int) -> kjuf
    2:157:java.lang.String ofSize(long,int,surge.util.C) -> CoUJ
    160:160:surge.collection.GList wrap(java.lang.String) -> gEYe
    15:134:surge.collection.GList wrap(java.lang.String,int) -> SCNa
    78:117:java.lang.String trim(java.lang.String,int) -> DigG
    25:155:java.lang.String cname(java.lang.String) -> uEpp
    1:163:surge.collection.GList getParameters(java.lang.String,char) -> CoUJ
    54:143:java.lang.String repeat(java.lang.String,int) -> repeat
    26:123:java.lang.String mem(long) -> qBTH
    37:161:java.lang.String memx(long) -> tTNS
    62:116:java.lang.String f(long) -> rEWF
    74:133:java.lang.String f(int) -> IErx
    5:138:java.lang.String f(double,int) -> kjuf
    57:154:java.lang.String fd(double,int) -> jEpG
    27:118:java.lang.String f(float,int) -> CoUJ
    150:150:java.lang.String f(double) -> RGyg
    24:24:java.lang.String f(float) -> CoUJ
    107:107:java.lang.String pc(double,int) -> prVK
    90:90:java.lang.String pc(float,int) -> kjuf
    76:76:java.lang.String pc(double) -> TNaT
    75:75:java.lang.String pc(float) -> kjuf
    18:18:java.lang.String pc(int,int,int) -> prVK
    19:19:java.lang.String pc(int,int) -> prVK
    14:14:java.lang.String pc(long,long,int) -> CoUJ
    39:39:java.lang.String pc(long,long) -> CoUJ
    8:8:java.lang.String msSeconds(long) -> NgDc
    79:79:java.lang.String msSeconds(long,int) -> jEpG
    69:69:java.lang.String nsMs(long) -> Nnsm
    34:34:java.lang.String nsMs(long,int) -> prVK
    111:111:java.lang.String nsMsd(long,int) -> gEWd
    12:122:surge.collection.GList color(java.util.List) -> jEpG
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.FU -> DsAV:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long ONE_GB -> ONE_GB
    java.io.File[] EMPTY_FILE_ARRAY -> EMPTY_FILE_ARRAY
    java.lang.String[] a -> a
    299:299:void <clinit>() -> <clinit>
    32:159:void <init>() -> <init>
    35:241:java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    23:283:void touch(java.io.File) -> touch
    30:30:java.io.File[] convertFileCollectionToFileArray(java.util.Collection) -> convertFileCollectionToFileArray
    29:288:java.io.File toFile(java.net.URL) -> toFile
    1:314:java.io.File[] toFiles(java.net.URL[]) -> toFiles
    51:272:java.net.URL[] toURLs(java.io.File[]) -> toURLs
    211:279:void copyFileToDirectory(java.io.File,java.io.File) -> copyFileToDirectory
    70:228:void copyFile(java.io.File,java.io.File) -> copyFile
    11:312:void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    7:298:void a(java.io.File,java.io.File,boolean) -> CoUJ
    19:289:void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    36:53:void copyDirectory(java.io.File,java.io.File) -> copyDirectory
    6:319:void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    16:301:void b(java.io.File,java.io.File,boolean) -> kjuf
    38:305:void copyURLToFile(java.net.URL,java.io.File) -> copyURLToFile
    12:315:void deleteDirectory(java.io.File) -> deleteDirectory
    10:316:void cleanDirectory(java.io.File) -> cleanDirectory
    44:306:boolean waitFor(java.io.File,int) -> waitFor
    14:264:java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    21:300:byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    25:221:java.util.List readLines(java.io.File,java.lang.String) -> readLines
    2:310:void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    45:259:void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    4:236:void writeLines(java.io.File,java.lang.String,java.util.Collection) -> writeLines
    74:307:void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String) -> writeLines
    3:292:void forceDelete(java.io.File) -> forceDelete
    34:145:void forceDeleteOnExit(java.io.File) -> forceDeleteOnExit
    48:313:void a(java.io.File) -> jEpG
    26:318:void b(java.io.File) -> prVK
    42:138:void forceMkdir(java.io.File) -> forceMkdir
    13:309:long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    182:297:boolean isFileNewer(java.io.File,java.io.File) -> isFileNewer
    20:234:boolean isFileNewer(java.io.File,java.util.Date) -> isFileNewer
    5:308:boolean isFileNewer(java.io.File,long) -> isFileNewer
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.FinalDouble -> mhtP:
    double a -> a
    2:9:void <init>(double) -> <init>
    1:1:double get() -> get
    7:8:void set(double) -> set
    4:6:void add(double) -> add
    3:10:void sub(double) -> SeQK
surge.util.FinalFloat -> XAdj:
    float a -> a
    1:5:void <init>(float) -> <init>
    8:8:float get() -> get
    2:10:void set(float) -> set
    3:9:void add(float) -> add
    6:7:void sub(float) -> jEpG
surge.util.FinalInteger -> baDk:
    int a -> a
    2:10:void <init>(int) -> <init>
    3:3:int get() -> get
    1:5:void set(int) -> set
    6:8:void add(int) -> add
    4:9:void sub(int) -> ivTX
surge.util.FinalLong -> DjPT:
    long a -> a
    4:8:void <init>(long) -> <init>
    3:3:long get() -> get
    6:10:void set(long) -> set
    1:5:void add(long) -> add
    2:9:void sub(long) -> awLH
surge.util.FinalString -> CxNe:
    java.lang.String a -> a
    1:5:void <init>(java.lang.String) -> <init>
    6:6:java.lang.String get() -> get
    3:4:void set(java.lang.String) -> set
surge.util.Fingerprint -> UcOe:
    java.lang.String a -> a
    3:3:void <init>() -> <init>
    1:5:java.lang.String randomFingerprint(java.lang.String) -> GPoO
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.GListAdapter -> NVKM:
    8:8:void <init>() -> <init>
    1:7:java.util.List adapt(java.util.List) -> prVK
    java.lang.Object onAdapt(java.lang.Object) -> awLH
surge.util.Health -> YLwj:
    double a -> a
    5:7:void <init>(double) -> <init>
    3:3:int getFlatHearts() -> SCWl
    1:1:double getHearts() -> oLwo
    4:4:double getHalfHearts() -> vQmC
    2:2:int getFlatHalfHearts() -> APHP
surge.util.IO -> dDfg:
    char DIR_SEPARATOR_UNIX -> DIR_SEPARATOR_UNIX
    char DIR_SEPARATOR_WINDOWS -> DIR_SEPARATOR_WINDOWS
    char DIR_SEPARATOR -> DIR_SEPARATOR
    java.lang.String LINE_SEPARATOR_UNIX -> LINE_SEPARATOR_UNIX
    java.lang.String LINE_SEPARATOR_WINDOWS -> LINE_SEPARATOR_WINDOWS
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    12:179:void <clinit>() -> <clinit>
    127:203:void <init>() -> <init>
    114:165:void closeQuietly(java.io.Reader) -> closeQuietly
    1:211:void closeQuietly(java.io.Writer) -> closeQuietly
    2:220:void closeQuietly(java.io.InputStream) -> closeQuietly
    140:215:void closeQuietly(java.io.OutputStream) -> closeQuietly
    45:128:byte[] toByteArray(java.io.InputStream) -> toByteArray
    3:119:byte[] toByteArray(java.io.Reader) -> toByteArray
    102:113:byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    53:53:byte[] toByteArray(java.lang.String) -> toByteArray
    79:209:char[] toCharArray(java.io.InputStream) -> toCharArray
    27:228:char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    48:226:char[] toCharArray(java.io.Reader) -> toCharArray
    108:204:java.lang.String toString(java.io.InputStream) -> toString
    106:185:java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    111:169:java.lang.String toString(java.io.Reader) -> toString
    199:199:java.lang.String toString(byte[]) -> toString
    32:78:java.lang.String toString(byte[],java.lang.String) -> toString
    64:219:java.util.List readLines(java.io.InputStream) -> readLines
    39:195:java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    25:168:java.util.List readLines(java.io.Reader) -> readLines
    30:178:java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    104:146:java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    36:188:void write(byte[],java.io.OutputStream) -> write
    23:164:void write(byte[],java.io.Writer) -> write
    7:223:void write(byte[],java.io.Writer,java.lang.String) -> write
    73:98:void write(char[],java.io.Writer) -> write
    67:196:void write(char[],java.io.OutputStream) -> write
    5:216:void write(char[],java.io.OutputStream,java.lang.String) -> write
    6:221:void write(java.lang.String,java.io.Writer) -> write
    21:189:void write(java.lang.String,java.io.OutputStream) -> write
    43:167:void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    69:198:void write(java.lang.StringBuffer,java.io.Writer) -> write
    28:217:void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    11:180:void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    16:224:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream) -> writeLines
    8:227:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String) -> writeLines
    22:214:void writeLines(java.util.Collection,java.lang.String,java.io.Writer) -> writeLines
    58:212:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    60:129:long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    87:172:void copy(java.io.InputStream,java.io.Writer) -> copy
    13:200:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    19:225:int copy(java.io.Reader,java.io.Writer) -> copy
    68:184:long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    62:218:void copy(java.io.Reader,java.io.OutputStream) -> copy
    18:210:void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    10:197:boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    9:222:boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.Items -> gWBS:
    34:34:void <init>() -> <init>
    51:51:boolean is(org.bukkit.inventory.ItemStack) -> CoUJ
    37:37:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material) -> CoUJ
    47:47:boolean is(org.bukkit.inventory.ItemStack,surge.util.MaterialBlock) -> CoUJ
    32:32:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,byte) -> CoUJ
    67:67:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,int) -> CoUJ
    48:48:boolean hasMeta(org.bukkit.inventory.ItemStack) -> kjuf
    49:49:boolean hasName(org.bukkit.inventory.ItemStack) -> jEpG
    31:31:boolean hasLore(org.bukkit.inventory.ItemStack) -> prVK
    38:38:boolean hasName(org.bukkit.inventory.ItemStack,java.lang.String) -> CoUJ
    13:13:boolean hasLore(org.bukkit.inventory.ItemStack,java.util.List) -> CoUJ
    58:58:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment) -> CoUJ
    44:63:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment,int) -> CoUJ
    2:71:boolean hasEnchantments(org.bukkit.inventory.ItemStack) -> gEWd
    8:53:surge.util.MaterialBlock toMaterialBlock(org.bukkit.inventory.ItemStack) -> SCNa
    57:57:boolean isBroken(org.bukkit.inventory.ItemStack) -> DigG
    29:29:boolean hasDurability(org.bukkit.inventory.ItemStack) -> SurP
    4:70:double getDurabilityPercent(org.bukkit.inventory.ItemStack) -> xGHv
    6:69:void setDurabilityPercent(org.bukkit.inventory.ItemStack,double) -> CoUJ
    9:65:short getMaxDurability(org.bukkit.inventory.ItemStack) -> Hmbe
    3:52:short getDurability(org.bukkit.inventory.ItemStack) -> UtIN
    16:50:void setDurability(org.bukkit.inventory.ItemStack,short) -> CoUJ
    7:64:void setDurability(org.bukkit.inventory.ItemStack,int) -> CoUJ
    30:66:void damage(org.bukkit.inventory.ItemStack,int) -> kjuf
    1:68:boolean isMergable(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack) -> CoUJ
surge.util.MSound -> BchU:
    surge.util.MSound AMBIENCE_CAVE -> GQhW
    surge.util.MSound AMBIENCE_RAIN -> mjFr
    surge.util.MSound AMBIENCE_THUNDER -> GbjM
    surge.util.MSound ANVIL_BREAK -> bijR
    surge.util.MSound ANVIL_LAND -> VEFB
    surge.util.MSound ANVIL_USE -> WjKb
    surge.util.MSound ARROW_HIT -> xGeh
    surge.util.MSound BURP -> yKJM
    surge.util.MSound CHEST_CLOSE -> bGfa
    surge.util.MSound CHEST_OPEN -> mjJj
    surge.util.MSound CLICK -> FOIO
    surge.util.MSound DOOR_CLOSE -> USCm
    surge.util.MSound DOOR_OPEN -> cJkC
    surge.util.MSound DRINK -> hIXY
    surge.util.MSound EAT -> fnFc
    surge.util.MSound EXPLODE -> KLvJ
    surge.util.MSound FALL_BIG -> twNl
    surge.util.MSound FALL_SMALL -> PdvT
    surge.util.MSound FIRE -> LilK
    surge.util.MSound FIRE_IGNITE -> CosA
    surge.util.MSound FIZZ -> HTna
    surge.util.MSound FUSE -> dpQV
    surge.util.MSound GLASS -> cBYj
    surge.util.MSound HURT_FLESH -> Fxyh
    surge.util.MSound ITEM_BREAK -> mqxe
    surge.util.MSound ITEM_PICKUP -> OQQV
    surge.util.MSound LAVA -> mOvJ
    surge.util.MSound LAVA_POP -> QNeh
    surge.util.MSound LEVEL_UP -> NxaY
    surge.util.MSound MINECART_BASE -> psRk
    surge.util.MSound MINECART_INSIDE -> wfdn
    surge.util.MSound NOTE_BASS -> uXNd
    surge.util.MSound NOTE_PIANO -> awfr
    surge.util.MSound NOTE_BASS_DRUM -> CNPT
    surge.util.MSound NOTE_STICKS -> rNcm
    surge.util.MSound NOTE_BASS_GUITAR -> PStO
    surge.util.MSound NOTE_SNARE_DRUM -> cBXk
    surge.util.MSound NOTE_PLING -> URdn
    surge.util.MSound ORB_PICKUP -> iDMb
    surge.util.MSound PISTON_EXTEND -> fmhR
    surge.util.MSound PISTON_RETRACT -> OkGO
    surge.util.MSound PORTAL -> FOJd
    surge.util.MSound PORTAL_TRAVEL -> IPDA
    surge.util.MSound PORTAL_TRIGGER -> ObVE
    surge.util.MSound SHOOT_ARROW -> Yori
    surge.util.MSound SPLASH -> TyuP
    surge.util.MSound SPLASH2 -> Rbml
    surge.util.MSound STEP_GRASS -> eYcO
    surge.util.MSound STEP_GRAVEL -> YNPs
    surge.util.MSound STEP_LADDER -> NxeL
    surge.util.MSound STEP_SAND -> BKMo
    surge.util.MSound STEP_SNOW -> RRMk
    surge.util.MSound STEP_STONE -> kuGh
    surge.util.MSound STEP_WOOD -> rOGv
    surge.util.MSound STEP_WOOL -> KEIG
    surge.util.MSound SWIM -> Tqed
    surge.util.MSound WATER -> Cxek
    surge.util.MSound WOOD_CLICK -> OYds
    surge.util.MSound BAT_DEATH -> UBEP
    surge.util.MSound BAT_HURT -> GQlC
    surge.util.MSound BAT_IDLE -> ersu
    surge.util.MSound BAT_LOOP -> ECTy
    surge.util.MSound BAT_TAKEOFF -> rgwr
    surge.util.MSound BLAZE_BREATH -> jFnh
    surge.util.MSound BLAZE_DEATH -> ogaG
    surge.util.MSound BLAZE_HIT -> hIYs
    surge.util.MSound CAT_HISS -> wffs
    surge.util.MSound CAT_HIT -> sQid
    surge.util.MSound CAT_MEOW -> ghYu
    surge.util.MSound CAT_PURR -> yBXw
    surge.util.MSound CAT_PURREOW -> bXjQ
    surge.util.MSound CHICKEN_IDLE -> Puxj
    surge.util.MSound CHICKEN_HURT -> EmiS
    surge.util.MSound CHICKEN_EGG_POP -> NWBL
    surge.util.MSound CHICKEN_WALK -> qnGW
    surge.util.MSound COW_IDLE -> VUgY
    surge.util.MSound COW_HURT -> DPsa
    surge.util.MSound COW_WALK -> bXid
    surge.util.MSound CREEPER_HISS -> TPDo
    surge.util.MSound CREEPER_DEATH -> IFsV
    surge.util.MSound ENDERDRAGON_DEATH -> lUiP
    surge.util.MSound ENDERDRAGON_GROWL -> SvtU
    surge.util.MSound ENDERDRAGON_HIT -> iCoH
    surge.util.MSound ENDERDRAGON_WINGS -> scOP
    surge.util.MSound ENDERMAN_DEATH -> oNQi
    surge.util.MSound ENDERMAN_HIT -> YhFF
    surge.util.MSound ENDERMAN_IDLE -> IWtm
    surge.util.MSound ENDERMAN_TELEPORT -> OQWA
    surge.util.MSound ENDERMAN_SCREAM -> wEHV
    surge.util.MSound ENDERMAN_STARE -> MeCS
    surge.util.MSound GHAST_SCREAM -> PnKw
    surge.util.MSound GHAST_SCREAM2 -> hboR
    surge.util.MSound GHAST_CHARGE -> jXTe
    surge.util.MSound GHAST_DEATH -> HfUJ
    surge.util.MSound GHAST_FIREBALL -> FNkv
    surge.util.MSound GHAST_MOAN -> CMrU
    surge.util.MSound IRONGOLEM_DEATH -> dWCj
    surge.util.MSound IRONGOLEM_HIT -> Serr
    surge.util.MSound IRONGOLEM_THROW -> jaEW
    surge.util.MSound IRONGOLEM_WALK -> urEt
    surge.util.MSound MAGMACUBE_WALK -> XJnn
    surge.util.MSound MAGMACUBE_WALK2 -> MeDD
    surge.util.MSound MAGMACUBE_JUMP -> TrHd
    surge.util.MSound PIG_IDLE -> NFCf
    surge.util.MSound PIG_DEATH -> RcQY
    surge.util.MSound PIG_WALK -> qdxP
    surge.util.MSound SHEEP_IDLE -> ssoX
    surge.util.MSound SHEEP_SHEAR -> WXku
    surge.util.MSound SHEEP_WALK -> bGii
    surge.util.MSound SILVERFISH_HIT -> yJkk
    surge.util.MSound SILVERFISH_KILL -> VEGy
    surge.util.MSound SILVERFISH_IDLE -> USGW
    surge.util.MSound SILVERFISH_WALK -> uaCs
    surge.util.MSound SKELETON_IDLE -> qKei
    surge.util.MSound SKELETON_DEATH -> dhDB
    surge.util.MSound SKELETON_HURT -> BvFD
    surge.util.MSound SKELETON_WALK -> BJpV
    surge.util.MSound SLIME_ATTACK -> oNPR
    surge.util.MSound SLIME_WALK -> hRMG
    surge.util.MSound SLIME_WALK2 -> YEaS
    surge.util.MSound SPIDER_IDLE -> oyEI
    surge.util.MSound SPIDER_DEATH -> OjhK
    surge.util.MSound SPIDER_WALK -> JAfN
    surge.util.MSound WITHER_DEATH -> agJw
    surge.util.MSound WITHER_HURT -> WinS
    surge.util.MSound WITHER_IDLE -> vRcp
    surge.util.MSound WITHER_SHOOT -> WYMb
    surge.util.MSound WITHER_SPAWN -> PnKf
    surge.util.MSound WOLF_BARK -> Iqic
    surge.util.MSound WOLF_DEATH -> Cxht
    surge.util.MSound WOLF_GROWL -> YMsi
    surge.util.MSound WOLF_HOWL -> GstL
    surge.util.MSound WOLF_HURT -> SCqo
    surge.util.MSound WOLF_PANT -> cSaW
    surge.util.MSound WOLF_SHAKE -> NpYD
    surge.util.MSound WOLF_WALK -> CFEX
    surge.util.MSound WOLF_WHINE -> bsBU
    surge.util.MSound ZOMBIE_METAL -> Nxhg
    surge.util.MSound ZOMBIE_WOOD -> fSyN
    surge.util.MSound ZOMBIE_WOODBREAK -> pjhh
    surge.util.MSound ZOMBIE_IDLE -> DYif
    surge.util.MSound ZOMBIE_DEATH -> uGTG
    surge.util.MSound ZOMBIE_HURT -> BKQs
    surge.util.MSound ZOMBIE_INFECT -> qBwF
    surge.util.MSound ZOMBIE_UNFECT -> pHeN
    surge.util.MSound ZOMBIE_REMEDY -> bHNc
    surge.util.MSound ZOMBIE_WALK -> kuKk
    surge.util.MSound ZOMBIE_PIG_IDLE -> axOo
    surge.util.MSound ZOMBIE_PIG_ANGRY -> eIGX
    surge.util.MSound ZOMBIE_PIG_DEATH -> cTCD
    surge.util.MSound ZOMBIE_PIG_HURT -> sspf
    surge.util.MSound DIG_WOOL -> uGRv
    surge.util.MSound DIG_GRASS -> oxfR
    surge.util.MSound DIG_GRAVEL -> KwoE
    surge.util.MSound DIG_SAND -> XmTG
    surge.util.MSound DIG_SNOW -> jGSk
    surge.util.MSound DIG_STONE -> MlsU
    surge.util.MSound DIG_WOOD -> LGlv
    surge.util.MSound FIREWORK_BLAST -> BeEx
    surge.util.MSound FIREWORK_BLAST2 -> kciI
    surge.util.MSound FIREWORK_LARGE_BLAST -> IOeh
    surge.util.MSound FIREWORK_LARGE_BLAST2 -> mHLp
    surge.util.MSound FIREWORK_TWINKLE -> tvtJ
    surge.util.MSound FIREWORK_TWINKLE2 -> LiqK
    surge.util.MSound FIREWORK_LAUNCH -> SoGH
    surge.util.MSound SUCCESSFUL_HIT -> Fyai
    surge.util.MSound HORSE_ANGRY -> fBvo
    surge.util.MSound HORSE_ARMOR -> IPGX
    surge.util.MSound HORSE_BREATHE -> htQo
    surge.util.MSound HORSE_DEATH -> DkKb
    surge.util.MSound HORSE_GALLOP -> NVdw
    surge.util.MSound HORSE_HIT -> hAQH
    surge.util.MSound HORSE_IDLE -> sssg
    surge.util.MSound HORSE_JUMP -> APal
    surge.util.MSound HORSE_LAND -> YNVn
    surge.util.MSound HORSE_SADDLE -> WsDi
    surge.util.MSound HORSE_SOFT -> YWGj
    surge.util.MSound HORSE_WOOD -> Emoo
    surge.util.MSound DONKEY_ANGRY -> yKQs
    surge.util.MSound DONKEY_DEATH -> oNUu
    surge.util.MSound DONKEY_HIT -> ivwK
    surge.util.MSound DONKEY_IDLE -> WsEc
    surge.util.MSound HORSE_SKELETON_DEATH -> gOOK
    surge.util.MSound HORSE_SKELETON_HIT -> Mlvi
    surge.util.MSound HORSE_SKELETON_IDLE -> CMvT
    surge.util.MSound HORSE_ZOMBIE_DEATH -> GQtC
    surge.util.MSound HORSE_ZOMBIE_HIT -> gOOO
    surge.util.MSound HORSE_ZOMBIE_IDLE -> mXpM
    surge.util.MSound VILLAGER_DEATH -> kIxf
    surge.util.MSound VILLAGER_HAGGLE -> dVfg
    surge.util.MSound VILLAGER_HIT -> uiXm
    surge.util.MSound VILLAGER_IDLE -> TPHQ
    surge.util.MSound VILLAGER_NO -> fmmX
    surge.util.MSound VILLAGER_YES -> MBas
    java.lang.String a -> a
    java.lang.String b -> b
    org.bukkit.Sound c -> SCrg
    surge.util.MSound[] d -> KxRL
    1:207:void <clinit>() -> <clinit>
    8:186:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    5:193:org.bukkit.Sound bukkitSound() -> OsAk
    171:171:surge.util.MSound[] values() -> values
    86:86:surge.util.MSound valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.MaterialBlock -> clXl:
    org.bukkit.Material a -> fmly
    java.lang.Byte b -> lwoY
    2:16:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    12:45:void <init>(org.bukkit.Material) -> <init>
    5:44:void <init>(org.bukkit.Location) -> <init>
    7:36:void <init>() -> <init>
    17:17:org.bukkit.Material getMaterial() -> getMaterial
    11:14:void setMaterial(org.bukkit.Material) -> setMaterial
    39:39:java.lang.Byte getData() -> tKgN
    21:34:void setData(java.lang.Byte) -> CoUJ
    1:41:java.lang.String toString() -> toString
    19:43:int hashCode() -> hashCode
    3:37:boolean equals(java.lang.Object) -> equals
surge.util.P -> FyGi:
    java.lang.String[] a -> a
    18:18:void <init>() -> <init>
    78:78:boolean isOnline(java.lang.String) -> upfC
    3:3:org.bukkit.entity.Player getPlayer(java.lang.String) -> getPlayer
    79:79:org.bukkit.entity.Player getAnyPlayer() -> QFDD
    64:64:boolean isAnyOnline() -> UAMq
    73:73:surge.collection.GList inWorld(org.bukkit.World) -> jEpG
    36:76:surge.collection.GList inChunk(org.bukkit.Chunk) -> jEpG
    43:43:surge.collection.GList inArea(org.bukkit.Location,double) -> jEpG
    60:60:surge.collection.GList inArea(org.bukkit.Location,int) -> CoUJ
    63:74:void disable(org.bukkit.entity.Player) -> rEWF
    9:31:void enable(org.bukkit.entity.Player) -> NgDc
    24:24:org.bukkit.Location targetBlock(org.bukkit.entity.Player,int) -> CoUJ
    21:21:org.bukkit.entity.Entity targetEntity(org.bukkit.entity.Player,int) -> kjuf
    66:67:boolean hasInventoryOpen(org.bukkit.entity.Player) -> Nnsm
    19:70:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Player,double,double) -> CoUJ
    10:71:int getTotalExperience(org.bukkit.entity.Player) -> awLH
    5:44:void setTotalExperience(org.bukkit.entity.Player,int) -> jEpG
    77:77:boolean canFindPlayer(java.lang.String) -> wfKT
    1:69:org.bukkit.entity.Player findPlayer(java.lang.String) -> aLYj
    4:53:surge.collection.GList onlinePlayers() -> Mcio
    35:35:org.bukkit.Location getCrotchLocation(org.bukkit.entity.Player) -> uVod
    8:52:void clear(org.bukkit.entity.Player) -> uhRQ
    11:75:void clearEffects(org.bukkit.entity.Player) -> kcEc
    27:54:void heal(org.bukkit.entity.Player,double) -> CoUJ
    49:72:void heal(org.bukkit.entity.Player) -> tBjm
    13:29:void resetMaxHeath(org.bukkit.entity.Player) -> PlhO
    12:38:void resetHunger(org.bukkit.entity.Player) -> RGyg
    80:81:void kill(org.bukkit.entity.Player) -> TNaT
    25:25:surge.util.Shape getShape(org.bukkit.entity.Player) -> SeQK
    50:50:org.bukkit.Location getHand(org.bukkit.entity.Player) -> sQJe
    2:65:org.bukkit.Location getHand(org.bukkit.entity.Player,float,float) -> CoUJ
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.P$1 -> FyGi$1:
    1:2:void <init>() -> <init>
    3:5:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> jEpG
    6:6:java.lang.Object onAdapt(java.lang.Object) -> awLH
surge.util.P$2 -> FyGi$2:
    java.lang.Double val$doff -> ivwB
    org.bukkit.entity.Player val$e -> sQom
    org.bukkit.entity.Entity[] val$result -> jaIN
    1:4:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Player,org.bukkit.entity.Entity[]) -> <init>
    2:10:void onTrace(org.bukkit.Location) -> xGHv
surge.util.PE -> DXmq:
    surge.util.PE ABSORPTION -> HfXI
    surge.util.PE BLINDNESS -> ivwH
    surge.util.PE CONFUSION -> NyJt
    surge.util.PE DAMAGE_RESISTANCE -> NNVk
    surge.util.PE FAST_DIGGING -> Jcle
    surge.util.PE FIRE_RESISTANCE -> nJos
    surge.util.PE GLOWING -> uyww
    surge.util.PE HARM -> pbXi
    surge.util.PE HEAL -> GJCX
    surge.util.PE HEALTH_BOOST -> vIwQ
    surge.util.PE HUNGER -> QXAU
    surge.util.PE INCREASE_DAMAGE -> wwmv
    surge.util.PE INVISIBILITY -> TPIF
    surge.util.PE JUMP -> fKmW
    surge.util.PE LEVITATION -> FGCC
    surge.util.PE LUCK -> qnPi
    surge.util.PE NIGHT_VISION -> nTEo
    surge.util.PE POISON -> wDlq
    surge.util.PE REGENERATION -> Koce
    surge.util.PE SATURATION -> Lity
    surge.util.PE SLOW -> aENn
    surge.util.PE SLOW_DIGGING -> cCDh
    surge.util.PE SPEED -> sRSs
    surge.util.PE UNLUCK -> VgSF
    surge.util.PE WATER_BREATHING -> FORv
    surge.util.PE WEAKNESS -> SUYN
    surge.util.PE WITHER -> bbEc
    1:51:void <clinit>() -> <clinit>
    2:21:void <init>(java.util.Map) -> <init>
    18:27:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> <init>
    7:11:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean) -> <init>
    29:39:void <init>(org.bukkit.potion.PotionEffectType,int,int) -> <init>
    44:44:java.util.Map serialize() -> serialize
    17:23:boolean apply(org.bukkit.entity.LivingEntity) -> apply
    40:40:boolean equals(java.lang.Object) -> equals
    28:28:int getAmplifier() -> getAmplifier
    47:47:int getDuration() -> getDuration
    42:42:org.bukkit.potion.PotionEffectType getType() -> getType
    14:14:boolean isAmbient() -> isAmbient
    31:31:boolean hasParticles() -> hasParticles
    46:46:int hashCode() -> hashCode
    25:25:java.lang.String toString() -> toString
    19:19:surge.util.PE defaulted(org.bukkit.potion.PotionEffectType) -> CoUJ
    52:52:surge.util.PE d(int) -> vsiB
    53:53:surge.util.PE a(int) -> AhpF
    13:13:org.bukkit.potion.PotionEffect c() -> ylXG
    32:50:void c(org.bukkit.entity.LivingEntity) -> CoUJ
    9:33:void crm(org.bukkit.entity.LivingEntity) -> kjuf
    35:38:void rm(org.bukkit.entity.LivingEntity) -> jEpG
surge.util.Paste -> yuHM:
    java.lang.String[] a -> a
    9:9:void <init>() -> <init>
    1:8:java.lang.String paste(java.lang.String) -> lfJp
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.Persist -> Cwms:
surge.util.PluginUtil -> GryG:
    java.lang.String[] a -> a
    84:84:void <init>() -> <init>
    24:167:void enable(org.bukkit.plugin.Plugin) -> CoUJ
    75:164:void enableAll() -> TOOY
    23:177:void disable(org.bukkit.plugin.Plugin) -> kjuf
    8:174:void disableAll() -> cRjF
    15:15:java.lang.String getFormattedName(org.bukkit.plugin.Plugin) -> jEpG
    13:124:java.lang.String getFormattedName(org.bukkit.plugin.Plugin,boolean) -> CoUJ
    19:153:org.bukkit.plugin.Plugin getPluginByName(java.lang.String) -> afMA
    1:170:java.util.List getPluginNames(boolean) -> UtIN
    63:185:java.lang.String getPluginVersion(java.lang.String) -> qSWV
    59:182:java.lang.String getUsages(org.bukkit.plugin.Plugin) -> prVK
    2:176:java.util.List findByCommand(java.lang.String) -> tvST
    7:94:void a(org.bukkit.plugin.Plugin) -> gEWd
    21:165:java.lang.String getPluginFileName(java.lang.String) -> LrBM
    3:180:void load(java.lang.String) -> load
    22:168:void reload(org.bukkit.plugin.Plugin) -> SCNa
    44:148:void reloadAll() -> GjlQ
    4:184:void unload(org.bukkit.plugin.Plugin) -> DigG
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.PositionalSelector -> QEae:
    surge.collection.GSet a -> EvdF
    9:14:void <init>() -> <init>
    2:11:void <init>(org.bukkit.Chunk) -> <init>
    5:15:void <init>(org.bukkit.World) -> <init>
    4:8:void addWorld(org.bukkit.World) -> addWorld
    6:13:void addAllWorlds() -> LPIO
    1:16:void addChunk(org.bukkit.Chunk) -> prVK
    10:10:surge.collection.GSet getAllowedChunks() -> byyi
surge.util.Protocol -> mXSU:
    surge.util.Protocol LATEST -> Yxlk
    surge.util.Protocol R1_12_2 -> GtYb
    surge.util.Protocol R1_12_2_PRE -> VpEG
    surge.util.Protocol R1_12_1 -> kRkk
    surge.util.Protocol R1_12 -> LQDt
    surge.util.Protocol R1_11_2 -> giCj
    surge.util.Protocol R1_11_1 -> UuQc
    surge.util.Protocol R1_11 -> RRUq
    surge.util.Protocol R1_10_2 -> xsDk
    surge.util.Protocol R1_10_1 -> aDoB
    surge.util.Protocol R1_10 -> dNYD
    surge.util.Protocol R1_9_4 -> aVPG
    surge.util.Protocol R1_9_3 -> Ngit
    surge.util.Protocol R1_9_2 -> bbDP
    surge.util.Protocol R1_9_1 -> QNpX
    surge.util.Protocol R1_9 -> LjTw
    surge.util.Protocol R1_8_9 -> Cgjo
    surge.util.Protocol R1_8_8 -> eHhi
    surge.util.Protocol R1_8_7 -> EKnW
    surge.util.Protocol R1_8_6 -> nSdA
    surge.util.Protocol R1_8_5 -> xjRi
    surge.util.Protocol R1_8_4 -> nltx
    surge.util.Protocol R1_8_3 -> qLKv
    surge.util.Protocol R1_8_2 -> OYlS
    surge.util.Protocol R1_8_1 -> kRkK
    surge.util.Protocol R1_8 -> mYRK
    surge.util.Protocol R1_7_10 -> ivxX
    surge.util.Protocol R1_7_9 -> RJEE
    surge.util.Protocol R1_7_8 -> vuNW
    surge.util.Protocol R1_7_7 -> ydhU
    surge.util.Protocol R1_7_6 -> BvMW
    surge.util.Protocol R1_7_5 -> BSiV
    surge.util.Protocol R1_7_4 -> JKAC
    surge.util.Protocol R1_7_3 -> ySgF
    surge.util.Protocol R1_7_2 -> IPNG
    surge.util.Protocol R1_7_1 -> cdhq
    surge.util.Protocol B1_6_4 -> KVSn
    surge.util.Protocol B1_6_3 -> JKAG
    surge.util.Protocol B1_6_2 -> LriD
    surge.util.Protocol B1_6_1 -> tnkD
    surge.util.Protocol B1_5_2 -> wwse
    surge.util.Protocol B1_5_1 -> CyQA
    surge.util.Protocol B1_5 -> Utrb
    surge.util.Protocol B1_4_7 -> USQB
    surge.util.Protocol B1_4_6 -> skgj
    surge.util.Protocol B1_4_5 -> PveG
    surge.util.Protocol B1_4_4 -> LPfN
    surge.util.Protocol B1_4_2 -> jrOe
    surge.util.Protocol B1_3_2 -> Fhft
    surge.util.Protocol B1_3_1 -> baff
    surge.util.Protocol B1_2_5 -> ydhF
    surge.util.Protocol B1_2_4 -> jPKj
    surge.util.Protocol EARLIEST -> VVSp
    surge.util.Protocol UNKNOWN -> FWeh
    int a -> a
    java.lang.String b -> b
    surge.util.Protocol[] c -> bXtt
    58:58:surge.util.Protocol[] values() -> values
    24:24:surge.util.Protocol valueOf(java.lang.String) -> valueOf
    16:60:void <init>(java.lang.String,int,int) -> <init>
    10:71:surge.util.Protocol getProtocolVersion() -> PSdJ
    52:52:surge.util.ProtocolRange to(surge.util.Protocol) -> kjuf
    73:73:boolean isServerVersion() -> aMCx
    57:57:java.lang.String getVersionString() -> getVersionString
    68:68:boolean isNettySupported() -> LqkO
    2:2:boolean isActualVersion() -> ntmD
    32:74:int getVersion() -> getVersion
    31:31:int getMetaVersion() -> pGmq
    1:77:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.ProtocolRange -> JAKt:
    surge.util.Protocol a -> OkRT
    surge.util.Protocol b -> AagI
    java.lang.String c -> c
    3:8:void <init>(surge.util.Protocol,surge.util.Protocol) -> <init>
    1:1:surge.util.Protocol getFrom() -> SLLg
    7:7:surge.util.Protocol getTo() -> KUWD
    4:4:boolean contains(surge.util.Protocol) -> jEpG
    2:2:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.Range -> MSFf:
    double a -> a
    double b -> b
    5:13:void <init>(double,double) -> <init>
    6:15:void <init>(int,int) -> <init>
    18:20:void <init>(long,long) -> <init>
    11:11:double randomNext() -> UtUs
    9:9:int randomNextInt() -> KLeY
    14:14:long randomNextLong() -> tmlS
    1:1:boolean isWithin(double) -> sQJe
    16:16:boolean isWithin(int) -> idrI
    4:4:boolean isWithin(long) -> uVod
    3:3:double getMin() -> getMin
    2:10:void setMin(double) -> VvjN
    12:12:double getMax() -> getMax
    17:19:void setMax(double) -> idoP
surge.util.RayTrace -> vAJQ:
    org.bukkit.Location a -> uycN
    org.bukkit.util.Vector b -> hlHr
    java.lang.Double c -> FqVl
    java.lang.Double d -> EwDu
    java.lang.Double e -> Bdkc
    java.lang.Boolean f -> YVjY
    1:31:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double) -> <init>
    4:32:void trace() -> qvEm
    16:35:void stop() -> stop
    33:33:void onTrace(org.bukkit.Location) -> xGHv
    26:26:org.bukkit.Location getStart() -> DHRG
    22:34:void setStart(org.bukkit.Location) -> Hmbe
    12:12:org.bukkit.util.Vector getDirection() -> getDirection
    20:27:void setDirection(org.bukkit.util.Vector) -> setDirection
    23:23:java.lang.Double getMaxDistance() -> YgPU
    5:8:void setMaxDistance(java.lang.Double) -> jEpG
    21:21:java.lang.Double getDistanceCovered() -> HfAB
    13:36:void setDistanceCovered(java.lang.Double) -> prVK
    18:18:java.lang.Double getStep() -> UtVL
    7:25:void setStep(java.lang.Double) -> gEWd
surge.util.ReflectionUtils -> bGPt:
    java.lang.String[] a -> a
    6:29:void <init>() -> <init>
    16:32:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    23:23:java.lang.reflect.Constructor getConstructor(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.Class[]) -> CoUJ
    15:15:java.lang.Object instantiateObject(java.lang.Class,java.lang.Object[]) -> CoUJ
    14:14:java.lang.Object instantiateObject(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.Object[]) -> CoUJ
    1:35:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    8:8:java.lang.reflect.Method getMethod(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Class[]) -> CoUJ
    9:9:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    34:34:java.lang.Object invokeMethod(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Object[]) -> CoUJ
    12:12:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Object[]) -> CoUJ
    2:33:java.lang.reflect.Field getField(java.lang.Class,boolean,java.lang.String) -> CoUJ
    10:10:java.lang.reflect.Field getField(java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> CoUJ
    22:22:java.lang.Object getValue(java.lang.Object,java.lang.Class,boolean,java.lang.String) -> CoUJ
    18:18:java.lang.Object getValue(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> CoUJ
    20:20:java.lang.Object getValue(java.lang.Object,boolean,java.lang.String) -> CoUJ
    3:13:void setValue(java.lang.Object,java.lang.Class,boolean,java.lang.String,java.lang.Object) -> CoUJ
    11:26:void setValue(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String,java.lang.Object) -> CoUJ
    7:36:void setValue(java.lang.Object,boolean,java.lang.String,java.lang.Object) -> CoUJ
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.ReflectionUtils$DataType -> bGPt$CoUJ:
    surge.util.ReflectionUtils$DataType BYTE -> iTwc
    surge.util.ReflectionUtils$DataType SHORT -> SMHo
    surge.util.ReflectionUtils$DataType INTEGER -> VodK
    surge.util.ReflectionUtils$DataType LONG -> pHjq
    surge.util.ReflectionUtils$DataType CHARACTER -> rydv
    surge.util.ReflectionUtils$DataType FLOAT -> vmAE
    surge.util.ReflectionUtils$DataType DOUBLE -> WsHP
    surge.util.ReflectionUtils$DataType BOOLEAN -> HUYx
    java.util.Map a -> a
    java.lang.Class b -> b
    java.lang.Class c -> Vess
    surge.util.ReflectionUtils$DataType[] d -> FOSy
    10:44:void <clinit>() -> <clinit>
    7:36:void <init>(java.lang.String,int,java.lang.Class,java.lang.Class) -> <init>
    27:27:java.lang.Class getPrimitive() -> qJpa
    32:32:java.lang.Class getReference() -> VnhF
    1:1:surge.util.ReflectionUtils$DataType fromClass(java.lang.Class) -> kjuf
    39:54:java.lang.Class getPrimitive(java.lang.Class) -> jEpG
    41:43:java.lang.Class getReference(java.lang.Class) -> prVK
    2:46:java.lang.Class[] getPrimitive(java.lang.Class[]) -> CoUJ
    6:42:java.lang.Class[] getReference(java.lang.Class[]) -> kjuf
    8:51:java.lang.Class[] getPrimitive(java.lang.Object[]) -> kjuf
    5:53:java.lang.Class[] getReference(java.lang.Object[]) -> jEpG
    4:50:boolean compare(java.lang.Class[],java.lang.Class[]) -> CoUJ
    52:52:surge.util.ReflectionUtils$DataType[] values() -> values
    49:49:surge.util.ReflectionUtils$DataType valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.ReflectionUtils$PackageType -> bGPt$kjuf:
    surge.util.ReflectionUtils$PackageType MINECRAFT_SERVER -> Nglg
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT -> eIMF
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_BLOCK -> VNCE
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CHUNKIO -> MTIX
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_COMMAND -> apDs
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CONVERSATIONS -> SDXf
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENCHANTMENS -> iTwY
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENTITY -> BKXq
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_EVENT -> Arhx
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_GENERATOR -> bsGg
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_HELP -> SCxA
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_INVENTORY -> rhgE
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_MAP -> qKqL
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_METADATA -> VUuB
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_POTION -> cTKC
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_PROJECTILES -> rhgC
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCHEDULER -> Kogn
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCOREBOARD -> uaPB
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UPDATER -> oEkN
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UTIL -> bXwG
    java.lang.String a -> a
    surge.util.ReflectionUtils$PackageType[] b -> miwy
    1:8:void <clinit>() -> <clinit>
    5:13:void <init>(java.lang.String,int,java.lang.String) -> <init>
    7:11:void <init>(java.lang.String,int,surge.util.ReflectionUtils$PackageType,java.lang.String) -> <init>
    10:10:java.lang.String getPath() -> getPath
    9:9:java.lang.Class getClass(java.lang.String) -> getClass
    6:6:java.lang.String toString() -> toString
    2:2:java.lang.String getServerVersion() -> getServerVersion
    3:3:surge.util.ReflectionUtils$PackageType[] values() -> values
    4:4:surge.util.ReflectionUtils$PackageType valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.Refreshable -> EmRN:
    void refresh() -> refresh
surge.util.SQLOperation -> cthB:
    surge.util.SQLOperation LOAD -> rqWr
    surge.util.SQLOperation SAVE -> cTJv
    surge.util.SQLOperation[] a -> PUEP
    4:5:void <clinit>() -> <clinit>
    2:2:void <init>(java.lang.String,int) -> <init>
    3:3:surge.util.SQLOperation[] values() -> values
    1:1:surge.util.SQLOperation valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.ServerState -> wwQc:
    surge.util.ServerState START -> KNFX
    surge.util.ServerState ENABLE -> lUrs
    surge.util.ServerState DISABLE -> nukn
    surge.util.ServerState STOP -> TibH
    surge.util.ServerState RUNNING -> DRCT
    surge.util.ServerState[] a -> rOTL
    1:13:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
    12:12:surge.util.ServerState[] values() -> values
    14:14:surge.util.ServerState valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.Shape -> BSHp:
    org.bukkit.Location a -> uycN
    org.bukkit.util.Vector b -> hlHr
    org.bukkit.util.Vector c -> KUtK
    5:23:void <init>(org.bukkit.Location,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    14:19:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    11:24:void <init>(org.bukkit.Location) -> <init>
    1:22:boolean isWithinShape(org.bukkit.Location) -> UtIN
    7:17:org.bukkit.Location randomLocation() -> JQqL
    13:13:org.bukkit.Location randomSurface() -> KTtM
    20:20:org.bukkit.Location getCenter() -> getCenter
    18:18:org.bukkit.Location getLocation() -> getLocation
    3:3:org.bukkit.util.Vector getOffset() -> yuLL
    9:9:org.bukkit.util.Vector getSize() -> QggS
surge.util.SnowLevel -> BJWg:
    byte a -> LXvp
    7:9:void <init>(byte) -> <init>
    1:6:byte getLevel() -> hbXs
    2:10:void setLevel(byte) -> jEpG
surge.util.T -> hbUS:
    2:5:void <init>() -> <init>
    void onStop(long,double) -> CoUJ
    1:6:void stop() -> stop
surge.util.TXT -> SBto:
    java.lang.String a -> a
    2:2:void <init>() -> <init>
    4:4:java.lang.String repeat(java.lang.String,int) -> repeat
    6:16:surge.collection.GList wrap(java.lang.String,int) -> SCNa
    12:12:java.lang.String makeTag(surge.util.C,surge.util.C,surge.util.C,surge.util.C,java.lang.String) -> CoUJ
    5:5:java.lang.String makeTag(surge.util.C,surge.util.C,surge.util.C,java.lang.String) -> CoUJ
    18:18:java.lang.String line(surge.util.C,int) -> CoUJ
    1:1:java.lang.String underline(surge.util.C,int) -> kjuf
    3:17:java.lang.String getLine(surge.util.C,int,double,java.lang.String,java.lang.String,java.lang.String) -> CoUJ
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CoUJ
    java.lang.String a(char[]) -> CoUJ
surge.util.Tag -> Keqf:
    java.lang.String value() -> value
surge.util.Timer -> UtOv:
    long a -> a
    long b -> b
    4:10:void <init>() -> <init>
    1:3:void start() -> start
    5:11:void stop() -> stop
    9:9:long getTime() -> getTime
    2:2:long getLastRun() -> AFwj
surge.util.VectorMath -> IOJp:
    int[] a -> a
    int[] b -> vkmf
    33:33:void <init>() -> <init>
    25:216:org.bukkit.util.Vector scaleStatic(surge.util.Axis,org.bukkit.util.Vector,double) -> CoUJ
    4:207:org.bukkit.util.Vector scaleX(org.bukkit.util.Vector,double) -> CoUJ
    13:192:org.bukkit.util.Vector scaleY(org.bukkit.util.Vector,double) -> kjuf
    98:218:org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector,double) -> jEpG
    53:161:org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) -> CoUJ
    82:200:boolean isLookingNear(org.bukkit.Location,org.bukkit.Location,double) -> kjuf
    69:69:org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) -> kjuf
    160:160:org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) -> jEpG
    133:133:org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) -> prVK
    117:117:org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) -> gEWd
    36:36:org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) -> SCNa
    38:38:org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) -> DigG
    41:41:double a(double,int) -> gEWd
    81:215:org.bukkit.util.Vector clip(org.bukkit.util.Vector,int) -> CoUJ
    7:213:org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector,org.bukkit.util.Vector,double) -> CoUJ
    1:221:surge.collection.GList split(org.bukkit.block.BlockFace) -> CoUJ
    154:154:org.bukkit.util.Vector direction(org.bukkit.Location,org.bukkit.Location) -> jEpG
    67:67:org.bukkit.util.Vector directionNoNormal(org.bukkit.Location,org.bukkit.Location) -> prVK
    51:51:org.bukkit.util.Vector toVector(float,float) -> CoUJ
    78:116:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> CoUJ
    3:136:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector,double) -> CoUJ
    15:198:org.bukkit.util.Vector reverse(org.bukkit.util.Vector) -> SurP
    80:166:double getSpeed(org.bukkit.util.Vector) -> xGHv
    2:125:surge.collection.GList shift(org.bukkit.util.Vector,surge.collection.GList) -> CoUJ
    5:222:org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) -> Hmbe
    9:208:org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector,float) -> CoUJ
    49:189:org.bukkit.util.Vector angleRight(org.bukkit.util.Vector,float) -> kjuf
    23:214:org.bukkit.util.Vector angleUp(org.bukkit.util.Vector,float) -> jEpG
    8:217:org.bukkit.util.Vector angleDown(org.bukkit.util.Vector,float) -> prVK
    6:212:org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) -> UtIN
    203:203:int[] a() -> gNJW
    107:107:int[] b() -> b
surge.util.VectorMath$1 -> IOJp$1:
    org.bukkit.util.Vector val$vector -> skiA
    2:4:void <init>(org.bukkit.util.Vector) -> <init>
    1:1:org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) -> qBTH
    3:3:java.lang.Object onAdapt(java.lang.Object) -> awLH
surge.util.W -> dVHV:
    147:147:void <init>() -> <init>
    53:158:boolean visible(org.bukkit.block.Block) -> jEpG
    7:135:void colorArmor(org.bukkit.inventory.ItemStack,org.bukkit.Color) -> CoUJ
    26:163:org.bukkit.entity.Entity getEntity(int) -> gEYe
    74:152:int count(org.bukkit.entity.Player,surge.util.MaterialBlock) -> CoUJ
    159:159:boolean has(org.bukkit.entity.Player,surge.util.MaterialBlock,int) -> CoUJ
    31:31:int getChunkX(org.bukkit.block.Block) -> prVK
    137:137:int getChunkY(org.bukkit.block.Block) -> gEWd
    1:76:void dropXp(org.bukkit.Location,int) -> kjuf
    72:72:int getChunkZ(org.bukkit.block.Block) -> SCNa
    18:112:void take(org.bukkit.entity.Player,surge.util.MaterialBlock,int) -> kjuf
    10:107:int getManhattanDistance(org.bukkit.Location,org.bukkit.Location,boolean) -> CoUJ
    57:149:surge.collection.GList news(org.bukkit.Location) -> qBTH
    11:87:int getManhattanDistance(org.bukkit.block.Block,org.bukkit.block.Block,boolean) -> CoUJ
    71:71:surge.collection.GList getBlocks(org.bukkit.Chunk) -> gEWd
    5:5:org.bukkit.World getSyncWorld(org.bukkit.World) -> prVK
    59:59:org.bukkit.World toSync(org.bukkit.World) -> gEWd
    75:75:org.bukkit.block.Block toSync(org.bukkit.block.Block) -> DigG
    68:68:org.bukkit.Location toSync(org.bukkit.Location) -> tTNS
    89:89:org.bukkit.Chunk toSync(org.bukkit.Chunk) -> SCNa
    4:160:surge.util.MaterialBlock getMaterialBlock(java.lang.String) -> imbe
    19:155:org.bukkit.block.Block[] getRelative(org.bukkit.block.Block,org.bukkit.block.BlockFace[]) -> CoUJ
    40:48:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData) -> CoUJ
    24:162:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData,boolean) -> CoUJ
    142:144:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int) -> CoUJ
    9:44:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int,boolean) -> CoUJ
    16:120:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData) -> CoUJ
    85:90:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData,boolean) -> CoUJ
    21:150:int getHighestPotionLevel(org.bukkit.potion.PotionEffectType,java.util.Collection) -> CoUJ
    12:146:surge.collection.GList chunkFaces(org.bukkit.Chunk) -> DigG
    8:156:surge.collection.GList blockFaces(org.bukkit.block.Block) -> SurP
    38:121:org.bukkit.Location simulateFall(org.bukkit.Location) -> rEWF
    2:133:surge.collection.GList chunkRadius(org.bukkit.Chunk,int) -> prVK
    3:161:surge.collection.GList blockRadius(org.bukkit.block.Block,int) -> CoUJ
    13:118:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Entity,double,double) -> CoUJ
    6:157:boolean isLookingAt(org.bukkit.entity.Entity,org.bukkit.entity.Entity,double,double) -> CoUJ
    79:79:double differenceOfVectors(org.bukkit.util.Vector,org.bukkit.util.Vector) -> CoUJ
surge.util.W$1 -> dVHV$1:
    java.lang.Double val$doff -> ivwB
    org.bukkit.entity.Entity val$e -> Arkr
    org.bukkit.entity.Entity[] val$result -> jaIN
    1:1:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Entity,org.bukkit.entity.Entity[]) -> <init>
    2:9:void onTrace(org.bukkit.Location) -> xGHv
surge.util.Worlds -> BdIw:
    2:2:void <init>() -> <init>
    1:1:surge.collection.GList getWorlds() -> nIvv
    3:3:boolean hasWorld(java.lang.String) -> kcGy
    4:4:org.bukkit.World getWorld(java.lang.String) -> getWorld
surge.util.a -> OGjg:
    int k -> k
    java.lang.String a -> a
    java.lang.String j -> vQqm
    java.security.MessageDigest b -> LYWn
    java.util.HashMap c -> bHTs
    java.util.HashMap d -> aDqU
    boolean e -> e
    java.lang.String f -> f
    java.util.HashMap g -> fnUG
    java.util.HashMap h -> iUYm
    java.lang.String x -> ekRJ
    java.io.PrintWriter writer -> dhNc
    java.lang.String[] i -> quaQ
    java.lang.String[] l -> uqmr
    20:20:void <init>() -> <init>
    107:107:void a(java.util.HashMap) -> CoUJ
    112:112:void b(java.util.HashMap) -> kjuf
    117:117:void c(java.util.HashMap) -> jEpG
    122:122:void d(java.util.HashMap) -> prVK
    127:127:void e(java.util.HashMap) -> gEWd
    132:132:void f(java.util.HashMap) -> SCNa
    137:137:void g(java.util.HashMap) -> DigG
    142:142:void h(java.util.HashMap) -> SurP
    147:147:void i(java.util.HashMap) -> xGHv
    152:152:void j(java.util.HashMap) -> Hmbe
    157:157:void k(java.util.HashMap) -> UtIN
    163:177:void a(java.util.HashMap,java.lang.String) -> CoUJ
    186:235:java.lang.String a(java.lang.String) -> a
    254:297:java.lang.String b(java.lang.String,java.lang.Class,java.lang.Class[]) -> CoUJ
    308:342:java.lang.String c(java.lang.Class,java.lang.String) -> kjuf
    362:420:java.lang.String b(java.lang.String) -> b
    429:478:java.lang.String a(java.lang.String,java.lang.String) -> a
    485:495:java.lang.String a(java.lang.Class,java.lang.String) -> jEpG
    502:506:java.lang.String a(java.lang.Class) -> gEWd
    514:525:java.util.ArrayList b(java.lang.Class) -> SCNa
    532:547:void b(java.lang.Class,java.util.ArrayList,java.util.HashMap) -> CoUJ
    553:553:java.lang.String c(java.lang.Class) -> DigG
    21:102:void <clinit>() -> <clinit>
    java.lang.String a(int,int) -> gEWd
surge.util.package-info -> Btjf:
