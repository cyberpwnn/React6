react.Base -> WiMd:
    8:8:void <init>() -> <init>
    12:13:void msg(org.bukkit.command.CommandSender,java.lang.String) -> WiMd
react.Info -> jFPe:
    java.lang.String CORE_REACT_DOT -> WiMd
    java.lang.String CORE_NAME -> jFPe
    java.lang.String CORE_CACHE -> qKEa
    java.lang.String CORE_DOTYML -> LFjP
    java.lang.String COMMAND_HELP -> LyoC
    java.lang.String COMMAND_HELP_ALIAS_1 -> vISS
    java.lang.String COMMAND_HELP_ALIAS_2 -> EAvA
    java.lang.String COMMAND_HELP_USAGE -> kkWP
    java.lang.String COMMAND_HELP_DESCRIPTION -> wDFU
    java.lang.String COMMAND_MONITOR -> awKr
    java.lang.String COMMAND_MONITOR_ALIAS_1 -> SBmt
    java.lang.String COMMAND_MONITOR_ALIAS_2 -> pidO
    java.lang.String COMMAND_MONITOR_USAGE -> mFhO
    java.lang.String COMMAND_MONITOR_DESCRIPTION -> ugrD
    java.lang.String COMMAND_REACT -> NoTf
    java.lang.String MSG_PERMISSION -> vRCh
    java.lang.String MSG_MONITORING_STARTED -> vHrN
    java.lang.String MSG_MONITORING_STOPPED -> KThy
    java.lang.String NAME_TICK -> vsfW
    java.lang.String NAME_MEMORY -> eGbV
    java.lang.String NAME_CHUNKS -> jgsA
    java.lang.String NAME_ENTITIES -> roiu
    java.lang.String STATE_MONITORING_TAB -> vcEa
    java.lang.String STATE_MONITORING_ENABLED -> pjDa
    java.lang.String STATE_MAPPING_ENABLED -> dxBy
    java.lang.String STATE_SOUND_PLAYS -> oMOF
    java.lang.String STATE_MONITORING_POSTED -> QUxU
    java.lang.String STATE_MONITORING_LASTTAB -> hbLk
    java.lang.String STATE_MONITORING_SWITCHNOTIFICATION -> kbdh
    java.lang.String STATE_PLAYER_HOTBAR -> DjGK
    java.lang.String STATE_PLAYER_SHIFT -> jgrR
    java.lang.String STATE_PLAYER_SCROLL -> AiNx
    java.lang.String STATE_PLAYER_HEIGHT_CURRENT -> GbOC
    java.lang.String STATE_PLAYER_HEIGHT_CHANGING -> gpLB
    java.lang.String PERM_ACCESS -> HvSW
    java.lang.String PERM_MONITOR -> SvRd
    java.lang.String PERM_MONITOR_TITLE -> AXMb
    java.lang.String PERM_MONITOR_MAP -> hbLU
    java.lang.String PERM_MONITOR_ENVIRONMENT -> HBme
    java.lang.String PERM_ACT -> qmFp
    java.lang.String PERM_RELOAD -> paSB
    java.lang.String SAMPLER_TPS -> iSmJ
    java.lang.String SAMPLER_TICK -> awJj
    java.lang.String SAMPLER_TIU -> uhQk
    java.lang.String SAMPLER_MEM -> PmJJ
    java.lang.String SAMPLER_FREEMEM -> jWPp
    java.lang.String SAMPLER_MAXMEM -> teNg
    java.lang.String SAMPLER_ALLOCMEM -> lChL
    java.lang.String SAMPLER_MAHS -> HBqC
    java.lang.String SAMPLER_CHK -> GQPU
    java.lang.String SAMPLER_CHKS -> Vekc
    java.lang.String SAMPLER_ENT -> afME
    java.lang.String SAMPLER_ENTLIV -> weia
    java.lang.String SAMPLER_ENTDROP -> PJiC
    java.lang.String SAMPLER_ENTTILE -> vtIP
    java.lang.String ACTION_PURGE_ENTITIES_NAME -> YxHA
    java.lang.String ACTION_PURGE_ENTITIES_DESCRIPTION -> ksiH
    5:5:void <init>() -> <init>
    7:84:void <clinit>() -> <clinit>
react.React -> qKEa:
    react.React instance -> jpfF
    react.controller.SampleController sampleController -> YDag
    react.controller.PlayerController playerController -> fAvO
    react.controller.MonitorController monitorController -> qBUs
    react.controller.CommandController commandController -> dwfF
    16:16:void <init>() -> <init>
    37:37:void enable() -> enable
    43:43:void disable() -> disable
react.action.ActionPurgeEntities -> LFjP:
    18:19:void <init>() -> <init>
    24:37:void act(react.api.IActionSource,react.api.ISelector[]) -> WiMd
    41:63:void purge(org.bukkit.Chunk,react.api.IActionSource,react.api.ISelector[]) -> WiMd
react.action.ActionPurgeEntities$1 -> LFjP$1:
    org.bukkit.entity.Entity val$i -> rDxO
    react.action.ActionPurgeEntities this$0 -> Diia
    55:55:void <init>(react.action.ActionPurgeEntities,org.bukkit.entity.Entity) -> <init>
    59:60:void run() -> run
react.api.Action -> LyoC:
    java.lang.String name -> name
    java.lang.String description -> description
    java.lang.String status -> xXKt
    react.api.ActionHandle handle -> hbOG
    react.api.ActionState state -> dVAu
    double progress -> wwLJ
    13:20:void <init>(java.lang.String,java.lang.String,react.api.ActionHandle) -> <init>
    25:25:java.lang.String getName() -> getName
    31:31:java.lang.String getDescription() -> getDescription
    37:37:react.api.ActionHandle getHandleType() -> WiMd
    43:43:react.api.ActionState getState() -> jFPe
    49:49:java.lang.String getStatus() -> getStatus
    55:56:void setStatus(java.lang.String) -> WiMd
    61:61:double getProgress() -> getProgress
    67:68:void setProgress(double) -> setProgress
react.api.ActionHandle -> vISS:
    react.api.ActionHandle AUTOMATIC -> qmIl
    react.api.ActionHandle MANUAL -> FNLO
    react.api.ActionHandle MUTEX -> miMp
    react.api.ActionHandle[] $VALUES -> PRxA
    3:3:react.api.ActionHandle[] values() -> values
    3:3:react.api.ActionHandle valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:7:void <clinit>() -> <clinit>
react.api.ActionState -> EAvA:
    react.api.ActionState IDLE -> afKI
    react.api.ActionState QUEUED -> AGNV
    react.api.ActionState RUNNING -> NUcQ
    react.api.ActionState[] $VALUES -> QDxy
    3:3:react.api.ActionState[] values() -> values
    3:3:react.api.ActionState valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:7:void <clinit>() -> <clinit>
react.api.ActionTargetType -> kkWP:
    react.api.ActionTargetType POSITIONAL -> bXLr
    react.api.ActionTargetType SYSTEM -> BdDO
    react.api.ActionTargetType[] $VALUES -> uhSd
    3:3:react.api.ActionTargetType[] values() -> values
    3:3:react.api.ActionTargetType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
react.api.CommandSenderActionSource -> wDFU:
    org.bukkit.command.CommandSender sender -> sender
    10:12:void <init>(org.bukkit.command.CommandSender) -> <init>
    16:16:org.bukkit.command.CommandSender getSender() -> getSender
react.api.Gate -> awKr:
    5:5:void <init>() -> <init>
    9:10:void removeEntity(org.bukkit.entity.Entity) -> WiMd
react.api.IAction -> SBmt:
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    react.api.ActionHandle getHandleType() -> WiMd
    void act(react.api.IActionSource,react.api.ISelector[]) -> WiMd
    react.api.ActionState getState() -> jFPe
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> WiMd
    double getProgress() -> getProgress
    void setProgress(double) -> setProgress
react.api.IActionSource -> pidO:
react.api.ICommand -> mFhO:
    java.lang.String getCommand() -> getCommand
    java.lang.String[] getAliases() -> qKEa
    java.lang.String[] getPermissions() -> LFjP
    java.lang.String getUsage() -> getUsage
    java.lang.String getDescription() -> getDescription
    react.api.SideGate getSideGate() -> LyoC
    void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> WiMd
react.api.ISampler -> ugrD:
    java.lang.String getID() -> getID
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    void setID(java.lang.String) -> setID
    void setName(java.lang.String) -> setName
    void setDescription(java.lang.String) -> setDescription
    surge.util.C getColor() -> vISS
    surge.util.C getAltColor() -> EAvA
    void setColor(surge.util.C,surge.util.C) -> WiMd
    int getInterval() -> getInterval
    void setInterval(int) -> WiMd
    void sample() -> kkWP
    java.lang.String get() -> get
    void construct() -> wDFU
    void setValue(double) -> setValue
    double getValue() -> getValue
react.api.ISelector -> NoTf:
    react.api.SelectionMode getMode() -> awKr
    java.lang.Class getType() -> getType
    boolean can(java.lang.Object) -> WiMd
    surge.collection.GSet getList() -> SBmt
    surge.collection.GSet getPossibilities() -> pidO
react.api.Lang -> vRCh:
    java.lang.String value() -> value
react.api.MSampler -> vHrN:
    6:6:void <init>() -> <init>
    10:10:surge.server.SuperSampler ss() -> mFhO
react.api.MonitorHeading -> KThy:
    react.api.ISampler head -> XtcC
    surge.collection.GList children -> fSWd
    java.lang.String name -> name
    13:17:void <init>(java.lang.String,react.api.ISampler) -> <init>
    21:22:void addSampler(react.api.ISampler) -> WiMd
    26:26:react.api.ISampler getHead() -> ugrD
    31:32:void setHead(react.api.ISampler) -> jFPe
    36:36:surge.collection.GList getChildren() -> NoTf
    41:41:java.lang.String getHeadText() -> vRCh
    46:59:java.lang.String getChildText() -> vHrN
    64:64:java.lang.String getName() -> getName
    69:70:void setName(java.lang.String) -> setName
    74:75:void setChildren(surge.collection.GList) -> WiMd
react.api.Permissable -> vsfW:
    react.api.Permissable ACCESS -> imad
    react.api.Permissable MONITOR -> pHCM
    react.api.Permissable MONITOR_TITLE -> oxEH
    react.api.Permissable MONITOR_MAP -> eHCu
    react.api.Permissable MONITOR_ENVIRONMENT -> DGfA
    react.api.Permissable ACT -> YEDa
    react.api.Permissable RELOAD -> ykqw
    java.lang.String node -> qKIf
    react.api.Permissable[] $VALUES -> DHHh
    7:7:react.api.Permissable[] values() -> values
    7:7:react.api.Permissable valueOf(java.lang.String) -> valueOf
    20:30:void <init>(java.lang.String,int,java.lang.String) -> <init>
    34:34:boolean has(org.bukkit.command.CommandSender) -> WiMd
    39:39:java.lang.String getNode() -> KThy
    7:15:void <clinit>() -> <clinit>
react.api.ReactActionSource -> eGbV:
    3:3:void <init>() -> <init>
react.api.ReactCommand -> jgsA:
    java.lang.String command -> command
    java.lang.String[] aliases -> aliases
    java.lang.String[] permissions -> BuGM
    java.lang.String usage -> Txxu
    java.lang.String description -> description
    react.api.SideGate sideGate -> ctct
    13:15:void <init>() -> <init>
    20:20:java.lang.String getCommand() -> getCommand
    26:26:java.lang.String[] getAliases() -> qKEa
    32:32:java.lang.String[] getPermissions() -> LFjP
    38:38:java.lang.String getUsage() -> getUsage
    44:44:java.lang.String getDescription() -> getDescription
    50:50:react.api.SideGate getSideGate() -> LyoC
react.api.ReactPlayer -> roiu:
    surge.collection.GMap keystore -> EJjt
    boolean monitoring -> monitoring
    boolean mapping -> RjdK
    int monitorSelection -> Ywha
    int plays -> jEsf
    boolean monitorPosted -> CgId
    int monitorLastSelection -> IWVh
    int switchNotification -> hQNx
    int hotbarSlot -> Ubii
    boolean shift -> DOvq
    int scroll -> KwPI
    double lastHeight -> dECK
    boolean heightMovement -> tSqC
    org.bukkit.entity.Player p -> NUeA
    38:80:void <init>(org.bukkit.entity.Player) -> <init>
    86:93:void save() -> save
    99:106:void load() -> load
    110:110:boolean isMonitoring() -> vsfW
    115:115:boolean isMapping() -> eGbV
    120:120:org.bukkit.entity.Player getP() -> jgsA
    125:126:void setMonitoring(boolean) -> WiMd
    130:131:void setMapping(boolean) -> jFPe
    135:135:int getMonitorSelection() -> roiu
    140:141:void setMonitorSelection(int) -> jFPe
    145:145:int getHotbarSlot() -> vcEa
    150:151:void setHotbarSlot(int) -> qKEa
    155:155:boolean isShifting() -> pjDa
    160:161:void setShifting(boolean) -> qKEa
    165:165:boolean isShift() -> dxBy
    170:171:void setShift(boolean) -> LFjP
    175:175:int getScroll() -> oMOF
    180:181:void setScroll(int) -> LFjP
    185:185:int getMonitorLastSelection() -> QUxU
    190:191:void setMonitorLastSelection(int) -> LyoC
    195:196:void setP(org.bukkit.entity.Player) -> WiMd
    200:200:double getLastHeight() -> hbLk
    205:206:void setLastHeight(double) -> WiMd
    210:210:boolean isHeightMovement() -> kbdh
    215:216:void setHeightMovement(boolean) -> LyoC
    220:220:int getSwitchNotification() -> DjGK
    225:226:void setSwitchNotification(int) -> vISS
    230:230:boolean getMonitorPosted() -> jgrR
    235:236:void setMonitorPosted(boolean) -> vISS
    240:240:int getPlays() -> AiNx
    245:246:void setPlays(int) -> EAvA
    23:36:void <clinit>() -> <clinit>
react.api.SampledType -> vcEa:
    react.api.SampledType TPS -> dnuQ
    react.api.SampledType TICK -> VKyg
    react.api.SampledType TIU -> tutN
    react.api.SampledType MEM -> fRyJ
    react.api.SampledType FREEMEM -> xWkp
    react.api.SampledType MAXMEM -> hsRM
    react.api.SampledType ALLOCMEM -> VDJm
    react.api.SampledType MAHS -> hapC
    react.api.SampledType CHK -> JIXw
    react.api.SampledType CHKS -> flmw
    react.api.SampledType ENT -> RYdI
    react.api.SampledType ENTLIV -> CEFx
    react.api.SampledType ENTDROP -> wDKy
    react.api.SampledType ENTTILE -> AOac
    java.lang.String node -> qKIf
    react.api.SampledType[] $VALUES -> uOGT
    5:5:react.api.SampledType[] values() -> values
    5:5:react.api.SampledType valueOf(java.lang.String) -> valueOf
    25:35:void <init>(java.lang.String,int,java.lang.String) -> <init>
    39:39:java.lang.String getNode() -> KThy
    5:20:void <clinit>() -> <clinit>
react.api.Sampler -> pjDa:
    double value -> value
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String description -> description
    surge.util.C color -> kcKv
    surge.util.C altColor -> RkGB
    int interval -> NEHA
    17:19:void <init>() -> <init>
    24:24:java.lang.String getID() -> getID
    30:30:java.lang.String getName() -> getName
    36:36:java.lang.String getDescription() -> getDescription
    42:42:surge.util.C getColor() -> vISS
    48:48:surge.util.C getAltColor() -> EAvA
    54:54:int getInterval() -> getInterval
    void sample() -> kkWP
    void construct() -> wDFU
    java.lang.String get() -> get
    69:70:void setValue(double) -> setValue
    75:75:double getValue() -> getValue
    81:82:void setID(java.lang.String) -> setID
    87:88:void setName(java.lang.String) -> setName
    93:94:void setDescription(java.lang.String) -> setDescription
    99:101:void setColor(surge.util.C,surge.util.C) -> WiMd
    106:107:void setInterval(int) -> WiMd
react.api.SelectionMode -> dxBy:
    react.api.SelectionMode WHITELIST -> Nwjt
    react.api.SelectionMode BLACKLIST -> BIsT
    react.api.SelectionMode[] $VALUES -> gpRP
    3:3:react.api.SelectionMode[] values() -> values
    3:3:react.api.SelectionMode valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
react.api.Selector -> oMOF:
    java.lang.Class objectType -> vtMO
    react.api.SelectionMode mode -> ncdY
    surge.collection.GSet list -> lwQN
    surge.collection.GSet possibilities -> Bceh
    13:18:void <init>(java.lang.Class,react.api.SelectionMode) -> <init>
    23:23:react.api.SelectionMode getMode() -> awKr
    29:29:java.lang.Class getType() -> getType
    35:35:boolean can(java.lang.Object) -> WiMd
    41:41:surge.collection.GSet getList() -> SBmt
    47:47:surge.collection.GSet getPossibilities() -> pidO
react.api.SelectorEntityType -> QUxU:
    9:15:void <init>(react.api.SelectionMode) -> <init>
    19:20:void add(org.bukkit.entity.EntityType) -> WiMd
react.api.SelectorPosition -> hbLk:
    13:14:void <init>() -> <init>
    18:19:void add(org.bukkit.Chunk) -> WiMd
    23:24:void add(org.bukkit.Chunk,int) -> WiMd
    28:32:void add(org.bukkit.World) -> WiMd
    36:40:void addAll() -> GbOC
react.api.Side -> kbdh:
    react.api.Side PLAYERS -> XAcP
    react.api.Side CONSOLE -> VCkj
    java.lang.String ss -> FpRo
    react.api.Side[] $VALUES -> HvXt
    6:6:react.api.Side[] values() -> values
    6:6:react.api.Side valueOf(java.lang.String) -> valueOf
    14:16:void <init>(java.lang.String,int,java.lang.String) -> <init>
    20:20:java.lang.String ss() -> gpLB
    25:30:react.api.Side get(org.bukkit.command.CommandSender) -> jFPe
    6:9:void <clinit>() -> <clinit>
react.api.SideGate -> DjGK:
    react.api.SideGate PLAYERS_ONLY -> GsVU
    react.api.SideGate CONSOLES_ONLY -> ArFj
    react.api.SideGate ANYTHING -> IFWb
    react.api.SideGate[] $VALUES -> gxbL
    3:3:react.api.SideGate[] values() -> values
    3:3:react.api.SideGate valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    11:34:boolean supports(react.api.Side) -> WiMd
    3:7:void <clinit>() -> <clinit>
react.api.SideGate$1 -> DjGK$1:
    int[] $SwitchMap$react$api$SideGate -> Hdvc
    13:13:void <clinit>() -> <clinit>
react.api.TitleMonitor -> jgrR:
    surge.collection.GList headings -> vAGc
    12:14:void <init>() -> <init>
    18:19:void addHeading(react.api.MonitorHeading) -> WiMd
    23:23:int getMaxSelection() -> HvSW
    28:36:int left(int) -> kkWP
    41:49:int right(int) -> wDFU
    54:54:react.api.MonitorHeading getHeadFor(int) -> awKr
    59:77:java.lang.String getHotbarHeadFor(int,boolean,react.controller.MonitorController,react.api.ReactPlayer,int) -> WiMd
    82:99:java.lang.String getHotbarFor(int,boolean) -> WiMd
react.command.CommandFreeze -> AiNx:
    14:21:void <init>() -> <init>
    26:37:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> WiMd
react.command.CommandHelp -> GbOC:
    15:22:void <init>() -> <init>
    27:28:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> WiMd
react.command.CommandMonitor -> gpLB:
    17:24:void <init>() -> <init>
    29:31:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> WiMd
react.controller.ActionController -> HvSW:
    5:5:void <init>() -> <init>
    11:11:void start() -> start
    17:17:void stop() -> stop
    23:23:void tick() -> tick
react.controller.CommandController -> SvRd:
    surge.collection.GList commands -> Lysv
    boolean k -> JAJh
    25:25:void <init>() -> <init>
    33:34:void start() -> start
    39:40:void stop() -> stop
    44:88:void begin() -> begin
    93:97:void tick() -> tick
    101:102:void msg(org.bukkit.command.CommandSender,java.lang.String) -> WiMd
    106:107:void f(org.bukkit.command.CommandSender,java.lang.String) -> jFPe
    112:198:boolean onCommand(org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String,java.lang.String[]) -> onCommand
react.controller.MonitorController -> AXMb:
    int maxCooldown -> NEGL
    react.api.TitleMonitor titleMonitor -> SuxT
    surge.collection.GMap posts -> SKdh
    36:39:void <init>() -> <init>
    44:55:void start() -> start
    59:75:void toggleMonitoring(org.bukkit.entity.Player) -> jFPe
    80:82:void stop() -> stop
    86:105:void constructMonitor() -> SvRd
    109:114:float calcVolume(react.api.ReactPlayer) -> WiMd
    119:119:boolean canMonitor(org.bukkit.entity.Player) -> qKEa
    124:129:boolean isMonitoring(org.bukkit.entity.Player) -> LFjP
    134:138:void startMonitoring(org.bukkit.entity.Player) -> LyoC
    142:153:void stopMonitoring(org.bukkit.entity.Player) -> vISS
    159:159:void tick() -> tick
    163:166:void changePost(react.api.ReactPlayer) -> jFPe
    170:179:void processPlayer(react.api.ReactPlayer) -> qKEa
    183:207:void handleTriggers(react.api.ReactPlayer) -> LFjP
    211:250:void handleScrolling(react.api.ReactPlayer) -> LyoC
    254:282:void handleShifting(react.api.ReactPlayer) -> vISS
    286:308:void handlePosting(react.api.ReactPlayer) -> EAvA
    312:330:java.lang.String prefixFor(react.api.ReactPlayer,int,int) -> WiMd
    335:349:java.lang.String prefixForSub(react.api.ReactPlayer,surge.util.C,int) -> WiMd
    354:361:void tickMonitor(react.api.ReactPlayer) -> kkWP
    365:365:react.api.TitleMonitor getTitleMonitor() -> AXMb
    371:375:void on(org.bukkit.event.player.PlayerJoinEvent) -> WiMd
    380:389:void on(org.bukkit.event.player.PlayerToggleSneakEvent) -> WiMd
    394:405:void onTick() -> hbLU
    410:410:java.lang.String getTickName() -> HBme
    31:31:void <clinit>() -> <clinit>
react.controller.PlayerController -> hbLU:
    surge.collection.GList players -> OjLj
    12:12:void <init>() -> <init>
    19:21:void start() -> start
    26:27:void stop() -> stop
    33:33:void tick() -> tick
    37:45:boolean has(org.bukkit.entity.Player) -> EAvA
    50:61:react.api.ReactPlayer getPlayer(org.bukkit.entity.Player) -> kkWP
    66:66:surge.collection.GList getPlayers() -> qmFp
    72:77:void on(org.bukkit.event.player.PlayerQuitEvent) -> WiMd
react.controller.SampleController -> HBme:
    surge.collection.GMap samplers -> XBCN
    surge.server.SuperSampler ss -> cSCe
    34:38:void <init>() -> <init>
    42:43:void registerSampler(react.api.ISampler) -> qKEa
    47:47:react.api.ISampler getSampler(java.lang.String) -> jFPe
    52:72:void constructSamplers() -> paSB
    77:80:void start() -> start
    85:88:void stop() -> stop
    94:94:void tick() -> tick
    98:98:surge.server.SuperSampler getSuperSampler() -> iSmJ
    104:120:void onTick() -> hbLU
    125:125:java.lang.String getTickName() -> HBme
react.sampler.SampleChunksLoaded -> qmFp:
    8:8:void <init>() -> <init>
    13:19:void construct() -> wDFU
    24:25:void sample() -> kkWP
    30:30:java.lang.String get() -> get
react.sampler.SampleChunksLoadedPerSecond -> paSB:
    surge.math.Average a -> RYbt
    9:11:void <init>() -> <init>
    16:22:void construct() -> wDFU
    27:29:void sample() -> kkWP
    34:34:java.lang.String get() -> get
react.sampler.SampleEntitiesDrops -> iSmJ:
    8:8:void <init>() -> <init>
    13:19:void construct() -> wDFU
    24:25:void sample() -> kkWP
    30:30:java.lang.String get() -> get
react.sampler.SampleEntitiesLiving -> awJj:
    8:8:void <init>() -> <init>
    13:19:void construct() -> wDFU
    24:25:void sample() -> kkWP
    30:30:java.lang.String get() -> get
react.sampler.SampleEntitiesTiles -> uhQk:
    8:8:void <init>() -> <init>
    13:19:void construct() -> wDFU
    24:25:void sample() -> kkWP
    30:30:java.lang.String get() -> get
react.sampler.SampleEntitiesTotal -> PmJJ:
    8:8:void <init>() -> <init>
    13:19:void construct() -> wDFU
    24:25:void sample() -> kkWP
    30:30:java.lang.String get() -> get
react.sampler.SampleMemoryAllocated -> jWPp:
    8:8:void <init>() -> <init>
    13:19:void construct() -> wDFU
    24:25:void sample() -> kkWP
    30:30:java.lang.String get() -> get
react.sampler.SampleMemoryAllocationPerSecond -> teNg:
    8:8:void <init>() -> <init>
    13:19:void construct() -> wDFU
    24:25:void sample() -> kkWP
    30:30:java.lang.String get() -> get
react.sampler.SampleMemoryFree -> lChL:
    8:8:void <init>() -> <init>
    13:19:void construct() -> wDFU
    24:25:void sample() -> kkWP
    30:30:java.lang.String get() -> get
react.sampler.SampleMemoryMax -> HBqC:
    8:8:void <init>() -> <init>
    13:19:void construct() -> wDFU
    24:25:void sample() -> kkWP
    30:30:java.lang.String get() -> get
react.sampler.SampleMemoryUse -> GQPU:
    8:8:void <init>() -> <init>
    13:19:void construct() -> wDFU
    24:25:void sample() -> kkWP
    30:30:java.lang.String get() -> get
react.sampler.SampleTickTime -> Vekc:
    8:8:void <init>() -> <init>
    13:19:void construct() -> wDFU
    24:25:void sample() -> kkWP
    30:30:java.lang.String get() -> get
react.sampler.SampleTickUtilization -> afME:
    8:8:void <init>() -> <init>
    13:19:void construct() -> wDFU
    24:25:void sample() -> kkWP
    30:30:java.lang.String get() -> get
react.sampler.SampleTicksPerSecond -> weia:
    9:9:void <init>() -> <init>
    14:20:void construct() -> wDFU
    25:26:void sample() -> kkWP
    31:36:java.lang.String get() -> get
surge.Main -> PJiC:
    surge.collection.GList plugins -> DjOi
    surge.collection.GMap pluginInstances -> Keqx
    surge.collection.GList controllerSet -> Smis
    surge.collection.GMap anchors -> WaEh
    28:28:void <init>() -> <init>
    39:39:void onControllerRegistry() -> awJj
    46:92:void onStart(surge.util.Protocol) -> WiMd
    99:116:void onStop() -> uhQk
    122:122:void onPostInit() -> PmJJ
    128:128:void onPreInit() -> jWPp
    132:143:void shutDownAmps() -> teNg
    147:351:void initializeAmps() -> lChL
    355:393:void scanForAmps() -> HBqC
    398:407:void onTick() -> hbLU
surge.PluginAmp -> vtIP:
    surge.control.AmpedPlugin plugin -> ieYW
    boolean connected -> connected
    int masterTask -> SSwa
    18:21:void <init>(surge.control.AmpedPlugin) -> <init>
    25:25:surge.control.AmpedPlugin getPluginInstance() -> GQPU
    30:30:boolean isConnected() -> isConnected
    35:55:void connect() -> connect
    59:71:void masterTick() -> Vekc
    75:79:void disconnect() -> disconnect
    83:93:int startTask(int,java.lang.Runnable) -> WiMd
    98:108:int startRepeatingTask(int,int,java.lang.Runnable) -> WiMd
    113:114:void stopTask(int) -> SBmt
    11:11:void access$000(surge.PluginAmp) -> WiMd
surge.PluginAmp$1 -> vtIP$1:
    surge.PluginAmp this$0 -> Gavl
    38:38:void <init>(surge.PluginAmp) -> <init>
    42:44:void run() -> run
surge.PluginAmp$2 -> vtIP$2:
    surge.PluginAmp this$0 -> Gavl
    48:48:void <init>(surge.PluginAmp) -> <init>
    52:53:void run() -> run
surge.Surge -> YxHA:
    surge.PluginAmp amp -> dfje
    surge.collection.GList tickComponents -> ykvP
    surge.collection.GList atickComponents -> Wyvr
    surge.sched.TaskManager taskmgr -> HCWu
    surge.hotload.HotloadManager hotloadmgr -> weoi
    java.lang.Thread mainThread -> EJmk
    19:139:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    28:29:void register(org.bukkit.event.Listener) -> WiMd
    33:34:void unregister(org.bukkit.event.Listener) -> unregister
    38:38:java.io.File folder(java.lang.String) -> qKEa
    43:43:java.io.File folder() -> afME
    48:50:java.io.File getPluginJarFile() -> weia
    55:57:void startup() -> startup
    61:61:java.lang.Thread getServerThread() -> PJiC
    66:66:surge.collection.GList getTickComponents() -> vtIP
    71:71:surge.collection.GList getAsyncTickComponents() -> YxHA
    76:83:void registerTicked(surge.sched.IMasterTickComponent) -> WiMd
    87:94:void unregisterTicked(surge.sched.IMasterTickComponent) -> jFPe
    98:103:surge.PluginAmp createAmp(surge.control.AmpedPlugin) -> WiMd
    108:108:boolean isMainThread() -> isMainThread
    113:114:void stopAmp() -> ksiH
    118:118:boolean hasAmp() -> jpfF
    123:123:surge.PluginAmp getAmp() -> YDag
    128:128:surge.sched.TaskManager getTaskManager() -> fAvO
    133:133:surge.hotload.HotloadManager getHotloadManager() -> qBUs
surge.cluster.Cluster -> ksiH:
    surge.cluster.ClusterType type -> Vnau
    java.lang.Object t -> tStg
    9:12:void <init>(surge.cluster.ClusterType,java.lang.Object) -> <init>
    17:17:surge.cluster.ClusterType getType() -> dwfF
    23:24:void set(java.lang.Object) -> set
    29:29:java.lang.Object get() -> get
surge.cluster.ClusterBoolean -> jpfF:
    7:8:void <init>(java.lang.Boolean) -> <init>
surge.cluster.ClusterDouble -> YDag:
    7:8:void <init>(java.lang.Double) -> <init>
surge.cluster.ClusterInt -> fAvO:
    7:8:void <init>(java.lang.Integer) -> <init>
surge.cluster.ClusterLong -> qBUs:
    7:8:void <init>(java.lang.Long) -> <init>
surge.cluster.ClusterString -> dwfF:
    7:8:void <init>(java.lang.String) -> <init>
surge.cluster.ClusterStringList -> rDxO:
    9:10:void <init>(java.util.List) -> <init>
surge.cluster.ClusterType -> Diia:
    surge.cluster.ClusterType INT -> bXSG
    surge.cluster.ClusterType BOOLEAN -> XItC
    surge.cluster.ClusterType STRING -> oMWR
    surge.cluster.ClusterType STRING_LIST -> ePYq
    surge.cluster.ClusterType DOUBLE -> lCmU
    surge.cluster.ClusterType LONG -> MlXd
    surge.cluster.ClusterType[] $VALUES -> MtiY
    3:3:surge.cluster.ClusterType[] values() -> values
    3:3:surge.cluster.ClusterType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
surge.cluster.ConfigurationDataInput -> xXKt:
    int[] $SWITCH_TABLE$surge$cluster$ClusterType -> BRgb
    11:11:void <init>() -> <init>
    16:126:void read(surge.cluster.IConfigurable,java.io.File) -> WiMd
    131:256:surge.cluster.DataCluster fillDefaults(surge.cluster.IConfigurable) -> WiMd
    11:11:int[] $SWITCH_TABLE$surge$cluster$ClusterType() -> rDxO
surge.cluster.ConfigurationDataOutput -> hbOG:
    11:11:void <init>() -> <init>
    16:142:void write(surge.cluster.IConfigurable,java.io.File) -> jFPe
surge.cluster.DataCluster -> dVAu:
    surge.collection.GMap clusters -> VncI
    17:20:void <init>() -> <init>
    24:24:surge.collection.GList keys() -> Diia
    29:33:void fromJson(surge.json.JSONObject) -> WiMd
    37:44:surge.json.JSONObject toJson() -> xXKt
    49:56:org.bukkit.configuration.file.FileConfiguration toFileConfiguration() -> hbOG
    61:100:void fromFileConfiguration(org.bukkit.configuration.file.FileConfiguration) -> WiMd
    104:104:boolean contains(java.lang.String) -> contains
    109:109:surge.cluster.ClusterType getType(java.lang.String) -> LFjP
    114:114:int getInt(java.lang.String) -> getInt
    119:119:java.lang.Object get(java.lang.String) -> get
    124:124:long getLong(java.lang.String) -> getLong
    129:129:java.lang.String getString(java.lang.String) -> getString
    134:134:double getDouble(java.lang.String) -> getDouble
    139:139:boolean getBoolean(java.lang.String) -> getBoolean
    145:145:java.util.List getStringList(java.lang.String) -> getStringList
    151:182:void trySet(java.lang.String,java.lang.Object) -> WiMd
    186:187:void set(java.lang.String,int) -> WiMd
    191:192:void set(java.lang.String,boolean) -> WiMd
    196:197:void set(java.lang.String,double) -> WiMd
    201:202:void set(java.lang.String,long) -> WiMd
    206:207:void set(java.lang.String,java.lang.String) -> set
    211:212:void set(java.lang.String,java.util.List) -> WiMd
surge.cluster.ICluster -> wwLJ:
    surge.cluster.ClusterType getType() -> dwfF
    void set(java.lang.Object) -> set
    java.lang.Object get() -> get
surge.cluster.IConfigurable -> qmIl:
surge.cluster.IDataInput -> FNLO:
    surge.cluster.DataCluster read(java.io.File) -> WiMd
surge.cluster.IDataOutput -> miMp:
    void write(surge.cluster.DataCluster,java.io.File) -> WiMd
surge.cluster.Key -> PRxA:
    java.lang.String value() -> value
surge.cluster.KeyPointer -> afKI:
    int value() -> value
surge.cluster.KeyStore -> AGNV:
surge.cluster.ReflectedConfigurationException -> NUcQ:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
surge.cluster.YamlDataInput -> QDxy:
    8:8:void <init>() -> <init>
    13:27:surge.cluster.DataCluster read(java.io.File) -> WiMd
surge.cluster.YamlDataOutput -> bXLr:
    6:6:void <init>() -> <init>
    13:20:void write(surge.cluster.DataCluster,java.io.File) -> WiMd
surge.collection.GBiset -> BdDO:
    java.lang.Object a -> xGOa
    java.lang.Object b -> WhuB
    8:12:void <init>(java.lang.Object,java.lang.Object) -> <init>
    16:16:java.lang.Object getA() -> dVAu
    21:22:void setA(java.lang.Object) -> jFPe
    26:26:java.lang.Object getB() -> wwLJ
    31:32:void setB(java.lang.Object) -> qKEa
surge.collection.GList -> uhSd:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>() -> <init>
    24:26:void <init>(java.lang.Object[]) -> <init>
    30:36:void <init>(java.util.Iterator) -> <init>
    40:48:void <init>(java.util.List) -> <init>
    52:79:java.lang.Object mostCommon() -> qmIl
    84:88:void remove(surge.collection.GList) -> jFPe
    92:94:surge.collection.GList shuffle() -> FNLO
    100:126:surge.collection.GList split() -> miMp
    131:131:boolean hasIndex(int) -> pidO
    136:137:java.lang.Object pickRandom() -> PRxA
    142:148:void <init>(java.util.Set) -> <init>
    152:158:void <init>(java.util.Collection) -> <init>
    163:169:void <init>(surge.collection.GList) -> <init>
    173:180:surge.collection.GList stringList() -> afKI
    185:189:surge.collection.GList removeDuplicates() -> AGNV
    194:194:boolean hasDuplicates() -> NUcQ
    199:207:void sort() -> sort
    211:217:void push(java.lang.Object,int) -> WiMd
    221:222:void addFirst(java.lang.Object) -> addFirst
    227:231:void add(java.lang.Object[]) -> add
    235:236:surge.collection.GList qadd(java.lang.Object) -> LFjP
    241:245:void add(java.util.List) -> WiMd
    249:261:java.lang.String toString(java.lang.String) -> toString
    266:268:surge.collection.GList reverse() -> QDxy
    274:274:java.lang.String toString() -> toString
    279:286:surge.collection.GList copy() -> bXLr
    291:292:surge.collection.GList qdel(java.lang.Object) -> LyoC
    297:304:java.lang.Object pop() -> pop
surge.collection.GList$1 -> uhSd$1:
    surge.collection.GList this$0 -> hruX
    200:200:void <init>(surge.collection.GList) -> <init>
    204:204:int compare(java.lang.Object,java.lang.Object) -> compare
surge.collection.GMap -> XtcC:
    long serialVersionUID -> serialVersionUID
    5:5:void <init>() -> <init>
    11:18:surge.collection.GMap copy() -> BdDO
    23:31:java.lang.Object findKey(java.lang.Object) -> vISS
    36:37:surge.collection.GMap qput(java.lang.Object,java.lang.Object) -> WiMd
    42:59:surge.collection.GMap flip() -> uhSd
    65:72:java.lang.String toString() -> toString
    77:82:surge.collection.GMap append(surge.collection.GMap) -> WiMd
    87:87:surge.collection.GList k() -> XtcC
    92:92:surge.collection.GList v() -> fSWd
    97:101:void putNVD(java.lang.Object,java.lang.Object) -> jFPe
    105:115:surge.collection.GList get(surge.collection.GList) -> qKEa
    120:130:surge.collection.GMap removeDuplicateKeys() -> imad
    135:145:surge.collection.GMap removeDuplicateValues() -> pHCM
    150:159:void put(surge.collection.GList,surge.collection.GList) -> WiMd
    163:164:void put(surge.collection.GMap) -> jFPe
surge.collection.GQuadraset -> fSWd:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> xGOa
    java.lang.Object b -> WhuB
    java.lang.Object c -> LGRv
    java.lang.Object d -> sasP
    14:20:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    24:24:java.lang.Object getA() -> dVAu
    29:30:void setA(java.lang.Object) -> jFPe
    34:34:java.lang.Object getB() -> wwLJ
    39:40:void setB(java.lang.Object) -> qKEa
    44:44:java.lang.Object getC() -> oxEH
    49:50:void setC(java.lang.Object) -> EAvA
    54:54:java.lang.Object getD() -> eHCu
    59:60:void setD(java.lang.Object) -> kkWP
surge.collection.GSet -> imad:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>() -> <init>
    17:18:void <init>(java.util.Collection) -> <init>
    22:23:void <init>(int,float) -> <init>
    27:28:void <init>(int) -> <init>
surge.collection.GSound -> pHCM:
    java.lang.String sound -> vslw
    org.bukkit.Sound iSound -> lerk
    java.lang.Float volume -> Orab
    java.lang.Float pitch -> nIul
    16:21:void <init>(java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    23:28:void <init>(java.lang.String) -> <init>
    30:35:void <init>(org.bukkit.Sound,java.lang.Float,java.lang.Float) -> <init>
    37:42:void <init>(org.bukkit.Sound) -> <init>
    46:57:void play(org.bukkit.entity.Player) -> wDFU
    61:72:void play(org.bukkit.Location) -> WiMd
    76:89:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> WiMd
    93:93:java.lang.String getSound() -> DGfA
    98:99:void setSound(java.lang.String) -> LyoC
    103:103:org.bukkit.Sound getiSound() -> YEDa
    108:109:void setiSound(org.bukkit.Sound) -> WiMd
    113:113:java.lang.Float getVolume() -> ykqw
    118:119:void setVolume(java.lang.Float) -> WiMd
    123:123:java.lang.Float getPitch() -> qKIf
    128:129:void setPitch(java.lang.Float) -> jFPe
surge.collection.GTriset -> oxEH:
    java.lang.Object a -> xGOa
    java.lang.Object b -> WhuB
    java.lang.Object c -> LGRv
    11:15:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    19:19:java.lang.Object getA() -> dVAu
    24:25:void setA(java.lang.Object) -> jFPe
    29:29:java.lang.Object getB() -> wwLJ
    34:35:void setB(java.lang.Object) -> qKEa
    39:39:java.lang.Object getC() -> oxEH
    44:45:void setC(java.lang.Object) -> EAvA
surge.collection.Snippet -> eHCu:
    3:3:void <init>() -> <init>
surge.control.AmpedPlugin -> DGfA:
    surge.collection.GList controllers -> gWEJ
    surge.pool.ParallelPoolManager pp -> VMBy
    surge.server.CoreTickThread ctt -> DYQC
    20:26:void <init>() -> <init>
    31:34:void onLoad() -> onLoad
    39:48:void onEnable() -> onEnable
    53:63:void onDisable() -> onDisable
    68:68:surge.collection.GList getControllers() -> DHHh
    74:75:void registerController(surge.control.IController) -> WiMd
    80:91:void onTick() -> hbLU
    96:96:java.lang.String getTickName() -> HBme
    102:102:surge.pool.ParallelPoolManager getThreadPool() -> BuGM
    void onControllerRegistry() -> awJj
    void onStart(surge.util.Protocol) -> WiMd
    void onStop() -> uhQk
    void onPostInit() -> PmJJ
    void onPreInit() -> jWPp
surge.control.Control -> YEDa:
surge.control.Controller -> ykqw:
    7:10:void <init>() -> <init>
surge.control.Disable -> qKIf:
surge.control.Enable -> DHHh:
surge.control.IController -> BuGM:
    void start() -> start
    void stop() -> stop
    void tick() -> tick
surge.control.Instance -> Txxu:
surge.control.Plugin -> ctct:
surge.control.SurgePlugin -> EJjt:
    void onStart(surge.util.Protocol) -> WiMd
    void onStop() -> uhQk
    void onPostInit() -> PmJJ
    void onPreInit() -> jWPp
    void onControllerRegistry() -> awJj
    void registerController(surge.control.IController) -> WiMd
    surge.collection.GList getControllers() -> DHHh
    surge.pool.ParallelPoolManager getThreadPool() -> BuGM
surge.hotload.HotloadManager -> RjdK:
    surge.collection.GMap filemods -> bWuE
    surge.collection.GMap filesizes -> LaIB
    surge.collection.GMap fileacts -> wTpp
    15:20:void <init>() -> <init>
    24:28:void track(java.io.File,java.lang.Runnable) -> WiMd
    32:35:void untrack(java.io.File) -> jFPe
    39:42:void untrackall() -> Txxu
    47:71:void onTick() -> hbLU
    76:76:java.lang.String getTickName() -> HBme
surge.json.HTTP -> Ywha:
    java.lang.String CRLF -> MIxJ
    35:35:void <init>() -> <init>
    93:127:surge.json.JSONObject toJSONObject(java.lang.String) -> vISS
    162:198:java.lang.String toString(surge.json.JSONObject) -> jFPe
surge.json.HTTPTokener -> jEsf:
    45:46:void <init>(java.lang.String) -> <init>
    58:87:java.lang.String nextToken() -> nextToken
surge.json.JSONArray -> CgId:
    java.util.ArrayList myArrayList -> BJXd
    93:96:void <init>() -> <init>
    108:143:void <init>(surge.json.JSONTokener) -> <init>
    157:158:void <init>(java.lang.String) -> <init>
    166:177:void <init>(java.util.Collection) -> <init>
    187:199:void <init>(java.lang.Object) -> <init>
    204:204:java.util.Iterator iterator() -> iterator
    218:223:java.lang.Object get(int) -> get
    239:247:boolean getBoolean(int) -> getBoolean
    262:268:double getDouble(int) -> getDouble
    286:294:java.lang.Enum getEnum(java.lang.Class,int) -> WiMd
    309:315:java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    331:337:java.math.BigInteger getBigInteger(int) -> mFhO
    352:358:int getInt(int) -> getInt
    374:379:surge.json.JSONArray getJSONArray(int) -> ugrD
    394:399:surge.json.JSONObject getJSONObject(int) -> NoTf
    414:420:long getLong(int) -> getLong
    435:440:java.lang.String getString(int) -> getString
    452:452:boolean isNull(int) -> isNull
    468:479:java.lang.String join(java.lang.String) -> EAvA
    489:489:int length() -> length
    501:501:java.lang.Object opt(int) -> vRCh
    515:515:boolean optBoolean(int) -> vHrN
    533:536:boolean optBoolean(int,boolean) -> jFPe
    551:551:double optDouble(int) -> KThy
    569:572:double optDouble(int,double) -> WiMd
    587:587:int optInt(int) -> vsfW
    605:608:int optInt(int,int) -> WiMd
    623:623:java.lang.Enum optEnum(java.lang.Class,int) -> jFPe
    642:664:java.lang.Enum optEnum(java.lang.Class,int,java.lang.Enum) -> WiMd
    683:686:java.math.BigInteger optBigInteger(int,java.math.BigInteger) -> WiMd
    705:708:java.math.BigDecimal optBigDecimal(int,java.math.BigDecimal) -> WiMd
    722:723:surge.json.JSONArray optJSONArray(int) -> eGbV
    737:738:surge.json.JSONObject optJSONObject(int) -> jgsA
    752:752:long optLong(int) -> roiu
    770:773:long optLong(int,long) -> WiMd
    788:788:java.lang.String optString(int) -> vcEa
    803:804:java.lang.String optString(int,java.lang.String) -> WiMd
    816:817:surge.json.JSONArray put(boolean) -> EAvA
    830:831:surge.json.JSONArray put(java.util.Collection) -> WiMd
    845:848:surge.json.JSONArray put(double) -> jFPe
    860:861:surge.json.JSONArray put(int) -> pjDa
    873:874:surge.json.JSONArray put(long) -> WiMd
    887:888:surge.json.JSONArray put(java.util.Map) -> WiMd
    902:903:surge.json.JSONArray put(java.lang.Object) -> wDFU
    921:922:surge.json.JSONArray put(int,boolean) -> qKEa
    939:940:surge.json.JSONArray put(int,java.util.Collection) -> WiMd
    958:959:surge.json.JSONArray put(int,double) -> jFPe
    977:978:surge.json.JSONArray put(int,int) -> jFPe
    996:997:surge.json.JSONArray put(int,long) -> jFPe
    1015:1016:surge.json.JSONArray put(int,java.util.Map) -> WiMd
    1037:1053:surge.json.JSONArray put(int,java.lang.Object) -> WiMd
    1066:1066:java.lang.Object remove(int) -> remove
    1079:1109:boolean similar(java.lang.Object) -> awKr
    1126:1135:surge.json.JSONObject toJSONObject(surge.json.JSONArray) -> WiMd
    1153:1156:java.lang.String toString() -> toString
    1174:1177:java.lang.String toString(int) -> toString
    1192:1192:java.io.Writer write(java.io.Writer) -> WiMd
    1212:1247:java.io.Writer write(java.io.Writer,int,int) -> WiMd
surge.json.JSONException -> IWVh:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> BRhj
    22:23:void <init>(java.lang.String) -> <init>
    33:35:void <init>(java.lang.Throwable) -> <init>
    47:47:java.lang.Throwable getCause() -> getCause
surge.json.JSONML -> hQNx:
    37:37:void <init>() -> <init>
    57:279:java.lang.Object parse(surge.json.XMLTokener,boolean,surge.json.JSONArray) -> WiMd
    301:301:surge.json.JSONArray toJSONArray(java.lang.String) -> kkWP
    320:320:surge.json.JSONArray toJSONArray(surge.json.XMLTokener) -> WiMd
    340:340:surge.json.JSONObject toJSONObject(surge.json.XMLTokener) -> jFPe
    360:360:surge.json.JSONObject toJSONObject(java.lang.String) -> vISS
    379:456:java.lang.String toString(surge.json.JSONArray) -> jFPe
    472:552:java.lang.String toString(surge.json.JSONObject) -> jFPe
surge.json.JSONObject -> Ubii:
    java.util.Map map -> map
    java.lang.Object NULL -> YUlH
    153:153:void <clinit>() -> <clinit>
    158:161:void <init>() -> <init>
    179:189:void <init>(surge.json.JSONObject,java.lang.String[]) -> <init>
    202:248:void <init>(surge.json.JSONTokener) -> <init>
    261:277:void <init>(java.util.Map) -> <init>
    302:304:void <init>(java.lang.Object) -> <init>
    322:334:void <init>(java.lang.Object,java.lang.String[]) -> <init>
    350:351:void <init>(java.lang.String) -> <init>
    365:400:void <init>(java.lang.String,java.util.Locale) -> <init>
    423:435:surge.json.JSONObject accumulate(java.lang.String,java.lang.Object) -> jFPe
    455:467:surge.json.JSONObject append(java.lang.String,java.lang.Object) -> qKEa
    480:499:java.lang.String doubleToString(double) -> qKEa
    513:522:java.lang.Object get(java.lang.String) -> get
    539:547:java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    562:570:boolean getBoolean(java.lang.String) -> getBoolean
    585:591:java.math.BigInteger getBigInteger(java.lang.String) -> wDFU
    607:613:java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    629:635:double getDouble(java.lang.String) -> getDouble
    651:657:int getInt(java.lang.String) -> getInt
    672:677:surge.json.JSONArray getJSONArray(java.lang.String) -> awKr
    691:696:surge.json.JSONObject getJSONObject(java.lang.String) -> SBmt
    711:717:long getLong(java.lang.String) -> getLong
    728:741:java.lang.String[] getNames(surge.json.JSONObject) -> qKEa
    751:767:java.lang.String[] getNames(java.lang.Object) -> SBmt
    781:786:java.lang.String getString(java.lang.String) -> getString
    798:798:boolean has(java.lang.String) -> has
    815:841:surge.json.JSONObject increment(java.lang.String) -> pidO
    855:855:boolean isNull(java.lang.String) -> mFhO
    865:865:java.util.Iterator keys() -> keys
    875:875:java.util.Set keySet() -> keySet
    885:885:int length() -> length
    897:903:surge.json.JSONArray names() -> ctct
    917:937:java.lang.String numberToString(java.lang.Number) -> WiMd
    949:949:java.lang.Object opt(java.lang.String) -> ugrD
    963:963:java.lang.Enum optEnum(java.lang.Class,java.lang.String) -> WiMd
    982:1004:java.lang.Enum optEnum(java.lang.Class,java.lang.String,java.lang.Enum) -> WiMd
    1018:1018:boolean optBoolean(java.lang.String) -> NoTf
    1036:1039:boolean optBoolean(java.lang.String,boolean) -> jFPe
    1054:1054:double optDouble(java.lang.String) -> vRCh
    1072:1075:java.math.BigInteger optBigInteger(java.lang.String,java.math.BigInteger) -> WiMd
    1094:1097:java.math.BigDecimal optBigDecimal(java.lang.String,java.math.BigDecimal) -> WiMd
    1116:1119:double optDouble(java.lang.String,double) -> jFPe
    1134:1134:int optInt(java.lang.String) -> vHrN
    1152:1155:int optInt(java.lang.String,int) -> jFPe
    1169:1170:surge.json.JSONArray optJSONArray(java.lang.String) -> KThy
    1183:1184:surge.json.JSONObject optJSONObject(java.lang.String) -> vsfW
    1198:1198:long optLong(java.lang.String) -> eGbV
    1216:1219:long optLong(java.lang.String,long) -> jFPe
    1234:1234:java.lang.String optString(java.lang.String) -> jgsA
    1249:1250:java.lang.String optString(java.lang.String,java.lang.String) -> WiMd
    1255:1305:void populateMap(java.lang.Object) -> pidO
    1320:1321:surge.json.JSONObject put(java.lang.String,boolean) -> qKEa
    1337:1338:surge.json.JSONObject put(java.lang.String,java.util.Collection) -> WiMd
    1354:1355:surge.json.JSONObject put(java.lang.String,double) -> qKEa
    1371:1372:surge.json.JSONObject put(java.lang.String,int) -> qKEa
    1388:1389:surge.json.JSONObject put(java.lang.String,long) -> qKEa
    1405:1406:surge.json.JSONObject put(java.lang.String,java.util.Map) -> WiMd
    1425:1437:surge.json.JSONObject put(java.lang.String,java.lang.Object) -> LFjP
    1455:1463:surge.json.JSONObject putOnce(java.lang.String,java.lang.Object) -> LyoC
    1482:1486:surge.json.JSONObject putOpt(java.lang.String,java.lang.Object) -> vISS
    1501:1510:java.lang.String quote(java.lang.String) -> quote
    1517:1577:java.io.Writer quote(java.lang.String,java.io.Writer) -> WiMd
    1590:1590:java.lang.Object remove(java.lang.String) -> roiu
    1605:1640:boolean similar(java.lang.Object) -> awKr
    1655:1707:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    1720:1736:void testValidity(java.lang.Object) -> mFhO
    1751:1760:surge.json.JSONArray toJSONArray(surge.json.JSONArray) -> qKEa
    1779:1782:java.lang.String toString() -> toString
    1802:1805:java.lang.String toString(int) -> toString
    1835:1879:java.lang.String valueToString(java.lang.Object) -> valueToString
    1898:1932:java.lang.Object wrap(java.lang.Object) -> wrap
    1947:1947:java.io.Writer write(java.io.Writer) -> WiMd
    1952:1995:java.io.Writer writeValue(java.io.Writer,java.lang.Object,int,int) -> WiMd
    2000:2004:void indent(java.io.Writer,int) -> WiMd
    2019:2068:java.io.Writer write(java.io.Writer,int,int) -> WiMd
surge.json.JSONObject$Null -> Ubii$WiMd:
    102:102:void <init>() -> <init>
    114:114:java.lang.Object clone() -> clone
    128:128:boolean equals(java.lang.Object) -> equals
    138:138:java.lang.String toString() -> toString
    102:102:void <init>(surge.json.JSONObject$Null) -> <init>
surge.json.JSONString -> DOvq:
    java.lang.String toJSONString() -> toJSONString
surge.json.JSONStringer -> KwPI:
    69:70:void <init>() -> <init>
    83:83:java.lang.String toString() -> toString
surge.json.JSONTokener -> dECK:
    long character -> nSGc
    boolean eof -> eof
    long index -> tdyM
    long line -> QMtH
    char previous -> Bkyx
    java.io.Reader reader -> reader
    boolean usePrevious -> fmST
    60:68:void <init>(java.io.Reader) -> <init>
    78:79:void <init>(java.io.InputStream) -> <init>
    89:90:void <init>(java.lang.String) -> <init>
    99:107:void back() -> EJjt
    119:131:int dehexchar(char) -> WiMd
    136:136:boolean end() -> RjdK
    147:153:boolean more() -> Ywha
    164:198:char next() -> next
    213:218:char next(char) -> jFPe
    233:250:java.lang.String next(int) -> dxBy
    263:268:char nextClean() -> jEsf
    287:334:java.lang.String nextString(char) -> qKEa
    349:362:java.lang.String nextTo(char) -> LFjP
    376:388:java.lang.String nextTo(java.lang.String) -> vcEa
    403:441:java.lang.Object nextValue() -> CgId
    458:479:char skipTo(char) -> LyoC
    491:491:surge.json.JSONException syntaxError(java.lang.String) -> pjDa
    501:501:java.lang.String toString() -> toString
surge.json.JSONWriter -> tSqC:
    int maxdepth -> qvDL
    boolean comma -> rWDK
    char mode -> pjPE
    surge.json.JSONObject[] stack -> YxOa
    int top -> top
    java.io.Writer writer -> writer
    97:104:void <init>(java.io.Writer) -> <init>
    117:141:surge.json.JSONWriter append(java.lang.String) -> dxBy
    157:164:surge.json.JSONWriter array() -> IWVh
    180:193:surge.json.JSONWriter end(char,char) -> WiMd
    206:206:surge.json.JSONWriter endArray() -> hQNx
    219:219:surge.json.JSONWriter endObject() -> Ubii
    235:258:surge.json.JSONWriter key(java.lang.String) -> oMOF
    274:285:surge.json.JSONWriter object() -> DOvq
    299:310:void pop(char) -> vISS
    322:329:void push(surge.json.JSONObject) -> LFjP
    342:342:surge.json.JSONWriter value(boolean) -> kkWP
    356:356:surge.json.JSONWriter value(double) -> LFjP
    369:369:surge.json.JSONWriter value(long) -> jFPe
    385:385:surge.json.JSONWriter value(java.lang.Object) -> ugrD
surge.json.XML -> NUeA:
    java.lang.Character AMP -> uFYr
    java.lang.Character APOS -> nkxK
    java.lang.Character BANG -> OsAc
    java.lang.Character EQ -> tTXI
    java.lang.Character GT -> VwUT
    java.lang.Character LT -> BSJm
    java.lang.Character QUEST -> tBvF
    java.lang.Character QUOT -> sIEG
    java.lang.Character SLASH -> imkF
    40:64:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    82:107:java.lang.String escape(java.lang.String) -> escape
    120:132:void noSpace(java.lang.String) -> QUxU
    150:339:boolean parse(surge.json.XMLTokener,surge.json.JSONObject,java.lang.String) -> WiMd
    358:399:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    420:426:surge.json.JSONObject toJSONObject(java.lang.String) -> vISS
    439:439:java.lang.String toString(java.lang.Object) -> toString
    454:579:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
surge.json.XMLTokener -> dnuQ:
    java.util.HashMap entity -> AXWl
    45:51:void <clinit>() -> <clinit>
    61:62:void <init>(java.lang.String) -> <init>
    75:88:java.lang.String nextCDATA() -> KwPI
    108:133:java.lang.Object nextContent() -> dECK
    149:166:java.lang.Object nextEntity(char) -> EAvA
    186:239:java.lang.Object nextMeta() -> tSqC
    261:334:java.lang.Object nextToken() -> NUeA
    354:420:boolean skipPast(java.lang.String) -> hbLk
surge.math.ArrayUtils -> VKyg:
    3:3:void <init>() -> <init>
    7:13:void shiftRight(double[],double) -> WiMd
    17:19:void wrapRight(double[]) -> WiMd
    23:27:void fill(double[],double) -> fill
surge.math.Average -> tutN:
    double[] values -> dgLe
    double average -> sHbm
    boolean dirty -> LWvE
    10:15:void <init>(int) -> <init>
    19:21:void put(double) -> LyoC
    25:31:double getAverage() -> getAverage
    36:45:void calculateAverage() -> dnuQ
surge.math.M -> fRyJ:
    double[] fastsqrt -> imim
    int precision -> JtTC
    int modulus -> WXUg
    float[] sin -> PJos
    26:630:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    39:42:double evaluate(java.lang.String) -> kbdh
    54:59:boolean r(java.lang.Double) -> WiMd
    81:91:double evaluate(java.lang.String,java.lang.Double[]) -> WiMd
    96:119:org.bukkit.block.Block highestBlock(org.bukkit.Location,int,int) -> WiMd
    134:134:double tps(long,int) -> WiMd
    146:146:double ticksFromNS(long) -> qKEa
    158:184:java.lang.String toRoman(int) -> oMOF
    198:210:java.lang.String repeat(java.lang.String,int) -> repeat
    215:215:int rand(int,int) -> qKEa
    227:299:int fromRoman(java.lang.String) -> DjGK
    309:309:long ns() -> VKyg
    319:319:long ms() -> tutN
    331:338:double avg(surge.collection.GList) -> LFjP
    351:355:void lim(surge.collection.GList,int) -> WiMd
    368:368:double distance(org.bukkit.Location,org.bukkit.Location) -> WiMd
    385:385:boolean within(org.bukkit.Location,org.bukkit.Location,java.lang.Double) -> WiMd
    397:397:float sin(float) -> sin
    409:409:float cos(float) -> cos
    421:431:int max(int[]) -> max
    443:453:int min(int[]) -> min
    469:469:boolean within(int,int,int) -> WiMd
    482:482:float sinLookup(int) -> QUxU
    487:497:double fsqrt(double) -> vISS
    502:502:double maxSafeRadius(org.bukkit.Location) -> jFPe
    507:507:double clip(double,double,double) -> WiMd
    512:529:double maxSafeRadius(org.bukkit.Location,double,double) -> WiMd
    534:542:boolean isLoaded(org.bukkit.Location,double) -> WiMd
    547:561:surge.collection.GList cradShift(org.bukkit.Location,double) -> jFPe
    566:566:int chunkShift(int) -> hbLk
    571:579:boolean isLoaded(org.bukkit.World,int,int) -> WiMd
    584:592:boolean isLoaded(org.bukkit.Location) -> qKEa
    597:602:double dof(double,double) -> WiMd
    607:619:surge.collection.GList getChunks(org.bukkit.Chunk,int) -> jFPe
surge.math.Profiler -> xWkp:
    long nanos -> woCU
    long startNano -> RPvQ
    long millis -> EJrm
    long startMillis -> xOfE
    double time -> xqiJ
    boolean profiling -> kbrR
    14:18:void <init>() -> <init>
    22:25:void begin() -> begin
    29:39:void end() -> end
    43:49:void reset() -> reset
    53:73:java.lang.String getTime(int) -> kbdh
    78:78:double getTicks() -> fRyJ
    83:83:double getSeconds() -> getSeconds
    88:88:double getMinutes() -> xWkp
    93:93:double getHours() -> hsRM
    98:98:double getMilliseconds() -> VDJm
    103:103:long getNanoseconds() -> hapC
    108:108:long getNanos() -> JIXw
    113:113:long getStartNano() -> flmw
    118:118:long getMillis() -> getMillis
    123:123:long getStartMillis() -> RYdI
    128:128:double getTime() -> CEFx
    133:133:boolean isProfiling() -> wDKy
surge.nms.NMSClass -> hsRM:
    boolean init -> BRkU
    int version -> version
    java.lang.Class PacketPlayOutPlayerListHeaderFooter -> QWGb
    java.lang.Class IChatBaseComponent -> EKTV
    java.lang.Class ChatSerializer -> xOfN
    java.lang.Class PacketPlayOutPlayerInfo -> KDUK
    java.lang.Class PlayerInfoData -> KCsi
    java.lang.Class EnumPlayerInfoAction -> KLeP
    java.lang.Class GameProfile -> DsFH
    java.lang.Class EnumGamemode -> DXrQ
    java.lang.Class TileEntitySkull -> tKhr
    java.lang.Class LoadingCache -> EvIM
    6:131:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
surge.nms.NMSX -> VDJm:
    surge.nms.NMSX bountifulAPI -> UcUF
    boolean useOldMethods -> rNTd
    java.lang.String nmsver -> lLbm
    java.lang.Object eTimes -> inNT
    java.lang.Object eTitle -> WqkD
    java.lang.Object eSubtitle -> UIbI
    20:459:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    26:28:java.lang.String getVersion() -> getVersion
    35:45:void setAi(org.bukkit.entity.LivingEntity,boolean) -> WiMd
    56:70:java.lang.Class getCBNMSClass(java.lang.String) -> jgrR
    75:89:java.lang.Class getCBClass(java.lang.String) -> AiNx
    96:104:java.lang.Object serializeChat(java.lang.String) -> GbOC
    109:114:java.lang.reflect.Field setAccessible(java.lang.reflect.Field) -> WiMd
    119:121:java.lang.reflect.Method setAccessible(java.lang.reflect.Method) -> WiMd
    131:131:java.lang.String getBukkitVersion() -> getBukkitVersion
    141:141:java.lang.String nmsPackage() -> AOac
    151:151:java.lang.String craftPackage() -> uOGT
    166:178:void showPickup(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> WiMd
    184:193:void sendPacket(org.bukkit.entity.Player,java.lang.Object) -> WiMd
    197:207:java.lang.Class getNMSClass(java.lang.String) -> gpLB
    217:275:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> WiMd
    279:280:void clearTitle(org.bukkit.entity.Player) -> awKr
    284:316:void sendTabTitle(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> WiMd
    320:375:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> WiMd
    379:405:void sendActionBar(org.bukkit.entity.Player,java.lang.String,int) -> WiMd
    409:410:void sendActionBarToAllPlayers(java.lang.String) -> HvSW
    414:418:void sendActionBarToAllPlayers(java.lang.String,int) -> LFjP
    422:427:java.lang.String getEntityName(org.bukkit.entity.Entity) -> jFPe
    434:447:int ping(org.bukkit.entity.Player) -> SBmt
surge.nms.NMSX$1 -> VDJm$1:
    org.bukkit.entity.Player val$player -> EJsk
    1:382:void <init>(org.bukkit.entity.Player) -> <init>
    387:388:void run() -> run
surge.nms.NMSX$2 -> VDJm$2:
    org.bukkit.entity.Player val$player -> EJsk
    java.lang.String val$message -> xrHu
    1:395:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    401:402:void run() -> run
surge.nms.PacketUtil -> hapC:
    6:6:void <init>() -> <init>
    20:45:surge.nms.PacketUtil$V getVersion() -> kcKv
    50:64:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> WiMd
    68:82:void clearTitle(org.bukkit.entity.Player) -> awKr
    86:100:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> WiMd
surge.nms.PacketUtil$V -> hapC$WiMd:
    surge.nms.PacketUtil$V R17 -> gEbs
    surge.nms.PacketUtil$V R18 -> XAhH
    surge.nms.PacketUtil$V R19 -> NELY
    surge.nms.PacketUtil$V R111 -> YUlX
    surge.nms.PacketUtil$V R110 -> dgMw
    surge.nms.PacketUtil$V R112 -> hawr
    surge.nms.PacketUtil$V[] ENUM$VALUES -> fKQQ
    8:15:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    1:1:surge.nms.PacketUtil$V[] values() -> values
    1:1:surge.nms.PacketUtil$V valueOf(java.lang.String) -> valueOf
surge.nms.Title -> JIXw:
    java.lang.String title -> title
    java.lang.String subTitle -> gFDJ
    java.lang.String action -> action
    java.lang.Integer fadeIn -> fTAx
    java.lang.Integer fadeOut -> gyHq
    java.lang.Integer stayTime -> cJWu
    14:19:void <init>() -> <init>
    21:29:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    31:38:void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    40:46:void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    52:60:void send(org.bukkit.entity.Player) -> pidO
    64:64:java.lang.String getTitle() -> getTitle
    69:70:void setTitle(java.lang.String) -> setTitle
    74:74:java.lang.String getSubTitle() -> RkGB
    79:80:void setSubTitle(java.lang.String) -> SvRd
    84:84:java.lang.String getAction() -> getAction
    89:90:void setAction(java.lang.String) -> setAction
    94:94:java.lang.Integer getFadeIn() -> NEHA
    99:100:void setFadeIn(java.lang.Integer) -> WiMd
    104:104:java.lang.Integer getFadeOut() -> Nwjt
    109:110:void setFadeOut(java.lang.Integer) -> jFPe
    114:114:java.lang.Integer getStayTime() -> BIsT
    119:120:void setStayTime(java.lang.Integer) -> qKEa
surge.nms.VersionBukkit -> flmw:
    surge.nms.VersionBukkit VU -> Vneq
    surge.nms.VersionBukkit V7 -> ofmO
    surge.nms.VersionBukkit V8 -> QVeh
    surge.nms.VersionBukkit V9 -> WOfj
    surge.nms.VersionBukkit V11 -> IXAH
    surge.nms.VersionBukkit V111 -> Gayu
    surge.nms.VersionBukkit V112 -> XBHo
    surge.nms.VersionBukkit[] ENUM$VALUES -> ghGO
    5:13:void <clinit>() -> <clinit>
    5:5:void <init>(java.lang.String,int) -> <init>
    17:22:boolean tc() -> gpRP
    27:32:boolean uc() -> vtMO
    37:67:surge.nms.VersionBukkit get() -> ncdY
    1:1:surge.nms.VersionBukkit[] values() -> values
    1:1:surge.nms.VersionBukkit valueOf(java.lang.String) -> valueOf
surge.pool.A -> RYdI:
    8:17:void <init>() -> <init>
surge.pool.A$1 -> RYdI$1:
    surge.pool.A this$0 -> GkLc
    10:10:void <init>(surge.pool.A) -> <init>
    14:15:void run() -> run
surge.pool.Execution -> CEFx:
    3:3:void <init>() -> <init>
surge.pool.ParallelPoolManager -> wDKy:
    surge.pool.QueueMode mode -> mWts
    surge.collection.GList threads -> BcmO
    int next -> RIHi
    int threadCount -> oxOP
    java.util.Queue squeue -> nuKq
    java.lang.String key -> key
    surge.pool.ThreadInformation info -> aniK
    22:23:void syncQueue(surge.pool.Execution) -> WiMd
    27:31:void tickSyncQueue() -> lwQN
    35:38:void <init>(java.lang.String,int,surge.pool.QueueMode) -> <init>
    41:58:void <init>(int,surge.pool.QueueMode) -> <init>
    62:77:long lock() -> Bceh
    82:83:void start() -> start
    87:91:void shutdown() -> shutdown
    95:96:void <init>(int) -> <init>
    100:101:void queue(surge.pool.Execution) -> jFPe
    105:105:int getSize() -> getSize
    110:117:int getQueueSize() -> XAcP
    122:122:surge.pool.ParallelThread[] getThreads() -> VCkj
    129:156:void updateThreadInformation() -> FpRo
    160:192:surge.pool.ParallelThread nextThread() -> HvXt
    197:203:void createThreads(int) -> DjGK
    207:207:surge.pool.QueueMode getMode() -> GsVU
    212:212:int getNext() -> ArFj
    217:217:int getThreadCount() -> getThreadCount
    222:222:java.util.Queue getSqueue() -> IFWb
    227:227:java.lang.String getKey() -> getKey
    232:232:surge.pool.ThreadInformation getAverageInfo() -> gxbL
surge.pool.ParallelPoolManager$1 -> wDKy$1:
    int[] $SwitchMap$surge$pool$QueueMode -> Dadj
    169:169:void <clinit>() -> <clinit>
surge.pool.ParallelThread -> AOac:
    java.util.Queue queue -> Tydl
    surge.pool.ThreadInformation info -> aniK
    14:19:void <init>(java.lang.String,int) -> <init>
    24:56:void run() -> run
    60:64:void conditionallySleep(double) -> EAvA
    70:77:void execute(surge.pool.Execution) -> qKEa
    81:91:void execute() -> execute
    95:96:void queue(surge.pool.Execution) -> jFPe
    100:100:java.util.Queue getQueue() -> Hdvc
    105:105:surge.pool.ThreadInformation getInfo() -> vAGc
surge.pool.QueueMode -> uOGT:
    surge.pool.QueueMode ROUND_ROBIN -> mFvt
    surge.pool.QueueMode SMALLEST -> aMGC
    surge.pool.QueueMode[] $VALUES -> tKlE
    3:3:surge.pool.QueueMode[] values() -> values
    3:3:surge.pool.QueueMode valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
surge.pool.S -> kcKv:
    7:17:void <init>() -> <init>
surge.pool.S$1 -> kcKv$1:
    surge.pool.S this$0 -> IFaO
    1:9:void <init>(surge.pool.S) -> <init>
    14:15:void run() -> run
surge.pool.ThreadInformation -> RkGB:
    double ticksPerSecond -> YobM
    int queuedSize -> xPHj
    boolean processing -> qBcM
    double utilization -> OQCk
    surge.math.Average ticksPerSecondAverage -> SwCV
    long tick -> ydLk
    int id -> id
    17:25:void <init>(int) -> <init>
    29:29:double getTicksPerSecond() -> Lysv
    34:36:void setTicksPerSecond(double) -> kkWP
    40:40:int getQueuedSize() -> JAJh
    45:46:void setQueuedSize(int) -> jgrR
    50:50:boolean isProcessing() -> NEGL
    55:56:void setProcessing(boolean) -> wDFU
    60:60:double getUtilization() -> SuxT
    65:66:void setUtilization(double) -> wDFU
    70:70:double getTicksPerSecondAverage() -> SKdh
    75:75:long getTick() -> getTick
    80:81:void setTick(long) -> setTick
    85:85:long getTickLag() -> OjLj
    90:90:int getId() -> getId
surge.sched.IBursterator -> NEHA:
    void burst(java.lang.Object) -> NoTf
    void setTimeLock(double) -> awKr
    double getEstimatedTimeUse() -> XBCN
    int flush() -> cSCe
    int flush(surge.math.Profiler) -> WiMd
    void queue(java.lang.Object) -> vRCh
    void queue(java.util.List) -> jFPe
    void queue(java.lang.Object[]) -> WiMd
surge.sched.ICancellable -> Nwjt:
    void cancel() -> cancel
surge.sched.IMasterTickComponent -> BIsT:
    void onTick() -> hbLU
    java.lang.String getTickName() -> HBme
surge.sched.ITask -> gpRP:
    int getId() -> getId
    void run() -> run
    boolean isRepeating() -> RYbt
    java.lang.String getName() -> getName
    double getComputeTime() -> DjOi
    double getTotalComputeTime() -> Keqx
    double getActiveTime() -> Smis
    boolean hasCompleted() -> WaEh
surge.sched.TICK -> vtMO:
    long tick -> ydLk
    5:5:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
surge.sched.Task -> ncdY:
    int id -> id
    java.lang.String name -> name
    boolean repeating -> PCEh
    double computeTime -> Iptc
    double totalComputeTime -> wTtX
    double activeTime -> wDSu
    boolean completed -> completed
    surge.math.Profiler profiler -> Xtod
    surge.math.Profiler activeProfiler -> lUVX
    int ticks -> QhKn
    19:41:void <init>(java.lang.String) -> <init>
    43:66:void <init>(java.lang.String,int) -> <init>
    68:96:void <init>(java.lang.String,int,int) -> <init>
    100:109:void setup(java.lang.String,boolean) -> LFjP
    114:120:void cancel() -> cancel
    125:125:int getId() -> getId
    131:131:boolean isRepeating() -> RYbt
    137:137:java.lang.String getName() -> getName
    143:143:double getComputeTime() -> DjOi
    149:149:boolean hasCompleted() -> WaEh
    155:155:double getTotalComputeTime() -> Keqx
    161:161:double getActiveTime() -> Smis
    16:16:surge.math.Profiler access$0(surge.sched.Task) -> WiMd
    14:14:void access$1(surge.sched.Task,boolean) -> WiMd
    15:15:surge.math.Profiler access$2(surge.sched.Task) -> jFPe
    13:13:void access$3(surge.sched.Task,double) -> WiMd
    11:11:void access$4(surge.sched.Task,double) -> jFPe
    13:13:double access$5(surge.sched.Task) -> qKEa
    12:12:void access$6(surge.sched.Task,double) -> qKEa
    17:17:int access$7(surge.sched.Task) -> LFjP
    17:17:void access$8(surge.sched.Task,int) -> WiMd
    12:12:double access$9(surge.sched.Task) -> LyoC
    11:11:double access$10(surge.sched.Task) -> vISS
surge.sched.Task$1 -> ncdY$1:
    surge.sched.Task this$0 -> KLhE
    1:24:void <init>(surge.sched.Task) -> <init>
    29:39:void run() -> run
surge.sched.Task$2 -> ncdY$2:
    surge.sched.Task this$0 -> KLhE
    1:48:void <init>(surge.sched.Task) -> <init>
    53:64:void run() -> run
surge.sched.Task$3 -> ncdY$3:
    surge.sched.Task this$0 -> KLhE
    int val$total -> ytmX
    1:73:void <init>(surge.sched.Task,int) -> <init>
    78:94:void run() -> run
surge.sched.TaskManager -> lwQN:
    surge.collection.GList tasks -> yuMw
    surge.collection.GMap taskProfiles -> sPyF
    11:15:void <init>() -> <init>
    20:30:void onTick() -> hbLU
    34:35:void putFinishingTask(surge.sched.ITask) -> WiMd
    39:48:void putTask(surge.sched.ITask) -> jFPe
    53:53:java.lang.String getTickName() -> HBme
surge.sched.TaskProfile -> Bceh:
    double activeTime -> wDSu
    double computeTickTime -> JJDF
    double computeTime -> Iptc
    10:14:void <init>() -> <init>
    18:18:double getActiveTime() -> Smis
    23:24:void setActiveTime(double) -> SBmt
    28:28:double getComputeTickTime() -> ieYW
    33:34:void setComputeTickTime(double) -> pidO
    38:38:double getComputeTime() -> DjOi
    43:44:void setComputeTime(double) -> mFhO
surge.server.AsyncTick -> XAcP:
surge.server.CoreTickThread -> VCkj:
    9:12:void <init>() -> <init>
    17:36:void run() -> run
surge.server.MemoryMonitor -> FpRo:
    long memoryFree -> TqRy
    long memoryUsed -> lCsQ
    long memoryMax -> EBco
    long lastMemoryUsed -> BRnT
    long memoryUsedAfterGC -> pXpf
    long allocated -> lnhC
    long collected -> lMEF
    long collections -> tByO
    long sms -> RkMk
    long memoryAllocatedPerTick -> iKji
    long memoryCollectedPerTick -> KDUs
    long memoryFullyAllocatedPerTick -> gFGC
    long mah -> qTCa
    long mahs -> PCDc
    23:39:void <init>() -> <init>
    void onAllocationSet() -> SSwa
    46:83:void run() -> run
    87:87:long getMemoryFree() -> Gavl
    92:92:long getMemoryUsed() -> getMemoryUsed
    97:97:long getMemoryMax() -> dfje
    102:102:long getLastMemoryUsed() -> ykvP
    107:107:long getMemoryUsedAfterGC() -> Wyvr
    112:112:long getAllocated() -> getAllocated
    117:117:long getCollected() -> HCWu
    122:122:long getCollections() -> weoi
    127:127:long getSms() -> EJmk
    132:132:long getMemoryAllocatedPerTick() -> Vnau
    137:137:long getMemoryCollectedPerTick() -> tStg
    142:142:long getMemoryFullyAllocatedPerTick() -> bXSG
    147:147:long getMah() -> XItC
    152:152:long getMahs() -> oMWR
surge.server.SuperSampler -> HvXt:
    surge.math.Average ticksPerSecondL -> PBdO
    surge.math.Average tickTimeL -> OHRU
    surge.math.Average mahL -> ArNa
    double ticksPerSecond -> YobM
    double ticksPerSecondRaw -> ElxN
    double tickTime -> UlGF
    double tickTimeRaw -> EJvq
    boolean running -> running
    double tickUtilizationRaw -> dxTk
    double tickUtilization -> AaNh
    double leftoverTickTime -> kQuC
    long memoryUse -> gFHs
    long memoryAllocated -> FWMC
    long memoryCollected -> dUqI
    long mahs -> PCDc
    int totalChunks -> maMM
    int totalEntities -> uWbQ
    int totalDrops -> CNBo
    int totalTiles -> jiEa
    int totalLiving -> WFyn
    int chunksLoaded -> DQGF
    int chunksUnloaded -> docX
    surge.server.WorldMonitor worldMonitor -> hIMK
    surge.server.TPSMonitor tpsMonitor -> preh
    surge.server.MemoryMonitor memoryMonitor -> TqWO
    31:105:void <init>() -> <init>
    109:114:void start() -> start
    118:123:void stop() -> stop
    128:132:void onTick() -> hbLU
    137:137:java.lang.String getTickName() -> HBme
    142:142:surge.math.Average getTicksPerSecondL() -> ePYq
    147:147:double getTicksPerSecond() -> Lysv
    152:152:double getTicksPerSecondRaw() -> lCmU
    157:157:boolean isRunning() -> isRunning
    162:162:surge.server.TPSMonitor getTpsMonitor() -> MlXd
    167:167:surge.math.Average getTickTimeL() -> MtiY
    172:172:double getTickTime() -> BRgb
    177:177:double getTickTimeRaw() -> VncI
    182:182:double getTickUtilizationRaw() -> xGOa
    187:187:double getTickUtilization() -> WhuB
    192:192:double getLeftoverTickTime() -> hruX
    197:197:surge.server.MemoryMonitor getMemoryMonitor() -> LGRv
    202:202:long getMemoryUse() -> sasP
    207:207:long getMemoryAllocated() -> vslw
    212:212:long getMemoryCollected() -> lerk
    217:217:surge.math.Average getMahL() -> Orab
    222:222:long getMahs() -> oMWR
    227:227:int getTotalChunks() -> nIul
    232:232:int getTotalEntities() -> gWEJ
    237:237:int getTotalDrops() -> VMBy
    242:242:int getTotalTiles() -> DYQC
    247:247:int getTotalLiving() -> bWuE
    252:252:surge.server.WorldMonitor getWorldMonitor() -> LaIB
    257:257:int getChunksLoaded() -> wTpp
    262:262:int getChunksUnloaded() -> MIxJ
    267:268:void setTicksPerSecondL(surge.math.Average) -> WiMd
    272:273:void setTickTimeL(surge.math.Average) -> jFPe
    277:278:void setMahL(surge.math.Average) -> qKEa
    282:283:void setTicksPerSecond(double) -> kkWP
    287:288:void setTicksPerSecondRaw(double) -> ugrD
    292:293:void setTickTime(double) -> NoTf
    297:298:void setTickTimeRaw(double) -> vRCh
    302:303:void setRunning(boolean) -> awKr
    307:308:void setTickUtilizationRaw(double) -> vHrN
    312:313:void setTickUtilization(double) -> KThy
    317:318:void setLeftoverTickTime(double) -> vsfW
    322:323:void setMemoryUse(long) -> LFjP
    327:328:void setMemoryAllocated(long) -> LyoC
    332:333:void setMemoryCollected(long) -> vISS
    337:338:void setMahs(long) -> EAvA
    342:343:void setTotalChunks(int) -> AiNx
    347:348:void setTotalEntities(int) -> GbOC
    352:353:void setTotalDrops(int) -> gpLB
    357:358:void setTotalTiles(int) -> HvSW
    362:363:void setTotalLiving(int) -> SvRd
    367:368:void setChunksLoaded(int) -> AXMb
    372:373:void setChunksUnloaded(int) -> hbLU
    377:378:void setWorldMonitor(surge.server.WorldMonitor) -> WiMd
    382:383:void setTpsMonitor(surge.server.TPSMonitor) -> WiMd
    387:388:void setMemoryMonitor(surge.server.MemoryMonitor) -> WiMd
    26:26:void access$0(surge.server.SuperSampler,int) -> WiMd
    28:28:void access$1(surge.server.SuperSampler,int) -> jFPe
    29:29:void access$2(surge.server.SuperSampler,int) -> qKEa
    27:27:void access$3(surge.server.SuperSampler,int) -> LFjP
    30:30:void access$4(surge.server.SuperSampler,int) -> LyoC
    31:31:void access$5(surge.server.SuperSampler,int) -> vISS
    32:32:void access$6(surge.server.SuperSampler,int) -> EAvA
    15:15:void access$7(surge.server.SuperSampler,double) -> WiMd
    17:17:void access$8(surge.server.SuperSampler,double) -> jFPe
    11:11:surge.math.Average access$9(surge.server.SuperSampler) -> WiMd
    15:15:double access$10(surge.server.SuperSampler) -> jFPe
    12:12:surge.math.Average access$11(surge.server.SuperSampler) -> qKEa
    17:17:double access$12(surge.server.SuperSampler) -> LFjP
    14:14:void access$13(surge.server.SuperSampler,double) -> qKEa
    16:16:void access$14(surge.server.SuperSampler,double) -> LFjP
    19:19:void access$15(surge.server.SuperSampler,double) -> LyoC
    16:16:double access$16(surge.server.SuperSampler) -> LyoC
    20:20:void access$17(surge.server.SuperSampler,double) -> vISS
    20:20:double access$18(surge.server.SuperSampler) -> vISS
    21:21:void access$19(surge.server.SuperSampler,double) -> EAvA
    22:22:void access$20(surge.server.SuperSampler,long) -> WiMd
    23:23:void access$21(surge.server.SuperSampler,long) -> jFPe
    24:24:void access$22(surge.server.SuperSampler,long) -> qKEa
    13:13:surge.math.Average access$23(surge.server.SuperSampler) -> EAvA
    25:25:void access$24(surge.server.SuperSampler,long) -> LFjP
surge.server.SuperSampler$1 -> HvXt$1:
    surge.server.SuperSampler this$0 -> rNXc
    1:61:void <init>(surge.server.SuperSampler) -> <init>
    66:73:void updated(int,int,int,int,int,int,int) -> WiMd
surge.server.SuperSampler$2 -> HvXt$2:
    surge.server.SuperSampler this$0 -> rNXc
    1:76:void <init>(surge.server.SuperSampler) -> <init>
    81:90:void onTicked() -> BJXd
surge.server.SuperSampler$3 -> HvXt$3:
    surge.server.SuperSampler this$0 -> rNXc
    1:93:void <init>(surge.server.SuperSampler) -> <init>
    98:103:void onAllocationSet() -> SSwa
surge.server.TPSMonitor -> GsVU:
    double tickTimeMS -> PulE
    double rawTicksPerSecond -> qvJS
    surge.math.Profiler tickProfiler -> HwFT
    surge.math.Profiler tickTimeProfiler -> cmAE
    boolean ticked -> aCvA
    java.lang.Thread$State lastState -> IqUp
    double actualTickTimeMS -> vRTH
    double ltt -> UASg
    long lastTick -> OafA
    19:32:void <init>() -> <init>
    void onTicked() -> BJXd
    39:73:void run() -> run
    77:105:void processState(java.lang.Thread$State) -> WiMd
    109:109:double getTickTimeMS() -> BRhj
    114:114:double getRawTicksPerSecond() -> YUlH
    119:119:surge.math.Profiler getTickProfiler() -> nSGc
    124:124:boolean isTicked() -> tdyM
    129:130:void markTick() -> QMtH
    134:134:surge.math.Profiler getTickTimeProfiler() -> Bkyx
    139:139:java.lang.Thread$State getLastState() -> fmST
    144:144:double getActualTickTimeMS() -> qvDL
surge.server.WorldMonitor -> ArFj:
    boolean chunksChanged -> jXCP
    boolean dropChanged -> lTwM
    boolean tileChanged -> TXCh
    boolean livingChanged -> SnSO
    boolean totalChanged -> vkdu
    boolean updated -> oobI
    int totalChunks -> maMM
    int totalDrops -> CNBo
    int totalTiles -> jiEa
    int totalLiving -> WFyn
    int totalEntities -> uWbQ
    int chunksLoaded -> DQGF
    int chunksUnloaded -> docX
    long ms -> tvaD
    25:44:void <init>() -> <init>
    49:64:void run() -> run
    void updated(int,int,int,int,int,int,int) -> WiMd
    71:76:void on(org.bukkit.event.world.ChunkLoadEvent) -> WiMd
    81:86:void on(org.bukkit.event.world.ChunkUnloadEvent) -> WiMd
    91:92:void on(org.bukkit.event.entity.EntitySpawnEvent) -> WiMd
    97:98:void on(org.bukkit.event.entity.EntityDeathEvent) -> WiMd
    103:104:void on(org.bukkit.event.player.PlayerDropItemEvent) -> WiMd
    109:110:void on(org.bukkit.event.player.PlayerPickupItemEvent) -> WiMd
    115:116:void on(org.bukkit.event.entity.EntityPickupItemEvent) -> WiMd
    121:122:void on(org.bukkit.event.block.BlockPlaceEvent) -> WiMd
    127:128:void on(org.bukkit.event.block.BlockBreakEvent) -> WiMd
    132:133:void doUpdate() -> rWDK
    137:188:void sample() -> kkWP
    192:198:void sampleTotalCount() -> pjPE
    202:208:void sampleLivingCount() -> YxOa
    212:221:void sampleTileCount() -> uFYr
    225:231:void sampleDropCount() -> nkxK
    235:241:void sampleChunkCount() -> OsAc
surge.text.PhantomSpinner -> IFWb:
    surge.text.ProgressSpinner s -> rWHf
    surge.text.ProgressSpinner c -> QVjU
    15:19:void <init>(surge.util.C,surge.util.C,surge.util.C) -> <init>
    24:24:java.lang.String toString() -> toString
surge.text.ProgressSpinner -> gxbL:
    java.lang.String[] chars -> ObGF
    int index -> index
    surge.text.ProgressSpinner DEFAULT -> xGWq
    surge.text.ProgressSpinner NETWORK -> GIMj
    surge.text.ProgressSpinner CIRCLES -> PCGN
    surge.text.ProgressSpinner RANDOMS -> ECIn
    surge.text.ProgressSpinner MERGERS -> JAXG
    70:75:void <clinit>() -> <clinit>
    25:29:void <init>(java.lang.String[]) -> <init>
    36:37:void <init>() -> <init>
    45:55:java.lang.String toString() -> toString
    60:60:java.lang.String[] getChars() -> tTXI
    65:65:int getIndex() -> getIndex
surge.util.Adapter -> Hdvc:
    java.lang.Object adapt(java.lang.Object) -> vHrN
    java.lang.Object onAdapt(java.lang.Object) -> KThy
surge.util.Anchor -> vAGc:
    int value() -> value
surge.util.Area -> Lysv:
    org.bukkit.Location location -> lnmB
    java.lang.Double radius -> OrjG
    26:26:boolean within(org.bukkit.Location,org.bukkit.Location,double) -> WiMd
    39:42:void <init>(org.bukkit.Location,java.lang.Double) -> <init>
    46:46:surge.util.Cuboid toCuboid() -> VwUT
    59:62:void <init>(org.bukkit.Location,java.lang.Integer) -> <init>
    76:84:java.lang.Double distance(org.bukkit.Location) -> LFjP
    98:98:java.lang.Double slowDistance(org.bukkit.Location) -> LyoC
    110:110:boolean isWithin(org.bukkit.Location) -> vISS
    120:120:boolean hasEntities() -> hasEntities
    132:142:org.bukkit.entity.Entity[] getNearbyEntities(org.bukkit.entity.EntityType) -> jFPe
    154:164:org.bukkit.entity.Entity[] getNearbyEntities(java.lang.Class) -> WiMd
    177:201:org.bukkit.entity.Entity[] getNearbyEntities() -> BSJm
    212:222:org.bukkit.entity.Player[] getNearbyPlayers() -> tBvF
    232:232:org.bukkit.Location getLocation() -> getLocation
    243:244:void setLocation(org.bukkit.Location) -> EAvA
    253:253:java.lang.Double getRadius() -> sIEG
    264:265:void setRadius(java.lang.Double) -> jFPe
    274:279:org.bukkit.Location random() -> imkF
surge.util.Axis -> JAJh:
    surge.util.Axis X -> nSPf
    surge.util.Axis Y -> pXvK
    surge.util.Axis Z -> gxnv
    int x -> x
    int y -> y
    int z -> z
    surge.util.Axis[] $VALUES -> OrjV
    5:5:surge.util.Axis[] values() -> values
    5:5:surge.util.Axis valueOf(java.lang.String) -> valueOf
    16:20:void <init>(java.lang.String,int,int,int,int) -> <init>
    24:24:org.bukkit.util.Vector positive() -> AXWl
    29:29:org.bukkit.util.Vector negative() -> dgLe
    5:9:void <clinit>() -> <clinit>
surge.util.BlastResistance -> NEGL:
    surge.util.BlastResistance BARRIER -> RIPF
    surge.util.BlastResistance BEDROCK -> EvOL
    surge.util.BlastResistance COMMAND -> jNsm
    surge.util.BlastResistance ENDER_PORTAL -> QFMB
    surge.util.BlastResistance ENDER_PORTAL_FRAME -> INuc
    surge.util.BlastResistance ANVIL -> CpIN
    surge.util.BlastResistance ENCHANTMENT_TABLE -> ESjp
    surge.util.BlastResistance OBSIDIAN -> fJwm
    surge.util.BlastResistance ENDER_CHEST -> psIH
    surge.util.BlastResistance WATER -> iLPu
    surge.util.BlastResistance LAVA -> VMLF
    surge.util.BlastResistance STATIONARY_WATER -> PunH
    surge.util.BlastResistance DRAGON_EGG -> MmEd
    surge.util.BlastResistance ENDER_STONE -> UlLH
    surge.util.BlastResistance COAL_BLOCK -> ePej
    surge.util.BlastResistance DIAMOND_BLOCK -> CgUr
    surge.util.BlastResistance EMERALD_BLOCK -> hkQA
    surge.util.BlastResistance GOLD_BLOCK -> XSPb
    surge.util.BlastResistance IRON_BLOCK -> QFKW
    surge.util.BlastResistance REDSTONE_BLOCK -> RYoJ
    surge.util.BlastResistance BRICK -> HDBJ
    surge.util.BlastResistance BRICK_STAIRS -> ycoW
    surge.util.BlastResistance HARD_CLAY -> sYnG
    surge.util.BlastResistance STONE -> VoMY
    surge.util.BlastResistance SMOOTH_BRICK -> wDWc
    surge.util.BlastResistance SMOOTH_STAIRS -> Aqqp
    surge.util.BlastResistance DOUBLE_STONE_SLAB2 -> TOUO
    surge.util.BlastResistance STONE_SLAB2 -> NgVN
    surge.util.BlastResistance IRON_DOOR -> jNqt
    surge.util.BlastResistance IRON_DOOR_BLOCK -> EJyK
    surge.util.BlastResistance IRON_TRAPDOOR -> qTHR
    surge.util.BlastResistance MOB_SPAWNER -> BSSH
    surge.util.BlastResistance WEB -> pHTK
    surge.util.BlastResistance DISPENSER -> uyfM
    surge.util.BlastResistance DROPPER -> Lqpf
    surge.util.BlastResistance FURNACE -> IGGk
    surge.util.BlastResistance BURNING_FURNACE -> tLSR
    surge.util.BlastResistance BEACON -> FFNr
    surge.util.BlastResistance COAL_ORE -> oofy
    surge.util.BlastResistance COCOA -> QyRk
    surge.util.BlastResistance DIAMOND_ORE -> SUEc
    surge.util.BlastResistance EMERALD_ORE -> vbyj
    surge.util.BlastResistance FENCE -> cBPv
    surge.util.BlastResistance FENCE_GATE -> uOUt
    surge.util.BlastResistance ACACIA_FENCE_GATE -> DXyx
    surge.util.BlastResistance BIRCH_FENCE_GATE -> uOVA
    surge.util.BlastResistance DARK_OAK_FENCE_GATE -> TNvp
    surge.util.BlastResistance SPRUCE_FENCE_GATE -> tUCd
    surge.util.BlastResistance JUNGLE_FENCE_GATE -> cBRN
    surge.util.BlastResistance ACACIA_FENCE -> GQcP
    surge.util.BlastResistance BIRCH_FENCE -> tmti
    surge.util.BlastResistance DARK_OAK_FENCE -> AOoh
    surge.util.BlastResistance SPRUCE_FENCE -> pGvL
    surge.util.BlastResistance JUNGLE_FENCE -> dUtu
    surge.util.BlastResistance ACACIA_WOOD_STAIRS -> YNGI
    surge.util.BlastResistance BIRCH_WOOD_STAIRS -> MBRw
    surge.util.BlastResistance DARK_OAK_WOOD_STAIRS -> SnXV
    surge.util.BlastResistance SPRUCE_WOOD_STAIRS -> eYYV
    surge.util.BlastResistance JUNGLE_WOOD_STAIRS -> pixS
    surge.util.BlastResistance QUARTZ_STAIRS -> sHmm
    surge.util.BlastResistance COBBLESTONE_STAIRS -> RkTA
    surge.util.BlastResistance SANDSTONE_STAIRS -> lLiy
    surge.util.BlastResistance NETHER_BRICK_STAIRS -> YogT
    surge.util.BlastResistance WOOD_STAIRS -> TXGp
    surge.util.BlastResistance RED_SANDSTONE_STAIRS -> vJGm
    surge.util.BlastResistance ACACIA_DOOR -> woMo
    surge.util.BlastResistance BIRCH_DOOR -> TOVq
    surge.util.BlastResistance DARK_OAK_DOOR -> oDrC
    surge.util.BlastResistance SPRUCE_DOOR -> KwaK
    surge.util.BlastResistance JUNGLE_DOOR -> baQK
    surge.util.BlastResistance GOLD_ORE -> ejYl
    surge.util.BlastResistance HOPPER -> FgqJ
    surge.util.BlastResistance IRON_ORE -> Fpaq
    surge.util.BlastResistance LAPIS_BLOCK -> lMKY
    surge.util.BlastResistance LAPIS_ORE -> LOoj
    surge.util.BlastResistance QUARTZ_ORE -> hAAy
    surge.util.BlastResistance REDSTONE_ORE -> BBUR
    surge.util.BlastResistance TRAP_DOOR -> QWRQ
    surge.util.BlastResistance WOOD -> STgG
    surge.util.BlastResistance CHEST -> PSml
    surge.util.BlastResistance TRAPPED_CHEST -> agBA
    surge.util.BlastResistance WORKBENCH -> bidB
    surge.util.BlastResistance CAULDRON -> IhlV
    surge.util.BlastResistance LOG -> TiMC
    surge.util.BlastResistance LOG_2 -> iKtn
    surge.util.BlastResistance BOOKSHELF -> baSW
    surge.util.BlastResistance BANNER -> gFOR
    surge.util.BlastResistance STANDING_BANNER -> oNHG
    surge.util.BlastResistance WALL_BANNER -> bYBn
    surge.util.BlastResistance JACK_O_LANTERN -> SLWG
    surge.util.BlastResistance MELON_BLOCK -> hIQp
    surge.util.BlastResistance SKULL -> nJbf
    surge.util.BlastResistance PUMPKIN -> Iyms
    surge.util.BlastResistance SIGN -> WYEA
    surge.util.BlastResistance SIGN_POST -> hbdQ
    surge.util.BlastResistance WALL_SIGN -> XSUj
    surge.util.BlastResistance QUARTZ_BLOCK -> HCgG
    surge.util.BlastResistance NOTE_BLOCK -> HUHx
    surge.util.BlastResistance RED_SANDSTONE -> Ywye
    surge.util.BlastResistance SANDSTONE -> YpJb
    surge.util.BlastResistance WOOL -> YVWi
    surge.util.BlastResistance MONSTER_EGG -> TXJG
    surge.util.BlastResistance RAILS -> VoRG
    surge.util.BlastResistance ACTIVATOR_RAIL -> oDtS
    surge.util.BlastResistance DETECTOR_RAIL -> OHYm
    surge.util.BlastResistance POWERED_RAIL -> iUFY
    surge.util.BlastResistance CLAY -> HvjI
    surge.util.BlastResistance DIRT -> VgAi
    surge.util.BlastResistance GRASS -> gVnc
    surge.util.BlastResistance GRAVEL -> nRrS
    surge.util.BlastResistance SPONGE -> bOpX
    surge.util.BlastResistance BREWING_STAND -> qeNG
    surge.util.BlastResistance STONE_BUTTON -> FhTN
    surge.util.BlastResistance WOOD_BUTTON -> vbyw
    surge.util.BlastResistance CAKE_BLOCK -> Yfxb
    surge.util.BlastResistance ICE -> ydTO
    surge.util.BlastResistance PACKED_ICE -> brVu
    surge.util.BlastResistance LEVER -> CEYl
    surge.util.BlastResistance MYCEL -> KUcA
    surge.util.BlastResistance PISTON_BASE -> sYtg
    surge.util.BlastResistance PISTON_EXTENSION -> fnCW
    surge.util.BlastResistance PISTON_MOVING_PIECE -> TGKb
    surge.util.BlastResistance PISTON_STICKY_BASE -> mief
    surge.util.BlastResistance GOLD_PLATE -> hHrr
    surge.util.BlastResistance IRON_PLATE -> loRr
    surge.util.BlastResistance STONE_PLATE -> bYEm
    surge.util.BlastResistance WOOD_PLATE -> pbMa
    surge.util.BlastResistance SAND -> HDIb
    surge.util.BlastResistance SOUL_SAND -> ntwx
    surge.util.BlastResistance CACTUS -> WGcr
    surge.util.BlastResistance LADDER -> jiMT
    surge.util.BlastResistance NETHERRACK -> HelJ
    surge.util.BlastResistance GLASS -> AigE
    surge.util.BlastResistance THIN_GLASS -> LGeD
    surge.util.BlastResistance STAINED_GLASS -> ELBT
    surge.util.BlastResistance STAINED_GLASS_PANE -> afcU
    surge.util.BlastResistance GLOWSTONE -> rxtX
    surge.util.BlastResistance REDSTONE_LAMP_OFF -> QVqr
    surge.util.BlastResistance REDSTONE_LAMP_ON -> QNah
    surge.util.BlastResistance SEA_LANTERN -> BJgy
    surge.util.BlastResistance BED_BLOCK -> ebMY
    surge.util.BlastResistance DAYLIGHT_DETECTOR -> ctwn
    surge.util.BlastResistance DAYLIGHT_DETECTOR_INVERTED -> RcGW
    surge.util.BlastResistance HUGE_MUSHROOM_1 -> UImH
    surge.util.BlastResistance HUGE_MUSHROOM_2 -> hjun
    surge.util.BlastResistance LEAVES -> sHrA
    surge.util.BlastResistance LEAVES_2 -> yRsd
    surge.util.BlastResistance SNOW -> gVqG
    int br -> gWQg
    surge.util.BlastResistance[] $VALUES -> Qgsm
    10:10:surge.util.BlastResistance[] values() -> values
    10:10:surge.util.BlastResistance valueOf(java.lang.String) -> valueOf
    164:166:void <init>(java.lang.String,int,int) -> <init>
    170:170:int getBlastResistance() -> sHbm
    175:190:int get(org.bukkit.Material) -> WiMd
    10:159:void <clinit>() -> <clinit>
surge.util.Blocks -> SuxT:
    11:11:void <init>() -> <init>
    22:22:org.bukkit.Location getCenter(org.bukkit.block.Block) -> WiMd
surge.util.C -> SKdh:
    surge.util.C BLACK -> UuAs
    surge.util.C DARK_BLUE -> FEqn
    surge.util.C DARK_GREEN -> jXJj
    surge.util.C DARK_AQUA -> rFPG
    surge.util.C DARK_RED -> skVH
    surge.util.C DARK_PURPLE -> RQgm
    surge.util.C GOLD -> IWoB
    surge.util.C GRAY -> cAvb
    surge.util.C DARK_GRAY -> AXgk
    surge.util.C BLUE -> kSAM
    surge.util.C GREEN -> gpfs
    surge.util.C AQUA -> XKIY
    surge.util.C RED -> tChW
    surge.util.C LIGHT_PURPLE -> qSpm
    surge.util.C YELLOW -> jFkn
    surge.util.C WHITE -> MKIv
    surge.util.C MAGIC -> kkpw
    surge.util.C BOLD -> bjHx
    surge.util.C STRIKETHROUGH -> uFjh
    surge.util.C UNDERLINE -> nAvR
    surge.util.C ITALIC -> LPWq
    surge.util.C RESET -> kdBX
    char COLOR_CHAR -> COLOR_CHAR
    java.util.regex.Pattern STRIP_COLOR_PATTERN -> STRIP_COLOR_PATTERN
    int intCode -> bYHA
    char code -> JlST
    boolean isFormat -> jiNb
    java.lang.String toString -> QWUT
    java.util.Map BY_ID -> uFjL
    java.util.Map BY_CHAR -> IiPW
    java.util.Map dyeChatMap -> mGdD
    java.util.Map chatHexMap -> mjGd
    java.util.Map dyeHexMap -> tDHT
    int[] $SWITCH_TABLE$surge$util$C -> PeSj
    surge.util.C[] ENUM$VALUES -> Hekw
    19:727:void <clinit>() -> <clinit>
    334:335:void <init>(java.lang.String,int,char,int) -> <init>
    337:343:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    347:347:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
    357:357:char getChar() -> getChar
    363:363:java.lang.String toString() -> toString
    373:373:org.bukkit.DyeColor dye() -> LWvE
    378:378:java.lang.String hex() -> imim
    388:388:boolean isFormat() -> isFormat
    398:398:boolean isColor() -> isColor
    413:418:surge.util.C getByChar(char) -> kkWP
    434:442:surge.util.C getByChar(java.lang.String) -> AXMb
    455:460:java.lang.String stripColor(java.lang.String) -> stripColor
    472:477:surge.util.C dyeToChat(org.bukkit.DyeColor) -> WiMd
    482:490:org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) -> WiMd
    496:501:java.lang.String chatToHex(org.bukkit.ChatColor) -> jFPe
    506:511:java.lang.String dyeToHex(org.bukkit.DyeColor) -> jFPe
    516:537:org.bukkit.Color hexToColor(java.lang.String) -> hbLU
    542:555:org.bukkit.Color rgbToColor(java.lang.String) -> HBme
    560:578:java.lang.String generateColorTable() -> JtTC
    588:588:org.bukkit.ChatColor chatColor() -> WXUg
    605:614:java.lang.String translateAlternateColorCodes(char,java.lang.String) -> translateAlternateColorCodes
    619:627:surge.util.C fromItemMeta(byte) -> WiMd
    632:679:byte getItemMeta() -> PJos
    692:717:java.lang.String getLastColors(java.lang.String) -> getLastColors
    1:1:surge.util.C[] values() -> values
    1:1:surge.util.C valueOf(java.lang.String) -> valueOf
    332:332:void <init>(java.lang.String,int,char,int,surge.util.C) -> <init>
    337:337:void <init>(java.lang.String,int,char,int,boolean,surge.util.C) -> <init>
    17:17:int[] $SWITCH_TABLE$surge$util$C() -> woCU
surge.util.C$1 -> SKdh$1:
    1:23:void <init>(java.lang.String,int,char,int) -> <init>
    27:27:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$10 -> SKdh$2:
    1:122:void <init>(java.lang.String,int,char,int) -> <init>
    126:126:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$11 -> SKdh$3:
    1:133:void <init>(java.lang.String,int,char,int) -> <init>
    137:137:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$12 -> SKdh$4:
    1:144:void <init>(java.lang.String,int,char,int) -> <init>
    148:148:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$13 -> SKdh$5:
    1:155:void <init>(java.lang.String,int,char,int) -> <init>
    159:159:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$14 -> SKdh$6:
    1:166:void <init>(java.lang.String,int,char,int) -> <init>
    170:170:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$15 -> SKdh$7:
    1:177:void <init>(java.lang.String,int,char,int) -> <init>
    181:181:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$16 -> SKdh$8:
    1:188:void <init>(java.lang.String,int,char,int) -> <init>
    192:192:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$17 -> SKdh$9:
    1:199:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    203:203:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$18 -> SKdh$10:
    1:210:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    214:214:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$19 -> SKdh$11:
    1:221:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    225:225:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$2 -> SKdh$12:
    1:34:void <init>(java.lang.String,int,char,int) -> <init>
    38:38:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$20 -> SKdh$13:
    1:232:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    236:236:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$21 -> SKdh$14:
    1:243:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    247:247:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$22 -> SKdh$15:
    1:255:void <init>(java.lang.String,int,char,int) -> <init>
    259:259:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$3 -> SKdh$16:
    1:45:void <init>(java.lang.String,int,char,int) -> <init>
    49:49:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$4 -> SKdh$17:
    1:56:void <init>(java.lang.String,int,char,int) -> <init>
    60:60:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$5 -> SKdh$18:
    1:67:void <init>(java.lang.String,int,char,int) -> <init>
    71:71:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$6 -> SKdh$19:
    1:78:void <init>(java.lang.String,int,char,int) -> <init>
    82:82:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$7 -> SKdh$20:
    1:89:void <init>(java.lang.String,int,char,int) -> <init>
    93:93:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$8 -> SKdh$21:
    1:100:void <init>(java.lang.String,int,char,int) -> <init>
    104:104:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$9 -> SKdh$22:
    1:111:void <init>(java.lang.String,int,char,int) -> <init>
    115:115:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.CDou -> OjLj:
    double number -> UIoC
    double max -> max
    8:12:void <init>(double) -> <init>
    16:18:surge.util.CDou set(double) -> eGbV
    23:25:surge.util.CDou add(double) -> jgsA
    30:32:surge.util.CDou sub(double) -> roiu
    37:37:double get() -> get
    42:48:void circ() -> RPvQ
surge.util.CMD -> XBCN:
    java.lang.String command -> command
    org.bukkit.command.CommandSender sender -> sender
    boolean virtual -> kJON
    25:30:void <init>(java.lang.String) -> <init>
    39:40:surge.util.CMD virtual() -> EJrm
    51:53:void execute(org.bukkit.command.CommandSender) -> qKEa
    60:77:void execute() -> execute
surge.util.CNum -> cSCe:
    int number -> number
    int max -> max
    8:12:void <init>(int) -> <init>
    16:18:surge.util.CNum set(int) -> HBme
    23:25:surge.util.CNum add(int) -> qmFp
    30:32:surge.util.CNum sub(int) -> paSB
    37:37:int get() -> get
    42:48:void circ() -> RPvQ
    52:52:int getMax() -> getMax
    57:59:void setMax(int) -> iSmJ
surge.util.Chunks -> RYbt:
    13:13:void <init>() -> <init>
    24:24:surge.collection.GList getLoadedChunks(org.bukkit.World) -> jFPe
    34:41:surge.collection.GList getLoadedChunks() -> xOfE
    55:55:surge.collection.GList getRadius(org.bukkit.Chunk,int) -> qKEa
    73:73:boolean unload(org.bukkit.Chunk,boolean,boolean) -> WiMd
    87:87:boolean unload(org.bukkit.Chunk,boolean) -> WiMd
    99:99:boolean unload(org.bukkit.Chunk) -> jFPe
    115:125:int unload(surge.collection.GList,boolean,boolean) -> WiMd
    139:139:int unload(surge.collection.GList,boolean) -> WiMd
    151:151:int unload(surge.collection.GList) -> LyoC
    167:167:boolean isLoaded(java.lang.String,int,int) -> WiMd
    183:191:boolean isLoaded(org.bukkit.World,int,int) -> WiMd
    202:206:void load(surge.collection.GList) -> vISS
surge.util.Cuboid -> DjOi:
    java.lang.String worldName -> VMRv
    int x1 -> qSoN
    int y1 -> JJQE
    int z1 -> WXgE
    int x2 -> LqyP
    int y2 -> wEAB
    int z2 -> OPni
    43:56:void <init>(org.bukkit.Location,org.bukkit.Location) -> <init>
    60:70:int depth(surge.util.Axis) -> WiMd
    83:89:void set(org.bukkit.Location,org.bukkit.Location) -> jFPe
    93:93:boolean hasPlayers() -> xqiJ
    98:110:surge.collection.GList getPlayers() -> qmFp
    115:166:surge.collection.GList getEntities() -> kbrR
    177:178:void <init>(org.bukkit.Location) -> <init>
    188:189:void <init>(surge.util.Cuboid) -> <init>
    210:218:void <init>(org.bukkit.World,int,int,int,int,int,int) -> <init>
    239:247:void <init>(java.lang.String,int,int,int,int,int,int) -> <init>
    250:258:void <init>(java.util.Map) -> <init>
    263:271:java.util.Map serialize() -> serialize
    276:276:surge.util.Cuboid flatten(int) -> awJj
    287:287:org.bukkit.Location getLowerNE() -> BRkU
    298:298:org.bukkit.Location getUpperSW() -> QWGb
    308:311:org.bukkit.Location getCenter() -> getCenter
    323:328:org.bukkit.World getWorld() -> getWorld
    338:338:int getSizeX() -> EKTV
    348:348:int getSizeY() -> xOfN
    358:358:int getSizeZ() -> KDUK
    368:368:int getLowerX() -> KCsi
    378:378:int getLowerY() -> KLeP
    388:388:int getLowerZ() -> DsFH
    398:398:int getUpperX() -> DXrQ
    408:408:int getUpperY() -> tKhr
    418:418:int getUpperZ() -> EvIM
    428:438:org.bukkit.block.Block[] corners() -> UcUF
    454:469:surge.util.Cuboid expand(surge.util.Cuboid$CuboidDirection,int) -> WiMd
    484:484:surge.util.Cuboid shift(surge.util.Cuboid$CuboidDirection,int) -> jFPe
    500:514:surge.util.Cuboid outset(surge.util.Cuboid$CuboidDirection,int) -> qKEa
    530:530:surge.util.Cuboid inset(surge.util.Cuboid$CuboidDirection,int) -> LFjP
    546:546:boolean contains(int,int,int) -> jFPe
    558:558:boolean contains(org.bukkit.block.Block) -> jFPe
    570:570:boolean contains(org.bukkit.Location) -> kkWP
    580:580:int volume() -> rNTd
    591:601:byte averageLightLevel() -> lLbm
    612:612:surge.util.Cuboid contract() -> inNT
    626:666:surge.util.Cuboid contract(surge.util.Cuboid$CuboidDirection) -> WiMd
    680:695:surge.util.Cuboid getFace(surge.util.Cuboid$CuboidDirection) -> jFPe
    708:715:boolean containsOnly(org.bukkit.Material) -> jFPe
    727:739:surge.util.Cuboid getBoundingCuboid(surge.util.Cuboid) -> WiMd
    755:755:org.bukkit.block.Block getRelativeBlock(int,int,int) -> qKEa
    775:775:org.bukkit.block.Block getRelativeBlock(org.bukkit.World,int,int,int) -> WiMd
    786:800:java.util.List getChunks() -> WqkD
    815:819:void fill(int,byte) -> WiMd
    843:843:java.util.Iterator iterator() -> iterator
    854:854:surge.util.Cuboid clone() -> UIbI
    865:865:java.lang.String toString() -> toString
    961:970:int hashCode() -> hashCode
    976:1036:boolean equals(java.lang.Object) -> equals
    27:27:java.lang.Object clone() -> clone
surge.util.Cuboid$1 -> DjOi$1:
    surge.util.Cuboid this$0 -> JdDC
    99:99:void <init>(surge.util.Cuboid) -> <init>
    103:108:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> qKEa
    99:99:java.lang.Object onAdapt(java.lang.Object) -> KThy
surge.util.Cuboid$2 -> DjOi$2:
    int[] $SwitchMap$surge$util$Axis -> gFSE
    int[] $SwitchMap$surge$util$Cuboid$CuboidDirection -> RkYx
    60:454:void <clinit>() -> <clinit>
surge.util.Cuboid$CuboidDirection -> DjOi$WiMd:
    surge.util.Cuboid$CuboidDirection North -> quqw
    surge.util.Cuboid$CuboidDirection East -> baVh
    surge.util.Cuboid$CuboidDirection South -> PCTE
    surge.util.Cuboid$CuboidDirection West -> LGhR
    surge.util.Cuboid$CuboidDirection Up -> CyDU
    surge.util.Cuboid$CuboidDirection Down -> RcMJ
    surge.util.Cuboid$CuboidDirection Horizontal -> EvXo
    surge.util.Cuboid$CuboidDirection Vertical -> AGhW
    surge.util.Cuboid$CuboidDirection Both -> BmOV
    surge.util.Cuboid$CuboidDirection Unknown -> PnHU
    surge.util.Cuboid$CuboidDirection[] $VALUES -> AGhU
    916:916:surge.util.Cuboid$CuboidDirection[] values() -> values
    916:916:surge.util.Cuboid$CuboidDirection valueOf(java.lang.String) -> valueOf
    916:916:void <init>(java.lang.String,int) -> <init>
    932:953:surge.util.Cuboid$CuboidDirection opposite() -> EJsk
    916:928:void <clinit>() -> <clinit>
surge.util.Cuboid$CuboidIterator -> DjOi$jFPe:
    org.bukkit.World w -> HTnN
    int baseX -> DQSX
    int baseY -> LjME
    int baseZ -> XKKr
    int x -> x
    int y -> y
    int z -> z
    int sizeX -> ivnh
    int sizeY -> ifNY
    int sizeZ -> NMoN
    surge.util.Cuboid this$0 -> JdDC
    876:885:void <init>(surge.util.Cuboid,org.bukkit.World,int,int,int,int,int,int) -> <init>
    890:890:boolean hasNext() -> hasNext
    896:906:org.bukkit.block.Block next() -> next
    913:913:void remove() -> remove
    868:868:java.lang.Object next() -> next
surge.util.CuboidException -> Keqx:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>(java.lang.String) -> <init>
surge.util.D -> Smis:
    surge.collection.GList buffer -> TFny
    10:10:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    14:18:void flush() -> flush
    22:33:void log(java.lang.String,java.lang.String) -> jFPe
    37:38:void l(java.lang.Object,java.lang.String) -> WiMd
    42:43:void s(java.lang.Object,java.lang.String) -> jFPe
    47:48:void v(java.lang.Object,java.lang.String) -> qKEa
    52:53:void w(java.lang.Object,java.lang.String) -> LFjP
    57:58:void f(java.lang.Object,java.lang.String) -> LyoC
    62:69:void l(java.lang.String) -> qmFp
    73:80:void s(java.lang.String) -> paSB
    84:91:void v(java.lang.String) -> iSmJ
    95:102:void w(java.lang.String) -> awJj
    106:113:void f(java.lang.String) -> uhQk
surge.util.DMSRequire -> WaEh:
    surge.util.DMSRequirement value() -> xrHu
surge.util.DMSRequirement -> ieYW:
    surge.util.DMSRequirement SQL -> OsVK
    surge.util.DMSRequirement[] ENUM$VALUES -> WGhN
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:surge.util.DMSRequirement[] values() -> values
    1:1:surge.util.DMSRequirement valueOf(java.lang.String) -> valueOf
surge.util.Depend -> SSwa:
    surge.util.Depend VAULT -> yAvh
    surge.util.Depend FAWE -> Copf
    surge.util.Depend WORLDEDIT -> OQQV
    surge.util.Depend PROTOLIB -> jFlc
    surge.util.Depend CITIZENS -> RRIn
    java.lang.String name -> name
    surge.util.Depend[] ENUM$VALUES -> QqIn
    5:11:void <clinit>() -> <clinit>
    15:18:void <init>(java.lang.String,int,java.lang.String) -> <init>
    22:22:boolean exists() -> exists
    1:1:surge.util.Depend[] values() -> values
    1:1:surge.util.Depend valueOf(java.lang.String) -> valueOf
surge.util.Dimension -> Gavl:
    int width -> width
    int height -> height
    int depth -> depth
    25:29:void <init>(int,int,int) -> <init>
    40:44:void <init>(int,int) -> <init>
    53:68:surge.util.DimensionFace getPane() -> gEbs
    73:73:int getWidth() -> getWidth
    78:78:int getHeight() -> getHeight
    83:83:int getDepth() -> getDepth
surge.util.DimensionFace -> dfje:
    surge.util.DimensionFace X -> GcLU
    surge.util.DimensionFace Y -> bPWQ
    surge.util.DimensionFace Z -> kSBN
    surge.util.DimensionFace[] $VALUES -> cJhl
    8:8:surge.util.DimensionFace[] values() -> values
    8:8:surge.util.DimensionFace valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    8:23:void <clinit>() -> <clinit>
surge.util.Direction -> ykvP:
    surge.util.Direction U -> rpgf
    surge.util.Direction D -> LXhe
    surge.util.Direction N -> scJY
    surge.util.Direction S -> ktcx
    surge.util.Direction E -> mOuq
    surge.util.Direction W -> oooG
    int x -> x
    int y -> y
    int z -> z
    surge.util.Cuboid$CuboidDirection f -> ebQV
    int[] $SWITCH_TABLE$surge$util$Direction -> kcbf
    surge.util.Direction[] ENUM$VALUES -> bOwG
    14:21:void <clinit>() -> <clinit>
    28:34:void <init>(java.lang.String,int,int,int,int,surge.util.Cuboid$CuboidDirection) -> <init>
    38:56:surge.util.Direction reverse() -> XAhH
    61:61:int x() -> NELY
    66:66:int y() -> YUlX
    71:71:int z() -> z
    76:76:surge.util.Cuboid$CuboidDirection f() -> dgMw
    81:81:surge.collection.GList news() -> hawr
    86:86:surge.collection.GList udnews() -> fKQQ
    91:101:surge.util.Direction facing(org.bukkit.entity.Player) -> mFhO
    115:147:surge.util.Direction fromByte(byte) -> jFPe
    158:176:byte byteValue() -> byteValue
    1:1:surge.util.Direction[] values() -> values
    1:1:surge.util.Direction valueOf(java.lang.String) -> valueOf
    14:14:int[] $SWITCH_TABLE$surge$util$Direction() -> gFDJ
surge.util.Embedded -> Wyvr:
    surge.collection.GList get() -> fTAx
    void add(java.lang.Object) -> add
surge.util.F -> HCWu:
    java.text.NumberFormat NF -> PuwI
    java.text.DecimalFormat DF -> ooms
    java.lang.String[] NAMES -> nJgq
    java.math.BigInteger THOUSAND -> VLtO
    java.util.NavigableMap MAP -> jrAe
    24:35:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    39:54:java.lang.String time(double,int) -> WiMd
    59:59:java.lang.String b(int) -> b
    64:64:java.lang.String b(long) -> kkWP
    69:69:java.lang.String b(double) -> vcEa
    74:91:java.lang.String b(java.math.BigInteger) -> WiMd
    96:100:void instantiate() -> gyHq
    111:111:java.lang.String color(java.lang.String) -> PmJJ
    124:124:java.lang.String fileSize(long) -> wDFU
    137:137:java.lang.String memSize(long) -> awKr
    150:151:java.lang.String stamp(long) -> SBmt
    161:161:java.lang.String stamp() -> cJWu
    177:204:java.lang.String ofSize(long,int) -> jFPe
    209:236:java.lang.String ofSize(long,int,surge.util.C) -> WiMd
    248:248:surge.collection.GList wrap(java.lang.String) -> jWPp
    262:279:surge.collection.GList wrap(java.lang.String,int) -> LyoC
    293:298:java.lang.String trim(java.lang.String,int) -> vISS
    311:331:java.lang.String cname(java.lang.String) -> teNg
    346:381:surge.collection.GList getParameters(java.lang.String,char) -> WiMd
    395:407:java.lang.String repeat(java.lang.String,int) -> repeat
    419:426:java.lang.String mem(long) -> pidO
    439:457:java.lang.String memx(long) -> mFhO
    471:472:java.lang.String f(long) -> ugrD
    484:485:java.lang.String f(int) -> uhQk
    499:508:java.lang.String f(double,int) -> jFPe
    524:533:java.lang.String fd(double,int) -> qKEa
    547:556:java.lang.String f(float,int) -> WiMd
    567:567:java.lang.String f(double) -> pjDa
    578:578:java.lang.String f(float) -> WiMd
    593:593:java.lang.String pc(double,int) -> LFjP
    608:608:java.lang.String pc(float,int) -> jFPe
    621:621:java.lang.String pc(double) -> dxBy
    634:634:java.lang.String pc(float) -> jFPe
    650:650:java.lang.String pc(int,int,int) -> LFjP
    664:664:java.lang.String pc(int,int) -> LFjP
    680:680:java.lang.String pc(long,long,int) -> WiMd
    694:694:java.lang.String pc(long,long) -> WiMd
    706:706:java.lang.String msSeconds(long) -> NoTf
    720:720:java.lang.String msSeconds(long,int) -> qKEa
    732:732:java.lang.String nsMs(long) -> vRCh
    746:746:java.lang.String nsMs(long,int) -> LFjP
    760:760:java.lang.String nsMsd(long,int) -> LyoC
    772:779:surge.collection.GList color(java.util.List) -> qKEa
surge.util.FU -> weoi:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long ONE_GB -> ONE_GB
    java.io.File[] EMPTY_FILE_ARRAY -> EMPTY_FILE_ARRAY
    95:95:void <clinit>() -> <clinit>
    74:75:void <init>() -> <init>
    110:123:java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    139:145:void touch(java.io.File) -> touch
    159:159:java.io.File[] convertFileCollectionToFileArray(java.util.Collection) -> convertFileCollectionToFileArray
    179:195:java.io.File toFile(java.net.URL) -> toFile
    222:239:java.io.File[] toFiles(java.net.URL[]) -> toFiles
    256:263:java.net.URL[] toURLs(java.io.File[]) -> toURLs
    290:299:void copyFileToDirectory(java.io.File,java.io.File) -> copyFileToDirectory
    324:325:void copyFile(java.io.File,java.io.File) -> copyFile
    353:385:void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    401:430:void doCopyFile(java.io.File,java.io.File,boolean) -> WiMd
    458:475:void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    503:504:void copyDirectory(java.io.File,java.io.File) -> copyDirectory
    534:555:void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    572:610:void doCopyDirectory(java.io.File,java.io.File,boolean) -> jFPe
    636:663:void copyURLToFile(java.net.URL,java.io.File) -> copyURLToFile
    676:687:void deleteDirectory(java.io.File) -> deleteDirectory
    699:734:void cleanDirectory(java.io.File) -> cleanDirectory
    753:776:boolean waitFor(java.io.File,int) -> waitFor
    799:807:java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    823:831:byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    855:863:java.util.List readLines(java.io.File,java.lang.String) -> readLines
    886:894:void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    909:917:void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    942:943:void writeLines(java.io.File,java.lang.String,java.util.Collection) -> writeLines
    970:978:void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String) -> writeLines
    1000:1015:void forceDelete(java.io.File) -> forceDelete
    1030:1037:void forceDeleteOnExit(java.io.File) -> forceDeleteOnExit
    1051:1058:void deleteDirectoryOnExit(java.io.File) -> qKEa
    1072:1107:void cleanDirectoryOnExit(java.io.File) -> LFjP
    1123:1138:void forceMkdir(java.io.File) -> forceMkdir
    1152:1184:long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    1207:1215:boolean isFileNewer(java.io.File,java.io.File) -> isFileNewer
    1236:1240:boolean isFileNewer(java.io.File,java.util.Date) -> isFileNewer
    1260:1268:boolean isFileNewer(java.io.File,long) -> isFileNewer
surge.util.FinalDouble -> EJmk:
    double i -> rErh
    18:21:void <init>(double) -> <init>
    30:30:double get() -> get
    41:42:void set(double) -> set
    52:53:void add(double) -> add
    63:64:void sub(double) -> oMOF
surge.util.FinalFloat -> Vnau:
    float i -> i
    18:21:void <init>(float) -> <init>
    30:30:float get() -> get
    41:42:void set(float) -> set
    52:53:void add(float) -> add
    63:64:void sub(float) -> qKEa
surge.util.FinalInteger -> tStg:
    int i -> i
    18:21:void <init>(int) -> <init>
    30:30:int get() -> get
    41:42:void set(int) -> set
    52:53:void add(int) -> add
    63:64:void sub(int) -> PmJJ
surge.util.FinalLong -> bXSG:
    long i -> YyAu
    18:21:void <init>(long) -> <init>
    30:30:long get() -> get
    41:42:void set(long) -> set
    52:53:void add(long) -> add
    63:64:void sub(long) -> vHrN
surge.util.FinalString -> XItC:
    java.lang.String string -> string
    18:21:void <init>(java.lang.String) -> <init>
    30:30:java.lang.String get() -> get
    41:42:void set(java.lang.String) -> set
surge.util.Fingerprint -> oMWR:
    5:5:void <init>() -> <init>
    9:14:java.lang.String randomFingerprint(java.lang.String) -> lChL
surge.util.GListAdapter -> ePYq:
    16:16:void <init>() -> <init>
    27:39:java.util.List adapt(java.util.List) -> LFjP
    java.lang.Object onAdapt(java.lang.Object) -> KThy
surge.util.Health -> lCmU:
    double hp -> QqJb
    20:22:void <init>(double) -> <init>
    31:31:int getFlatHearts() -> Vneq
    41:41:double getHearts() -> ofmO
    51:51:double getHalfHearts() -> QVeh
    61:61:int getFlatHalfHearts() -> WOfj
surge.util.IO -> MlXd:
    char DIR_SEPARATOR_UNIX -> DIR_SEPARATOR_UNIX
    char DIR_SEPARATOR_WINDOWS -> DIR_SEPARATOR_WINDOWS
    char DIR_SEPARATOR -> DIR_SEPARATOR
    java.lang.String LINE_SEPARATOR_UNIX -> LINE_SEPARATOR_UNIX
    java.lang.String LINE_SEPARATOR_WINDOWS -> LINE_SEPARATOR_WINDOWS
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    97:122:void <clinit>() -> <clinit>
    129:130:void <init>() -> <init>
    146:154:void closeQuietly(java.io.Reader) -> closeQuietly
    169:177:void closeQuietly(java.io.Writer) -> closeQuietly
    192:200:void closeQuietly(java.io.InputStream) -> closeQuietly
    215:223:void closeQuietly(java.io.OutputStream) -> closeQuietly
    243:245:byte[] toByteArray(java.io.InputStream) -> toByteArray
    265:267:byte[] toByteArray(java.io.Reader) -> toByteArray
    293:295:byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    315:315:byte[] toByteArray(java.lang.String) -> toByteArray
    338:340:char[] toCharArray(java.io.InputStream) -> toCharArray
    366:368:char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    388:390:char[] toCharArray(java.io.Reader) -> toCharArray
    412:414:java.lang.String toString(java.io.InputStream) -> toString
    439:441:java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    460:462:java.lang.String toString(java.io.Reader) -> toString
    480:480:java.lang.String toString(byte[]) -> toString
    503:508:java.lang.String toString(byte[],java.lang.String) -> toString
    532:533:java.util.List readLines(java.io.InputStream) -> readLines
    559:565:java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    587:595:java.util.List readLines(java.io.Reader) -> readLines
    610:611:java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    632:633:java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    654:658:void write(byte[],java.io.OutputStream) -> write
    679:683:void write(byte[],java.io.Writer) -> write
    709:719:void write(byte[],java.io.Writer,java.lang.String) -> write
    740:744:void write(char[],java.io.Writer) -> write
    766:770:void write(char[],java.io.OutputStream) -> write
    797:807:void write(char[],java.io.OutputStream,java.lang.String) -> write
    826:830:void write(java.lang.String,java.io.Writer) -> write
    851:855:void write(java.lang.String,java.io.OutputStream) -> write
    880:890:void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    909:913:void write(java.lang.StringBuffer,java.io.Writer) -> write
    934:938:void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    963:973:void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    997:1014:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream) -> writeLines
    1041:1064:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String) -> writeLines
    1084:1101:void writeLines(java.util.Collection,java.lang.String,java.io.Writer) -> writeLines
    1132:1137:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    1160:1168:long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    1192:1194:void copy(java.io.InputStream,java.io.Writer) -> copy
    1222:1230:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    1260:1265:int copy(java.io.Reader,java.io.Writer) -> copy
    1288:1296:long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    1324:1328:void copy(java.io.Reader,java.io.OutputStream) -> copy
    1360:1370:void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    1394:1415:boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    1439:1460:boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
surge.util.Items -> MtiY:
    16:16:void <init>() -> <init>
    27:27:boolean is(org.bukkit.inventory.ItemStack) -> WiMd
    41:41:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material) -> WiMd
    56:56:boolean is(org.bukkit.inventory.ItemStack,surge.util.MaterialBlock) -> WiMd
    72:72:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,byte) -> WiMd
    88:88:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,int) -> WiMd
    100:100:boolean hasMeta(org.bukkit.inventory.ItemStack) -> jFPe
    112:112:boolean hasName(org.bukkit.inventory.ItemStack) -> qKEa
    124:124:boolean hasLore(org.bukkit.inventory.ItemStack) -> LFjP
    138:138:boolean hasName(org.bukkit.inventory.ItemStack,java.lang.String) -> WiMd
    152:152:boolean hasLore(org.bukkit.inventory.ItemStack,java.util.List) -> WiMd
    166:166:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment) -> WiMd
    182:187:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment,int) -> WiMd
    199:204:boolean hasEnchantments(org.bukkit.inventory.ItemStack) -> LyoC
    217:222:surge.util.MaterialBlock toMaterialBlock(org.bukkit.inventory.ItemStack) -> vISS
    234:234:boolean isBroken(org.bukkit.inventory.ItemStack) -> EAvA
    246:246:boolean hasDurability(org.bukkit.inventory.ItemStack) -> kkWP
    258:268:double getDurabilityPercent(org.bukkit.inventory.ItemStack) -> wDFU
    281:294:void setDurabilityPercent(org.bukkit.inventory.ItemStack,double) -> WiMd
    305:310:short getMaxDurability(org.bukkit.inventory.ItemStack) -> awKr
    322:327:short getDurability(org.bukkit.inventory.ItemStack) -> SBmt
    340:346:void setDurability(org.bukkit.inventory.ItemStack,short) -> WiMd
    358:364:void setDurability(org.bukkit.inventory.ItemStack,int) -> WiMd
    376:382:void damage(org.bukkit.inventory.ItemStack,int) -> jFPe
    396:439:boolean isMergable(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack) -> WiMd
surge.util.MSound -> BRgb:
    surge.util.MSound AMBIENCE_CAVE -> WimD
    surge.util.MSound AMBIENCE_RAIN -> gOIS
    surge.util.MSound AMBIENCE_THUNDER -> VUhS
    surge.util.MSound ANVIL_BREAK -> ioAn
    surge.util.MSound ANVIL_LAND -> wnwu
    surge.util.MSound ANVIL_USE -> Tqdi
    surge.util.MSound ARROW_HIT -> lnyR
    surge.util.MSound BURP -> afiE
    surge.util.MSound CHEST_CLOSE -> jGQP
    surge.util.MSound CHEST_OPEN -> urDb
    surge.util.MSound CLICK -> PmjA
    surge.util.MSound DOOR_CLOSE -> ELGr
    surge.util.MSound DOOR_OPEN -> GtPs
    surge.util.MSound DRINK -> PCUu
    surge.util.MSound EAT -> ChDw
    surge.util.MSound EXPLODE -> PSvp
    surge.util.MSound FALL_BIG -> IiUm
    surge.util.MSound FALL_SMALL -> WjMm
    surge.util.MSound FIRE -> eQSY
    surge.util.MSound FIRE_IGNITE -> wgHM
    surge.util.MSound FIZZ -> rFUw
    surge.util.MSound FUSE -> BJoC
    surge.util.MSound GLASS -> EKfD
    surge.util.MSound HURT_FLESH -> temn
    surge.util.MSound ITEM_BREAK -> QEvb
    surge.util.MSound ITEM_PICKUP -> Puxa
    surge.util.MSound LAVA -> AjNy
    surge.util.MSound LAVA_POP -> lxIv
    surge.util.MSound LEVEL_UP -> qmfe
    surge.util.MSound MINECART_BASE -> JlWb
    surge.util.MSound MINECART_INSIDE -> uhpv
    surge.util.MSound NOTE_BASS -> PSud
    surge.util.MSound NOTE_PIANO -> aUgH
    surge.util.MSound NOTE_BASS_DRUM -> WjLi
    surge.util.MSound NOTE_STICKS -> IiTm
    surge.util.MSound NOTE_BASS_GUITAR -> Jkvt
    surge.util.MSound NOTE_SNARE_DRUM -> kBAv
    surge.util.MSound NOTE_PLING -> aVHE
    surge.util.MSound ORB_PICKUP -> IWuH
    surge.util.MSound PISTON_EXTEND -> nKOB
    surge.util.MSound PISTON_RETRACT -> gFYf
    surge.util.MSound PORTAL -> hsoy
    surge.util.MSound PORTAL_TRAVEL -> bGjo
    surge.util.MSound PORTAL_TRIGGER -> uPCg
    surge.util.MSound SHOOT_ARROW -> kItr
    surge.util.MSound SPLASH -> lfjm
    surge.util.MSound SPLASH2 -> vRdn
    surge.util.MSound STEP_GRASS -> YEam
    surge.util.MSound STEP_GRAVEL -> gOJd
    surge.util.MSound STEP_LADDER -> CEbK
    surge.util.MSound STEP_SAND -> cmRb
    surge.util.MSound STEP_SNOW -> QNkj
    surge.util.MSound STEP_STONE -> mYMO
    surge.util.MSound STEP_WOOD -> URfP
    surge.util.MSound STEP_WOOL -> DrxM
    surge.util.MSound SWIM -> IaFO
    surge.util.MSound WATER -> HwTf
    surge.util.MSound WOOD_CLICK -> HUQj
    surge.util.MSound BAT_DEATH -> VLxB
    surge.util.MSound BAT_HURT -> YWCL
    surge.util.MSound BAT_IDLE -> rOIP
    surge.util.MSound BAT_LOOP -> nKMR
    surge.util.MSound BAT_TAKEOFF -> awlU
    surge.util.MSound BLAZE_BREATH -> MdbB
    surge.util.MSound BLAZE_DEATH -> UAeK
    surge.util.MSound BLAZE_HIT -> rEwF
    surge.util.MSound CAT_HISS -> JIvU
    surge.util.MSound CAT_HIT -> fuyX
    surge.util.MSound CAT_MEOW -> mYLL
    surge.util.MSound CAT_PURR -> ivqs
    surge.util.MSound CAT_PURREOW -> YEdC
    surge.util.MSound CHICKEN_IDLE -> CWGN
    surge.util.MSound CHICKEN_HURT -> iDRO
    surge.util.MSound CHICKEN_EGG_POP -> IWwS
    surge.util.MSound CHICKEN_WALK -> IrKL
    surge.util.MSound COW_IDLE -> NFDy
    surge.util.MSound COW_HURT -> HUUP
    surge.util.MSound COW_WALK -> WGnA
    surge.util.MSound CREEPER_HISS -> cudT
    surge.util.MSound CREEPER_DEATH -> dpWL
    surge.util.MSound ENDERDRAGON_DEATH -> SLca
    surge.util.MSound ENDERDRAGON_GROWL -> yvCq
    surge.util.MSound ENDERDRAGON_HIT -> AGnU
    surge.util.MSound ENDERDRAGON_WINGS -> UdKx
    surge.util.MSound ENDERMAN_DEATH -> agNb
    surge.util.MSound ENDERMAN_HIT -> Oayc
    surge.util.MSound ENDERMAN_IDLE -> NoxV
    surge.util.MSound ENDERMAN_TELEPORT -> gNkn
    surge.util.MSound ENDERMAN_SCREAM -> wflH
    surge.util.MSound ENDERMAN_STARE -> DYgw
    surge.util.MSound GHAST_SCREAM -> vdIM
    surge.util.MSound GHAST_SCREAM2 -> kBGK
    surge.util.MSound GHAST_CHARGE -> XeBw
    surge.util.MSound GHAST_DEATH -> ifSs
    surge.util.MSound GHAST_FIREBALL -> axNX
    surge.util.MSound GHAST_MOAN -> agLf
    surge.util.MSound IRONGOLEM_DEATH -> HCqe
    surge.util.MSound IRONGOLEM_HIT -> vuIq
    surge.util.MSound IRONGOLEM_THROW -> Oryl
    surge.util.MSound IRONGOLEM_WALK -> RbqV
    surge.util.MSound MAGMACUBE_WALK -> OPvk
    surge.util.MSound MAGMACUBE_WALK2 -> Sest
    surge.util.MSound MAGMACUBE_JUMP -> YgfT
    surge.util.MSound PIG_IDLE -> wgKj
    surge.util.MSound PIG_DEATH -> fLIY
    surge.util.MSound PIG_WALK -> kuJk
    surge.util.MSound SHEEP_IDLE -> LiqR
    surge.util.MSound SHEEP_SHEAR -> sbnm
    surge.util.MSound SHEEP_WALK -> jPEL
    surge.util.MSound SILVERFISH_HIT -> QNlj
    surge.util.MSound SILVERFISH_KILL -> mYNQ
    surge.util.MSound SILVERFISH_IDLE -> Mdcg
    surge.util.MSound SILVERFISH_WALK -> wVMd
    surge.util.MSound SKELETON_IDLE -> WacA
    surge.util.MSound SKELETON_DEATH -> USLR
    surge.util.MSound SKELETON_HURT -> nTDU
    surge.util.MSound SKELETON_WALK -> wgNy
    surge.util.MSound SLIME_ATTACK -> mrby
    surge.util.MSound SLIME_WALK -> oyJA
    surge.util.MSound SLIME_WALK2 -> XCDJ
    surge.util.MSound SPIDER_IDLE -> neDv
    surge.util.MSound SPIDER_DEATH -> RlFh
    surge.util.MSound SPIDER_WALK -> tfUp
    surge.util.MSound WITHER_DEATH -> cBaw
    surge.util.MSound WITHER_HURT -> vckJ
    surge.util.MSound WITHER_IDLE -> KxTE
    surge.util.MSound WITHER_SHOOT -> XvIA
    surge.util.MSound WITHER_SPAWN -> KgOt
    surge.util.MSound WOLF_BARK -> BuiR
    surge.util.MSound WOLF_DEATH -> uFsw
    surge.util.MSound WOLF_GROWL -> TPHN
    surge.util.MSound WOLF_HOWL -> RtUS
    surge.util.MSound WOLF_HURT -> kckK
    surge.util.MSound WOLF_PANT -> vRiE
    surge.util.MSound WOLF_SHAKE -> mbBI
    surge.util.MSound WOLF_WALK -> Ojjy
    surge.util.MSound WOLF_WHINE -> PKlH
    surge.util.MSound ZOMBIE_METAL -> lxPK
    surge.util.MSound ZOMBIE_WOOD -> oWFC
    surge.util.MSound ZOMBIE_WOODBREAK -> JBKM
    surge.util.MSound ZOMBIE_IDLE -> Coyf
    surge.util.MSound ZOMBIE_DEATH -> nvEg
    surge.util.MSound ZOMBIE_HURT -> UclP
    surge.util.MSound ZOMBIE_INFECT -> baaW
    surge.util.MSound ZOMBIE_UNFECT -> WjRs
    surge.util.MSound ZOMBIE_REMEDY -> iTwA
    surge.util.MSound ZOMBIE_WALK -> iDUp
    surge.util.MSound ZOMBIE_PIG_IDLE -> gqUC
    surge.util.MSound ZOMBIE_PIG_ANGRY -> VgSB
    surge.util.MSound ZOMBIE_PIG_DEATH -> KxUS
    surge.util.MSound ZOMBIE_PIG_HURT -> AQDh
    surge.util.MSound DIG_WOOL -> BujL
    surge.util.MSound DIG_GRASS -> dgjK
    surge.util.MSound DIG_GRAVEL -> WjUi
    surge.util.MSound DIG_SAND -> VxTk
    surge.util.MSound DIG_SNOW -> oyKh
    surge.util.MSound DIG_STONE -> iTvQ
    surge.util.MSound DIG_WOOD -> kuPK
    surge.util.MSound FIREWORK_BLAST -> cuiM
    surge.util.MSound FIREWORK_BLAST2 -> FNre
    surge.util.MSound FIREWORK_LARGE_BLAST -> lUoN
    surge.util.MSound FIREWORK_LARGE_BLAST2 -> GATv
    surge.util.MSound FIREWORK_TWINKLE -> HoME
    surge.util.MSound FIREWORK_TWINKLE2 -> LXtf
    surge.util.MSound FIREWORK_LAUNCH -> aVPk
    surge.util.MSound SUCCESSFUL_HIT -> XKUK
    surge.util.MSound HORSE_ANGRY -> RJDR
    surge.util.MSound HORSE_ARMOR -> GRUK
    surge.util.MSound HORSE_BREATHE -> FOQh
    surge.util.MSound HORSE_DEATH -> ssuL
    surge.util.MSound HORSE_GALLOP -> BeKD
    surge.util.MSound HORSE_HIT -> dNVv
    surge.util.MSound HORSE_IDLE -> CMyh
    surge.util.MSound HORSE_JUMP -> SniO
    surge.util.MSound HORSE_LAND -> gpsE
    surge.util.MSound HORSE_SADDLE -> misV
    surge.util.MSound HORSE_SOFT -> sIac
    surge.util.MSound HORSE_WOOD -> MBcw
    surge.util.MSound DONKEY_ANGRY -> skeE
    surge.util.MSound DONKEY_DEATH -> jPJC
    surge.util.MSound DONKEY_HIT -> TGYO
    surge.util.MSound DONKEY_IDLE -> gXAP
    surge.util.MSound HORSE_SKELETON_DEATH -> Wrec
    surge.util.MSound HORSE_SKELETON_HIT -> mjSV
    surge.util.MSound HORSE_SKELETON_IDLE -> gNnl
    surge.util.MSound HORSE_ZOMBIE_DEATH -> fnOl
    surge.util.MSound HORSE_ZOMBIE_HIT -> mYQi
    surge.util.MSound HORSE_ZOMBIE_IDLE -> FGBY
    surge.util.MSound VILLAGER_DEATH -> MTFw
    surge.util.MSound VILLAGER_HAGGLE -> lwqU
    surge.util.MSound VILLAGER_HIT -> aVOj
    surge.util.MSound VILLAGER_IDLE -> yvFn
    surge.util.MSound VILLAGER_NO -> vSKW
    surge.util.MSound VILLAGER_YES -> MShf
    java.lang.String pre19sound -> tMIF
    java.lang.String post19sound -> pHkd
    org.bukkit.Sound resolvedSound -> SCxI
    surge.util.MSound[] ENUM$VALUES -> kcpV
    8:203:void <clinit>() -> <clinit>
    207:213:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    217:229:org.bukkit.Sound bukkitSound() -> IXAH
    1:1:surge.util.MSound[] values() -> values
    1:1:surge.util.MSound valueOf(java.lang.String) -> valueOf
surge.util.MaterialBlock -> VncI:
    org.bukkit.Material material -> dFJJ
    java.lang.Byte data -> GRXY
    26:29:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    32:35:void <init>(org.bukkit.Material) -> <init>
    38:41:void <init>(org.bukkit.Location) -> <init>
    44:47:void <init>() -> <init>
    51:51:org.bukkit.Material getMaterial() -> getMaterial
    56:57:void setMaterial(org.bukkit.Material) -> setMaterial
    61:61:java.lang.Byte getData() -> Gayu
    66:67:void setData(java.lang.Byte) -> WiMd
    72:77:java.lang.String toString() -> toString
    83:87:int hashCode() -> hashCode
    93:121:boolean equals(java.lang.Object) -> equals
surge.util.P -> xGOa:
    25:25:void <init>() -> <init>
    36:36:boolean isOnline(java.lang.String) -> HBqC
    48:48:org.bukkit.entity.Player getPlayer(java.lang.String) -> getPlayer
    58:58:org.bukkit.entity.Player getAnyPlayer() -> XBHo
    68:68:boolean isAnyOnline() -> ghGO
    80:80:surge.collection.GList inWorld(org.bukkit.World) -> qKEa
    92:104:surge.collection.GList inChunk(org.bukkit.Chunk) -> qKEa
    118:118:surge.collection.GList inArea(org.bukkit.Location,double) -> qKEa
    132:132:surge.collection.GList inArea(org.bukkit.Location,int) -> WiMd
    143:144:void disable(org.bukkit.entity.Player) -> ugrD
    154:155:void enable(org.bukkit.entity.Player) -> NoTf
    168:168:org.bukkit.Location targetBlock(org.bukkit.entity.Player,int) -> WiMd
    182:182:org.bukkit.entity.Entity targetEntity(org.bukkit.entity.Player,int) -> jFPe
    194:195:boolean hasInventoryOpen(org.bukkit.entity.Player) -> vRCh
    211:243:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Player,double,double) -> WiMd
    257:266:int getTotalExperience(org.bukkit.entity.Player) -> vHrN
    281:289:void setTotalExperience(org.bukkit.entity.Player,int) -> qKEa
    300:300:boolean canFindPlayer(java.lang.String) -> GQPU
    312:328:org.bukkit.entity.Player findPlayer(java.lang.String) -> Vekc
    338:345:surge.collection.GList onlinePlayers() -> GkLc
    357:357:org.bukkit.Location getCrotchLocation(org.bukkit.entity.Player) -> KThy
    368:371:void clear(org.bukkit.entity.Player) -> vsfW
    381:385:void clearEffects(org.bukkit.entity.Player) -> eGbV
    398:399:void heal(org.bukkit.entity.Player,double) -> WiMd
    409:410:void heal(org.bukkit.entity.Player) -> jgsA
    421:422:void resetMaxHeath(org.bukkit.entity.Player) -> roiu
    432:433:void resetHunger(org.bukkit.entity.Player) -> vcEa
    443:444:void kill(org.bukkit.entity.Player) -> pjDa
    455:455:surge.util.Shape getShape(org.bukkit.entity.Player) -> dxBy
    467:467:org.bukkit.Location getHand(org.bukkit.entity.Player) -> oMOF
    483:492:org.bukkit.Location getHand(org.bukkit.entity.Player,float,float) -> WiMd
surge.util.P$1 -> xGOa$1:
    1:92:void <init>() -> <init>
    97:102:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> qKEa
    1:1:java.lang.Object onAdapt(java.lang.Object) -> KThy
surge.util.P$2 -> xGOa$2:
    java.lang.Double val$doff -> ceIj
    org.bukkit.entity.Player val$e -> GQvx
    org.bukkit.entity.Entity[] val$result -> cuiw
    1:224:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Player,org.bukkit.entity.Entity[]) -> <init>
    229:240:void onTrace(org.bukkit.Location) -> wDFU
surge.util.PE -> WhuB:
    surge.util.PE ABSORPTION -> rORp
    surge.util.PE BLINDNESS -> DRAA
    surge.util.PE CONFUSION -> qwDC
    surge.util.PE DAMAGE_RESISTANCE -> JRow
    surge.util.PE FAST_DIGGING -> ogjy
    surge.util.PE FIRE_RESISTANCE -> BBgR
    surge.util.PE GLOWING -> MShs
    surge.util.PE HARM -> yeIJ
    surge.util.PE HEAL -> NxoX
    surge.util.PE HEALTH_BOOST -> PCaK
    surge.util.PE HUNGER -> QqWu
    surge.util.PE INCREASE_DAMAGE -> ySfP
    surge.util.PE INVISIBILITY -> oMxM
    surge.util.PE JUMP -> Vfrk
    surge.util.PE LEVITATION -> HMIf
    surge.util.PE LUCK -> GJFh
    surge.util.PE NIGHT_VISION -> Laep
    surge.util.PE POISON -> MeIr
    surge.util.PE REGENERATION -> nTGW
    surge.util.PE SATURATION -> DYna
    surge.util.PE SLOW -> FGDM
    surge.util.PE SLOW_DIGGING -> BSii
    surge.util.PE SPEED -> yJsy
    surge.util.PE UNLUCK -> BCHw
    surge.util.PE WATER_BREATHING -> WjVi
    surge.util.PE WEAKNESS -> lNAA
    surge.util.PE WITHER -> aDpI
    192:215:void <clinit>() -> <clinit>
    50:51:void <init>(java.util.Map) -> <init>
    55:56:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> <init>
    60:61:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean) -> <init>
    65:66:void <init>(org.bukkit.potion.PotionEffectType,int,int) -> <init>
    71:71:java.util.Map serialize() -> serialize
    77:79:boolean apply(org.bukkit.entity.LivingEntity) -> apply
    85:85:boolean equals(java.lang.Object) -> equals
    91:91:int getAmplifier() -> getAmplifier
    97:97:int getDuration() -> getDuration
    103:103:org.bukkit.potion.PotionEffectType getType() -> getType
    109:109:boolean isAmbient() -> isAmbient
    115:115:boolean hasParticles() -> hasParticles
    121:121:int hashCode() -> hashCode
    127:127:java.lang.String toString() -> toString
    132:132:surge.util.PE defaulted(org.bukkit.potion.PotionEffectType) -> WiMd
    144:144:surge.util.PE d(int) -> jWPp
    156:156:surge.util.PE a(int) -> teNg
    166:166:org.bukkit.potion.PotionEffect c() -> mWts
    177:178:void c(org.bukkit.entity.LivingEntity) -> WiMd
    182:183:void crm(org.bukkit.entity.LivingEntity) -> jFPe
    187:188:void rm(org.bukkit.entity.LivingEntity) -> qKEa
surge.util.Paste -> hruX:
    15:15:void <init>() -> <init>
    28:36:java.lang.String paste(java.lang.String) -> afME
surge.util.Persist -> LGRv:
surge.util.PluginUtil -> sasP:
    61:61:void <init>() -> <init>
    72:74:void enable(org.bukkit.plugin.Plugin) -> WiMd
    81:85:void enableAll() -> BcmO
    95:99:void disable(org.bukkit.plugin.Plugin) -> jFPe
    106:110:void disableAll() -> RIHi
    121:121:java.lang.String getFormattedName(org.bukkit.plugin.Plugin) -> qKEa
    135:142:java.lang.String getFormattedName(org.bukkit.plugin.Plugin,boolean) -> WiMd
    154:159:org.bukkit.plugin.Plugin getPluginByName(java.lang.String) -> weia
    169:172:java.util.List getPluginNames(boolean) -> SBmt
    184:187:java.lang.String getPluginVersion(java.lang.String) -> PJiC
    200:222:java.lang.String getUsages(org.bukkit.plugin.Plugin) -> LFjP
    237:316:java.util.List findByCommand(java.lang.String) -> vtIP
    337:338:void load(org.bukkit.plugin.Plugin) -> LyoC
    342:364:java.lang.String getPluginFileName(java.lang.String) -> YxHA
    377:429:void load(java.lang.String) -> load
    441:446:void reload(org.bukkit.plugin.Plugin) -> vISS
    453:457:void reloadAll() -> oxOP
    469:595:void unload(org.bukkit.plugin.Plugin) -> EAvA
surge.util.PositionalSelector -> vslw:
    surge.collection.GSet allowedChunks -> MBgG
    12:15:void <init>() -> <init>
    19:21:void <init>(org.bukkit.Chunk) -> <init>
    23:26:void <init>(org.bukkit.World) -> <init>
    30:31:void addWorld(org.bukkit.World) -> addWorld
    35:36:void addAllWorlds() -> nuKq
    40:41:void addChunk(org.bukkit.Chunk) -> LFjP
    45:45:surge.collection.GSet getAllowedChunks() -> aniK
surge.util.Protocol -> lerk:
    surge.util.Protocol LATEST -> nTGA
    surge.util.Protocol R1_12_2 -> mPcD
    surge.util.Protocol R1_12_2_PRE -> NgmP
    surge.util.Protocol R1_12_1 -> bQEL
    surge.util.Protocol R1_12 -> GRXJ
    surge.util.Protocol R1_11_2 -> KftW
    surge.util.Protocol R1_11_1 -> ChQL
    surge.util.Protocol R1_11 -> Pmuf
    surge.util.Protocol R1_10_2 -> JBQc
    surge.util.Protocol R1_10_1 -> PKsF
    surge.util.Protocol R1_10 -> rWeY
    surge.util.Protocol R1_9_4 -> vAmh
    surge.util.Protocol R1_9_3 -> UApY
    surge.util.Protocol R1_9_2 -> KfwM
    surge.util.Protocol R1_9_1 -> xsHx
    surge.util.Protocol R1_9 -> sRWY
    surge.util.Protocol R1_8_9 -> xrhQ
    surge.util.Protocol R1_8_8 -> nSiS
    surge.util.Protocol R1_8_7 -> CElM
    surge.util.Protocol R1_8_6 -> LQHF
    surge.util.Protocol R1_8_5 -> slJH
    surge.util.Protocol R1_8_4 -> RJHU
    surge.util.Protocol R1_8_3 -> wUrH
    surge.util.Protocol R1_8_2 -> RlJu
    surge.util.Protocol R1_8_1 -> YgnN
    surge.util.Protocol R1_8 -> WjXr
    surge.util.Protocol R1_7_10 -> HLjj
    surge.util.Protocol R1_7_9 -> wwtd
    surge.util.Protocol R1_7_8 -> vlaj
    surge.util.Protocol R1_7_7 -> Arko
    surge.util.Protocol R1_7_6 -> IOnV
    surge.util.Protocol R1_7_5 -> vuSN
    surge.util.Protocol R1_7_4 -> XBhD
    surge.util.Protocol R1_7_3 -> nvKe
    surge.util.Protocol R1_7_2 -> VwwQ
    surge.util.Protocol R1_7_1 -> EKsA
    surge.util.Protocol B1_6_4 -> NyQV
    surge.util.Protocol B1_6_3 -> ohLu
    surge.util.Protocol B1_6_2 -> YVmA
    surge.util.Protocol B1_6_1 -> hIfN
    surge.util.Protocol B1_5_2 -> DjsG
    surge.util.Protocol B1_5_1 -> Lrjc
    surge.util.Protocol B1_5 -> UKBE
    surge.util.Protocol B1_4_7 -> fvdc
    surge.util.Protocol B1_4_6 -> uaPv
    surge.util.Protocol B1_4_5 -> dxrD
    surge.util.Protocol B1_4_4 -> SgAX
    surge.util.Protocol B1_4_2 -> agWr
    surge.util.Protocol B1_3_2 -> KMfq
    surge.util.Protocol B1_3_1 -> Ojtc
    surge.util.Protocol B1_2_5 -> ghjH
    surge.util.Protocol B1_2_4 -> ebcd
    surge.util.Protocol EARLIEST -> nBhv
    surge.util.Protocol UNKNOWN -> DkVa
    int version -> version
    java.lang.String search -> HgBS
    surge.util.Protocol[] $VALUES -> lNEm
    5:5:surge.util.Protocol[] values() -> values
    5:5:surge.util.Protocol valueOf(java.lang.String) -> valueOf
    66:74:void <init>(java.lang.String,int,int) -> <init>
    78:86:surge.util.Protocol getProtocolVersion() -> Dadj
    91:91:surge.util.ProtocolRange to(surge.util.Protocol) -> jFPe
    96:96:boolean isServerVersion() -> Tydl
    101:101:java.lang.String getVersionString() -> getVersionString
    106:106:boolean isNettySupported() -> mFvt
    111:111:boolean isActualVersion() -> aMGC
    116:121:int getVersion() -> getVersion
    126:126:int getMetaVersion() -> tKlE
    5:60:void <clinit>() -> <clinit>
surge.util.ProtocolRange -> Orab:
    surge.util.Protocol from -> aDuH
    surge.util.Protocol to -> PLUw
    9:12:void <init>(surge.util.Protocol,surge.util.Protocol) -> <init>
    16:16:surge.util.Protocol getFrom() -> IFaO
    21:21:surge.util.Protocol getTo() -> YobM
    26:26:boolean contains(surge.util.Protocol) -> qKEa
    32:32:java.lang.String toString() -> toString
surge.util.Range -> nIul:
    double min -> min
    double max -> max
    21:25:void <init>(double,double) -> <init>
    37:38:void <init>(int,int) -> <init>
    50:51:void <init>(long,long) -> <init>
    60:60:double randomNext() -> xPHj
    70:70:int randomNextInt() -> qBcM
    80:80:long randomNextLong() -> OQCk
    92:92:boolean isWithin(double) -> QUxU
    104:104:boolean isWithin(int) -> lChL
    116:116:boolean isWithin(long) -> KThy
    121:121:double getMin() -> getMin
    126:127:void setMin(double) -> hbLk
    131:131:double getMax() -> getMax
    136:137:void setMax(double) -> kbdh
surge.util.RayTrace -> gWEJ:
    org.bukkit.Location start -> rqYc
    org.bukkit.util.Vector direction -> bPiK
    java.lang.Double maxDistance -> nTLS
    java.lang.Double distanceCovered -> RlON
    java.lang.Double step -> yCHv
    java.lang.Boolean stop -> ghhW
    37:44:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double) -> <init>
    51:65:void trace() -> SwCV
    73:74:void stop() -> stop
    85:85:void onTrace(org.bukkit.Location) -> wDFU
    89:89:org.bukkit.Location getStart() -> ydLk
    94:95:void setStart(org.bukkit.Location) -> awKr
    99:99:org.bukkit.util.Vector getDirection() -> getDirection
    104:105:void setDirection(org.bukkit.util.Vector) -> setDirection
    109:109:java.lang.Double getMaxDistance() -> PCEh
    114:115:void setMaxDistance(java.lang.Double) -> qKEa
    119:119:java.lang.Double getDistanceCovered() -> Iptc
    124:125:void setDistanceCovered(java.lang.Double) -> LFjP
    129:129:java.lang.Double getStep() -> wTtX
    134:135:void setStep(java.lang.Double) -> LyoC
surge.util.ReflectionUtils -> VMBy:
    33:36:void <init>() -> <init>
    56:65:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    89:89:java.lang.reflect.Constructor getConstructor(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.Class[]) -> WiMd
    119:119:java.lang.Object instantiateObject(java.lang.Class,java.lang.Object[]) -> WiMd
    156:156:java.lang.Object instantiateObject(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.Object[]) -> WiMd
    178:187:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    213:213:java.lang.reflect.Method getMethod(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Class[]) -> WiMd
    243:243:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    276:276:java.lang.Object invokeMethod(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Object[]) -> WiMd
    312:312:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Object[]) -> WiMd
    332:334:java.lang.reflect.Field getField(java.lang.Class,boolean,java.lang.String) -> WiMd
    360:360:java.lang.reflect.Field getField(java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> WiMd
    387:387:java.lang.Object getValue(java.lang.Object,java.lang.Class,boolean,java.lang.String) -> WiMd
    419:419:java.lang.Object getValue(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> WiMd
    446:446:java.lang.Object getValue(java.lang.Object,boolean,java.lang.String) -> WiMd
    475:476:void setValue(java.lang.Object,java.lang.Class,boolean,java.lang.String,java.lang.Object) -> WiMd
    509:510:void setValue(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String,java.lang.Object) -> WiMd
    536:537:void setValue(java.lang.Object,boolean,java.lang.String,java.lang.Object) -> WiMd
surge.util.ReflectionUtils$DataType -> VMBy$WiMd:
    surge.util.ReflectionUtils$DataType BYTE -> ChRO
    surge.util.ReflectionUtils$DataType SHORT -> numV
    surge.util.ReflectionUtils$DataType INTEGER -> rOUh
    surge.util.ReflectionUtils$DataType LONG -> KpIj
    surge.util.ReflectionUtils$DataType CHARACTER -> oFMK
    surge.util.ReflectionUtils$DataType FLOAT -> TPPU
    surge.util.ReflectionUtils$DataType DOUBLE -> TXaI
    surge.util.ReflectionUtils$DataType BOOLEAN -> bHWW
    java.util.Map CLASS_MAP -> PUFI
    java.lang.Class primitive -> xGvA
    java.lang.Class reference -> BmaE
    surge.util.ReflectionUtils$DataType[] ENUM$VALUES -> TPQI
    632:646:void <clinit>() -> <clinit>
    656:660:void <init>(java.lang.String,int,java.lang.Class,java.lang.Class) -> <init>
    669:669:java.lang.Class getPrimitive() -> wDSu
    679:679:java.lang.Class getReference() -> Xtod
    691:691:surge.util.ReflectionUtils$DataType fromClass(java.lang.Class) -> jFPe
    704:705:java.lang.Class getPrimitive(java.lang.Class) -> qKEa
    718:719:java.lang.Class getReference(java.lang.Class) -> LFjP
    731:737:java.lang.Class[] getPrimitive(java.lang.Class[]) -> WiMd
    749:755:java.lang.Class[] getReference(java.lang.Class[]) -> jFPe
    767:773:java.lang.Class[] getPrimitive(java.lang.Object[]) -> jFPe
    785:791:java.lang.Class[] getReference(java.lang.Object[]) -> qKEa
    805:819:boolean compare(java.lang.Class[],java.lang.Class[]) -> WiMd
    1:1:surge.util.ReflectionUtils$DataType[] values() -> values
    1:1:surge.util.ReflectionUtils$DataType valueOf(java.lang.String) -> valueOf
surge.util.ReflectionUtils$PackageType -> VMBy$jFPe:
    surge.util.ReflectionUtils$PackageType MINECRAFT_SERVER -> IaRp
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT -> uaOe
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_BLOCK -> cJyk
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CHUNKIO -> uqot
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_COMMAND -> kRqS
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CONVERSATIONS -> qKrE
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENCHANTMENS -> Fyks
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENTITY -> uaPQ
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_EVENT -> lpGl
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_GENERATOR -> etEI
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_HELP -> WXyL
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_INVENTORY -> ecCX
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_MAP -> JRsj
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_METADATA -> yTJT
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_POTION -> FOXn
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_PROJECTILES -> RJLx
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCHEDULER -> oFPI
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCOREBOARD -> kKDx
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UPDATER -> UuXx
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UTIL -> ydnT
    java.lang.String path -> path
    surge.util.ReflectionUtils$PackageType[] ENUM$VALUES -> sknU
    548:550:void <clinit>() -> <clinit>
    560:563:void <init>(java.lang.String,int,java.lang.String) -> <init>
    575:576:void <init>(java.lang.String,int,surge.util.ReflectionUtils$PackageType,java.lang.String) -> <init>
    585:585:java.lang.String getPath() -> getPath
    600:600:java.lang.Class getClass(java.lang.String) -> getClass
    607:607:java.lang.String toString() -> toString
    617:617:java.lang.String getServerVersion() -> getServerVersion
    1:1:surge.util.ReflectionUtils$PackageType[] values() -> values
    1:1:surge.util.ReflectionUtils$PackageType valueOf(java.lang.String) -> valueOf
surge.util.Refreshable -> DYQC:
    void refresh() -> refresh
surge.util.SQLOperation -> bWuE:
    surge.util.SQLOperation LOAD -> Fhlt
    surge.util.SQLOperation SAVE -> OkXE
    surge.util.SQLOperation[] ENUM$VALUES -> Eeiv
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:surge.util.SQLOperation[] values() -> values
    1:1:surge.util.SQLOperation valueOf(java.lang.String) -> valueOf
surge.util.ServerState -> LaIB:
    surge.util.ServerState START -> Swcv
    surge.util.ServerState ENABLE -> oVoo
    surge.util.ServerState DISABLE -> maka
    surge.util.ServerState STOP -> EDIE
    surge.util.ServerState RUNNING -> opcJ
    surge.util.ServerState[] ENUM$VALUES -> pIRb
    3:37:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:surge.util.ServerState[] values() -> values
    1:1:surge.util.ServerState valueOf(java.lang.String) -> valueOf
surge.util.Shape -> wTpp:
    org.bukkit.Location location -> lnmB
    org.bukkit.util.Vector offset -> nBkd
    org.bukkit.util.Vector size -> DcIH
    27:32:void <init>(org.bukkit.Location,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    44:45:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    55:56:void <init>(org.bukkit.Location) -> <init>
    67:80:boolean isWithinShape(org.bukkit.Location) -> SBmt
    90:94:org.bukkit.Location randomLocation() -> lUVX
    104:104:org.bukkit.Location randomSurface() -> QhKn
    114:114:org.bukkit.Location getCenter() -> getCenter
    119:119:org.bukkit.Location getLocation() -> getLocation
    124:124:org.bukkit.util.Vector getOffset() -> KLhE
    129:129:org.bukkit.util.Vector getSize() -> ytmX
surge.util.SnowLevel -> MIxJ:
    byte level -> tLli
    18:21:void <init>(byte) -> <init>
    30:40:byte getLevel() -> yuMw
    51:52:void setLevel(byte) -> qKEa
surge.util.T -> BJXd:
    15:17:void <init>() -> <init>
    void onStop(long,double) -> WiMd
    32:35:void stop() -> stop
surge.util.TXT -> BRhj:
    12:12:void <init>() -> <init>
    25:25:java.lang.String repeat(java.lang.String,int) -> repeat
    39:47:surge.collection.GList wrap(java.lang.String,int) -> LyoC
    67:67:java.lang.String makeTag(surge.util.C,surge.util.C,surge.util.C,surge.util.C,java.lang.String) -> WiMd
    85:85:java.lang.String makeTag(surge.util.C,surge.util.C,surge.util.C,java.lang.String) -> WiMd
    99:99:java.lang.String line(surge.util.C,int) -> WiMd
    113:113:java.lang.String underline(surge.util.C,int) -> jFPe
    135:140:java.lang.String getLine(surge.util.C,int,double,java.lang.String,java.lang.String,java.lang.String) -> WiMd
surge.util.Tag -> YUlH:
    java.lang.String value() -> value
surge.util.Timer -> nSGc:
    long tns -> rykX
    long cns -> qTdw
    19:23:void <init>() -> <init>
    30:31:void start() -> start
    38:40:void stop() -> stop
    49:49:long getTime() -> getTime
    59:59:long getLastRun() -> sPyF
surge.util.VectorMath -> tdyM:
    int[] $SWITCH_TABLE$surge$util$Axis -> yvPO
    int[] $SWITCH_TABLE$org$bukkit$block$BlockFace -> MCLw
    16:16:void <init>() -> <init>
    20:30:org.bukkit.util.Vector scaleStatic(surge.util.Axis,org.bukkit.util.Vector,double) -> WiMd
    35:40:org.bukkit.util.Vector scaleX(org.bukkit.util.Vector,double) -> WiMd
    45:50:org.bukkit.util.Vector scaleY(org.bukkit.util.Vector,double) -> jFPe
    55:60:org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector,double) -> qKEa
    65:67:org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) -> WiMd
    72:75:boolean isLookingNear(org.bukkit.Location,org.bukkit.Location,double) -> jFPe
    80:80:org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) -> jFPe
    85:85:org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) -> qKEa
    90:90:org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) -> LFjP
    95:95:org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) -> LyoC
    100:100:org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) -> vISS
    105:105:org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) -> EAvA
    110:110:double round(double,int) -> LyoC
    115:118:org.bukkit.util.Vector clip(org.bukkit.util.Vector,int) -> WiMd
    123:136:org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector,org.bukkit.util.Vector,double) -> WiMd
    149:234:surge.collection.GList split(org.bukkit.block.BlockFace) -> WiMd
    248:248:org.bukkit.util.Vector direction(org.bukkit.Location,org.bukkit.Location) -> qKEa
    253:253:org.bukkit.util.Vector directionNoNormal(org.bukkit.Location,org.bukkit.Location) -> LFjP
    267:267:org.bukkit.util.Vector toVector(float,float) -> WiMd
    280:281:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> WiMd
    295:298:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector,double) -> WiMd
    309:324:org.bukkit.util.Vector reverse(org.bukkit.util.Vector) -> kkWP
    336:339:double getSpeed(org.bukkit.util.Vector) -> wDFU
    353:360:surge.collection.GList shift(org.bukkit.util.Vector,surge.collection.GList) -> WiMd
    372:414:org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) -> awKr
    428:440:org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector,float) -> WiMd
    454:466:org.bukkit.util.Vector angleRight(org.bukkit.util.Vector,float) -> jFPe
    480:489:org.bukkit.util.Vector angleUp(org.bukkit.util.Vector,float) -> qKEa
    503:512:org.bukkit.util.Vector angleDown(org.bukkit.util.Vector,float) -> LFjP
    525:573:org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) -> SBmt
    16:16:int[] $SWITCH_TABLE$surge$util$Axis() -> JJDF
    16:16:int[] $SWITCH_TABLE$org$bukkit$block$BlockFace() -> TqRy
surge.util.VectorMath$1 -> tdyM$1:
    org.bukkit.util.Vector val$vector -> vRri
    1:353:void <init>(org.bukkit.util.Vector) -> <init>
    358:358:org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) -> pidO
    1:1:java.lang.Object onAdapt(java.lang.Object) -> KThy
surge.util.W -> QMtH:
    30:30:void <init>() -> <init>
    41:49:boolean visible(org.bukkit.block.Block) -> qKEa
    62:65:void colorArmor(org.bukkit.inventory.ItemStack,org.bukkit.Color) -> WiMd
    76:87:org.bukkit.entity.Entity getEntity(int) -> HBqC
    102:115:int count(org.bukkit.entity.Player,surge.util.MaterialBlock) -> WiMd
    132:132:boolean has(org.bukkit.entity.Player,surge.util.MaterialBlock,int) -> WiMd
    144:144:int getChunkX(org.bukkit.block.Block) -> LFjP
    156:156:int getChunkY(org.bukkit.block.Block) -> LyoC
    169:170:void dropXp(org.bukkit.Location,int) -> jFPe
    181:181:int getChunkZ(org.bukkit.block.Block) -> vISS
    197:204:void take(org.bukkit.entity.Player,surge.util.MaterialBlock,int) -> jFPe
    220:228:int getManhattanDistance(org.bukkit.Location,org.bukkit.Location,boolean) -> WiMd
    233:240:surge.collection.GList news(org.bukkit.Location) -> pidO
    257:265:int getManhattanDistance(org.bukkit.block.Block,org.bukkit.block.Block,boolean) -> WiMd
    277:277:surge.collection.GList getBlocks(org.bukkit.Chunk) -> LyoC
    289:289:org.bukkit.World getSyncWorld(org.bukkit.World) -> LFjP
    301:301:org.bukkit.World toSync(org.bukkit.World) -> LyoC
    313:313:org.bukkit.block.Block toSync(org.bukkit.block.Block) -> EAvA
    325:325:org.bukkit.Location toSync(org.bukkit.Location) -> mFhO
    337:337:org.bukkit.Chunk toSync(org.bukkit.Chunk) -> vISS
    353:420:surge.util.MaterialBlock getMaterialBlock(java.lang.String) -> ksiH
    434:446:org.bukkit.block.Block[] getRelative(org.bukkit.block.Block,org.bukkit.block.BlockFace[]) -> WiMd
    461:462:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData) -> WiMd
    479:480:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData,boolean) -> WiMd
    494:495:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int) -> WiMd
    512:513:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int,boolean) -> WiMd
    526:527:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData) -> WiMd
    542:543:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData,boolean) -> WiMd
    559:569:int getHighestPotionLevel(org.bukkit.potion.PotionEffectType,java.util.Collection) -> WiMd
    581:588:surge.collection.GList chunkFaces(org.bukkit.Chunk) -> EAvA
    600:609:surge.collection.GList blockFaces(org.bukkit.block.Block) -> kkWP
    621:635:org.bukkit.Location simulateFall(org.bukkit.Location) -> ugrD
    649:661:surge.collection.GList chunkRadius(org.bukkit.Chunk,int) -> LFjP
    675:687:surge.collection.GList blockRadius(org.bukkit.block.Block,int) -> WiMd
    709:741:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Entity,double,double) -> WiMd
    759:766:boolean isLookingAt(org.bukkit.entity.Entity,org.bukkit.entity.Entity,double,double) -> WiMd
    780:780:double differenceOfVectors(org.bukkit.util.Vector,org.bukkit.util.Vector) -> WiMd
surge.util.W$1 -> QMtH$1:
    java.lang.Double val$doff -> ceIj
    org.bukkit.entity.Entity val$e -> qTeT
    org.bukkit.entity.Entity[] val$result -> cuiw
    723:723:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Entity,org.bukkit.entity.Entity[]) -> <init>
    727:738:void onTrace(org.bukkit.Location) -> wDFU
surge.util.Worlds -> Bkyx:
    13:13:void <init>() -> <init>
    22:22:surge.collection.GList getWorlds() -> lCsQ
    34:34:boolean hasWorld(java.lang.String) -> jpfF
    46:46:org.bukkit.World getWorld(java.lang.String) -> getWorld
surge.util.package-info -> fmST:
