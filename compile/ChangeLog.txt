// ["ChangeLog.txt" version=8.0.8 encoding="UTF-8" 2017.10.30 15:34:05]
// DO NOT EDIT THIS FILE. You need it to interpret exception stack traces.


Package: react	NameNotChanged
Package: react.action	NameNotChanged
Package: react.api	NameNotChanged
Package: react.command	NameNotChanged
Package: react.controller	NameNotChanged
Package: react.sampler	NameNotChanged
Package: surge	NameNotChanged
Package: surge.cluster	NameNotChanged
Package: surge.collection	NameNotChanged
Package: surge.control	NameNotChanged
Package: surge.hotload	NameNotChanged
Package: surge.json	NameNotChanged
Package: surge.math	NameNotChanged
Package: surge.nms	NameNotChanged
Package: surge.pool	NameNotChanged
Package: surge.sched	NameNotChanged
Package: surge.server	NameNotChanged
Package: surge.text	NameNotChanged
Package: surge.util	NameNotChanged



Class: public react.Base	NameNotChanged
	Source: "Base.java"
	FieldsOf: react.Base
	MethodsOf: react.Base
		public static void msg(org.bukkit.command.CommandSender, java.lang.String) 	NameNotChanged
	LineNumbersOf: react.Base
		8	=>	2
		12	=>	1
		13	=>	3

Class: public react.CrackerChecker	NameNotChanged
	Source: "CrackerChecker.java"
	FieldsOf: react.CrackerChecker
		public static final java.lang.String uid	NameNotChanged
	MethodsOf: react.CrackerChecker
		public void doCheck() 	NameNotChanged
		public boolean isCracked() 	NameNotChanged
	LineNumbersOf: react.CrackerChecker
		5	=>	3
		11	=>	2
		16	=>	1
		18	=>	4
		20	=>	5

Class: public react.Info	NameNotChanged
	Source: "Info.java"
	FieldsOf: react.Info
		public static java.lang.String ACTION_PURGE_ENTITIES_DESCRIPTION	NameNotChanged
		public static java.lang.String ACTION_PURGE_ENTITIES_NAME	NameNotChanged
		public static java.lang.String ACTION_PURGE_ENTITIES_STATUS	NameNotChanged
		public static java.lang.String[] ACTION_PURGE_ENTITIES_TAGS	NameNotChanged
		public static java.lang.String COMMAND_ACT	NameNotChanged
		public static java.lang.String COMMAND_ACT_ALIAS_1	NameNotChanged
		public static java.lang.String COMMAND_ACT_ALIAS_2	NameNotChanged
		public static java.lang.String COMMAND_ACT_DESCRIPTION	NameNotChanged
		public static java.lang.String COMMAND_ACT_USAGE	NameNotChanged
		public static java.lang.String COMMAND_HELP	NameNotChanged
		public static java.lang.String COMMAND_HELP_ALIAS_1	NameNotChanged
		public static java.lang.String COMMAND_HELP_ALIAS_2	NameNotChanged
		public static java.lang.String COMMAND_HELP_DESCRIPTION	NameNotChanged
		public static java.lang.String COMMAND_HELP_USAGE	NameNotChanged
		public static java.lang.String COMMAND_MONITOR	NameNotChanged
		public static java.lang.String COMMAND_MONITOR_ALIAS_1	NameNotChanged
		public static java.lang.String COMMAND_MONITOR_ALIAS_2	NameNotChanged
		public static java.lang.String COMMAND_MONITOR_DESCRIPTION	NameNotChanged
		public static java.lang.String COMMAND_MONITOR_USAGE	NameNotChanged
		public static java.lang.String COMMAND_REACT	NameNotChanged
		public static java.lang.String CORE_CACHE	NameNotChanged
		public static java.lang.String CORE_DOTYML	NameNotChanged
		public static java.lang.String CORE_NAME	NameNotChanged
		public static java.lang.String CORE_REACT_DOT	NameNotChanged
		public static java.lang.String MSG_MONITORING_STARTED	NameNotChanged
		public static java.lang.String MSG_MONITORING_STOPPED	NameNotChanged
		public static java.lang.String MSG_PERMISSION	NameNotChanged
		public static java.lang.String NAME_CHUNKS	NameNotChanged
		public static java.lang.String NAME_ENTITIES	NameNotChanged
		public static java.lang.String NAME_MEMORY	NameNotChanged
		public static java.lang.String NAME_TICK	NameNotChanged
		public static java.lang.String PERM_ACCESS	NameNotChanged
		public static java.lang.String PERM_ACT	NameNotChanged
		public static java.lang.String PERM_MONITOR	NameNotChanged
		public static java.lang.String PERM_MONITOR_ENVIRONMENT	NameNotChanged
		public static java.lang.String PERM_MONITOR_MAP	NameNotChanged
		public static java.lang.String PERM_MONITOR_TITLE	NameNotChanged
		public static java.lang.String PERM_RELOAD	NameNotChanged
		public static java.lang.String SAMPLER_ALLOCMEM	NameNotChanged
		public static java.lang.String SAMPLER_CHK	NameNotChanged
		public static java.lang.String SAMPLER_CHKS	NameNotChanged
		public static java.lang.String SAMPLER_ENT	NameNotChanged
		public static java.lang.String SAMPLER_ENTDROP	NameNotChanged
		public static java.lang.String SAMPLER_ENTLIV	NameNotChanged
		public static java.lang.String SAMPLER_ENTTILE	NameNotChanged
		public static java.lang.String SAMPLER_FREEMEM	NameNotChanged
		public static java.lang.String SAMPLER_MAHS	NameNotChanged
		public static java.lang.String SAMPLER_MAXMEM	NameNotChanged
		public static java.lang.String SAMPLER_MEM	NameNotChanged
		public static java.lang.String SAMPLER_TICK	NameNotChanged
		public static java.lang.String SAMPLER_TIU	NameNotChanged
		public static java.lang.String SAMPLER_TPS	NameNotChanged
		public static java.lang.String STATE_MAPPING_ENABLED	NameNotChanged
		public static java.lang.String STATE_MONITORING_ENABLED	NameNotChanged
		public static java.lang.String STATE_MONITORING_LASTTAB	NameNotChanged
		public static java.lang.String STATE_MONITORING_POSTED	NameNotChanged
		public static java.lang.String STATE_MONITORING_SWITCHNOTIFICATION	NameNotChanged
		public static java.lang.String STATE_MONITORING_TAB	NameNotChanged
		public static java.lang.String STATE_PLAYER_HEIGHT_CHANGING	NameNotChanged
		public static java.lang.String STATE_PLAYER_HEIGHT_CURRENT	NameNotChanged
		public static java.lang.String STATE_PLAYER_HOTBAR	NameNotChanged
		public static java.lang.String STATE_PLAYER_SCROLL	NameNotChanged
		public static java.lang.String STATE_PLAYER_SHIFT	NameNotChanged
		public static java.lang.String STATE_SOUND_PLAYS	NameNotChanged
		public static boolean a	=>	b
	MethodsOf: react.Info
	LineNumbersOf: react.Info
		5	=>	25
		7	=>	60
		8	=>	24
		9	=>	34
		10	=>	15
		13	=>	1
		14	=>	58
		15	=>	55
		16	=>	12
		17	=>	9
		20	=>	18
		21	=>	14
		22	=>	27
		23	=>	56
		24	=>	28
		27	=>	39
		28	=>	46
		29	=>	36
		30	=>	35
		31	=>	57
		32	=>	7
		34	=>	64
		35	=>	26
		36	=>	42
		39	=>	23
		42	=>	51
		45	=>	5
		48	=>	3
		50	=>	2
		51	=>	19
		52	=>	62
		53	=>	45
		54	=>	48
		55	=>	17
		56	=>	54
		57	=>	20
		58	=>	6
		59	=>	10
		60	=>	50
		61	=>	16
		63	=>	4
		64	=>	31
		65	=>	53
		66	=>	59
		67	=>	37
		68	=>	21
		69	=>	8
		71	=>	44
		72	=>	52
		73	=>	41
		74	=>	61
		75	=>	33
		76	=>	11
		77	=>	30
		78	=>	13
		79	=>	40
		80	=>	47
		81	=>	32
		82	=>	63
		83	=>	43
		84	=>	29
		86	=>	49
		89	=>	22
		92	=>	38
		95	=>	65

Class: public react.React	NameNotChanged
	Source: "React.java"
	FieldsOf: react.React
		public react.controller.ActionController actionController	NameNotChanged
		public react.controller.CommandController commandController	NameNotChanged
		public static react.React instance	NameNotChanged
		public react.controller.MonitorController monitorController	NameNotChanged
		public react.controller.PlayerController playerController	NameNotChanged
		public react.controller.SampleController sampleController	NameNotChanged
	MethodsOf: react.React
		public void disable() 	NameNotChanged
		public void enable() 	NameNotChanged
	LineNumbersOf: react.React
		17	=>	1
		42	=>	2
		45	=>	7
		47	=>	4
		48	=>	6
		49	=>	5
		55	=>	3

Class: public react.action.ActionPurgeEntities	NameNotChanged
	Source: "ActionPurgeEntities.java"
	FieldsOf: react.action.ActionPurgeEntities
		public static int a	=>	n
		private int lcd	=>	m
		private long ms	=>	l
	MethodsOf: react.action.ActionPurgeEntities
		static synthetic long access$000(react.action.ActionPurgeEntities) 	NameNotChanged
		static synthetic long access$002(react.action.ActionPurgeEntities, long) 	NameNotChanged
		static synthetic int access$100(react.action.ActionPurgeEntities) 	NameNotChanged
		static synthetic int access$102(react.action.ActionPurgeEntities, int) 	NameNotChanged
		public void enact(react.api.IActionSource, react.api.ISelector[]) 	NameNotChanged
		public void helloWorld() 	NameNotChanged
		public void purge(org.bukkit.Chunk, java.lang.Runnable, react.api.IActionSource, react.api.ISelector[]) 	NameNotChanged
	LineNumbersOf: react.action.ActionPurgeEntities
		27	=>	4, 16, 26 and 32
		34	=>	10
		36	=>	11
		38	=>	14
		50	=>	3
		62	=>	48
		67	=>	15
		68	=>	25
		69	=>	18
		70	=>	41
		71	=>	19
		73	=>	38
		74	=>	17
		76	=>	34 and 42
		78	=>	52
		80	=>	28
		83	=>	27
		85	=>	39
		87	=>	5
		89	=>	50
		91	=>	40
		95	=>	37
		97	=>	30 and 33
		99	=>	35
		101	=>	23
		103	=>	1
		105	=>	54
		107	=>	43
		135	=>	8
		139	=>	44
		154	=>	9
		158	=>	45
		159	=>	36
		161	=>	7 and 55
		163	=>	6
		164	=>	47
		166	=>	2 and 51
		168	=>	46
		170	=>	21
		172	=>	31
		177	=>	24
		179	=>	49
		196	=>	22
		198	=>	53
		199	=>	12
		201	=>	13
		205	=>	29
		206	=>	20

Class: react.action.ActionPurgeEntities$1	NameNotChanged
	Source: "ActionPurgeEntities.java"
	FieldsOf: react.action.ActionPurgeEntities$1
		final synthetic react.action.ActionPurgeEntities this$0	NameNotChanged
	MethodsOf: react.action.ActionPurgeEntities$1
		public bridge synthetic java.lang.Object get() 	NameNotChanged
		public react.api.ISelector get() 	NameNotChanged
	LineNumbersOf: react.action.ActionPurgeEntities$1
		39	=>	3 and 5
		43	=>	4
		44	=>	2
		46	=>	1

Class: react.action.ActionPurgeEntities$2	NameNotChanged
	Source: "ActionPurgeEntities.java"
	FieldsOf: react.action.ActionPurgeEntities$2
		final synthetic react.action.ActionPurgeEntities this$0	NameNotChanged
	MethodsOf: react.action.ActionPurgeEntities$2
		public bridge synthetic java.lang.Object get() 	NameNotChanged
		public react.api.ISelector get() 	NameNotChanged
	LineNumbersOf: react.action.ActionPurgeEntities$2
		51	=>	1 and 5
		55	=>	6
		56	=>	4
		57	=>	3
		59	=>	2

Class: react.action.ActionPurgeEntities$3	NameNotChanged
	Source: "ActionPurgeEntities.java"
	FieldsOf: react.action.ActionPurgeEntities$3
		final synthetic react.action.ActionPurgeEntities this$0	NameNotChanged
		final synthetic surge.util.FinalInteger val$completed	NameNotChanged
		final synthetic react.api.IActionSource val$source	NameNotChanged
		final synthetic surge.util.FinalInteger val$total	NameNotChanged
		final synthetic surge.util.FinalInteger val$totalChunked	NameNotChanged
		final synthetic surge.util.FinalInteger val$totalCulled	NameNotChanged
	MethodsOf: react.action.ActionPurgeEntities$3
		public void run() 	NameNotChanged
	LineNumbersOf: react.action.ActionPurgeEntities$3
		108	=>	3
		112	=>	14
		113	=>	4
		114	=>	6
		115	=>	7
		116	=>	1
		117	=>	8
		118	=>	12
		119	=>	16
		120	=>	13
		122	=>	10
		124	=>	2
		127	=>	9
		129	=>	5
		130	=>	15
		132	=>	11

Class: react.action.ActionPurgeEntities$4	NameNotChanged
	Source: "ActionPurgeEntities.java"
	FieldsOf: react.action.ActionPurgeEntities$4
		final synthetic react.action.ActionPurgeEntities this$0	NameNotChanged
		final synthetic react.api.IActionSource val$source	NameNotChanged
		final synthetic surge.util.FinalInteger val$totalChunked	NameNotChanged
		final synthetic surge.util.FinalInteger val$totalCulled	NameNotChanged
	MethodsOf: react.action.ActionPurgeEntities$4
		public void run() 	NameNotChanged
	LineNumbersOf: react.action.ActionPurgeEntities$4
		140	=>	1
		145	=>	4
		147	=>	5
		148	=>	2
		149	=>	3
		151	=>	6

Class: react.action.ActionPurgeEntities$5	NameNotChanged
	Source: "ActionPurgeEntities.java"
	FieldsOf: react.action.ActionPurgeEntities$5
		final synthetic react.action.ActionPurgeEntities this$0	NameNotChanged
		final synthetic java.lang.Runnable val$cb	NameNotChanged
		final synthetic org.bukkit.Chunk val$chunk	NameNotChanged
		final synthetic surge.util.FinalInteger val$cu	NameNotChanged
		final synthetic org.bukkit.entity.Entity val$i	NameNotChanged
		final synthetic int val$k	NameNotChanged
	MethodsOf: react.action.ActionPurgeEntities$5
		public void run() 	NameNotChanged
	LineNumbersOf: react.action.ActionPurgeEntities$5
		180	=>	3
		184	=>	6
		185	=>	1
		187	=>	2
		189	=>	4
		190	=>	5
		192	=>	7

Class: public abstract react.api.Action	NameNotChanged
	Source: "Action.java"
	FieldsOf: react.api.Action
		private react.api.IActionSource currentSource	=>	i
		private surge.collection.GMap defaultSelectors	=>	k
		private java.lang.String description	=>	b
		private react.api.ActionHandle handle	=>	e
		private java.lang.String name	=>	a
		private java.lang.String[] nodes	=>	d
		private double progress	=>	j
		private react.api.ActionState state	=>	f
		private java.lang.String status	=>	c
		private react.api.ActionTargetType target	=>	g
		private react.api.ActionType type	=>	h
	MethodsOf: react.api.Action
		public void act(react.api.IActionSource, react.api.ISelector[]) 	NameNotChanged
		public react.api.ISelector[] biselect(react.api.ISelector[]) 	NameNotChanged
		public void completeAction() 	NameNotChanged
		public abstract void enact(react.api.IActionSource, react.api.ISelector[]) 	NameNotChanged
		public react.api.IActionSource getCurrentSource() 	NameNotChanged
		public surge.collection.GMap getDefaultSelectors() 	NameNotChanged
		public java.lang.String getDescription() 	NameNotChanged
		public react.api.ActionHandle getHandleType() 	NameNotChanged
		public java.lang.String getName() 	NameNotChanged
		public java.lang.String[] getNodes() 	NameNotChanged
		public double getProgress() 	NameNotChanged
		public react.api.ActionState getState() 	NameNotChanged
		public java.lang.String getStatus() 	NameNotChanged
		public react.api.ActionTargetType getTarget() 	NameNotChanged
		public react.api.ActionType getType() 	NameNotChanged
		public void setDefaultSelector(java.lang.Class, surge.util.Callback) 	NameNotChanged
		public void setNodes(java.lang.String[]) 	NameNotChanged
		public void setProgress(double) 	NameNotChanged
		public void setStatus(java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.Action
		23	=>	16
		24	=>	8
		27	=>	36
		28	=>	11
		29	=>	17
		30	=>	33
		31	=>	31
		32	=>	30
		33	=>	1
		34	=>	35
		35	=>	28
		36	=>	42
		37	=>	32
		38	=>	48
		39	=>	6
		44	=>	23
		46	=>	24
		48	=>	2 and 5
		50	=>	34
		52	=>	14
		56	=>	37
		57	=>	27
		59	=>	44
		65	=>	47
		66	=>	46
		71	=>	40
		77	=>	41
		83	=>	4
		89	=>	3
		95	=>	9
		101	=>	19
		102	=>	10
		107	=>	12
		113	=>	39
		114	=>	51
		119	=>	50
		125	=>	25
		131	=>	22
		137	=>	45
		139	=>	7
		142	=>	38
		143	=>	18
		145	=>	29
		146	=>	13
		151	=>	21
		152	=>	15
		157	=>	20
		163	=>	49
		169	=>	43
		170	=>	26

Class: public react.api.ActionAlreadyRunningException	NameNotChanged
	Source: "ActionAlreadyRunningException.java"
	FieldsOf: react.api.ActionAlreadyRunningException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: react.api.ActionAlreadyRunningException
	LineNumbersOf: react.api.ActionAlreadyRunningException
		3	=>	1

Class: public react.api.ActionException	NameNotChanged
	Source: "ActionException.java"
	FieldsOf: react.api.ActionException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: react.api.ActionException
	LineNumbersOf: react.api.ActionException
		3	=>	1

Class: public final enum react.api.ActionHandle	NameNotChanged
	Source: "ActionHandle.java"
	FieldsOf: react.api.ActionHandle
		private static final synthetic react.api.ActionHandle[] $VALUES	=>	a
		public static final enum react.api.ActionHandle AUTOMATIC	NameNotChanged
		public static final enum react.api.ActionHandle MANUAL	NameNotChanged
		public static final enum react.api.ActionHandle MUTEX	NameNotChanged
	MethodsOf: react.api.ActionHandle
		public static react.api.ActionHandle valueOf(java.lang.String) 	NameNotChanged
		public static react.api.ActionHandle[] values() 	NameNotChanged
	LineNumbersOf: react.api.ActionHandle
		3	=>	3, 4, 5 and 7
		5	=>	1
		6	=>	6
		7	=>	2

Class: public react.api.ActionNotRunningException	NameNotChanged
	Source: "ActionNotRunningException.java"
	FieldsOf: react.api.ActionNotRunningException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: react.api.ActionNotRunningException
	LineNumbersOf: react.api.ActionNotRunningException
		3	=>	1

Class: public final enum react.api.ActionState	NameNotChanged
	Source: "ActionState.java"
	FieldsOf: react.api.ActionState
		private static final synthetic react.api.ActionState[] $VALUES	=>	a
		public static final enum react.api.ActionState IDLE	NameNotChanged
		public static final enum react.api.ActionState RUNNING	NameNotChanged
	MethodsOf: react.api.ActionState
		public static react.api.ActionState valueOf(java.lang.String) 	NameNotChanged
		public static react.api.ActionState[] values() 	NameNotChanged
	LineNumbersOf: react.api.ActionState
		3	=>	1, 2, 4 and 5
		5	=>	6
		6	=>	3

Class: public final enum react.api.ActionTargetType	NameNotChanged
	Source: "ActionTargetType.java"
	FieldsOf: react.api.ActionTargetType
		private static final synthetic react.api.ActionTargetType[] $VALUES	=>	a
		public static final enum react.api.ActionTargetType POSITIONAL	NameNotChanged
		public static final enum react.api.ActionTargetType SYSTEM	NameNotChanged
	MethodsOf: react.api.ActionTargetType
		public static react.api.ActionTargetType valueOf(java.lang.String) 	NameNotChanged
		public static react.api.ActionTargetType[] values() 	NameNotChanged
	LineNumbersOf: react.api.ActionTargetType
		3	=>	1, 2, 5 and 6
		5	=>	3
		6	=>	4

Class: public final enum react.api.ActionType	NameNotChanged
	Source: "ActionType.java"
	FieldsOf: react.api.ActionType
		private static final synthetic react.api.ActionType[] $VALUES	=>	e
		public static final enum react.api.ActionType PURGE_ENTITIES	NameNotChanged
		private java.lang.String description	=>	b
		private react.api.ActionHandle handle	=>	c
		private java.lang.String name	=>	a
		private react.api.ActionTargetType target	=>	d
	MethodsOf: react.api.ActionType
		public java.lang.String getDescription() 	NameNotChanged
		public react.api.ActionHandle getHandle() 	NameNotChanged
		public java.lang.String getName() 	NameNotChanged
		public react.api.ActionTargetType getTarget() 	NameNotChanged
		public static react.api.ActionType valueOf(java.lang.String) 	NameNotChanged
		public static react.api.ActionType[] values() 	NameNotChanged
	LineNumbersOf: react.api.ActionType
		5	=>	5, 10 and 13
		7	=>	12
		15	=>	9
		16	=>	11
		17	=>	8
		18	=>	2
		19	=>	7
		20	=>	4
		24	=>	14
		29	=>	3
		34	=>	6
		39	=>	1

Class: public react.api.CommandSenderActionSource	NameNotChanged
	Source: "CommandSenderActionSource.java"
	FieldsOf: react.api.CommandSenderActionSource
		private org.bukkit.command.CommandSender sender	=>	a
	MethodsOf: react.api.CommandSenderActionSource
		public org.bukkit.command.CommandSender getSender() 	NameNotChanged
		public void sendResponse(java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.CommandSenderActionSource
		12	=>	4
		13	=>	1
		14	=>	5
		18	=>	2
		24	=>	6
		25	=>	3

Class: public react.api.ConsoleActionSource	NameNotChanged
	Source: "ConsoleActionSource.java"
	FieldsOf: react.api.ConsoleActionSource
	MethodsOf: react.api.ConsoleActionSource
		public void sendResponse(java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.ConsoleActionSource
		7	=>	1
		12	=>	2
		13	=>	3

Class: public react.api.Gate	NameNotChanged
	Source: "Gate.java"
	FieldsOf: react.api.Gate
	MethodsOf: react.api.Gate
		public static void removeEntity(org.bukkit.entity.Entity) 	NameNotChanged
	LineNumbersOf: react.api.Gate
		5	=>	3
		9	=>	2
		10	=>	1

Class: public abstract react.api.IAction	NameNotChanged
	Source: "IAction.java"
	FieldsOf: react.api.IAction
	MethodsOf: react.api.IAction
		public abstract void act(react.api.IActionSource, react.api.ISelector[]) 	NameNotChanged
		public abstract react.api.ISelector[] biselect(react.api.ISelector[]) 	NameNotChanged
		public abstract void completeAction() 	NameNotChanged
		public abstract void enact(react.api.IActionSource, react.api.ISelector[]) 	NameNotChanged
		public abstract react.api.IActionSource getCurrentSource() 	NameNotChanged
		public abstract surge.collection.GMap getDefaultSelectors() 	NameNotChanged
		public abstract java.lang.String getDescription() 	NameNotChanged
		public abstract react.api.ActionHandle getHandleType() 	NameNotChanged
		public abstract java.lang.String getName() 	NameNotChanged
		public abstract java.lang.String[] getNodes() 	NameNotChanged
		public abstract double getProgress() 	NameNotChanged
		public abstract react.api.ActionState getState() 	NameNotChanged
		public abstract java.lang.String getStatus() 	NameNotChanged
		public abstract react.api.ActionTargetType getTarget() 	NameNotChanged
		public abstract react.api.ActionType getType() 	NameNotChanged
		public abstract void setDefaultSelector(java.lang.Class, surge.util.Callback) 	NameNotChanged
		public abstract void setNodes(java.lang.String[]) 	NameNotChanged
		public abstract void setProgress(double) 	NameNotChanged
		public abstract void setStatus(java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.IAction

Class: public abstract react.api.IActionSource	NameNotChanged
	Source: "IActionSource.java"
	FieldsOf: react.api.IActionSource
	MethodsOf: react.api.IActionSource
		public abstract void sendResponse(java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.IActionSource

Class: public abstract react.api.ICommand	NameNotChanged
	Source: "ICommand.java"
	FieldsOf: react.api.ICommand
	MethodsOf: react.api.ICommand
		public abstract void fire(org.bukkit.command.CommandSender, java.lang.String[]) 	NameNotChanged
		public abstract java.lang.String[] getAliases() 	NameNotChanged
		public abstract java.lang.String getCommand() 	NameNotChanged
		public abstract java.lang.String getDescription() 	NameNotChanged
		public abstract java.lang.String[] getPermissions() 	NameNotChanged
		public abstract react.api.SideGate getSideGate() 	NameNotChanged
		public abstract java.lang.String getUsage() 	NameNotChanged
	LineNumbersOf: react.api.ICommand

Class: public abstract react.api.ISampler	NameNotChanged
	Source: "ISampler.java"
	FieldsOf: react.api.ISampler
	MethodsOf: react.api.ISampler
		public abstract void construct() 	NameNotChanged
		public abstract java.lang.String get() 	NameNotChanged
		public abstract surge.util.C getAltColor() 	NameNotChanged
		public abstract surge.util.C getColor() 	NameNotChanged
		public abstract java.lang.String getDescription() 	NameNotChanged
		public abstract java.lang.String getID() 	NameNotChanged
		public abstract int getInterval() 	NameNotChanged
		public abstract java.lang.String getName() 	NameNotChanged
		public abstract double getValue() 	NameNotChanged
		public abstract void sample() 	NameNotChanged
		public abstract void setColor(surge.util.C, surge.util.C) 	NameNotChanged
		public abstract void setDescription(java.lang.String) 	NameNotChanged
		public abstract void setID(java.lang.String) 	NameNotChanged
		public abstract void setInterval(int) 	NameNotChanged
		public abstract void setName(java.lang.String) 	NameNotChanged
		public abstract void setValue(double) 	NameNotChanged
	LineNumbersOf: react.api.ISampler

Class: public abstract react.api.ISelector	NameNotChanged
	Source: "ISelector.java"
	FieldsOf: react.api.ISelector
	MethodsOf: react.api.ISelector
		public abstract boolean can(java.lang.Object) 	NameNotChanged
		public abstract surge.collection.GSet getList() 	NameNotChanged
		public abstract react.api.SelectionMode getMode() 	NameNotChanged
		public abstract java.lang.String getName() 	NameNotChanged
		public abstract surge.collection.GSet getPossibilities() 	NameNotChanged
		public abstract java.lang.Class getType() 	NameNotChanged
		public abstract int parse(org.bukkit.command.CommandSender, java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.ISelector

Class: public abstract annotation react.api.Lang	NameNotChanged
	Source: "Lang.java"
	FieldsOf: react.api.Lang
	MethodsOf: react.api.Lang
		public abstract java.lang.String value() 	NameNotChanged
	LineNumbersOf: react.api.Lang

Class: public abstract react.api.MSampler	NameNotChanged
	Source: "MSampler.java"
	FieldsOf: react.api.MSampler
	MethodsOf: react.api.MSampler
		protected surge.server.SuperSampler ss() 	=>	a
	LineNumbersOf: react.api.MSampler
		6	=>	1
		10	=>	2

Class: public react.api.MonitorHeading	NameNotChanged
	Source: "MonitorHeading.java"
	FieldsOf: react.api.MonitorHeading
		private surge.collection.GList children	=>	b
		private react.api.ISampler head	=>	a
		private java.lang.String name	=>	c
	MethodsOf: react.api.MonitorHeading
		public void addSampler(react.api.ISampler) 	NameNotChanged
		public java.lang.String getChildText() 	NameNotChanged
		public surge.collection.GList getChildren() 	NameNotChanged
		public react.api.ISampler getHead() 	NameNotChanged
		public java.lang.String getHeadText() 	NameNotChanged
		public java.lang.String getName() 	NameNotChanged
		public void setChildren(surge.collection.GList) 	NameNotChanged
		public void setHead(react.api.ISampler) 	NameNotChanged
		public void setName(java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.MonitorHeading
		13	=>	7
		14	=>	18
		15	=>	13
		16	=>	20
		17	=>	2
		21	=>	15
		22	=>	19
		26	=>	21
		31	=>	12
		32	=>	22
		36	=>	23
		41	=>	8
		46	=>	24
		48	=>	5
		50	=>	10
		51	=>	25
		52	=>	1
		54	=>	17
		56	=>	11
		59	=>	3
		64	=>	4
		69	=>	9
		70	=>	14
		74	=>	6
		75	=>	16

Class: public final enum react.api.Permissable	NameNotChanged
	Source: "Permissable.java"
	FieldsOf: react.api.Permissable
		private static final synthetic react.api.Permissable[] $VALUES	=>	b
		public static final enum react.api.Permissable ACCESS	NameNotChanged
		public static final enum react.api.Permissable ACT	NameNotChanged
		public static final enum react.api.Permissable MONITOR	NameNotChanged
		public static final enum react.api.Permissable MONITOR_ENVIRONMENT	NameNotChanged
		public static final enum react.api.Permissable MONITOR_MAP	NameNotChanged
		public static final enum react.api.Permissable MONITOR_TITLE	NameNotChanged
		public static final enum react.api.Permissable RELOAD	NameNotChanged
		private java.lang.String node	=>	a
	MethodsOf: react.api.Permissable
		public java.lang.String getNode() 	NameNotChanged
		public boolean has(org.bukkit.command.CommandSender) 	NameNotChanged
		public static react.api.Permissable valueOf(java.lang.String) 	NameNotChanged
		public static react.api.Permissable[] values() 	NameNotChanged
	LineNumbersOf: react.api.Permissable
		7	=>	3, 14 and 16
		9	=>	9
		10	=>	17
		11	=>	2
		12	=>	11
		13	=>	10
		14	=>	4
		15	=>	1
		20	=>	15
		23	=>	8
		26	=>	6
		29	=>	5
		30	=>	13
		34	=>	12
		39	=>	7

Class: public react.api.PlayerActionSource	NameNotChanged
	Source: "PlayerActionSource.java"
	FieldsOf: react.api.PlayerActionSource
		private final org.bukkit.entity.Player p	=>	a
	MethodsOf: react.api.PlayerActionSource
		public org.bukkit.entity.Player getPlayer() 	NameNotChanged
		public void sendResponse(java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.PlayerActionSource
		12	=>	3
		13	=>	1
		14	=>	5
		18	=>	2
		24	=>	4
		25	=>	6

Class: public react.api.ReactActionSource	NameNotChanged
	Source: "ReactActionSource.java"
	FieldsOf: react.api.ReactActionSource
	MethodsOf: react.api.ReactActionSource
		public void sendResponse(java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.ReactActionSource
		3	=>	1
		9	=>	2

Class: public abstract react.api.ReactCommand	NameNotChanged
	Source: "ReactCommand.java"
	FieldsOf: react.api.ReactCommand
		protected java.lang.String[] aliases	=>	b
		protected java.lang.String command	=>	a
		protected java.lang.String description	=>	e
		protected java.lang.String[] permissions	=>	c
		protected react.api.SideGate sideGate	=>	f
		protected java.lang.String usage	=>	d
	MethodsOf: react.api.ReactCommand
		public java.lang.String[] getAliases() 	NameNotChanged
		public java.lang.String getCommand() 	NameNotChanged
		public java.lang.String getDescription() 	NameNotChanged
		public java.lang.String[] getPermissions() 	NameNotChanged
		public react.api.SideGate getSideGate() 	NameNotChanged
		public java.lang.String getUsage() 	NameNotChanged
	LineNumbersOf: react.api.ReactCommand
		13	=>	5
		15	=>	7
		20	=>	2
		26	=>	8
		32	=>	6
		38	=>	4
		44	=>	1
		50	=>	3

Class: public react.api.ReactException	NameNotChanged
	Source: "ReactException.java"
	FieldsOf: react.api.ReactException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: react.api.ReactException
	LineNumbersOf: react.api.ReactException
		7	=>	2
		8	=>	3
		11	=>	4
		13	=>	1

Class: public react.api.ReactPlayer	NameNotChanged
	Source: "ReactPlayer.java"
	FieldsOf: react.api.ReactPlayer
		public boolean heightMovement	NameNotChanged
		public int hotbarSlot	NameNotChanged
		public static surge.collection.GMap keystore	NameNotChanged
		public double lastHeight	NameNotChanged
		public boolean mapping	NameNotChanged
		public int monitorLastSelection	NameNotChanged
		public boolean monitorPosted	NameNotChanged
		public int monitorSelection	NameNotChanged
		public boolean monitoring	NameNotChanged
		private org.bukkit.entity.Player p	=>	a
		public int plays	NameNotChanged
		public int scroll	NameNotChanged
		public boolean shift	NameNotChanged
		public int switchNotification	NameNotChanged
	MethodsOf: react.api.ReactPlayer
		public int getHotbarSlot() 	NameNotChanged
		public double getLastHeight() 	NameNotChanged
		public int getMonitorLastSelection() 	NameNotChanged
		public boolean getMonitorPosted() 	NameNotChanged
		public int getMonitorSelection() 	NameNotChanged
		public org.bukkit.entity.Player getP() 	NameNotChanged
		public int getPlays() 	NameNotChanged
		public int getScroll() 	NameNotChanged
		public int getSwitchNotification() 	NameNotChanged
		public boolean isHeightMovement() 	NameNotChanged
		public boolean isMapping() 	NameNotChanged
		public boolean isMonitoring() 	NameNotChanged
		public boolean isShift() 	NameNotChanged
		public boolean isShifting() 	NameNotChanged
		public void load() 	NameNotChanged
		public void save() 	NameNotChanged
		public void setHeightMovement(boolean) 	NameNotChanged
		public void setHotbarSlot(int) 	NameNotChanged
		public void setLastHeight(double) 	NameNotChanged
		public void setMapping(boolean) 	NameNotChanged
		public void setMonitorLastSelection(int) 	NameNotChanged
		public void setMonitorPosted(boolean) 	NameNotChanged
		public void setMonitorSelection(int) 	NameNotChanged
		public void setMonitoring(boolean) 	NameNotChanged
		public void setP(org.bukkit.entity.Player) 	NameNotChanged
		public void setPlays(int) 	NameNotChanged
		public void setScroll(int) 	NameNotChanged
		public void setShift(boolean) 	NameNotChanged
		public void setShifting(boolean) 	NameNotChanged
		public void setSwitchNotification(int) 	NameNotChanged
	LineNumbersOf: react.api.ReactPlayer
		23	=>	31
		24	=>	4
		25	=>	51
		26	=>	15
		27	=>	47
		28	=>	58
		29	=>	65
		30	=>	54
		31	=>	9
		32	=>	3
		33	=>	19
		34	=>	46
		35	=>	55
		36	=>	63
		38	=>	39
		41	=>	14
		44	=>	12
		47	=>	25
		50	=>	29
		53	=>	60
		56	=>	68
		59	=>	75
		62	=>	18
		65	=>	48
		68	=>	26
		71	=>	41
		77	=>	30
		78	=>	32
		79	=>	76
		80	=>	80
		86	=>	10
		89	=>	33
		91	=>	82
		92	=>	2
		93	=>	69
		99	=>	56
		102	=>	1
		104	=>	23
		105	=>	49
		106	=>	70
		110	=>	20
		115	=>	37
		120	=>	13
		125	=>	24
		126	=>	38
		130	=>	72
		131	=>	61
		135	=>	17
		140	=>	6
		141	=>	28
		145	=>	78
		150	=>	64
		151	=>	40
		155	=>	27
		160	=>	71
		161	=>	52
		165	=>	8
		170	=>	59
		171	=>	62
		175	=>	35
		180	=>	45
		181	=>	21
		185	=>	5
		190	=>	66
		191	=>	42
		195	=>	22
		196	=>	7
		200	=>	74
		205	=>	57
		206	=>	50
		210	=>	53
		215	=>	44
		216	=>	73
		220	=>	34
		225	=>	67
		226	=>	36
		230	=>	16
		235	=>	79
		236	=>	77
		240	=>	43
		245	=>	81
		246	=>	11

Class: public final enum react.api.SampledType	NameNotChanged
	Source: "SampledType.java"
	FieldsOf: react.api.SampledType
		private static final synthetic react.api.SampledType[] $VALUES	=>	b
		public static final enum react.api.SampledType ALLOCMEM	NameNotChanged
		public static final enum react.api.SampledType CHK	NameNotChanged
		public static final enum react.api.SampledType CHKS	NameNotChanged
		public static final enum react.api.SampledType ENT	NameNotChanged
		public static final enum react.api.SampledType ENTDROP	NameNotChanged
		public static final enum react.api.SampledType ENTLIV	NameNotChanged
		public static final enum react.api.SampledType ENTTILE	NameNotChanged
		public static final enum react.api.SampledType FREEMEM	NameNotChanged
		public static final enum react.api.SampledType MAHS	NameNotChanged
		public static final enum react.api.SampledType MAXMEM	NameNotChanged
		public static final enum react.api.SampledType MEM	NameNotChanged
		public static final enum react.api.SampledType TICK	NameNotChanged
		public static final enum react.api.SampledType TIU	NameNotChanged
		public static final enum react.api.SampledType TPS	NameNotChanged
		private java.lang.String node	=>	a
	MethodsOf: react.api.SampledType
		public java.lang.String getNode() 	NameNotChanged
		public static react.api.SampledType valueOf(java.lang.String) 	NameNotChanged
		public static react.api.SampledType[] values() 	NameNotChanged
	LineNumbersOf: react.api.SampledType
		5	=>	9, 18 and 23
		7	=>	2
		8	=>	3
		9	=>	13
		10	=>	19
		11	=>	11
		12	=>	8
		13	=>	5
		14	=>	12
		15	=>	16
		16	=>	20
		17	=>	21
		18	=>	17
		19	=>	22
		20	=>	15
		25	=>	6
		28	=>	7
		31	=>	10
		34	=>	4
		35	=>	14
		39	=>	1

Class: public abstract react.api.Sampler	NameNotChanged
	Source: "Sampler.java"
	FieldsOf: react.api.Sampler
		public static boolean a	=>	h
		private surge.util.C altColor	=>	f
		private surge.util.C color	=>	e
		private java.lang.String description	=>	d
		private java.lang.String id	=>	b
		private int interval	=>	g
		private java.lang.String name	=>	c
		private double value	=>	a
	MethodsOf: react.api.Sampler
		public abstract void construct() 	NameNotChanged
		public abstract java.lang.String get() 	NameNotChanged
		public surge.util.C getAltColor() 	NameNotChanged
		public surge.util.C getColor() 	NameNotChanged
		public java.lang.String getDescription() 	NameNotChanged
		public java.lang.String getID() 	NameNotChanged
		public int getInterval() 	NameNotChanged
		public java.lang.String getName() 	NameNotChanged
		public double getValue() 	NameNotChanged
		public abstract void sample() 	NameNotChanged
		public void setColor(surge.util.C, surge.util.C) 	NameNotChanged
		public void setDescription(java.lang.String) 	NameNotChanged
		public void setID(java.lang.String) 	NameNotChanged
		public void setInterval(int) 	NameNotChanged
		public void setName(java.lang.String) 	NameNotChanged
		public void setValue(double) 	NameNotChanged
	LineNumbersOf: react.api.Sampler
		17	=>	21
		18	=>	1
		19	=>	20
		24	=>	12
		30	=>	18
		36	=>	9
		42	=>	8
		48	=>	17
		54	=>	7
		69	=>	22
		70	=>	3
		75	=>	10
		81	=>	5
		82	=>	15
		87	=>	11
		88	=>	6
		93	=>	14
		94	=>	2
		99	=>	16
		100	=>	19
		101	=>	4
		106	=>	23
		107	=>	13

Class: public react.api.SelectionException	NameNotChanged
	Source: "SelectionException.java"
	FieldsOf: react.api.SelectionException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: react.api.SelectionException
	LineNumbersOf: react.api.SelectionException
		7	=>	1
		8	=>	2

Class: public final enum react.api.SelectionMode	NameNotChanged
	Source: "SelectionMode.java"
	FieldsOf: react.api.SelectionMode
		private static final synthetic react.api.SelectionMode[] $VALUES	=>	a
		public static final enum react.api.SelectionMode BLACKLIST	NameNotChanged
		public static final enum react.api.SelectionMode WHITELIST	NameNotChanged
	MethodsOf: react.api.SelectionMode
		public static react.api.SelectionMode valueOf(java.lang.String) 	NameNotChanged
		public static react.api.SelectionMode[] values() 	NameNotChanged
	LineNumbersOf: react.api.SelectionMode
		3	=>	1, 4, 5 and 6
		5	=>	2
		6	=>	3

Class: public abstract react.api.Selector	NameNotChanged
	Source: "Selector.java"
	FieldsOf: react.api.Selector
		private surge.collection.GSet list	=>	c
		private react.api.SelectionMode mode	=>	b
		private java.lang.Class objectType	=>	a
		private static int popoff	=>	e
		private surge.collection.GSet possibilities	=>	d
	MethodsOf: react.api.Selector
		public boolean can(java.lang.Object) 	NameNotChanged
		public static react.api.ISelector createSelector(org.bukkit.command.CommandSender, java.lang.String) 	NameNotChanged
		public surge.collection.GSet getList() 	NameNotChanged
		public react.api.SelectionMode getMode() 	NameNotChanged
		public surge.collection.GSet getPossibilities() 	NameNotChanged
		public java.lang.Class getType() 	NameNotChanged
		public abstract int parse(org.bukkit.command.CommandSender, java.lang.String) 	NameNotChanged
		public static int pop() 	NameNotChanged
	LineNumbersOf: react.api.Selector
		13	=>	17
		16	=>	5
		17	=>	22
		18	=>	9
		19	=>	3
		20	=>	23
		21	=>	25
		26	=>	13
		32	=>	24
		38	=>	19
		44	=>	8
		50	=>	18
		58	=>	16
		60	=>	11
		63	=>	2
		65	=>	28
		68	=>	6
		69	=>	7
		70	=>	10
		72	=>	12
		74	=>	21
		77	=>	20
		79	=>	1
		84	=>	26
		87	=>	14
		89	=>	4
		94	=>	15
		95	=>	29
		96	=>	27

Class: public react.api.SelectorEntityType	NameNotChanged
	Source: "SelectorEntityType.java"
	FieldsOf: react.api.SelectorEntityType
	MethodsOf: react.api.SelectorEntityType
		public void add(org.bukkit.entity.EntityType) 	NameNotChanged
		public java.lang.String getName() 	NameNotChanged
		public int parse(org.bukkit.command.CommandSender, java.lang.String) 	NameNotChanged
		private surge.collection.GSet parseNode(org.bukkit.command.CommandSender, java.lang.String) 	=>	a
	LineNumbersOf: react.api.SelectorEntityType
		12	=>	44
		14	=>	7 and 13
		16	=>	9
		18	=>	22
		22	=>	25
		23	=>	19
		28	=>	4
		30	=>	12
		32	=>	14 and 21
		34	=>	32
		36	=>	15
		38	=>	39
		40	=>	16
		45	=>	45
		47	=>	38
		53	=>	1
		56	=>	24
		57	=>	20
		58	=>	42
		59	=>	5
		61	=>	18
		66	=>	8
		67	=>	33
		69	=>	31
		71	=>	37 and 41
		73	=>	30
		75	=>	35
		78	=>	17
		81	=>	11
		86	=>	40 and 48
		88	=>	29
		90	=>	6
		91	=>	23
		92	=>	34
		95	=>	10
		97	=>	28
		98	=>	2
		99	=>	3
		104	=>	43
		106	=>	26
		109	=>	36
		111	=>	27
		114	=>	46
		120	=>	47

Class: public react.api.SelectorParseException	NameNotChanged
	Source: "SelectorParseException.java"
	FieldsOf: react.api.SelectorParseException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: react.api.SelectorParseException
	LineNumbersOf: react.api.SelectorParseException
		7	=>	1
		8	=>	2

Class: public react.api.SelectorPosition	NameNotChanged
	Source: "SelectorPosition.java"
	FieldsOf: react.api.SelectorPosition
	MethodsOf: react.api.SelectorPosition
		public void add(org.bukkit.Chunk) 	NameNotChanged
		public void add(org.bukkit.Chunk, int) 	NameNotChanged
		public void add(org.bukkit.World) 	NameNotChanged
		public void addAll() 	NameNotChanged
		public java.lang.String getName() 	NameNotChanged
		public int parse(org.bukkit.command.CommandSender, java.lang.String) 	NameNotChanged
		public surge.collection.GSet parseNode(org.bukkit.command.CommandSender, java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.SelectorPosition
		16	=>	83
		17	=>	39
		21	=>	112
		22	=>	72
		26	=>	65
		27	=>	21
		31	=>	98 and 103
		33	=>	92
		35	=>	42
		39	=>	11
		41	=>	29
		42	=>	101
		43	=>	52
		48	=>	75
		50	=>	17
		52	=>	1
		55	=>	50
		57	=>	15 and 43
		59	=>	105
		61	=>	6
		63	=>	95
		65	=>	58
		70	=>	85
		72	=>	12
		78	=>	104
		80	=>	28
		83	=>	66
		85	=>	4
		86	=>	100
		89	=>	49
		91	=>	74
		96	=>	22
		98	=>	10
		100	=>	26
		101	=>	36
		103	=>	19
		105	=>	67
		110	=>	82
		113	=>	81
		117	=>	91
		120	=>	76
		122	=>	79
		125	=>	94
		127	=>	33
		128	=>	70
		129	=>	64
		132	=>	73
		134	=>	38
		136	=>	61
		139	=>	20
		141	=>	86
		142	=>	23
		147	=>	45
		149	=>	90
		151	=>	47
		153	=>	57
		155	=>	88 and 108
		157	=>	68
		159	=>	25
		162	=>	62
		164	=>	8
		165	=>	71
		167	=>	53
		169	=>	34
		171	=>	30
		173	=>	69 and 106
		175	=>	56
		178	=>	51
		180	=>	46
		182	=>	2
		184	=>	41
		186	=>	114
		188	=>	63
		190	=>	84
		192	=>	55
		194	=>	13
		196	=>	109
		198	=>	60
		200	=>	18
		201	=>	77
		203	=>	102
		205	=>	54
		206	=>	40
		209	=>	99
		211	=>	110
		219	=>	37
		222	=>	9
		224	=>	31
		225	=>	35
		229	=>	3
		232	=>	14
		234	=>	89
		235	=>	24
		237	=>	59
		239	=>	48
		241	=>	32
		245	=>	5
		247	=>	44
		249	=>	113
		252	=>	97
		255	=>	78
		257	=>	107
		258	=>	111
		263	=>	27
		265	=>	96
		269	=>	80
		271	=>	7
		273	=>	93
		277	=>	16
		283	=>	87

Class: public final enum react.api.Side	NameNotChanged
	Source: "Side.java"
	FieldsOf: react.api.Side
		private static final synthetic react.api.Side[] $VALUES	=>	b
		public static final enum react.api.Side CONSOLE	NameNotChanged
		public static final enum react.api.Side PLAYERS	NameNotChanged
		private java.lang.String ss	=>	a
	MethodsOf: react.api.Side
		public static react.api.Side get(org.bukkit.command.CommandSender) 	NameNotChanged
		public java.lang.String ss() 	NameNotChanged
		public static react.api.Side valueOf(java.lang.String) 	NameNotChanged
		public static react.api.Side[] values() 	NameNotChanged
	LineNumbersOf: react.api.Side
		6	=>	8, 10 and 12
		8	=>	9
		9	=>	7
		14	=>	3
		15	=>	11
		16	=>	4
		20	=>	5
		25	=>	2
		27	=>	6
		30	=>	1

Class: public final enum react.api.SideGate	NameNotChanged
	Source: "SideGate.java"
	FieldsOf: react.api.SideGate
		private static final synthetic react.api.SideGate[] $VALUES	=>	a
		public static final enum react.api.SideGate ANYTHING	NameNotChanged
		public static final enum react.api.SideGate CONSOLES_ONLY	NameNotChanged
		public static final enum react.api.SideGate PLAYERS_ONLY	NameNotChanged
	MethodsOf: react.api.SideGate
		public boolean supports(react.api.Side) 	NameNotChanged
		public static react.api.SideGate valueOf(java.lang.String) 	NameNotChanged
		public static react.api.SideGate[] values() 	NameNotChanged
	LineNumbersOf: react.api.SideGate
		3	=>	1, 3, 6 and 14
		5	=>	16
		6	=>	12
		7	=>	2
		11	=>	8
		13	=>	9
		16	=>	11
		18	=>	4
		20	=>	7
		24	=>	13
		27	=>	10
		29	=>	5
		31	=>	15
		34	=>	17

Class: synthetic react.api.SideGate$1	NameNotChanged
	Source: "SideGate.java"
	FieldsOf: react.api.SideGate$1
		static final synthetic int[] $SwitchMap$react$api$SideGate	=>	a
	MethodsOf: react.api.SideGate$1
	LineNumbersOf: react.api.SideGate$1
		13	=>	1

Class: public react.api.TitleMonitor	NameNotChanged
	Source: "TitleMonitor.java"
	FieldsOf: react.api.TitleMonitor
		private surge.collection.GList headings	=>	a
	MethodsOf: react.api.TitleMonitor
		public void addHeading(react.api.MonitorHeading) 	NameNotChanged
		public react.api.MonitorHeading getHeadFor(int) 	NameNotChanged
		public java.lang.String getHotbarFor(int, boolean) 	NameNotChanged
		public java.lang.String getHotbarHeadFor(int, boolean, react.controller.MonitorController, react.api.ReactPlayer, int) 	NameNotChanged
		public int getMaxSelection() 	NameNotChanged
		public int left(int) 	NameNotChanged
		public int right(int) 	NameNotChanged
	LineNumbersOf: react.api.TitleMonitor
		12	=>	7
		13	=>	11
		14	=>	4
		18	=>	18
		19	=>	9
		23	=>	22
		28	=>	34
		29	=>	32
		31	=>	36
		33	=>	14
		36	=>	16
		41	=>	21
		42	=>	15
		44	=>	28
		46	=>	6
		49	=>	27
		54	=>	35
		59	=>	13
		61	=>	38
		63	=>	8
		66	=>	1
		68	=>	5
		69	=>	25
		70	=>	10
		72	=>	31
		74	=>	39
		77	=>	37
		82	=>	26
		83	=>	12
		85	=>	3
		87	=>	30
		88	=>	2
		89	=>	20
		90	=>	33
		91	=>	29
		92	=>	24
		94	=>	17
		96	=>	23
		99	=>	19

Class: public react.command.CommandAct	NameNotChanged
	Source: "CommandAct.java"
	FieldsOf: react.command.CommandAct
	MethodsOf: react.command.CommandAct
		public void fire(org.bukkit.command.CommandSender, java.lang.String[]) 	NameNotChanged
	LineNumbersOf: react.command.CommandAct
		29	=>	25
		30	=>	32
		31	=>	8
		32	=>	5
		33	=>	11
		34	=>	55
		35	=>	51
		36	=>	35
		41	=>	1
		43	=>	30
		44	=>	48
		47	=>	3
		48	=>	44
		49	=>	4
		50	=>	53
		52	=>	36
		54	=>	28 and 40
		56	=>	18
		58	=>	19
		59	=>	45
		62	=>	49
		64	=>	52
		66	=>	26
		67	=>	38
		70	=>	42
		72	=>	15
		73	=>	50
		76	=>	6
		78	=>	12 and 46
		82	=>	20
		83	=>	22
		84	=>	21
		86	=>	23
		88	=>	16
		89	=>	9
		93	=>	31
		95	=>	27
		96	=>	29
		97	=>	24
		101	=>	37
		103	=>	17
		105	=>	33
		107	=>	7
		112	=>	2
		115	=>	43
		117	=>	10
		118	=>	39
		119	=>	14
		123	=>	41
		125	=>	34
		127	=>	13
		128	=>	47
		130	=>	54

Class: public react.command.CommandFreeze	NameNotChanged
	Source: "CommandFreeze.java"
	FieldsOf: react.command.CommandFreeze
	MethodsOf: react.command.CommandFreeze
		public void fire(org.bukkit.command.CommandSender, java.lang.String[]) 	NameNotChanged
	LineNumbersOf: react.command.CommandFreeze
		16	=>	11
		17	=>	3
		18	=>	1
		19	=>	14
		20	=>	4
		21	=>	7
		22	=>	6
		23	=>	10
		28	=>	9
		32	=>	12
		35	=>	13
		37	=>	5
		38	=>	8
		39	=>	2

Class: public react.command.CommandHelp	NameNotChanged
	Source: "CommandHelp.java"
	FieldsOf: react.command.CommandHelp
	MethodsOf: react.command.CommandHelp
		public void fire(org.bukkit.command.CommandSender, java.lang.String[]) 	NameNotChanged
	LineNumbersOf: react.command.CommandHelp
		15	=>	4
		16	=>	5
		17	=>	7
		18	=>	9
		19	=>	3
		20	=>	6
		21	=>	8
		22	=>	1
		27	=>	10
		28	=>	2

Class: public react.command.CommandMonitor	NameNotChanged
	Source: "CommandMonitor.java"
	FieldsOf: react.command.CommandMonitor
		public static boolean a	=>	g
	MethodsOf: react.command.CommandMonitor
		public void fire(org.bukkit.command.CommandSender, java.lang.String[]) 	NameNotChanged
	LineNumbersOf: react.command.CommandMonitor
		17	=>	10
		18	=>	1
		19	=>	6
		20	=>	7
		21	=>	9
		22	=>	5
		23	=>	8
		24	=>	3
		29	=>	11
		30	=>	2
		31	=>	4

Class: public react.controller.ActionController	NameNotChanged
	Source: "ActionController.java"
	FieldsOf: react.controller.ActionController
		private surge.collection.GMap actions	=>	a
	MethodsOf: react.controller.ActionController
		public react.api.IAction getAction(react.api.ActionType) 	NameNotChanged
		public surge.collection.GList getActions() 	NameNotChanged
		public void registerAction(react.api.IAction) 	NameNotChanged
		public void start() 	NameNotChanged
		public void stop() 	NameNotChanged
		public void tick() 	NameNotChanged
	LineNumbersOf: react.controller.ActionController
		12	=>	2
		19	=>	13
		21	=>	24
		25	=>	6
		28	=>	16
		30	=>	23
		33	=>	26
		35	=>	9
		38	=>	20
		40	=>	29
		43	=>	7
		45	=>	18
		48	=>	15
		50	=>	22
		53	=>	12
		55	=>	5
		56	=>	4, 10, 17, 21, 27 and 30
		57	=>	1
		58	=>	28
		62	=>	25
		67	=>	3
		68	=>	8
		74	=>	11
		80	=>	19
		84	=>	14

Class: public react.controller.CommandController	NameNotChanged
	Source: "CommandController.java"
	FieldsOf: react.controller.CommandController
		private surge.collection.GList commands	=>	a
		private boolean k	=>	c
	MethodsOf: react.controller.CommandController
		public void begin() 	NameNotChanged
		public void f(org.bukkit.command.CommandSender, java.lang.String) 	NameNotChanged
		public void msg(org.bukkit.command.CommandSender, java.lang.String) 	NameNotChanged
		public boolean onCommand(org.bukkit.command.CommandSender, org.bukkit.command.Command, java.lang.String, java.lang.String[]) 	NameNotChanged
		public void start() 	NameNotChanged
		public void stop() 	NameNotChanged
		public void tick() 	NameNotChanged
	LineNumbersOf: react.controller.CommandController
		25	=>	28
		33	=>	52
		34	=>	25
		39	=>	8
		40	=>	10
		44	=>	27
		45	=>	49
		46	=>	21
		47	=>	70
		49	=>	74
		53	=>	56
		54	=>	79
		55	=>	32
		58	=>	62
		60	=>	40
		63	=>	80
		65	=>	66
		68	=>	51
		70	=>	68
		73	=>	48
		75	=>	3
		78	=>	50
		80	=>	59
		83	=>	13
		85	=>	69
		86	=>	4, 9, 29, 43, 64 and 77
		87	=>	45
		88	=>	42
		93	=>	7
		95	=>	46
		97	=>	20
		101	=>	31
		102	=>	12
		106	=>	17
		107	=>	6
		112	=>	38
		114	=>	63
		115	=>	5
		117	=>	35
		119	=>	37
		120	=>	15
		123	=>	81
		125	=>	57
		126	=>	54
		129	=>	34
		131	=>	67
		133	=>	39
		135	=>	60
		136	=>	47
		138	=>	53
		140	=>	36
		142	=>	2
		144	=>	22 and 65
		146	=>	16
		148	=>	71
		149	=>	19
		152	=>	44
		155	=>	76
		157	=>	26
		158	=>	1
		160	=>	14
		162	=>	78
		163	=>	30
		167	=>	18
		169	=>	24
		171	=>	55
		176	=>	33
		178	=>	11 and 75
		180	=>	73
		183	=>	41
		186	=>	23
		191	=>	61
		192	=>	72
		196	=>	58

Class: public react.controller.MonitorController	NameNotChanged
	Source: "MonitorController.java"
	FieldsOf: react.controller.MonitorController
		public static int maxCooldown	NameNotChanged
		private surge.collection.GMap posts	=>	c
		private react.api.TitleMonitor titleMonitor	=>	a
	MethodsOf: react.controller.MonitorController
		public float calcVolume(react.api.ReactPlayer) 	NameNotChanged
		public boolean canMonitor(org.bukkit.entity.Player) 	NameNotChanged
		private void changePost(react.api.ReactPlayer) 	=>	a
		public void constructMonitor() 	NameNotChanged
		public java.lang.String getTickName() 	NameNotChanged
		public react.api.TitleMonitor getTitleMonitor() 	NameNotChanged
		private void handlePosting(react.api.ReactPlayer) 	=>	f
		private void handleScrolling(react.api.ReactPlayer) 	=>	d
		private void handleShifting(react.api.ReactPlayer) 	=>	e
		private void handleTriggers(react.api.ReactPlayer) 	=>	c
		public boolean isMonitoring(org.bukkit.entity.Player) 	NameNotChanged
		public void on(org.bukkit.event.player.PlayerJoinEvent) 	NameNotChanged
		public void on(org.bukkit.event.player.PlayerToggleSneakEvent) 	NameNotChanged
		public void onTick() 	NameNotChanged
		public java.lang.String prefixFor(react.api.ReactPlayer, int, int) 	NameNotChanged
		public java.lang.String prefixForSub(react.api.ReactPlayer, surge.util.C, int) 	NameNotChanged
		private void processPlayer(react.api.ReactPlayer) 	=>	b
		public void start() 	NameNotChanged
		public void startMonitoring(org.bukkit.entity.Player) 	NameNotChanged
		public void stop() 	NameNotChanged
		public void stopMonitoring(org.bukkit.entity.Player) 	NameNotChanged
		public void tick() 	NameNotChanged
		public void tickMonitor(react.api.ReactPlayer) 	NameNotChanged
		public void toggleMonitoring(org.bukkit.entity.Player) 	NameNotChanged
	LineNumbersOf: react.controller.MonitorController
		31	=>	113
		36	=>	134
		37	=>	162
		38	=>	161
		39	=>	129
		44	=>	94
		45	=>	87
		46	=>	109
		48	=>	101
		50	=>	1
		52	=>	31
		54	=>	22
		55	=>	72
		59	=>	76
		61	=>	126
		64	=>	6
		66	=>	147
		67	=>	14
		72	=>	35
		73	=>	36
		75	=>	145
		80	=>	157
		81	=>	141
		82	=>	84
		86	=>	131
		87	=>	67
		88	=>	27
		90	=>	106
		91	=>	34
		93	=>	50
		94	=>	71
		96	=>	140
		97	=>	153
		98	=>	45
		99	=>	130
		101	=>	98
		102	=>	19
		103	=>	30
		104	=>	12
		105	=>	25
		109	=>	171
		110	=>	42
		111	=>	116
		112	=>	52
		114	=>	159
		119	=>	43
		124	=>	163
		126	=>	169
		129	=>	13
		134	=>	69
		136	=>	9
		138	=>	77
		142	=>	160
		144	=>	66
		145	=>	123
		148	=>	167
		150	=>	53
		151	=>	63
		153	=>	105
		159	=>	28
		163	=>	33
		164	=>	135
		165	=>	133
		166	=>	100
		170	=>	78
		172	=>	172
		175	=>	59
		176	=>	47
		177	=>	56
		178	=>	119
		179	=>	37
		183	=>	39
		185	=>	48
		186	=>	8
		188	=>	104
		190	=>	111
		193	=>	20
		195	=>	107
		198	=>	86
		200	=>	103
		201	=>	83
		202	=>	4
		205	=>	117
		207	=>	74
		211	=>	148
		212	=>	82
		213	=>	57
		214	=>	170
		216	=>	115
		218	=>	62
		220	=>	24
		223	=>	137
		225	=>	54
		228	=>	102
		230	=>	132
		233	=>	155
		235	=>	55
		240	=>	23
		246	=>	21
		249	=>	127
		250	=>	110
		254	=>	91
		255	=>	152
		256	=>	38
		257	=>	144
		258	=>	32
		259	=>	5
		261	=>	51
		263	=>	96
		265	=>	142
		266	=>	93
		267	=>	112
		268	=>	146
		273	=>	10
		274	=>	58
		275	=>	128
		276	=>	154
		280	=>	164
		281	=>	143
		282	=>	114
		286	=>	70
		288	=>	138
		291	=>	92
		293	=>	81
		296	=>	108
		298	=>	46
		300	=>	26
		301	=>	120
		304	=>	7
		306	=>	73
		308	=>	88
		312	=>	90
		314	=>	3
		317	=>	60
		318	=>	99
		320	=>	149
		322	=>	29
		325	=>	68
		327	=>	166
		330	=>	139
		335	=>	151
		336	=>	95
		337	=>	16
		339	=>	122
		341	=>	80
		344	=>	124
		346	=>	89
		349	=>	11
		354	=>	165
		355	=>	156
		356	=>	97
		357	=>	168
		358	=>	150
		359	=>	61
		360	=>	121
		361	=>	158
		365	=>	79
		371	=>	15
		373	=>	2
		375	=>	85
		380	=>	49
		382	=>	75
		384	=>	41
		387	=>	173
		389	=>	40
		394	=>	136
		396	=>	65
		398	=>	64
		400	=>	125
		403	=>	18
		404	=>	44
		405	=>	17
		410	=>	118

Class: public react.controller.PlayerController	NameNotChanged
	Source: "PlayerController.java"
	FieldsOf: react.controller.PlayerController
		private surge.collection.GList players	=>	a
	MethodsOf: react.controller.PlayerController
		public react.api.ReactPlayer getPlayer(org.bukkit.entity.Player) 	NameNotChanged
		public surge.collection.GList getPlayers() 	NameNotChanged
		public boolean has(org.bukkit.entity.Player) 	NameNotChanged
		public void on(org.bukkit.event.player.PlayerQuitEvent) 	NameNotChanged
		public void start() 	NameNotChanged
		public void stop() 	NameNotChanged
		public void tick() 	NameNotChanged
	LineNumbersOf: react.controller.PlayerController
		12	=>	5
		19	=>	4
		20	=>	20
		21	=>	8
		26	=>	21
		27	=>	19
		33	=>	14
		37	=>	13
		39	=>	9
		41	=>	22
		43	=>	15
		45	=>	23
		50	=>	7
		52	=>	24
		54	=>	2
		56	=>	18
		58	=>	6
		59	=>	16
		61	=>	17
		66	=>	11
		72	=>	1
		74	=>	12
		75	=>	10
		77	=>	3

Class: public react.controller.SampleController	NameNotChanged
	Source: "SampleController.java"
	FieldsOf: react.controller.SampleController
		public static boolean a	=>	d
		private surge.collection.GMap samplers	=>	a
		private surge.server.SuperSampler ss	=>	c
	MethodsOf: react.controller.SampleController
		private void constructSamplers() 	=>	a
		public react.api.ISampler getSampler(java.lang.String) 	NameNotChanged
		public surge.server.SuperSampler getSuperSampler() 	NameNotChanged
		public java.lang.String getTickName() 	NameNotChanged
		public void onTick() 	NameNotChanged
		public void registerSampler(react.api.ISampler) 	NameNotChanged
		public void start() 	NameNotChanged
		public void stop() 	NameNotChanged
		public void tick() 	NameNotChanged
	LineNumbersOf: react.controller.SampleController
		23	=>	43
		24	=>	41
		25	=>	52
		26	=>	13
		27	=>	12
		31	=>	48
		32	=>	11
		36	=>	39
		41	=>	10
		45	=>	32
		48	=>	18
		50	=>	2
		53	=>	4
		55	=>	19
		58	=>	29
		60	=>	46
		63	=>	28
		65	=>	20
		68	=>	31
		70	=>	38
		73	=>	26
		75	=>	21
		76	=>	17, 23, 24, 30, 44 and 47
		77	=>	49
		79	=>	51
		81	=>	7
		82	=>	27
		83	=>	53
		84	=>	33
		89	=>	5
		90	=>	50
		91	=>	34
		92	=>	40
		97	=>	8
		98	=>	37
		99	=>	36
		100	=>	9
		106	=>	1
		110	=>	25
		116	=>	35
		120	=>	42
		122	=>	6
		126	=>	3
		128	=>	16
		129	=>	15
		130	=>	14
		131	=>	54
		132	=>	45
		137	=>	22

Class: public react.sampler.SampleChunksLoaded	NameNotChanged
	Source: "SampleChunksLoaded.java"
	FieldsOf: react.sampler.SampleChunksLoaded
	MethodsOf: react.sampler.SampleChunksLoaded
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleChunksLoaded
		10	=>	5
		15	=>	9
		16	=>	4
		17	=>	6
		18	=>	10
		19	=>	7
		20	=>	2
		21	=>	3
		26	=>	1
		27	=>	8
		32	=>	11

Class: public react.sampler.SampleChunksLoadedPerSecond	NameNotChanged
	Source: "SampleChunksLoadedPerSecond.java"
	FieldsOf: react.sampler.SampleChunksLoadedPerSecond
		private surge.math.Average a	=>	i
	MethodsOf: react.sampler.SampleChunksLoadedPerSecond
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleChunksLoadedPerSecond
		11	=>	3
		13	=>	13
		18	=>	9
		19	=>	2
		20	=>	11
		21	=>	1
		22	=>	4
		23	=>	10
		24	=>	7
		29	=>	12
		30	=>	6
		31	=>	5
		36	=>	8

Class: public react.sampler.SampleEntitiesDrops	NameNotChanged
	Source: "SampleEntitiesDrops.java"
	FieldsOf: react.sampler.SampleEntitiesDrops
	MethodsOf: react.sampler.SampleEntitiesDrops
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleEntitiesDrops
		10	=>	6
		15	=>	5
		16	=>	7
		17	=>	10
		18	=>	1
		19	=>	11
		20	=>	9
		21	=>	4
		26	=>	8
		27	=>	2
		32	=>	3

Class: public react.sampler.SampleEntitiesLiving	NameNotChanged
	Source: "SampleEntitiesLiving.java"
	FieldsOf: react.sampler.SampleEntitiesLiving
	MethodsOf: react.sampler.SampleEntitiesLiving
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleEntitiesLiving
		10	=>	5
		15	=>	9
		16	=>	3
		17	=>	6
		18	=>	8
		19	=>	7
		20	=>	11
		21	=>	2
		26	=>	4
		27	=>	1
		32	=>	10

Class: public react.sampler.SampleEntitiesTiles	NameNotChanged
	Source: "SampleEntitiesTiles.java"
	FieldsOf: react.sampler.SampleEntitiesTiles
	MethodsOf: react.sampler.SampleEntitiesTiles
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleEntitiesTiles
		10	=>	11
		15	=>	3
		16	=>	9
		17	=>	8
		18	=>	10
		19	=>	7
		20	=>	6
		21	=>	5
		26	=>	4
		27	=>	1
		32	=>	2

Class: public react.sampler.SampleEntitiesTotal	NameNotChanged
	Source: "SampleEntitiesTotal.java"
	FieldsOf: react.sampler.SampleEntitiesTotal
	MethodsOf: react.sampler.SampleEntitiesTotal
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleEntitiesTotal
		10	=>	10
		15	=>	7
		16	=>	5
		17	=>	4
		18	=>	11
		19	=>	9
		20	=>	6
		21	=>	8
		26	=>	2
		27	=>	3
		32	=>	1

Class: public react.sampler.SampleMemoryAllocated	NameNotChanged
	Source: "SampleMemoryAllocated.java"
	FieldsOf: react.sampler.SampleMemoryAllocated
	MethodsOf: react.sampler.SampleMemoryAllocated
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleMemoryAllocated
		10	=>	9
		15	=>	5
		16	=>	3
		17	=>	6
		18	=>	8
		19	=>	10
		20	=>	11
		21	=>	4
		26	=>	7
		27	=>	1
		32	=>	2

Class: public react.sampler.SampleMemoryAllocationPerSecond	NameNotChanged
	Source: "SampleMemoryAllocationPerSecond.java"
	FieldsOf: react.sampler.SampleMemoryAllocationPerSecond
	MethodsOf: react.sampler.SampleMemoryAllocationPerSecond
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleMemoryAllocationPerSecond
		10	=>	1
		15	=>	7
		16	=>	8
		17	=>	11
		18	=>	9
		19	=>	4
		20	=>	5
		21	=>	2
		26	=>	3
		27	=>	10
		32	=>	6

Class: public react.sampler.SampleMemoryFree	NameNotChanged
	Source: "SampleMemoryFree.java"
	FieldsOf: react.sampler.SampleMemoryFree
	MethodsOf: react.sampler.SampleMemoryFree
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleMemoryFree
		10	=>	7
		15	=>	10
		16	=>	2
		17	=>	1
		18	=>	3
		19	=>	5
		20	=>	11
		21	=>	4
		26	=>	9
		27	=>	6
		32	=>	8

Class: public react.sampler.SampleMemoryMax	NameNotChanged
	Source: "SampleMemoryMax.java"
	FieldsOf: react.sampler.SampleMemoryMax
	MethodsOf: react.sampler.SampleMemoryMax
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleMemoryMax
		10	=>	1
		15	=>	4
		16	=>	7
		17	=>	8
		18	=>	11
		19	=>	3
		20	=>	2
		21	=>	5
		26	=>	6
		27	=>	9
		32	=>	10

Class: public react.sampler.SampleMemoryUse	NameNotChanged
	Source: "SampleMemoryUse.java"
	FieldsOf: react.sampler.SampleMemoryUse
	MethodsOf: react.sampler.SampleMemoryUse
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleMemoryUse
		10	=>	2
		15	=>	11
		16	=>	5
		17	=>	10
		18	=>	4
		19	=>	3
		20	=>	1
		21	=>	8
		26	=>	6
		27	=>	7
		32	=>	9

Class: public react.sampler.SampleTickTime	NameNotChanged
	Source: "SampleTickTime.java"
	FieldsOf: react.sampler.SampleTickTime
	MethodsOf: react.sampler.SampleTickTime
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleTickTime
		10	=>	7
		15	=>	1
		16	=>	10
		17	=>	8
		18	=>	11
		19	=>	9
		20	=>	6
		21	=>	3
		26	=>	4
		27	=>	2
		32	=>	5

Class: public react.sampler.SampleTickUtilization	NameNotChanged
	Source: "SampleTickUtilization.java"
	FieldsOf: react.sampler.SampleTickUtilization
	MethodsOf: react.sampler.SampleTickUtilization
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleTickUtilization
		10	=>	3
		15	=>	6
		16	=>	11
		17	=>	1
		18	=>	9
		19	=>	2
		20	=>	7
		21	=>	8
		26	=>	10
		27	=>	4
		32	=>	5

Class: public react.sampler.SampleTicksPerSecond	NameNotChanged
	Source: "SampleTicksPerSecond.java"
	FieldsOf: react.sampler.SampleTicksPerSecond
		public static int a	=>	i
	MethodsOf: react.sampler.SampleTicksPerSecond
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleTicksPerSecond
		11	=>	1
		16	=>	5
		17	=>	9
		18	=>	7
		19	=>	10
		20	=>	6
		21	=>	4
		22	=>	12
		27	=>	2
		28	=>	11
		33	=>	3
		35	=>	8
		38	=>	13

Class: public surge.Main	NameNotChanged
	Source: "Main.java"
	FieldsOf: surge.Main
		public static surge.collection.GMap anchors	NameNotChanged
		private surge.collection.GList controllerSet	=>	f
		private surge.collection.GMap pluginInstances	=>	e
		private surge.collection.GList plugins	=>	d
	MethodsOf: surge.Main
		private void initializeAmps() 	=>	b
		public void onControllerRegistry() 	NameNotChanged
		public void onPostInit() 	NameNotChanged
		public void onPreInit() 	NameNotChanged
		public void onStart(surge.util.Protocol) 	NameNotChanged
		public void onStop() 	NameNotChanged
		public void onTick() 	NameNotChanged
		private void scanForAmps() 	=>	c
		private void shutDownAmps() 	=>	a
	LineNumbersOf: surge.Main
		28	=>	168
		39	=>	46
		46	=>	179
		47	=>	39
		48	=>	82
		49	=>	3
		50	=>	19
		51	=>	104
		53	=>	131
		55	=>	137
		58	=>	101
		60	=>	30
		63	=>	95
		65	=>	124
		68	=>	152
		70	=>	174
		73	=>	76
		75	=>	69
		78	=>	163
		80	=>	68
		83	=>	113
		85	=>	89
		88	=>	29
		90	=>	99
		92	=>	170
		99	=>	167
		100	=>	176
		102	=>	52
		104	=>	144
		107	=>	21
		109	=>	34
		112	=>	40
		114	=>	165
		116	=>	31
		122	=>	96
		128	=>	57
		132	=>	106 and 120
		134	=>	134
		137	=>	91
		139	=>	26 and 130
		141	=>	109
		143	=>	108
		147	=>	93
		149	=>	12 and 151
		151	=>	172
		152	=>	139
		153	=>	135
		154	=>	10
		156	=>	44 and 155
		158	=>	60
		160	=>	116
		162	=>	74
		164	=>	159
		165	=>	175
		168	=>	6
		170	=>	70
		171	=>	102
		174	=>	61
		176	=>	100
		177	=>	83
		180	=>	129
		182	=>	80
		183	=>	153
		186	=>	22
		187	=>	177
		191	=>	17 and 136
		193	=>	18
		195	=>	20
		197	=>	75
		199	=>	49
		200	=>	66
		203	=>	64
		205	=>	15
		206	=>	63
		209	=>	53
		211	=>	78
		212	=>	157
		215	=>	166
		217	=>	71
		218	=>	149
		221	=>	107
		225	=>	32 and 119
		227	=>	36
		229	=>	171
		231	=>	11
		233	=>	138
		234	=>	154
		237	=>	127
		239	=>	94
		240	=>	147
		243	=>	73
		245	=>	128
		246	=>	79
		249	=>	110
		251	=>	14
		252	=>	28
		255	=>	25
		257	=>	150
		258	=>	133
		261	=>	45
		265	=>	24 and 143
		267	=>	180
		269	=>	1
		271	=>	27
		273	=>	54
		274	=>	164
		277	=>	42
		279	=>	115
		280	=>	97
		283	=>	72
		285	=>	178
		286	=>	16
		289	=>	123
		291	=>	121
		292	=>	141
		295	=>	59
		297	=>	126
		298	=>	169
		301	=>	140
		305	=>	2
		307	=>	158
		309	=>	9
		310	=>	5
		313	=>	50
		315	=>	55
		317	=>	105
		318	=>	132
		321	=>	67 and 162
		323	=>	103
		325	=>	118
		327	=>	148
		328	=>	48
		331	=>	156
		332	=>	92
		333	=>	87
		334	=>	81
		337	=>	43
		339	=>	8
		341	=>	90 and 114
		343	=>	65
		346	=>	146
		349	=>	56
		351	=>	77
		355	=>	84
		356	=>	125
		357	=>	37
		359	=>	160 and 161
		361	=>	122
		363	=>	47
		365	=>	51
		368	=>	117
		369	=>	41
		371	=>	173
		373	=>	13
		374	=>	85
		377	=>	142
		379	=>	23
		381	=>	7
		383	=>	88
		386	=>	111
		387	=>	62
		392	=>	35
		393	=>	4
		398	=>	145
		400	=>	112
		403	=>	33 and 98
		405	=>	86
		408	=>	58
		409	=>	38

Class: public surge.PluginAmp	NameNotChanged
	Source: "PluginAmp.java"
	FieldsOf: surge.PluginAmp
		private boolean connected	=>	b
		private int masterTask	=>	c
		private surge.control.AmpedPlugin plugin	=>	a
	MethodsOf: surge.PluginAmp
		static synthetic void access$000(surge.PluginAmp) 	NameNotChanged
		public void connect() 	NameNotChanged
		public void disconnect() 	NameNotChanged
		public surge.control.AmpedPlugin getPluginInstance() 	NameNotChanged
		public boolean isConnected() 	NameNotChanged
		private void masterTick() 	=>	a
		public int startRepeatingTask(int, int, java.lang.Runnable) 	NameNotChanged
		public int startTask(int, java.lang.Runnable) 	NameNotChanged
		public void stopTask(int) 	NameNotChanged
	LineNumbersOf: surge.PluginAmp
		11	=>	6
		18	=>	1
		19	=>	9
		20	=>	26
		21	=>	17
		25	=>	5
		30	=>	22
		35	=>	12
		36	=>	8
		37	=>	35
		47	=>	30
		55	=>	31
		59	=>	20
		61	=>	7
		64	=>	11
		65	=>	27
		67	=>	18
		69	=>	24
		70	=>	28
		71	=>	3
		75	=>	34
		76	=>	23
		77	=>	16
		78	=>	33
		79	=>	10
		83	=>	14
		85	=>	4
		90	=>	13
		93	=>	21
		98	=>	19
		100	=>	15
		105	=>	32
		108	=>	2
		113	=>	29
		114	=>	25

Class: surge.PluginAmp$1	NameNotChanged
	Source: "PluginAmp.java"
	FieldsOf: surge.PluginAmp$1
		final synthetic surge.PluginAmp this$0	NameNotChanged
	MethodsOf: surge.PluginAmp$1
		public void run() 	NameNotChanged
	LineNumbersOf: surge.PluginAmp$1
		38	=>	3
		42	=>	4
		43	=>	2
		44	=>	1

Class: surge.PluginAmp$2	NameNotChanged
	Source: "PluginAmp.java"
	FieldsOf: surge.PluginAmp$2
		final synthetic surge.PluginAmp this$0	NameNotChanged
	MethodsOf: surge.PluginAmp$2
		public void run() 	NameNotChanged
	LineNumbersOf: surge.PluginAmp$2
		48	=>	2
		52	=>	3
		53	=>	1

Class: public surge.Surge	NameNotChanged
	Source: "Surge.java"
	FieldsOf: surge.Surge
		public static boolean a	=>	g
		protected static surge.PluginAmp amp	=>	a
		private static surge.collection.GList atickComponents	=>	c
		private static surge.hotload.HotloadManager hotloadmgr	=>	e
		private static java.lang.Thread mainThread	=>	f
		private static surge.sched.TaskManager taskmgr	=>	d
		private static surge.collection.GList tickComponents	=>	b
	MethodsOf: surge.Surge
		public static surge.PluginAmp createAmp(surge.control.AmpedPlugin) 	NameNotChanged
		public static java.io.File folder() 	NameNotChanged
		public static java.io.File folder(java.lang.String) 	NameNotChanged
		public static surge.PluginAmp getAmp() 	NameNotChanged
		public static surge.collection.GList getAsyncTickComponents() 	NameNotChanged
		public static surge.hotload.HotloadManager getHotloadManager() 	NameNotChanged
		public static java.io.File getPluginJarFile() 	NameNotChanged
		public static java.lang.Thread getServerThread() 	NameNotChanged
		public static surge.sched.TaskManager getTaskManager() 	NameNotChanged
		public static surge.collection.GList getTickComponents() 	NameNotChanged
		public static boolean hasAmp() 	NameNotChanged
		public static boolean isMainThread() 	NameNotChanged
		public static void register(org.bukkit.event.Listener) 	NameNotChanged
		public static void registerTicked(surge.sched.IMasterTickComponent) 	NameNotChanged
		private static void startup() 	=>	a
		protected static void stopAmp() 	=>	b
		public static void unregister(org.bukkit.event.Listener) 	NameNotChanged
		public static void unregisterTicked(surge.sched.IMasterTickComponent) 	NameNotChanged
	LineNumbersOf: surge.Surge
		17	=>	7
		19	=>	12
		20	=>	37
		21	=>	29
		28	=>	17
		29	=>	19
		33	=>	39
		34	=>	22
		38	=>	31
		43	=>	10
		48	=>	4
		49	=>	11
		50	=>	8
		55	=>	28
		56	=>	23
		57	=>	35
		61	=>	2
		66	=>	18
		71	=>	30
		76	=>	21
		78	=>	25
		79	=>	41
		82	=>	27
		83	=>	34
		87	=>	40
		89	=>	9
		90	=>	15
		93	=>	6
		94	=>	14
		98	=>	5
		100	=>	1
		103	=>	33
		108	=>	36
		113	=>	38
		114	=>	3
		118	=>	24
		123	=>	26
		128	=>	13
		133	=>	16
		138	=>	20
		139	=>	32

Class: public surge.cluster.Cluster	NameNotChanged
	Source: "Cluster.java"
	FieldsOf: surge.cluster.Cluster
		public static int a	=>	c
		private java.lang.Object t	=>	b
		private surge.cluster.ClusterType type	=>	a
	MethodsOf: surge.cluster.Cluster
		public java.lang.Object get() 	NameNotChanged
		public surge.cluster.ClusterType getType() 	NameNotChanged
		public void set(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.cluster.Cluster
		9	=>	7
		10	=>	6
		11	=>	1
		12	=>	2
		17	=>	8
		23	=>	3
		24	=>	5
		29	=>	4

Class: public surge.cluster.ClusterBoolean	NameNotChanged
	Source: "ClusterBoolean.java"
	FieldsOf: surge.cluster.ClusterBoolean
	MethodsOf: surge.cluster.ClusterBoolean
	LineNumbersOf: surge.cluster.ClusterBoolean
		7	=>	2
		8	=>	1

Class: public surge.cluster.ClusterDouble	NameNotChanged
	Source: "ClusterDouble.java"
	FieldsOf: surge.cluster.ClusterDouble
	MethodsOf: surge.cluster.ClusterDouble
	LineNumbersOf: surge.cluster.ClusterDouble
		7	=>	2
		8	=>	1

Class: public surge.cluster.ClusterInt	NameNotChanged
	Source: "ClusterInt.java"
	FieldsOf: surge.cluster.ClusterInt
	MethodsOf: surge.cluster.ClusterInt
	LineNumbersOf: surge.cluster.ClusterInt
		7	=>	2
		8	=>	1

Class: public surge.cluster.ClusterLong	NameNotChanged
	Source: "ClusterLong.java"
	FieldsOf: surge.cluster.ClusterLong
	MethodsOf: surge.cluster.ClusterLong
	LineNumbersOf: surge.cluster.ClusterLong
		7	=>	2
		8	=>	1

Class: public surge.cluster.ClusterString	NameNotChanged
	Source: "ClusterString.java"
	FieldsOf: surge.cluster.ClusterString
	MethodsOf: surge.cluster.ClusterString
	LineNumbersOf: surge.cluster.ClusterString
		7	=>	1
		8	=>	2

Class: public surge.cluster.ClusterStringList	NameNotChanged
	Source: "ClusterStringList.java"
	FieldsOf: surge.cluster.ClusterStringList
	MethodsOf: surge.cluster.ClusterStringList
	LineNumbersOf: surge.cluster.ClusterStringList
		9	=>	2
		10	=>	1

Class: public final enum surge.cluster.ClusterType	NameNotChanged
	Source: "ClusterType.java"
	FieldsOf: surge.cluster.ClusterType
		private static final synthetic surge.cluster.ClusterType[] $VALUES	=>	a
		public static final enum surge.cluster.ClusterType BOOLEAN	NameNotChanged
		public static final enum surge.cluster.ClusterType DOUBLE	NameNotChanged
		public static final enum surge.cluster.ClusterType INT	NameNotChanged
		public static final enum surge.cluster.ClusterType LONG	NameNotChanged
		public static final enum surge.cluster.ClusterType STRING	NameNotChanged
		public static final enum surge.cluster.ClusterType STRING_LIST	NameNotChanged
	MethodsOf: surge.cluster.ClusterType
		public static surge.cluster.ClusterType valueOf(java.lang.String) 	NameNotChanged
		public static surge.cluster.ClusterType[] values() 	NameNotChanged
	LineNumbersOf: surge.cluster.ClusterType
		3	=>	1, 2, 4 and 5
		5	=>	3

Class: public surge.cluster.ConfigurationDataInput	NameNotChanged
	Source: "ConfigurationDataInput.java"
	FieldsOf: surge.cluster.ConfigurationDataInput
		private static synthetic int[] $SWITCH_TABLE$surge$cluster$ClusterType	=>	a
	MethodsOf: surge.cluster.ConfigurationDataInput
		static synthetic int[] $SWITCH_TABLE$surge$cluster$ClusterType() 	=>	a
		public surge.cluster.DataCluster fillDefaults(surge.cluster.IConfigurable) 	NameNotChanged
		public void read(surge.cluster.IConfigurable, java.io.File) 	NameNotChanged
	LineNumbersOf: surge.cluster.ConfigurationDataInput
		11	=>	95 and 106
		16	=>	58
		17	=>	57
		18	=>	100
		20	=>	125
		22	=>	33
		23	=>	3
		26	=>	111
		28	=>	4 and 130
		30	=>	7
		32	=>	47
		34	=>	105
		37	=>	74
		40	=>	67
		41	=>	91
		43	=>	66
		46	=>	83
		47	=>	56
		49	=>	26
		50	=>	46
		52	=>	85
		53	=>	108
		55	=>	82
		56	=>	20
		58	=>	88
		59	=>	112
		61	=>	92
		66	=>	14 and 45
		68	=>	2
		70	=>	84
		73	=>	78
		75	=>	73
		77	=>	54
		78	=>	68
		82	=>	114
		84	=>	15 and 53
		86	=>	24
		88	=>	1
		91	=>	13
		92	=>	41
		93	=>	77
		95	=>	16
		97	=>	107
		98	=>	31
		101	=>	52
		103	=>	71
		106	=>	127
		107	=>	76
		109	=>	90
		110	=>	8
		112	=>	30
		113	=>	9
		115	=>	38
		116	=>	65
		118	=>	101
		119	=>	36
		121	=>	116
		126	=>	109
		131	=>	27
		132	=>	32
		133	=>	119
		135	=>	23 and 98
		137	=>	19
		139	=>	99
		142	=>	25
		143	=>	64
		144	=>	80
		146	=>	104
		148	=>	60
		149	=>	48
		151	=>	61
		153	=>	51
		154	=>	79
		156	=>	102
		158	=>	103
		159	=>	128
		161	=>	124
		163	=>	113
		164	=>	115
		166	=>	97
		168	=>	12
		169	=>	75
		171	=>	70
		173	=>	93
		174	=>	69
		178	=>	59
		182	=>	89 and 118
		184	=>	37
		186	=>	126
		189	=>	87
		191	=>	96
		193	=>	123
		194	=>	39
		198	=>	22
		200	=>	44 and 129
		202	=>	11
		204	=>	63
		207	=>	29
		208	=>	121
		209	=>	122
		211	=>	50
		213	=>	34
		214	=>	117
		217	=>	49
		219	=>	35
		221	=>	17
		222	=>	18
		224	=>	81
		226	=>	6
		227	=>	120
		229	=>	110
		231	=>	131
		232	=>	42
		234	=>	72
		236	=>	94
		237	=>	10
		239	=>	28
		241	=>	55
		242	=>	62
		244	=>	40
		246	=>	43
		247	=>	5
		251	=>	86
		256	=>	21

Class: public surge.cluster.ConfigurationDataOutput	NameNotChanged
	Source: "ConfigurationDataOutput.java"
	FieldsOf: surge.cluster.ConfigurationDataOutput
	MethodsOf: surge.cluster.ConfigurationDataOutput
		public void write(surge.cluster.IConfigurable, java.io.File) 	NameNotChanged
	LineNumbersOf: surge.cluster.ConfigurationDataOutput
		11	=>	22
		16	=>	50
		17	=>	8
		18	=>	4
		20	=>	2 and 55
		22	=>	57
		24	=>	38
		27	=>	7
		28	=>	44
		29	=>	12
		31	=>	42
		33	=>	15
		34	=>	67
		36	=>	61
		38	=>	14
		39	=>	68
		41	=>	3
		43	=>	29
		44	=>	70
		46	=>	37
		48	=>	65
		49	=>	19
		51	=>	69
		53	=>	27
		54	=>	5
		56	=>	1
		58	=>	63
		59	=>	34
		63	=>	66
		67	=>	17 and 62
		69	=>	41
		71	=>	54
		74	=>	46
		76	=>	32
		78	=>	25
		79	=>	53
		83	=>	6
		85	=>	11 and 18
		87	=>	35
		89	=>	49
		92	=>	30
		93	=>	20
		94	=>	21
		96	=>	39
		98	=>	16
		99	=>	23
		102	=>	33
		104	=>	13
		106	=>	60
		107	=>	45
		109	=>	31
		111	=>	51
		112	=>	26
		114	=>	10
		116	=>	59
		117	=>	58
		119	=>	52
		121	=>	9
		122	=>	28
		124	=>	56
		126	=>	48
		127	=>	36
		129	=>	47
		131	=>	64
		132	=>	40
		136	=>	43
		141	=>	71
		142	=>	24

Class: public surge.cluster.DataCluster	NameNotChanged
	Source: "DataCluster.java"
	FieldsOf: surge.cluster.DataCluster
		private surge.collection.GMap clusters	=>	a
	MethodsOf: surge.cluster.DataCluster
		public boolean contains(java.lang.String) 	NameNotChanged
		public void fromFileConfiguration(org.bukkit.configuration.file.FileConfiguration) 	NameNotChanged
		public void fromJson(surge.json.JSONObject) 	NameNotChanged
		public java.lang.Object get(java.lang.String) 	NameNotChanged
		public boolean getBoolean(java.lang.String) 	NameNotChanged
		public double getDouble(java.lang.String) 	NameNotChanged
		public int getInt(java.lang.String) 	NameNotChanged
		public long getLong(java.lang.String) 	NameNotChanged
		public java.lang.String getString(java.lang.String) 	NameNotChanged
		public java.util.List getStringList(java.lang.String) 	NameNotChanged
		public surge.cluster.ClusterType getType(java.lang.String) 	NameNotChanged
		public surge.collection.GList keys() 	NameNotChanged
		public void set(java.lang.String, boolean) 	NameNotChanged
		public void set(java.lang.String, double) 	NameNotChanged
		public void set(java.lang.String, int) 	NameNotChanged
		public void set(java.lang.String, java.lang.String) 	NameNotChanged
		public void set(java.lang.String, java.util.List) 	NameNotChanged
		public void set(java.lang.String, long) 	NameNotChanged
		public org.bukkit.configuration.file.FileConfiguration toFileConfiguration() 	NameNotChanged
		public surge.json.JSONObject toJson() 	NameNotChanged
		public void trySet(java.lang.String, java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.cluster.DataCluster
		17	=>	19
		19	=>	43
		20	=>	44
		24	=>	20
		29	=>	13 and 14
		31	=>	37
		33	=>	72
		37	=>	22
		39	=>	15 and 30
		41	=>	46
		44	=>	41
		49	=>	34
		51	=>	36 and 56
		53	=>	52
		56	=>	27
		61	=>	17 and 35
		63	=>	61
		65	=>	3
		67	=>	23
		68	=>	28
		70	=>	5
		72	=>	42
		73	=>	57
		75	=>	9
		77	=>	49
		78	=>	29
		80	=>	65
		82	=>	7
		83	=>	40
		85	=>	58
		87	=>	39
		88	=>	21
		90	=>	6
		92	=>	48
		95	=>	70
		97	=>	12
		100	=>	2
		104	=>	4
		109	=>	8
		114	=>	74
		119	=>	67
		124	=>	10
		129	=>	59
		134	=>	38
		139	=>	63
		145	=>	64
		151	=>	24
		153	=>	51
		156	=>	16
		158	=>	26
		161	=>	66
		163	=>	75
		166	=>	76
		168	=>	32
		171	=>	62
		173	=>	60
		176	=>	1
		178	=>	71
		181	=>	69
		182	=>	54
		186	=>	73
		187	=>	68
		191	=>	53
		192	=>	11
		196	=>	47
		197	=>	50
		201	=>	45
		202	=>	33
		206	=>	55
		207	=>	25
		211	=>	31
		212	=>	18

Class: public abstract surge.cluster.ICluster	NameNotChanged
	Source: "ICluster.java"
	FieldsOf: surge.cluster.ICluster
	MethodsOf: surge.cluster.ICluster
		public abstract java.lang.Object get() 	NameNotChanged
		public abstract surge.cluster.ClusterType getType() 	NameNotChanged
		public abstract void set(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.cluster.ICluster

Class: public abstract surge.cluster.IConfigurable	NameNotChanged
	Source: "IConfigurable.java"
	FieldsOf: surge.cluster.IConfigurable
	MethodsOf: surge.cluster.IConfigurable
	LineNumbersOf: surge.cluster.IConfigurable

Class: public abstract surge.cluster.IDataInput	NameNotChanged
	Source: "IDataInput.java"
	FieldsOf: surge.cluster.IDataInput
	MethodsOf: surge.cluster.IDataInput
		public abstract surge.cluster.DataCluster read(java.io.File) 	NameNotChanged
	LineNumbersOf: surge.cluster.IDataInput

Class: public abstract surge.cluster.IDataOutput	NameNotChanged
	Source: "IDataOutput.java"
	FieldsOf: surge.cluster.IDataOutput
	MethodsOf: surge.cluster.IDataOutput
		public abstract void write(surge.cluster.DataCluster, java.io.File) 	NameNotChanged
	LineNumbersOf: surge.cluster.IDataOutput

Class: public abstract annotation surge.cluster.Key	NameNotChanged
	Source: "Key.java"
	FieldsOf: surge.cluster.Key
	MethodsOf: surge.cluster.Key
		public abstract java.lang.String value() 	NameNotChanged
	LineNumbersOf: surge.cluster.Key

Class: public abstract annotation surge.cluster.KeyPointer	NameNotChanged
	Source: "KeyPointer.java"
	FieldsOf: surge.cluster.KeyPointer
	MethodsOf: surge.cluster.KeyPointer
		public abstract int value() 	NameNotChanged
	LineNumbersOf: surge.cluster.KeyPointer

Class: public abstract annotation surge.cluster.KeyStore	NameNotChanged
	Source: "KeyStore.java"
	FieldsOf: surge.cluster.KeyStore
	MethodsOf: surge.cluster.KeyStore
	LineNumbersOf: surge.cluster.KeyStore

Class: public surge.cluster.ReflectedConfigurationException	NameNotChanged
	Source: "ReflectedConfigurationException.java"
	FieldsOf: surge.cluster.ReflectedConfigurationException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.cluster.ReflectedConfigurationException
	LineNumbersOf: surge.cluster.ReflectedConfigurationException
		3	=>	1

Class: public surge.cluster.YamlDataInput	NameNotChanged
	Source: "YamlDataInput.java"
	FieldsOf: surge.cluster.YamlDataInput
	MethodsOf: surge.cluster.YamlDataInput
		public surge.cluster.DataCluster read(java.io.File) 	NameNotChanged
	LineNumbersOf: surge.cluster.YamlDataInput
		8	=>	6
		13	=>	8
		17	=>	2
		18	=>	5
		19	=>	9
		20	=>	1
		22	=>	3
		24	=>	4
		27	=>	7

Class: public surge.cluster.YamlDataOutput	NameNotChanged
	Source: "YamlDataOutput.java"
	FieldsOf: surge.cluster.YamlDataOutput
	MethodsOf: surge.cluster.YamlDataOutput
		public void write(surge.cluster.DataCluster, java.io.File) 	NameNotChanged
	LineNumbersOf: surge.cluster.YamlDataOutput
		6	=>	2
		13	=>	3
		14	=>	4
		16	=>	6
		18	=>	5
		20	=>	1

Class: public surge.collection.GBiset	NameNotChanged
	Source: "GBiset.java"
	FieldsOf: surge.collection.GBiset
		private java.lang.Object a	=>	b
		private java.lang.Object b	=>	c
	MethodsOf: surge.collection.GBiset
		public java.lang.Object getA() 	NameNotChanged
		public java.lang.Object getB() 	NameNotChanged
		public void setA(java.lang.Object) 	NameNotChanged
		public void setB(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.collection.GBiset
		8	=>	6
		10	=>	1
		11	=>	5
		12	=>	8
		16	=>	7
		21	=>	9
		22	=>	2
		26	=>	4
		31	=>	3
		32	=>	10

Class: public surge.collection.GList	NameNotChanged
	Source: "GList.java"
	FieldsOf: surge.collection.GList
		public static int a	=>	b
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.collection.GList
		public void add(java.lang.Object[]) 	NameNotChanged
		public void add(java.util.List) 	NameNotChanged
		public void addFirst(java.lang.Object) 	NameNotChanged
		public surge.collection.GList copy() 	NameNotChanged
		public boolean hasDuplicates() 	NameNotChanged
		public boolean hasIndex(int) 	NameNotChanged
		public java.lang.Object mostCommon() 	NameNotChanged
		public java.lang.Object pickRandom() 	NameNotChanged
		public java.lang.Object pop() 	NameNotChanged
		public void push(java.lang.Object, int) 	NameNotChanged
		public surge.collection.GList qadd(java.lang.Object) 	NameNotChanged
		public surge.collection.GList qdel(java.lang.Object) 	NameNotChanged
		public void remove(surge.collection.GList) 	NameNotChanged
		public surge.collection.GList removeDuplicates() 	NameNotChanged
		public surge.collection.GList reverse() 	NameNotChanged
		public surge.collection.GList shuffle() 	NameNotChanged
		public void sort() 	NameNotChanged
		public surge.collection.GList split() 	NameNotChanged
		public surge.collection.GList stringList() 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public java.lang.String toString(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.collection.GList
		19	=>	1
		20	=>	74
		24	=>	14
		25	=>	48
		26	=>	32
		30	=>	78
		32	=>	83
		34	=>	11
		36	=>	80
		40	=>	53
		42	=>	92
		44	=>	89
		47	=>	31
		48	=>	33
		52	=>	6
		53	=>	25
		55	=>	12
		57	=>	63
		59	=>	75
		61	=>	120
		64	=>	52
		65	=>	88
		67	=>	5
		68	=>	20
		70	=>	28
		72	=>	4
		74	=>	40
		75	=>	8
		77	=>	50
		79	=>	44
		84	=>	111
		86	=>	115
		87	=>	77
		88	=>	60
		92	=>	117
		93	=>	85
		94	=>	79
		100	=>	103
		101	=>	101
		102	=>	38
		104	=>	18 and 45
		106	=>	35
		108	=>	9
		111	=>	7
		114	=>	41 and 71
		116	=>	90
		118	=>	56
		121	=>	110
		124	=>	108
		126	=>	72
		131	=>	97
		136	=>	107
		137	=>	121
		142	=>	27
		144	=>	99
		146	=>	13
		147	=>	29
		148	=>	114
		152	=>	62
		154	=>	23
		156	=>	34
		157	=>	43
		158	=>	106
		163	=>	59
		165	=>	19
		167	=>	3
		168	=>	118
		169	=>	66
		173	=>	102
		175	=>	112
		177	=>	21
		178	=>	58
		180	=>	57
		185	=>	69
		186	=>	15
		187	=>	104
		189	=>	91
		194	=>	16
		199	=>	46
		207	=>	73
		211	=>	82
		213	=>	84
		215	=>	70
		217	=>	2
		221	=>	68
		222	=>	94
		227	=>	87 and 95
		229	=>	98
		231	=>	67
		235	=>	116
		236	=>	17
		241	=>	65
		243	=>	22
		244	=>	119
		245	=>	113
		249	=>	61
		251	=>	39
		253	=>	55
		254	=>	30
		256	=>	51
		258	=>	24
		261	=>	10
		266	=>	37
		267	=>	100
		268	=>	49
		274	=>	81
		279	=>	64
		281	=>	47
		283	=>	105
		284	=>	93
		286	=>	86
		291	=>	76
		292	=>	109
		297	=>	42
		299	=>	54
		302	=>	96
		303	=>	36
		304	=>	26

Class: surge.collection.GList$1	NameNotChanged
	Source: "GList.java"
	FieldsOf: surge.collection.GList$1
		final synthetic surge.collection.GList this$0	NameNotChanged
	MethodsOf: surge.collection.GList$1
		public int compare(java.lang.Object, java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.collection.GList$1
		200	=>	1
		204	=>	2

Class: public surge.collection.GMap	NameNotChanged
	Source: "GMap.java"
	FieldsOf: surge.collection.GMap
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.collection.GMap
		public surge.collection.GMap append(surge.collection.GMap) 	NameNotChanged
		public surge.collection.GMap copy() 	NameNotChanged
		public java.lang.Object findKey(java.lang.Object) 	NameNotChanged
		public surge.collection.GMap flip() 	NameNotChanged
		public surge.collection.GList get(surge.collection.GList) 	NameNotChanged
		public surge.collection.GList k() 	NameNotChanged
		public void put(surge.collection.GList, surge.collection.GList) 	NameNotChanged
		public void put(surge.collection.GMap) 	NameNotChanged
		public void putNVD(java.lang.Object, java.lang.Object) 	NameNotChanged
		public surge.collection.GMap qput(java.lang.Object, java.lang.Object) 	NameNotChanged
		public surge.collection.GMap removeDuplicateKeys() 	NameNotChanged
		public surge.collection.GMap removeDuplicateValues() 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public surge.collection.GList v() 	NameNotChanged
	LineNumbersOf: surge.collection.GMap
		5	=>	15
		11	=>	37
		13	=>	5
		15	=>	4
		16	=>	49
		18	=>	19
		23	=>	42
		25	=>	39
		27	=>	10
		29	=>	14
		31	=>	20
		36	=>	64
		37	=>	36
		42	=>	61
		44	=>	60
		46	=>	58
		48	=>	30
		51	=>	38
		53	=>	41
		56	=>	45
		57	=>	59
		59	=>	13
		65	=>	43
		67	=>	57
		69	=>	11
		70	=>	40
		72	=>	33
		77	=>	63
		79	=>	47
		80	=>	27
		82	=>	9
		87	=>	32
		92	=>	51
		97	=>	34
		99	=>	3
		101	=>	12
		105	=>	56
		107	=>	21
		109	=>	6
		111	=>	24
		113	=>	25
		115	=>	1
		120	=>	53
		121	=>	50
		123	=>	29
		125	=>	62
		127	=>	54
		128	=>	35
		130	=>	28
		135	=>	26
		136	=>	16
		138	=>	44
		140	=>	55
		142	=>	2
		143	=>	18
		145	=>	7
		150	=>	52
		152	=>	22
		155	=>	8 and 48
		157	=>	46
		159	=>	31
		163	=>	23
		164	=>	17

Class: public surge.collection.GQuadraset	NameNotChanged
	Source: "GQuadraset.java"
	FieldsOf: surge.collection.GQuadraset
		private java.lang.Object a	=>	b
		private java.lang.Object b	=>	c
		private java.lang.Object c	=>	d
		private java.lang.Object d	=>	e
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.collection.GQuadraset
		public java.lang.Object getA() 	NameNotChanged
		public java.lang.Object getB() 	NameNotChanged
		public java.lang.Object getC() 	NameNotChanged
		public java.lang.Object getD() 	NameNotChanged
		public void setA(java.lang.Object) 	NameNotChanged
		public void setB(java.lang.Object) 	NameNotChanged
		public void setC(java.lang.Object) 	NameNotChanged
		public void setD(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.collection.GQuadraset
		14	=>	11
		16	=>	5
		17	=>	13
		18	=>	8
		19	=>	14
		20	=>	2
		24	=>	15
		29	=>	7
		30	=>	3
		34	=>	10
		39	=>	1
		40	=>	18
		44	=>	6
		49	=>	9
		50	=>	16
		54	=>	17
		59	=>	4
		60	=>	12

Class: public surge.collection.GSet	NameNotChanged
	Source: "GSet.java"
	FieldsOf: surge.collection.GSet
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.collection.GSet
	LineNumbersOf: surge.collection.GSet
		12	=>	3
		13	=>	2
		17	=>	6
		18	=>	8
		22	=>	5
		23	=>	1
		27	=>	7
		28	=>	4

Class: public surge.collection.GSound	NameNotChanged
	Source: "GSound.java"
	FieldsOf: surge.collection.GSound
		private org.bukkit.Sound iSound	=>	b
		private java.lang.Float pitch	=>	d
		private java.lang.String sound	=>	a
		private java.lang.Float volume	=>	c
	MethodsOf: surge.collection.GSound
		public java.lang.Float getPitch() 	NameNotChanged
		public java.lang.String getSound() 	NameNotChanged
		public java.lang.Float getVolume() 	NameNotChanged
		public org.bukkit.Sound getiSound() 	NameNotChanged
		public void play(org.bukkit.Location) 	NameNotChanged
		public void play(org.bukkit.entity.Player) 	NameNotChanged
		public void play(org.bukkit.entity.Player, org.bukkit.util.Vector) 	NameNotChanged
		public void setPitch(java.lang.Float) 	NameNotChanged
		public void setSound(java.lang.String) 	NameNotChanged
		public void setVolume(java.lang.Float) 	NameNotChanged
		public void setiSound(org.bukkit.Sound) 	NameNotChanged
	LineNumbersOf: surge.collection.GSound
		16	=>	25
		18	=>	8
		19	=>	38
		20	=>	47
		21	=>	29
		23	=>	21
		25	=>	39
		26	=>	12
		27	=>	2
		28	=>	41
		30	=>	14
		32	=>	44
		33	=>	51
		34	=>	9
		35	=>	42
		37	=>	36
		39	=>	15
		40	=>	35
		41	=>	28
		42	=>	5
		46	=>	10
		48	=>	3
		51	=>	23
		53	=>	7
		55	=>	50
		57	=>	48
		61	=>	30
		63	=>	33
		66	=>	34
		68	=>	31
		70	=>	37
		72	=>	11
		76	=>	46
		78	=>	49
		80	=>	18
		83	=>	19
		85	=>	32
		87	=>	6
		89	=>	24
		93	=>	1
		98	=>	43
		99	=>	45
		103	=>	13
		108	=>	16
		109	=>	26
		113	=>	17
		118	=>	22
		119	=>	27
		123	=>	4
		128	=>	20
		129	=>	40

Class: public surge.collection.GTriset	NameNotChanged
	Source: "GTriset.java"
	FieldsOf: surge.collection.GTriset
		private java.lang.Object a	=>	b
		private java.lang.Object b	=>	c
		private java.lang.Object c	=>	d
	MethodsOf: surge.collection.GTriset
		public java.lang.Object getA() 	NameNotChanged
		public java.lang.Object getB() 	NameNotChanged
		public java.lang.Object getC() 	NameNotChanged
		public void setA(java.lang.Object) 	NameNotChanged
		public void setB(java.lang.Object) 	NameNotChanged
		public void setC(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.collection.GTriset
		11	=>	2
		12	=>	6
		13	=>	11
		14	=>	5
		15	=>	4
		19	=>	12
		24	=>	3
		25	=>	13
		29	=>	14
		34	=>	1
		35	=>	9
		39	=>	10
		44	=>	8
		45	=>	7

Class: public surge.collection.Snippet	NameNotChanged
	Source: "Snippet.java"
	FieldsOf: surge.collection.Snippet
	MethodsOf: surge.collection.Snippet
	LineNumbersOf: surge.collection.Snippet
		3	=>	1

Class: public abstract surge.control.AmpedPlugin	NameNotChanged
	Source: "AmpedPlugin.java"
	FieldsOf: surge.control.AmpedPlugin
		private surge.collection.GList controllers	=>	a
		private surge.server.CoreTickThread ctt	=>	c
		private surge.pool.ParallelPoolManager pp	=>	b
	MethodsOf: surge.control.AmpedPlugin
		public surge.collection.GList getControllers() 	NameNotChanged
		public surge.pool.ParallelPoolManager getThreadPool() 	NameNotChanged
		public java.lang.String getTickName() 	NameNotChanged
		public abstract void onControllerRegistry() 	NameNotChanged
		public void onDisable() 	NameNotChanged
		public void onEnable() 	NameNotChanged
		public void onLoad() 	NameNotChanged
		public abstract void onPostInit() 	NameNotChanged
		public abstract void onPreInit() 	NameNotChanged
		public abstract void onStart(surge.util.Protocol) 	NameNotChanged
		public abstract void onStop() 	NameNotChanged
		public void onTick() 	NameNotChanged
		public void registerController(surge.control.IController) 	NameNotChanged
	LineNumbersOf: surge.control.AmpedPlugin
		19	=>	3
		21	=>	32
		22	=>	20
		23	=>	7
		24	=>	9
		25	=>	34
		26	=>	16
		31	=>	12
		32	=>	18
		33	=>	36
		34	=>	25
		39	=>	21
		41	=>	4 and 28
		43	=>	11
		46	=>	2
		47	=>	17
		48	=>	38
		53	=>	22 and 26
		55	=>	24
		58	=>	35
		60	=>	8
		61	=>	13
		62	=>	37
		63	=>	15
		68	=>	27
		74	=>	1
		75	=>	5
		80	=>	33
		82	=>	31
		85	=>	23 and 30
		87	=>	19
		90	=>	6
		91	=>	14
		96	=>	29
		102	=>	10

Class: public abstract annotation surge.control.Control	NameNotChanged
	Source: "Control.java"
	FieldsOf: surge.control.Control
	MethodsOf: surge.control.Control
	LineNumbersOf: surge.control.Control

Class: public abstract surge.control.Controller	NameNotChanged
	Source: "Controller.java"
	FieldsOf: surge.control.Controller
		public static int a	=>	b
	MethodsOf: surge.control.Controller
	LineNumbersOf: surge.control.Controller
		7	=>	2
		10	=>	1

Class: public abstract annotation surge.control.Disable	NameNotChanged
	Source: "Disable.java"
	FieldsOf: surge.control.Disable
	MethodsOf: surge.control.Disable
	LineNumbersOf: surge.control.Disable

Class: public abstract annotation surge.control.Enable	NameNotChanged
	Source: "Enable.java"
	FieldsOf: surge.control.Enable
	MethodsOf: surge.control.Enable
	LineNumbersOf: surge.control.Enable

Class: public abstract surge.control.IController	NameNotChanged
	Source: "IController.java"
	FieldsOf: surge.control.IController
	MethodsOf: surge.control.IController
		public abstract void start() 	NameNotChanged
		public abstract void stop() 	NameNotChanged
		public abstract void tick() 	NameNotChanged
	LineNumbersOf: surge.control.IController

Class: public abstract annotation surge.control.Instance	NameNotChanged
	Source: "Instance.java"
	FieldsOf: surge.control.Instance
	MethodsOf: surge.control.Instance
	LineNumbersOf: surge.control.Instance

Class: public abstract annotation surge.control.Plugin	NameNotChanged
	Source: "Plugin.java"
	FieldsOf: surge.control.Plugin
	MethodsOf: surge.control.Plugin
	LineNumbersOf: surge.control.Plugin

Class: public abstract surge.control.SurgePlugin	NameNotChanged
	Source: "SurgePlugin.java"
	FieldsOf: surge.control.SurgePlugin
	MethodsOf: surge.control.SurgePlugin
		public abstract surge.collection.GList getControllers() 	NameNotChanged
		public abstract surge.pool.ParallelPoolManager getThreadPool() 	NameNotChanged
		public abstract void onControllerRegistry() 	NameNotChanged
		public abstract void onPostInit() 	NameNotChanged
		public abstract void onPreInit() 	NameNotChanged
		public abstract void onStart(surge.util.Protocol) 	NameNotChanged
		public abstract void onStop() 	NameNotChanged
		public abstract void registerController(surge.control.IController) 	NameNotChanged
	LineNumbersOf: surge.control.SurgePlugin

Class: public surge.hotload.HotloadManager	NameNotChanged
	Source: "HotloadManager.java"
	FieldsOf: surge.hotload.HotloadManager
		public static int a	=>	d
		private surge.collection.GMap fileacts	=>	c
		private surge.collection.GMap filemods	=>	a
		private surge.collection.GMap filesizes	=>	b
	MethodsOf: surge.hotload.HotloadManager
		public java.lang.String getTickName() 	NameNotChanged
		public void onTick() 	NameNotChanged
		public void track(java.io.File, java.lang.Runnable) 	NameNotChanged
		public void untrack(java.io.File) 	NameNotChanged
		public void untrackall() 	NameNotChanged
	LineNumbersOf: surge.hotload.HotloadManager
		15	=>	2
		17	=>	19
		18	=>	9
		19	=>	32
		20	=>	6
		24	=>	1
		25	=>	23
		26	=>	8
		27	=>	12
		28	=>	26
		32	=>	5
		33	=>	11
		34	=>	15
		35	=>	29
		39	=>	20
		40	=>	31
		41	=>	17
		42	=>	13
		47	=>	7 and 25
		51	=>	18
		53	=>	24
		54	=>	21
		55	=>	28
		56	=>	22
		59	=>	27
		61	=>	14
		62	=>	10
		64	=>	4
		66	=>	30
		71	=>	3
		76	=>	16

Class: public surge.json.HTTP	NameNotChanged
	Source: "HTTP.java"
	FieldsOf: surge.json.HTTP
		public static final java.lang.String CRLF	NameNotChanged
	MethodsOf: surge.json.HTTP
		public static surge.json.JSONObject toJSONObject(java.lang.String) 	NameNotChanged
		public static java.lang.String toString(surge.json.JSONObject) 	NameNotChanged
	LineNumbersOf: surge.json.HTTP
		35	=>	25
		93	=>	3
		94	=>	30
		97	=>	6
		98	=>	12
		103	=>	7
		104	=>	34
		105	=>	43
		106	=>	35
		108	=>	23
		113	=>	24
		114	=>	18
		115	=>	9
		120	=>	22 and 40
		122	=>	10
		123	=>	13
		124	=>	16
		125	=>	33
		127	=>	36
		162	=>	41
		164	=>	19
		165	=>	48
		167	=>	2
		168	=>	14
		169	=>	39
		170	=>	45
		171	=>	21
		172	=>	27
		174	=>	32
		175	=>	15
		176	=>	5
		177	=>	42
		178	=>	4
		179	=>	29
		180	=>	17
		181	=>	47
		183	=>	44
		185	=>	37
		186	=>	11 and 46
		188	=>	1
		189	=>	26
		191	=>	20
		192	=>	28
		193	=>	8
		194	=>	49
		197	=>	38
		198	=>	31

Class: public surge.json.HTTPTokener	NameNotChanged
	Source: "HTTPTokener.java"
	FieldsOf: surge.json.HTTPTokener
	MethodsOf: surge.json.HTTPTokener
		public java.lang.String nextToken() 	NameNotChanged
	LineNumbersOf: surge.json.HTTPTokener
		45	=>	14
		46	=>	9
		58	=>	12
		61	=>	17
		62	=>	1
		63	=>	6
		65	=>	16
		68	=>	5
		69	=>	8
		71	=>	7
		73	=>	3
		75	=>	2
		77	=>	4
		82	=>	15
		84	=>	13
		86	=>	10
		87	=>	11

Class: public surge.json.JSONArray	NameNotChanged
	Source: "JSONArray.java"
	FieldsOf: surge.json.JSONArray
		private final java.util.ArrayList myArrayList	=>	a
	MethodsOf: surge.json.JSONArray
		public java.lang.Object get(int) 	NameNotChanged
		public java.math.BigDecimal getBigDecimal(int) 	NameNotChanged
		public java.math.BigInteger getBigInteger(int) 	NameNotChanged
		public boolean getBoolean(int) 	NameNotChanged
		public double getDouble(int) 	NameNotChanged
		public java.lang.Enum getEnum(java.lang.Class, int) 	NameNotChanged
		public int getInt(int) 	NameNotChanged
		public surge.json.JSONArray getJSONArray(int) 	NameNotChanged
		public surge.json.JSONObject getJSONObject(int) 	NameNotChanged
		public long getLong(int) 	NameNotChanged
		public java.lang.String getString(int) 	NameNotChanged
		public boolean isNull(int) 	NameNotChanged
		public java.util.Iterator iterator() 	NameNotChanged
		public java.lang.String join(java.lang.String) 	NameNotChanged
		public int length() 	NameNotChanged
		public java.lang.Object opt(int) 	NameNotChanged
		public java.math.BigDecimal optBigDecimal(int, java.math.BigDecimal) 	NameNotChanged
		public java.math.BigInteger optBigInteger(int, java.math.BigInteger) 	NameNotChanged
		public boolean optBoolean(int) 	NameNotChanged
		public boolean optBoolean(int, boolean) 	NameNotChanged
		public double optDouble(int) 	NameNotChanged
		public double optDouble(int, double) 	NameNotChanged
		public java.lang.Enum optEnum(java.lang.Class, int) 	NameNotChanged
		public java.lang.Enum optEnum(java.lang.Class, int, java.lang.Enum) 	NameNotChanged
		public int optInt(int) 	NameNotChanged
		public int optInt(int, int) 	NameNotChanged
		public surge.json.JSONArray optJSONArray(int) 	NameNotChanged
		public surge.json.JSONObject optJSONObject(int) 	NameNotChanged
		public long optLong(int) 	NameNotChanged
		public long optLong(int, long) 	NameNotChanged
		public java.lang.String optString(int) 	NameNotChanged
		public java.lang.String optString(int, java.lang.String) 	NameNotChanged
		public surge.json.JSONArray put(boolean) 	NameNotChanged
		public surge.json.JSONArray put(double) 	NameNotChanged
		public surge.json.JSONArray put(int) 	NameNotChanged
		public surge.json.JSONArray put(int, boolean) 	NameNotChanged
		public surge.json.JSONArray put(int, double) 	NameNotChanged
		public surge.json.JSONArray put(int, int) 	NameNotChanged
		public surge.json.JSONArray put(int, java.lang.Object) 	NameNotChanged
		public surge.json.JSONArray put(int, java.util.Collection) 	NameNotChanged
		public surge.json.JSONArray put(int, java.util.Map) 	NameNotChanged
		public surge.json.JSONArray put(int, long) 	NameNotChanged
		public surge.json.JSONArray put(java.lang.Object) 	NameNotChanged
		public surge.json.JSONArray put(java.util.Collection) 	NameNotChanged
		public surge.json.JSONArray put(java.util.Map) 	NameNotChanged
		public surge.json.JSONArray put(long) 	NameNotChanged
		public java.lang.Object remove(int) 	NameNotChanged
		public boolean similar(java.lang.Object) 	NameNotChanged
		public surge.json.JSONObject toJSONObject(surge.json.JSONArray) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public java.lang.String toString(int) 	NameNotChanged
		public java.io.Writer write(java.io.Writer) 	NameNotChanged
		java.io.Writer write(java.io.Writer, int, int) 	=>	a
	LineNumbersOf: surge.json.JSONArray
		93	=>	126
		95	=>	133
		96	=>	104
		108	=>	157
		109	=>	29
		111	=>	194
		113	=>	100
		115	=>	86
		118	=>	117
		120	=>	78
		121	=>	79
		122	=>	224
		124	=>	11
		125	=>	37
		127	=>	72
		130	=>	124
		132	=>	13
		134	=>	127
		135	=>	105
		137	=>	116
		139	=>	151
		143	=>	56
		157	=>	97
		158	=>	147
		166	=>	92
		168	=>	140
		169	=>	159
		171	=>	212
		172	=>	106 and 235
		174	=>	34
		177	=>	87
		187	=>	173
		188	=>	125
		190	=>	70
		191	=>	24 and 148
		193	=>	107
		195	=>	23
		197	=>	4
		199	=>	164
		204	=>	99
		218	=>	137
		219	=>	60
		221	=>	27
		223	=>	200
		239	=>	178
		240	=>	217
		242	=>	45
		243	=>	166
		245	=>	174
		247	=>	8
		262	=>	36
		265	=>	129
		266	=>	170
		268	=>	9
		286	=>	1
		287	=>	181
		292	=>	233
		294	=>	208
		309	=>	122
		312	=>	191
		313	=>	149
		315	=>	190
		331	=>	39
		334	=>	222
		335	=>	5
		337	=>	16
		352	=>	135
		355	=>	230
		356	=>	21
		358	=>	68
		374	=>	33
		375	=>	188
		377	=>	210
		379	=>	227
		394	=>	46
		395	=>	108
		397	=>	7
		399	=>	61
		414	=>	52
		417	=>	205
		418	=>	134
		420	=>	146
		435	=>	144
		436	=>	64
		438	=>	185
		440	=>	65
		452	=>	74
		468	=>	161
		469	=>	179
		471	=>	10 and 132
		473	=>	32
		475	=>	215
		477	=>	73
		479	=>	123
		489	=>	84
		501	=>	88
		515	=>	153
		533	=>	204
		534	=>	22
		536	=>	198
		551	=>	111
		569	=>	213
		570	=>	130
		572	=>	195
		587	=>	120
		605	=>	158
		606	=>	169
		608	=>	93
		623	=>	143
		642	=>	228
		643	=>	47
		645	=>	26
		647	=>	55
		651	=>	30
		652	=>	20
		654	=>	3
		657	=>	38
		659	=>	180
		662	=>	142
		664	=>	15
		683	=>	221
		684	=>	218
		686	=>	177
		705	=>	115
		706	=>	162
		708	=>	28
		722	=>	207
		723	=>	192
		737	=>	223
		738	=>	189
		752	=>	220
		770	=>	19
		771	=>	175
		773	=>	14
		788	=>	109
		803	=>	196
		804	=>	102
		816	=>	201
		817	=>	199
		830	=>	80
		831	=>	63
		845	=>	193
		846	=>	168
		847	=>	85
		848	=>	138
		860	=>	67
		861	=>	66
		873	=>	139
		874	=>	6
		887	=>	12
		888	=>	165
		902	=>	41
		903	=>	155
		921	=>	40
		922	=>	119
		939	=>	150
		940	=>	114
		958	=>	77
		959	=>	172
		977	=>	156
		978	=>	48
		996	=>	141
		997	=>	187
		1015	=>	89
		1016	=>	128
		1037	=>	25
		1038	=>	211
		1040	=>	184
		1042	=>	43
		1044	=>	202
		1045	=>	167
		1047	=>	49
		1049	=>	18
		1051	=>	101
		1053	=>	17
		1066	=>	225
		1079	=>	152
		1081	=>	112
		1083	=>	226
		1084	=>	95
		1086	=>	229
		1088	=>	176 and 234
		1090	=>	163
		1091	=>	103
		1092	=>	206
		1094	=>	58
		1096	=>	42
		1098	=>	69
		1100	=>	118
		1102	=>	186
		1104	=>	91
		1106	=>	44
		1109	=>	203
		1126	=>	197
		1128	=>	57
		1130	=>	82
		1131	=>	51 and 76
		1133	=>	98
		1135	=>	219
		1153	=>	94
		1154	=>	209
		1156	=>	50
		1174	=>	171
		1175	=>	62 and 83
		1177	=>	214
		1192	=>	53
		1212	=>	75
		1213	=>	160
		1214	=>	216
		1216	=>	96
		1218	=>	232
		1219	=>	2
		1221	=>	35
		1223	=>	59 and 182
		1225	=>	110
		1227	=>	183
		1229	=>	145
		1231	=>	131
		1233	=>	136
		1234	=>	90
		1235	=>	231
		1237	=>	71
		1239	=>	154
		1241	=>	113
		1243	=>	54
		1244	=>	31
		1245	=>	81
		1247	=>	121

Class: public surge.json.JSONException	NameNotChanged
	Source: "JSONException.java"
	FieldsOf: surge.json.JSONException
		private java.lang.Throwable cause	=>	a
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.json.JSONException
		public java.lang.Throwable getCause() 	NameNotChanged
	LineNumbersOf: surge.json.JSONException
		22	=>	3
		23	=>	6
		33	=>	5
		34	=>	2
		35	=>	4
		47	=>	1

Class: public surge.json.JSONML	NameNotChanged
	Source: "JSONML.java"
	FieldsOf: surge.json.JSONML
	MethodsOf: surge.json.JSONML
		private static java.lang.Object parse(surge.json.XMLTokener, boolean, surge.json.JSONArray) 	=>	a
		public static surge.json.JSONArray toJSONArray(java.lang.String) 	NameNotChanged
		public static surge.json.JSONArray toJSONArray(surge.json.XMLTokener) 	NameNotChanged
		public static surge.json.JSONObject toJSONObject(java.lang.String) 	NameNotChanged
		public static surge.json.JSONObject toJSONObject(surge.json.XMLTokener) 	NameNotChanged
		public static java.lang.String toString(surge.json.JSONArray) 	NameNotChanged
		public static java.lang.String toString(surge.json.JSONObject) 	NameNotChanged
	LineNumbersOf: surge.json.JSONML
		37	=>	5
		57	=>	190
		59	=>	182
		60	=>	30
		62	=>	64
		70	=>	147
		72	=>	27
		74	=>	87
		76	=>	125
		77	=>	43
		79	=>	2
		80	=>	167
		82	=>	78
		87	=>	127
		88	=>	36
		90	=>	118
		92	=>	56
		94	=>	122
		96	=>	144
		97	=>	119
		102	=>	175
		103	=>	61
		105	=>	157
		107	=>	106
		108	=>	151
		110	=>	82
		112	=>	161
		114	=>	31
		115	=>	76
		117	=>	158
		119	=>	156
		121	=>	81
		123	=>	135
		127	=>	59
		128	=>	68
		130	=>	15
		131	=>	141
		133	=>	98
		134	=>	112
		136	=>	89
		137	=>	93
		139	=>	10
		141	=>	113
		143	=>	54
		148	=>	170
		149	=>	140
		151	=>	174
		158	=>	26
		160	=>	163
		162	=>	46
		163	=>	200
		164	=>	66
		165	=>	95
		167	=>	179
		168	=>	18
		170	=>	178
		172	=>	35
		174	=>	160
		175	=>	153
		177	=>	192
		180	=>	91
		181	=>	176
		183	=>	73
		185	=>	72
		187	=>	194
		189	=>	94
		191	=>	74
		193	=>	48
		198	=>	38
		199	=>	44
		201	=>	21
		203	=>	124
		204	=>	159
		206	=>	28
		207	=>	115
		209	=>	25
		211	=>	201
		212	=>	121
		213	=>	110
		215	=>	45
		218	=>	180
		220	=>	104
		225	=>	188
		227	=>	32
		229	=>	77
		231	=>	62
		233	=>	47
		235	=>	177
		238	=>	86
		246	=>	154
		248	=>	114
		250	=>	203
		251	=>	33
		253	=>	24
		255	=>	42
		257	=>	172
		258	=>	149
		260	=>	143
		262	=>	1
		264	=>	29
		266	=>	96
		269	=>	108
		277	=>	88
		279	=>	7
		301	=>	183
		320	=>	186
		340	=>	9
		360	=>	12
		379	=>	85
		385	=>	63
		386	=>	164
		387	=>	166
		388	=>	139
		389	=>	189
		391	=>	65
		392	=>	51
		394	=>	197
		395	=>	136
		399	=>	23
		400	=>	34 and 83
		402	=>	130
		403	=>	129
		404	=>	116
		405	=>	146
		407	=>	41
		408	=>	187
		409	=>	100
		410	=>	162
		411	=>	196
		412	=>	90
		415	=>	195
		417	=>	11
		422	=>	133
		423	=>	58
		425	=>	145
		426	=>	191
		427	=>	173
		429	=>	111
		430	=>	181
		432	=>	17
		433	=>	52
		434	=>	202
		436	=>	71
		438	=>	13
		439	=>	107
		441	=>	169
		442	=>	117
		444	=>	185
		445	=>	105
		447	=>	137
		450	=>	14
		451	=>	184
		452	=>	39
		453	=>	67
		454	=>	103
		456	=>	75
		472	=>	55
		484	=>	155
		485	=>	6
		487	=>	131
		489	=>	40
		490	=>	102
		491	=>	60
		492	=>	37
		496	=>	84
		497	=>	69 and 199
		499	=>	16
		500	=>	148
		502	=>	80
		503	=>	165
		504	=>	70
		506	=>	128
		507	=>	101
		508	=>	198
		509	=>	22
		510	=>	138
		511	=>	109
		518	=>	123
		519	=>	132
		521	=>	57
		522	=>	126
		523	=>	120
		525	=>	152
		526	=>	20
		527	=>	3 and 193
		529	=>	134
		530	=>	142
		532	=>	49
		534	=>	97
		535	=>	150
		537	=>	4
		538	=>	168
		540	=>	171
		541	=>	8
		543	=>	19
		547	=>	50
		548	=>	53
		549	=>	79
		550	=>	99
		552	=>	92

Class: public surge.json.JSONObject	NameNotChanged
	Source: "JSONObject.java"
	FieldsOf: surge.json.JSONObject
		public static final java.lang.Object NULL	NameNotChanged
		public static boolean a	=>	b
		private final java.util.Map map	=>	a
	MethodsOf: surge.json.JSONObject
		public surge.json.JSONObject accumulate(java.lang.String, java.lang.Object) 	NameNotChanged
		public surge.json.JSONObject append(java.lang.String, java.lang.Object) 	NameNotChanged
		public static java.lang.String doubleToString(double) 	NameNotChanged
		public java.lang.Object get(java.lang.String) 	NameNotChanged
		public java.math.BigDecimal getBigDecimal(java.lang.String) 	NameNotChanged
		public java.math.BigInteger getBigInteger(java.lang.String) 	NameNotChanged
		public boolean getBoolean(java.lang.String) 	NameNotChanged
		public double getDouble(java.lang.String) 	NameNotChanged
		public java.lang.Enum getEnum(java.lang.Class, java.lang.String) 	NameNotChanged
		public int getInt(java.lang.String) 	NameNotChanged
		public surge.json.JSONArray getJSONArray(java.lang.String) 	NameNotChanged
		public surge.json.JSONObject getJSONObject(java.lang.String) 	NameNotChanged
		public long getLong(java.lang.String) 	NameNotChanged
		public static java.lang.String[] getNames(java.lang.Object) 	NameNotChanged
		public static java.lang.String[] getNames(surge.json.JSONObject) 	NameNotChanged
		public java.lang.String getString(java.lang.String) 	NameNotChanged
		public boolean has(java.lang.String) 	NameNotChanged
		public surge.json.JSONObject increment(java.lang.String) 	NameNotChanged
		static final void indent(java.io.Writer, int) 	=>	a
		public boolean isNull(java.lang.String) 	NameNotChanged
		public java.util.Set keySet() 	NameNotChanged
		public java.util.Iterator keys() 	NameNotChanged
		public int length() 	NameNotChanged
		public surge.json.JSONArray names() 	NameNotChanged
		public static java.lang.String numberToString(java.lang.Number) 	NameNotChanged
		public java.lang.Object opt(java.lang.String) 	NameNotChanged
		public java.math.BigDecimal optBigDecimal(java.lang.String, java.math.BigDecimal) 	NameNotChanged
		public java.math.BigInteger optBigInteger(java.lang.String, java.math.BigInteger) 	NameNotChanged
		public boolean optBoolean(java.lang.String) 	NameNotChanged
		public boolean optBoolean(java.lang.String, boolean) 	NameNotChanged
		public double optDouble(java.lang.String) 	NameNotChanged
		public double optDouble(java.lang.String, double) 	NameNotChanged
		public java.lang.Enum optEnum(java.lang.Class, java.lang.String) 	NameNotChanged
		public java.lang.Enum optEnum(java.lang.Class, java.lang.String, java.lang.Enum) 	NameNotChanged
		public int optInt(java.lang.String) 	NameNotChanged
		public int optInt(java.lang.String, int) 	NameNotChanged
		public surge.json.JSONArray optJSONArray(java.lang.String) 	NameNotChanged
		public surge.json.JSONObject optJSONObject(java.lang.String) 	NameNotChanged
		public long optLong(java.lang.String) 	NameNotChanged
		public long optLong(java.lang.String, long) 	NameNotChanged
		public java.lang.String optString(java.lang.String) 	NameNotChanged
		public java.lang.String optString(java.lang.String, java.lang.String) 	NameNotChanged
		private void populateMap(java.lang.Object) 	=>	a
		public surge.json.JSONObject put(java.lang.String, boolean) 	NameNotChanged
		public surge.json.JSONObject put(java.lang.String, double) 	NameNotChanged
		public surge.json.JSONObject put(java.lang.String, int) 	NameNotChanged
		public surge.json.JSONObject put(java.lang.String, java.lang.Object) 	NameNotChanged
		public surge.json.JSONObject put(java.lang.String, java.util.Collection) 	NameNotChanged
		public surge.json.JSONObject put(java.lang.String, java.util.Map) 	NameNotChanged
		public surge.json.JSONObject put(java.lang.String, long) 	NameNotChanged
		public surge.json.JSONObject putOnce(java.lang.String, java.lang.Object) 	NameNotChanged
		public surge.json.JSONObject putOpt(java.lang.String, java.lang.Object) 	NameNotChanged
		public static java.lang.String quote(java.lang.String) 	NameNotChanged
		public static java.io.Writer quote(java.lang.String, java.io.Writer) 	NameNotChanged
		public java.lang.Object remove(java.lang.String) 	NameNotChanged
		public boolean similar(java.lang.Object) 	NameNotChanged
		public static java.lang.Object stringToValue(java.lang.String) 	NameNotChanged
		public static void testValidity(java.lang.Object) 	NameNotChanged
		public surge.json.JSONArray toJSONArray(surge.json.JSONArray) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public java.lang.String toString(int) 	NameNotChanged
		public static java.lang.String valueToString(java.lang.Object) 	NameNotChanged
		public static java.lang.Object wrap(java.lang.Object) 	NameNotChanged
		public java.io.Writer write(java.io.Writer) 	NameNotChanged
		java.io.Writer write(java.io.Writer, int, int) 	=>	a
		static final java.io.Writer writeValue(java.io.Writer, java.lang.Object, int, int) 	=>	a
	LineNumbersOf: surge.json.JSONObject
		153	=>	287
		158	=>	466
		160	=>	272
		161	=>	268
		179	=>	432
		180	=>	285 and 381
		184	=>	208
		185	=>	461
		189	=>	360
		202	=>	453
		206	=>	67
		208	=>	476
		212	=>	412
		213	=>	348
		216	=>	125
		218	=>	153
		220	=>	375
		221	=>	353
		226	=>	49
		227	=>	182
		229	=>	143
		231	=>	507
		235	=>	41
		239	=>	387
		241	=>	328
		243	=>	256
		244	=>	386
		246	=>	236
		248	=>	444
		261	=>	438
		263	=>	313
		264	=>	264
		266	=>	194
		267	=>	83 and 474
		269	=>	122
		270	=>	240
		271	=>	254
		273	=>	25
		277	=>	234
		302	=>	97
		303	=>	331
		304	=>	467
		322	=>	486
		323	=>	372
		324	=>	33 and 95
		326	=>	77
		329	=>	334
		330	=>	88
		334	=>	165
		350	=>	498
		351	=>	90
		365	=>	332
		366	=>	223
		370	=>	302
		371	=>	59 and 79
		373	=>	195
		374	=>	260
		383	=>	36
		384	=>	91
		385	=>	433
		386	=>	87 and 501
		388	=>	342
		389	=>	146
		390	=>	129
		392	=>	434
		393	=>	327
		395	=>	345
		397	=>	9
		400	=>	458
		423	=>	443
		424	=>	8
		425	=>	409
		427	=>	12
		428	=>	137
		430	=>	3
		431	=>	76
		433	=>	413
		435	=>	219
		455	=>	2
		456	=>	343
		457	=>	312
		459	=>	361
		460	=>	26
		462	=>	405
		463	=>	78
		465	=>	449
		467	=>	69
		480	=>	85
		482	=>	38
		487	=>	496
		488	=>	193
		490	=>	14 and 248
		492	=>	238
		494	=>	178
		496	=>	452
		499	=>	275
		513	=>	318
		515	=>	185
		517	=>	510
		518	=>	187
		520	=>	259
		522	=>	400
		539	=>	426
		540	=>	131
		545	=>	252
		547	=>	205
		562	=>	523
		563	=>	148
		565	=>	299
		566	=>	339
		568	=>	213
		570	=>	192
		585	=>	221
		588	=>	446
		589	=>	152
		591	=>	160
		607	=>	231
		610	=>	245
		611	=>	60
		613	=>	54
		629	=>	488
		632	=>	276
		633	=>	306
		635	=>	277
		651	=>	286
		654	=>	80
		655	=>	270
		657	=>	390
		672	=>	94
		673	=>	222
		675	=>	70
		677	=>	349
		691	=>	101
		692	=>	470
		694	=>	107
		696	=>	415
		711	=>	297
		714	=>	368
		715	=>	479
		717	=>	52
		728	=>	214
		729	=>	425
		731	=>	382
		733	=>	108
		734	=>	456
		735	=>	435
		736	=>	20 and 233
		738	=>	140
		739	=>	206
		741	=>	420
		751	=>	203
		753	=>	357
		755	=>	155
		756	=>	61
		757	=>	134
		758	=>	173
		760	=>	184
		762	=>	431
		763	=>	63 and 239
		765	=>	99
		767	=>	227
		781	=>	500
		782	=>	39
		784	=>	29
		786	=>	505
		798	=>	393
		815	=>	337
		816	=>	281
		818	=>	75
		819	=>	28
		821	=>	53
		822	=>	439
		824	=>	229
		825	=>	220
		827	=>	465
		828	=>	159
		830	=>	369
		831	=>	441
		833	=>	430
		834	=>	65
		836	=>	22
		837	=>	394
		839	=>	119
		841	=>	116
		855	=>	241
		865	=>	269
		875	=>	237
		885	=>	491
		897	=>	504
		898	=>	111
		899	=>	301 and 320
		901	=>	258
		903	=>	73
		917	=>	377
		919	=>	89
		921	=>	448
		925	=>	230
		926	=>	156
		928	=>	406 and 521
		930	=>	118
		932	=>	200
		934	=>	335
		937	=>	179
		949	=>	478
		963	=>	350
		982	=>	144
		983	=>	389
		985	=>	135
		987	=>	460
		991	=>	410
		992	=>	117
		994	=>	346
		997	=>	487
		999	=>	23
		1002	=>	102
		1004	=>	167
		1018	=>	520
		1036	=>	177
		1037	=>	163
		1039	=>	355
		1054	=>	110
		1072	=>	359
		1073	=>	422
		1075	=>	17
		1094	=>	351
		1095	=>	81
		1097	=>	197
		1116	=>	51
		1117	=>	232
		1119	=>	321
		1134	=>	280
		1152	=>	294
		1153	=>	364
		1155	=>	215
		1169	=>	314
		1170	=>	46
		1183	=>	44
		1184	=>	168
		1198	=>	495
		1216	=>	84
		1217	=>	209
		1219	=>	257
		1234	=>	249
		1249	=>	365
		1250	=>	290
		1255	=>	43
		1259	=>	459
		1261	=>	58
		1262	=>	13 and 401
		1266	=>	392
		1267	=>	494
		1269	=>	288
		1270	=>	516
		1271	=>	305
		1273	=>	109
		1275	=>	105
		1276	=>	514
		1278	=>	424
		1280	=>	74
		1282	=>	513
		1284	=>	226
		1286	=>	383
		1288	=>	362
		1289	=>	293
		1291	=>	48
		1294	=>	317
		1295	=>	190
		1297	=>	482
		1301	=>	454
		1305	=>	161
		1320	=>	463
		1321	=>	199
		1337	=>	181
		1338	=>	68
		1354	=>	457
		1355	=>	32
		1371	=>	291
		1372	=>	385
		1388	=>	40
		1389	=>	34
		1405	=>	243
		1406	=>	436
		1425	=>	447
		1427	=>	378
		1429	=>	142
		1431	=>	509
		1432	=>	472
		1433	=>	303
		1435	=>	356
		1437	=>	138
		1455	=>	201
		1457	=>	136
		1459	=>	6
		1461	=>	207
		1463	=>	311
		1482	=>	16
		1484	=>	128
		1486	=>	147
		1501	=>	379
		1502	=>	480 and 511
		1506	=>	464
		1507	=>	329
		1510	=>	27
		1517	=>	451
		1519	=>	204
		1520	=>	322
		1524	=>	388
		1527	=>	499
		1529	=>	198
		1530	=>	284 and 437
		1532	=>	176
		1533	=>	440
		1534	=>	522
		1538	=>	407
		1539	=>	519
		1540	=>	169
		1542	=>	66
		1544	=>	462
		1546	=>	170
		1547	=>	366
		1549	=>	341
		1550	=>	477
		1552	=>	289
		1553	=>	489
		1555	=>	103
		1556	=>	174
		1558	=>	274
		1559	=>	10
		1561	=>	180
		1562	=>	212
		1564	=>	164
		1566	=>	308
		1567	=>	113
		1568	=>	469
		1569	=>	418
		1570	=>	273
		1572	=>	188
		1576	=>	282
		1577	=>	261
		1590	=>	298
		1605	=>	316
		1607	=>	380
		1609	=>	115
		1610	=>	376
		1612	=>	310
		1614	=>	455
		1615	=>	7 and 279
		1617	=>	124
		1618	=>	56
		1619	=>	133
		1620	=>	4
		1622	=>	24
		1624	=>	251
		1626	=>	35
		1628	=>	450
		1630	=>	121
		1632	=>	517
		1634	=>	72
		1637	=>	57
		1638	=>	30
		1640	=>	395
		1655	=>	196
		1657	=>	358
		1659	=>	265
		1661	=>	139
		1663	=>	64
		1665	=>	397
		1667	=>	336
		1669	=>	1
		1677	=>	62
		1678	=>	374
		1682	=>	191
		1684	=>	224
		1685	=>	21
		1687	=>	497
		1691	=>	255
		1692	=>	47
		1694	=>	445
		1696	=>	471
		1699	=>	429
		1703	=>	347
		1707	=>	518
		1720	=>	267
		1722	=>	235
		1724	=>	112
		1726	=>	384
		1728	=>	19
		1730	=>	114
		1732	=>	354
		1736	=>	218
		1751	=>	42
		1753	=>	150
		1755	=>	490
		1756	=>	278 and 326
		1758	=>	428
		1760	=>	183
		1779	=>	417
		1780	=>	340
		1782	=>	324
		1802	=>	244
		1803	=>	120 and 130
		1805	=>	106
		1835	=>	411
		1837	=>	512
		1839	=>	242
		1844	=>	175
		1845	=>	171
		1847	=>	485
		1849	=>	263
		1851	=>	166
		1853	=>	315
		1855	=>	515
		1857	=>	225
		1859	=>	15
		1861	=>	300
		1863	=>	367
		1866	=>	154
		1867	=>	330
		1869	=>	127
		1872	=>	475
		1873	=>	50
		1875	=>	363
		1877	=>	82
		1879	=>	373
		1898	=>	309
		1900	=>	338
		1902	=>	162
		1904	=>	158
		1907	=>	503
		1910	=>	149
		1911	=>	292
		1913	=>	86
		1915	=>	404
		1917	=>	216
		1920	=>	399
		1921	=>	481
		1923	=>	55
		1924	=>	403
		1925	=>	416
		1927	=>	483
		1929	=>	92
		1930	=>	157
		1932	=>	262
		1947	=>	344
		1952	=>	296
		1954	=>	228
		1955	=>	524
		1957	=>	371
		1958	=>	151
		1960	=>	126
		1961	=>	217
		1964	=>	202
		1965	=>	484
		1966	=>	37
		1969	=>	493
		1970	=>	423
		1971	=>	427
		1973	=>	104
		1974	=>	508
		1976	=>	247
		1977	=>	402
		1979	=>	123
		1980	=>	473
		1985	=>	502
		1986	=>	246
		1988	=>	210
		1990	=>	96
		1991	=>	145
		1993	=>	325
		1995	=>	370
		2000	=>	100 and 186
		2002	=>	323
		2004	=>	492
		2019	=>	398
		2020	=>	266
		2021	=>	506
		2022	=>	45
		2024	=>	295
		2026	=>	141
		2027	=>	172
		2028	=>	271
		2029	=>	352
		2031	=>	11
		2033	=>	419
		2034	=>	468
		2036	=>	414
		2037	=>	5 and 442
		2039	=>	253
		2040	=>	189
		2042	=>	307
		2044	=>	18
		2046	=>	396
		2048	=>	71
		2049	=>	31
		2050	=>	391
		2051	=>	408
		2053	=>	93
		2055	=>	132
		2056	=>	98
		2058	=>	283
		2060	=>	333
		2062	=>	211
		2064	=>	304
		2065	=>	421
		2066	=>	319
		2068	=>	250

Class: final surge.json.JSONObject$Null	NameNotChanged
	Source: "JSONObject.java"
	FieldsOf: surge.json.JSONObject$Null
	MethodsOf: surge.json.JSONObject$Null
		protected final java.lang.Object clone() 	NameNotChanged
		public boolean equals(java.lang.Object) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.json.JSONObject$Null
		102	=>	1 and 2
		114	=>	5
		128	=>	4
		138	=>	3

Class: public abstract surge.json.JSONString	NameNotChanged
	Source: "JSONString.java"
	FieldsOf: surge.json.JSONString
	MethodsOf: surge.json.JSONString
		public abstract java.lang.String toJSONString() 	NameNotChanged
	LineNumbersOf: surge.json.JSONString

Class: public surge.json.JSONStringer	NameNotChanged
	Source: "JSONStringer.java"
	FieldsOf: surge.json.JSONStringer
	MethodsOf: surge.json.JSONStringer
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.json.JSONStringer
		69	=>	1
		70	=>	3
		83	=>	2

Class: public surge.json.JSONTokener	NameNotChanged
	Source: "JSONTokener.java"
	FieldsOf: surge.json.JSONTokener
		private long character	=>	a
		private boolean eof	=>	b
		private long index	=>	c
		private long line	=>	d
		private char previous	=>	e
		private java.io.Reader reader	=>	f
		private boolean usePrevious	=>	g
	MethodsOf: surge.json.JSONTokener
		public void back() 	NameNotChanged
		public static int dehexchar(char) 	NameNotChanged
		public boolean end() 	NameNotChanged
		public boolean more() 	NameNotChanged
		public char next() 	NameNotChanged
		public char next(char) 	NameNotChanged
		public java.lang.String next(int) 	NameNotChanged
		public char nextClean() 	NameNotChanged
		public java.lang.String nextString(char) 	NameNotChanged
		public java.lang.String nextTo(char) 	NameNotChanged
		public java.lang.String nextTo(java.lang.String) 	NameNotChanged
		public java.lang.Object nextValue() 	NameNotChanged
		public char skipTo(char) 	NameNotChanged
		public surge.json.JSONException syntaxError(java.lang.String) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.json.JSONTokener
		60	=>	116
		61	=>	13
		62	=>	39
		63	=>	105
		64	=>	136
		65	=>	59
		66	=>	33
		67	=>	78
		68	=>	141
		78	=>	62
		79	=>	9
		89	=>	102
		90	=>	65
		99	=>	27
		101	=>	21
		103	=>	56
		104	=>	2
		105	=>	74
		106	=>	7
		107	=>	118
		119	=>	49
		121	=>	73
		123	=>	28
		125	=>	37
		127	=>	81
		129	=>	140
		131	=>	103
		136	=>	83
		147	=>	132
		148	=>	142
		150	=>	125
		152	=>	123
		153	=>	42
		164	=>	114
		166	=>	128
		167	=>	53
		172	=>	133
		173	=>	16
		175	=>	110
		176	=>	115
		178	=>	95
		180	=>	15
		181	=>	50
		184	=>	54
		185	=>	108
		187	=>	91
		188	=>	112
		189	=>	82
		191	=>	117
		192	=>	129
		195	=>	87
		197	=>	51
		198	=>	61
		213	=>	138
		214	=>	122
		216	=>	106
		218	=>	35
		233	=>	70
		235	=>	88
		238	=>	127
		239	=>	22
		241	=>	107
		243	=>	30
		244	=>	47
		246	=>	143
		248	=>	94
		250	=>	113
		263	=>	32
		264	=>	12
		266	=>	17
		268	=>	29
		287	=>	11
		290	=>	109
		291	=>	120
		296	=>	63
		298	=>	67
		299	=>	96
		302	=>	3
		303	=>	58
		305	=>	124
		306	=>	76
		308	=>	104
		309	=>	18
		311	=>	121
		312	=>	57
		314	=>	130
		315	=>	40
		317	=>	34
		318	=>	64
		323	=>	75
		324	=>	100
		326	=>	45
		330	=>	119
		332	=>	24
		334	=>	85
		349	=>	93
		352	=>	1
		353	=>	72
		355	=>	69
		357	=>	66
		359	=>	26
		361	=>	89
		362	=>	46
		376	=>	77
		379	=>	31
		380	=>	4
		382	=>	79
		384	=>	60
		386	=>	145
		388	=>	84
		403	=>	135
		406	=>	10
		410	=>	68
		412	=>	43
		413	=>	92
		415	=>	38
		416	=>	98
		428	=>	90
		429	=>	97
		431	=>	111
		432	=>	14
		434	=>	8
		436	=>	137
		437	=>	55
		439	=>	44
		441	=>	41
		458	=>	19
		459	=>	71
		460	=>	36
		461	=>	6
		464	=>	25
		465	=>	139
		467	=>	126
		468	=>	134
		469	=>	48
		470	=>	101
		471	=>	131
		473	=>	86
		474	=>	80
		476	=>	5
		477	=>	23
		478	=>	52
		479	=>	99
		491	=>	20
		501	=>	144

Class: public surge.json.JSONWriter	NameNotChanged
	Source: "JSONWriter.java"
	FieldsOf: surge.json.JSONWriter
		private boolean comma	=>	a
		protected char mode	=>	b
		private final surge.json.JSONObject[] stack	=>	c
		private int top	=>	d
		protected java.io.Writer writer	=>	e
	MethodsOf: surge.json.JSONWriter
		private surge.json.JSONWriter append(java.lang.String) 	=>	a
		public surge.json.JSONWriter array() 	NameNotChanged
		private surge.json.JSONWriter end(char, char) 	=>	a
		public surge.json.JSONWriter endArray() 	NameNotChanged
		public surge.json.JSONWriter endObject() 	NameNotChanged
		public surge.json.JSONWriter key(java.lang.String) 	NameNotChanged
		public surge.json.JSONWriter object() 	NameNotChanged
		private void pop(char) 	=>	a
		private void push(surge.json.JSONObject) 	=>	a
		public surge.json.JSONWriter value(boolean) 	NameNotChanged
		public surge.json.JSONWriter value(double) 	NameNotChanged
		public surge.json.JSONWriter value(java.lang.Object) 	NameNotChanged
		public surge.json.JSONWriter value(long) 	NameNotChanged
	LineNumbersOf: surge.json.JSONWriter
		97	=>	36
		99	=>	41
		100	=>	37
		101	=>	70
		102	=>	33
		103	=>	46
		104	=>	64
		117	=>	1
		119	=>	68
		121	=>	76
		125	=>	31
		127	=>	3
		129	=>	73
		130	=>	6
		132	=>	44
		134	=>	38
		136	=>	15
		138	=>	16
		139	=>	61
		141	=>	32
		157	=>	49
		159	=>	17
		160	=>	23
		161	=>	14
		162	=>	24
		164	=>	50
		180	=>	18
		182	=>	69
		184	=>	26
		187	=>	28
		188	=>	4
		190	=>	7
		192	=>	2
		193	=>	22
		206	=>	47
		219	=>	12
		235	=>	11
		237	=>	48
		239	=>	51
		243	=>	71
		244	=>	63
		246	=>	57
		248	=>	42
		249	=>	43
		250	=>	75
		251	=>	10
		252	=>	27
		253	=>	13
		255	=>	56
		258	=>	19
		274	=>	30
		276	=>	66
		278	=>	54
		280	=>	65
		281	=>	25
		282	=>	59
		283	=>	39
		285	=>	45
		299	=>	60
		301	=>	21
		303	=>	5
		304	=>	9
		306	=>	52
		308	=>	58
		309	=>	72
		310	=>	62
		322	=>	20
		324	=>	29
		326	=>	35
		327	=>	8
		328	=>	55
		329	=>	34
		342	=>	53
		356	=>	67
		369	=>	40
		385	=>	74

Class: public surge.json.XML	NameNotChanged
	Source: "XML.java"
	FieldsOf: surge.json.XML
		public static final java.lang.Character AMP	NameNotChanged
		public static final java.lang.Character APOS	NameNotChanged
		public static final java.lang.Character BANG	NameNotChanged
		public static final java.lang.Character EQ	NameNotChanged
		public static final java.lang.Character GT	NameNotChanged
		public static final java.lang.Character LT	NameNotChanged
		public static final java.lang.Character QUEST	NameNotChanged
		public static final java.lang.Character QUOT	NameNotChanged
		public static final java.lang.Character SLASH	NameNotChanged
	MethodsOf: surge.json.XML
		public static java.lang.String escape(java.lang.String) 	NameNotChanged
		public static void noSpace(java.lang.String) 	NameNotChanged
		private static boolean parse(surge.json.XMLTokener, surge.json.JSONObject, java.lang.String) 	=>	a
		public static java.lang.Object stringToValue(java.lang.String) 	NameNotChanged
		public static surge.json.JSONObject toJSONObject(java.lang.String) 	NameNotChanged
		public static java.lang.String toString(java.lang.Object) 	NameNotChanged
		public static java.lang.String toString(java.lang.Object, java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.json.XML
		36	=>	67
		40	=>	149
		43	=>	128
		46	=>	72
		49	=>	120
		52	=>	143
		55	=>	206
		58	=>	35
		61	=>	101
		64	=>	65
		82	=>	78
		83	=>	59 and 175
		85	=>	109
		86	=>	18
		89	=>	208
		90	=>	203
		92	=>	179
		93	=>	134
		95	=>	156
		96	=>	41
		98	=>	207
		99	=>	178
		101	=>	157
		102	=>	10
		104	=>	122
		107	=>	115
		120	=>	110
		121	=>	64
		123	=>	28
		125	=>	14 and 92
		127	=>	158
		129	=>	152
		132	=>	76
		150	=>	166
		165	=>	87
		169	=>	86
		171	=>	177
		172	=>	167
		174	=>	75
		176	=>	13
		177	=>	66
		179	=>	147
		180	=>	70
		182	=>	139
		183	=>	205
		185	=>	7
		187	=>	16
		188	=>	186
		190	=>	77
		192	=>	95
		195	=>	160
		197	=>	168
		198	=>	153
		200	=>	19
		201	=>	47
		203	=>	162
		204	=>	48
		206	=>	116
		207	=>	54
		209	=>	38
		211	=>	24
		212	=>	37
		213	=>	107
		218	=>	2
		219	=>	74
		220	=>	163
		225	=>	105
		226	=>	36
		228	=>	23
		230	=>	127
		232	=>	171
		234	=>	165
		236	=>	169
		238	=>	181
		240	=>	197
		242	=>	182
		248	=>	125
		249	=>	111
		250	=>	91
		253	=>	119
		255	=>	183
		260	=>	40
		262	=>	99
		263	=>	174
		264	=>	187
		266	=>	81
		267	=>	97
		269	=>	6
		271	=>	96
		272	=>	32
		273	=>	184
		275	=>	132
		280	=>	84
		282	=>	56
		284	=>	60
		286	=>	62
		288	=>	12
		289	=>	200
		291	=>	49
		293	=>	21
		297	=>	39
		301	=>	210
		302	=>	164
		304	=>	26
		306	=>	55
		308	=>	68
		309	=>	100
		311	=>	42
		312	=>	43
		314	=>	58
		319	=>	52
		321	=>	17
		323	=>	8
		325	=>	146
		326	=>	124
		328	=>	170
		329	=>	194
		331	=>	93
		333	=>	118
		339	=>	123
		358	=>	190
		360	=>	204
		362	=>	151
		364	=>	142
		366	=>	83
		368	=>	180
		377	=>	63
		378	=>	126
		380	=>	193
		381	=>	102
		383	=>	172
		386	=>	98
		390	=>	129
		391	=>	202
		393	=>	176
		395	=>	94
		399	=>	133
		420	=>	154
		421	=>	82
		422	=>	34 and 89
		424	=>	104
		426	=>	121
		439	=>	5
		454	=>	30
		463	=>	131
		468	=>	3
		470	=>	33
		471	=>	103
		472	=>	188
		477	=>	53
		478	=>	150
		479	=>	145 and 159
		481	=>	79
		482	=>	144
		483	=>	27
		485	=>	189
		487	=>	44
		491	=>	140
		493	=>	141
		495	=>	201
		496	=>	195
		497	=>	88 and 155
		499	=>	69
		501	=>	135
		503	=>	11
		505	=>	198
		507	=>	51
		512	=>	4
		514	=>	112
		515	=>	106
		516	=>	31 and 45
		518	=>	130
		519	=>	22
		521	=>	209
		522	=>	25
		523	=>	137
		524	=>	61
		525	=>	1
		526	=>	20
		527	=>	148
		528	=>	9
		530	=>	85
		533	=>	15
		535	=>	113
		536	=>	199
		537	=>	173
		541	=>	108
		543	=>	191
		546	=>	90
		551	=>	117
		552	=>	114
		553	=>	196
		555	=>	161
		563	=>	138
		565	=>	136
		567	=>	29
		569	=>	80
		570	=>	46
		571	=>	50 and 185
		573	=>	192
		575	=>	57
		578	=>	73
		579	=>	71

Class: public surge.json.XMLTokener	NameNotChanged
	Source: "XMLTokener.java"
	FieldsOf: surge.json.XMLTokener
		public static final java.util.HashMap entity	NameNotChanged
	MethodsOf: surge.json.XMLTokener
		public java.lang.String nextCDATA() 	NameNotChanged
		public java.lang.Object nextContent() 	NameNotChanged
		public java.lang.Object nextEntity(char) 	NameNotChanged
		public java.lang.Object nextMeta() 	NameNotChanged
		public java.lang.Object nextToken() 	NameNotChanged
		public boolean skipPast(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.json.XMLTokener
		45	=>	106
		46	=>	125
		47	=>	101
		48	=>	6
		49	=>	25
		50	=>	68
		51	=>	79
		61	=>	89
		62	=>	49
		75	=>	4
		78	=>	65
		79	=>	75
		81	=>	121
		83	=>	43
		84	=>	93
		85	=>	34
		87	=>	35
		88	=>	33
		108	=>	44
		109	=>	77
		110	=>	69
		112	=>	96
		114	=>	38
		116	=>	2
		118	=>	85
		119	=>	31
		121	=>	80
		123	=>	78
		124	=>	52
		126	=>	100
		128	=>	36
		129	=>	10
		131	=>	20
		133	=>	91
		149	=>	90
		152	=>	120
		153	=>	5
		155	=>	63
		156	=>	40
		158	=>	88
		161	=>	87
		164	=>	14
		165	=>	113
		166	=>	58
		186	=>	82
		187	=>	37
		188	=>	3
		191	=>	55
		193	=>	72
		195	=>	70
		197	=>	59
		199	=>	124
		201	=>	73
		203	=>	27
		206	=>	102
		209	=>	66
		210	=>	109
		212	=>	50
		214	=>	28
		216	=>	99
		220	=>	84
		222	=>	126
		223	=>	114
		225	=>	9
		227	=>	47
		238	=>	111
		239	=>	122
		261	=>	29
		262	=>	95
		263	=>	46
		266	=>	7
		268	=>	12
		270	=>	24
		272	=>	23
		274	=>	17
		276	=>	41
		278	=>	112
		284	=>	129
		285	=>	83
		286	=>	26
		288	=>	60
		289	=>	62
		291	=>	110
		293	=>	67
		295	=>	64
		297	=>	74
		299	=>	13
		300	=>	107
		302	=>	48
		309	=>	103
		310	=>	18
		312	=>	22
		313	=>	71
		314	=>	21
		316	=>	53
		318	=>	57
		321	=>	92
		329	=>	108
		330	=>	81
		334	=>	105
		354	=>	11
		355	=>	98
		356	=>	42
		363	=>	115 and 128
		365	=>	61
		366	=>	45
		368	=>	54
		370	=>	16
		375	=>	19
		377	=>	39
		378	=>	15
		382	=>	76 and 94
		384	=>	32
		386	=>	119
		387	=>	117
		389	=>	104
		390	=>	118
		392	=>	86
		398	=>	51
		400	=>	116
		407	=>	30
		408	=>	1
		410	=>	8
		416	=>	97
		417	=>	123
		418	=>	56
		420	=>	127

Class: public surge.math.ArrayUtils	NameNotChanged
	Source: "ArrayUtils.java"
	FieldsOf: surge.math.ArrayUtils
	MethodsOf: surge.math.ArrayUtils
		public static void fill(double[], double) 	NameNotChanged
		public static void shiftRight(double[], double) 	NameNotChanged
		public static void wrapRight(double[]) 	NameNotChanged
	LineNumbersOf: surge.math.ArrayUtils
		3	=>	11
		7	=>	6 and 12
		9	=>	8
		12	=>	10
		13	=>	7
		17	=>	5
		18	=>	4
		19	=>	13
		23	=>	1 and 2
		25	=>	3
		27	=>	9

Class: public surge.math.Average	NameNotChanged
	Source: "Average.java"
	FieldsOf: surge.math.Average
		private double average	=>	b
		private boolean dirty	=>	c
		private double[] values	=>	a
	MethodsOf: surge.math.Average
		private void calculateAverage() 	=>	a
		public double getAverage() 	NameNotChanged
		public void put(double) 	NameNotChanged
	LineNumbersOf: surge.math.Average
		10	=>	4
		11	=>	18
		12	=>	1
		13	=>	16
		14	=>	9
		15	=>	12
		19	=>	5
		20	=>	20
		21	=>	14
		25	=>	15
		27	=>	3
		28	=>	7
		31	=>	10
		36	=>	2
		38	=>	11 and 19
		40	=>	6
		43	=>	13
		44	=>	8
		45	=>	17

Class: public surge.math.M	NameNotChanged
	Source: "M.java"
	FieldsOf: surge.math.M
		public static int a	=>	c
		private static double[] fastsqrt	=>	a
		private static final float[] sin	=>	b
	MethodsOf: surge.math.M
		public static double avg(surge.collection.GList) 	NameNotChanged
		public static int chunkShift(int) 	NameNotChanged
		public static double clip(double, double, double) 	NameNotChanged
		public static float cos(float) 	NameNotChanged
		public static surge.collection.GList cradShift(org.bukkit.Location, double) 	NameNotChanged
		public static double distance(org.bukkit.Location, org.bukkit.Location) 	NameNotChanged
		public static double dof(double, double) 	NameNotChanged
		public static double evaluate(java.lang.String) 	NameNotChanged
		public static double evaluate(java.lang.String, java.lang.Double[]) 	NameNotChanged
		public static int fromRoman(java.lang.String) 	NameNotChanged
		public static double fsqrt(double) 	NameNotChanged
		public static surge.collection.GList getChunks(org.bukkit.Chunk, int) 	NameNotChanged
		public static org.bukkit.block.Block highestBlock(org.bukkit.Location, int, int) 	NameNotChanged
		public static boolean isLoaded(org.bukkit.Location) 	NameNotChanged
		public static boolean isLoaded(org.bukkit.Location, double) 	NameNotChanged
		public static boolean isLoaded(org.bukkit.World, int, int) 	NameNotChanged
		public static void lim(surge.collection.GList, int) 	NameNotChanged
		public static int max(int[]) 	NameNotChanged
		public static double maxSafeRadius(org.bukkit.Location) 	NameNotChanged
		public static double maxSafeRadius(org.bukkit.Location, double, double) 	NameNotChanged
		public static int min(int[]) 	NameNotChanged
		public static long ms() 	NameNotChanged
		public static long ns() 	NameNotChanged
		public static boolean r(java.lang.Double) 	NameNotChanged
		public static int rand(int, int) 	NameNotChanged
		private static java.lang.String repeat(java.lang.String, int) 	=>	a
		public static float sin(float) 	NameNotChanged
		private static float sinLookup(int) 	=>	a
		public static double ticksFromNS(long) 	NameNotChanged
		public static java.lang.String toRoman(int) 	NameNotChanged
		public static double tps(long, int) 	NameNotChanged
		public static boolean within(int, int, int) 	NameNotChanged
		public static boolean within(org.bukkit.Location, org.bukkit.Location, java.lang.Double) 	NameNotChanged
	LineNumbersOf: surge.math.M
		20	=>	149
		26	=>	156
		39	=>	78
		40	=>	21
		42	=>	88
		54	=>	80
		56	=>	38
		59	=>	37
		81	=>	98 and 154
		83	=>	106
		85	=>	62
		87	=>	72
		91	=>	32
		96	=>	16
		97	=>	178
		99	=>	60 and 97
		101	=>	17
		103	=>	122
		105	=>	144
		107	=>	64
		108	=>	140
		113	=>	14
		114	=>	61
		119	=>	50
		134	=>	57
		146	=>	93
		158	=>	167
		160	=>	115
		161	=>	127
		162	=>	56
		163	=>	152
		164	=>	85
		165	=>	59
		166	=>	34
		167	=>	172
		168	=>	113
		169	=>	168
		170	=>	75
		171	=>	71
		172	=>	157
		174	=>	89
		176	=>	84 and 166
		178	=>	13
		180	=>	42
		181	=>	54
		184	=>	91
		198	=>	118
		200	=>	41
		203	=>	18
		205	=>	39 and 49
		207	=>	53
		210	=>	70
		215	=>	141
		227	=>	51
		229	=>	121
		232	=>	171
		234	=>	138
		236	=>	29
		239	=>	35
		241	=>	165
		244	=>	163
		246	=>	67
		249	=>	3
		251	=>	19
		254	=>	25
		256	=>	119
		259	=>	47
		261	=>	110
		264	=>	175
		266	=>	65
		269	=>	26
		271	=>	145
		274	=>	123
		276	=>	87
		279	=>	169
		281	=>	153
		284	=>	176
		286	=>	77
		289	=>	30
		291	=>	160
		294	=>	129
		296	=>	10
		299	=>	134
		309	=>	79
		319	=>	143
		331	=>	112
		333	=>	92 and 135
		335	=>	90
		338	=>	40
		351	=>	31 and 158
		353	=>	86
		355	=>	23
		368	=>	2
		385	=>	131
		397	=>	27
		409	=>	109
		421	=>	177
		423	=>	44 and 103
		425	=>	58
		427	=>	94
		431	=>	9
		443	=>	6
		445	=>	11 and 116
		447	=>	5
		449	=>	63
		453	=>	46
		469	=>	148
		474	=>	83 and 162
		476	=>	151
		482	=>	130
		487	=>	100
		489	=>	137
		492	=>	55
		494	=>	52
		497	=>	136
		502	=>	104
		507	=>	146
		512	=>	69
		514	=>	120
		516	=>	155
		519	=>	24 and 96
		521	=>	128
		523	=>	81
		525	=>	164
		529	=>	159
		534	=>	114 and 139
		536	=>	66
		538	=>	108
		542	=>	132
		547	=>	95
		548	=>	76
		549	=>	173
		550	=>	111
		551	=>	117
		553	=>	8 and 33
		555	=>	73 and 126
		557	=>	82
		561	=>	43
		566	=>	125
		571	=>	170 and 174
		573	=>	4
		575	=>	20
		579	=>	150
		584	=>	7 and 105
		586	=>	28
		588	=>	48
		592	=>	99
		597	=>	161
		599	=>	68
		602	=>	124
		607	=>	133
		609	=>	36 and 102
		611	=>	15 and 45
		613	=>	22
		617	=>	74
		619	=>	147
		624	=>	142
		626	=>	12 and 107
		628	=>	1
		630	=>	101

Class: public surge.math.Profiler	NameNotChanged
	Source: "Profiler.java"
	FieldsOf: surge.math.Profiler
		private long millis	=>	c
		private long nanos	=>	a
		private boolean profiling	=>	f
		private long startMillis	=>	d
		private long startNano	=>	b
		private double time	=>	e
	MethodsOf: surge.math.Profiler
		public void begin() 	NameNotChanged
		public void end() 	NameNotChanged
		public double getHours() 	NameNotChanged
		public long getMillis() 	NameNotChanged
		public double getMilliseconds() 	NameNotChanged
		public double getMinutes() 	NameNotChanged
		public long getNanos() 	NameNotChanged
		public long getNanoseconds() 	NameNotChanged
		public double getSeconds() 	NameNotChanged
		public long getStartMillis() 	NameNotChanged
		public long getStartNano() 	NameNotChanged
		public double getTicks() 	NameNotChanged
		public double getTime() 	NameNotChanged
		public java.lang.String getTime(int) 	NameNotChanged
		public boolean isProfiling() 	NameNotChanged
		public void reset() 	NameNotChanged
	LineNumbersOf: surge.math.Profiler
		14	=>	37
		16	=>	18
		17	=>	8
		18	=>	15
		22	=>	24
		23	=>	10
		24	=>	39
		25	=>	28
		29	=>	35
		31	=>	41
		34	=>	21
		35	=>	40
		36	=>	3
		37	=>	6
		38	=>	30
		39	=>	44
		43	=>	7
		44	=>	20
		45	=>	42
		46	=>	5
		47	=>	25
		48	=>	43
		49	=>	1
		53	=>	38
		55	=>	2
		58	=>	17
		60	=>	36
		63	=>	9
		65	=>	11
		68	=>	23
		70	=>	14
		73	=>	31
		78	=>	34
		83	=>	16
		88	=>	33
		93	=>	26
		98	=>	22
		103	=>	27
		108	=>	29
		113	=>	13
		118	=>	12
		123	=>	19
		128	=>	32
		133	=>	4

Class: public surge.nms.NMSClass	NameNotChanged
	Source: "NMSClass.java"
	FieldsOf: surge.nms.NMSClass
		public static java.lang.Class ChatSerializer	NameNotChanged
		public static java.lang.Class EnumGamemode	NameNotChanged
		protected static java.lang.Class EnumPlayerInfoAction	=>	c
		public static java.lang.Class GameProfile	NameNotChanged
		public static java.lang.Class IChatBaseComponent	NameNotChanged
		public static java.lang.Class LoadingCache	NameNotChanged
		public static java.lang.Class PacketPlayOutPlayerInfo	NameNotChanged
		public static java.lang.Class PacketPlayOutPlayerListHeaderFooter	NameNotChanged
		public static java.lang.Class PlayerInfoData	NameNotChanged
		public static java.lang.Class TileEntitySkull	NameNotChanged
		private static boolean init	=>	a
		protected static int version	=>	b
	MethodsOf: surge.nms.NMSClass
	LineNumbersOf: surge.nms.NMSClass
		3	=>	43
		6	=>	31
		7	=>	34
		22	=>	33
		24	=>	3
		26	=>	18
		29	=>	39
		31	=>	25
		34	=>	46
		36	=>	38
		39	=>	6
		41	=>	42
		44	=>	35
		46	=>	47
		49	=>	32
		51	=>	21
		54	=>	40
		56	=>	29
		58	=>	15
		59	=>	4
		62	=>	16
		65	=>	26
		67	=>	5
		69	=>	10
		72	=>	36
		74	=>	17
		75	=>	37
		79	=>	28
		84	=>	23
		86	=>	9
		87	=>	13
		91	=>	30
		93	=>	41
		95	=>	45
		100	=>	22
		102	=>	27
		103	=>	20
		107	=>	19
		110	=>	2
		114	=>	8
		116	=>	24
		117	=>	12
		120	=>	44
		122	=>	14
		124	=>	7
		129	=>	11
		131	=>	1

Class: public surge.nms.NMSX	NameNotChanged
	Source: "NMSX.java"
	FieldsOf: surge.nms.NMSX
		public static int a	=>	b
		public static surge.nms.NMSX bountifulAPI	NameNotChanged
		public static java.lang.Object eSubtitle	NameNotChanged
		public static java.lang.Object eTimes	NameNotChanged
		public static java.lang.Object eTitle	NameNotChanged
		public static java.lang.String nmsver	NameNotChanged
		private static boolean useOldMethods	=>	a
	MethodsOf: surge.nms.NMSX
		public static void clearTitle(org.bukkit.entity.Player) 	NameNotChanged
		public static java.lang.String craftPackage() 	NameNotChanged
		public static java.lang.String getBukkitVersion() 	NameNotChanged
		public static java.lang.Class getCBClass(java.lang.String) 	NameNotChanged
		public static java.lang.Class getCBNMSClass(java.lang.String) 	NameNotChanged
		public static java.lang.String getEntityName(org.bukkit.entity.Entity) 	NameNotChanged
		public static java.lang.Class getNMSClass(java.lang.String) 	NameNotChanged
		public static java.lang.String getVersion() 	NameNotChanged
		public static java.lang.String nmsPackage() 	NameNotChanged
		public static int ping(org.bukkit.entity.Player) 	NameNotChanged
		public static void sendActionBar(org.bukkit.entity.Player, java.lang.String) 	NameNotChanged
		public static void sendActionBar(org.bukkit.entity.Player, java.lang.String, int) 	NameNotChanged
		public static void sendActionBarToAllPlayers(java.lang.String) 	NameNotChanged
		public static void sendActionBarToAllPlayers(java.lang.String, int) 	NameNotChanged
		public static void sendPacket(org.bukkit.entity.Player, java.lang.Object) 	NameNotChanged
		public static void sendTabTitle(org.bukkit.entity.Player, java.lang.String, java.lang.String) 	NameNotChanged
		public static void sendTitle(org.bukkit.entity.Player, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.String) 	NameNotChanged
		public static java.lang.Object serializeChat(java.lang.String) 	NameNotChanged
		public static java.lang.reflect.Field setAccessible(java.lang.reflect.Field) 	NameNotChanged
		public static java.lang.reflect.Method setAccessible(java.lang.reflect.Method) 	NameNotChanged
		public static void setAi(org.bukkit.entity.LivingEntity, boolean) 	NameNotChanged
		public static void showPickup(org.bukkit.entity.Player, org.bukkit.entity.Entity, org.bukkit.entity.Entity) 	NameNotChanged
	LineNumbersOf: surge.nms.NMSX
		15	=>	18
		20	=>	125
		21	=>	119
		22	=>	115
		26	=>	42
		27	=>	97
		28	=>	28
		35	=>	101
		37	=>	36
		39	=>	81
		41	=>	74
		45	=>	66
		56	=>	83
		58	=>	107
		62	=>	104
		63	=>	53
		65	=>	137
		70	=>	160
		75	=>	166
		77	=>	76
		81	=>	22
		82	=>	168
		84	=>	148
		89	=>	67
		96	=>	103
		99	=>	139
		104	=>	3
		109	=>	147
		110	=>	17
		111	=>	133
		112	=>	2
		114	=>	100
		119	=>	26
		121	=>	91
		131	=>	155
		141	=>	127
		151	=>	135
		166	=>	16
		167	=>	92
		168	=>	45
		169	=>	34
		170	=>	9
		171	=>	54
		172	=>	41
		174	=>	89
		178	=>	173
		184	=>	13
		185	=>	162
		186	=>	88
		187	=>	144
		189	=>	106
		191	=>	145
		193	=>	10
		197	=>	44
		201	=>	37
		204	=>	174
		206	=>	96
		207	=>	82
		217	=>	95
		219	=>	24
		222	=>	49
		224	=>	58
		227	=>	14
		229	=>	178
		234	=>	12
		236	=>	19
		237	=>	77
		238	=>	4
		239	=>	84
		240	=>	87
		241	=>	80
		242	=>	35
		244	=>	11
		245	=>	98
		246	=>	21
		247	=>	6
		248	=>	20
		251	=>	33
		253	=>	142
		254	=>	64
		256	=>	75
		258	=>	86
		259	=>	129
		260	=>	79
		261	=>	111
		263	=>	110
		264	=>	153
		265	=>	7
		266	=>	72
		267	=>	61
		269	=>	175
		271	=>	120
		273	=>	149
		275	=>	27
		279	=>	116
		280	=>	150
		284	=>	62
		286	=>	68
		289	=>	52
		291	=>	114
		293	=>	159
		296	=>	50
		297	=>	60
		298	=>	43
		302	=>	65
		303	=>	146
		304	=>	108
		305	=>	176
		306	=>	15
		307	=>	94
		308	=>	177
		309	=>	99
		310	=>	138
		312	=>	128
		314	=>	140
		316	=>	163
		320	=>	32
		322	=>	71
		330	=>	154
		331	=>	23
		332	=>	70
		333	=>	39
		335	=>	78
		337	=>	1
		338	=>	29
		339	=>	38
		340	=>	126
		341	=>	30
		342	=>	164
		346	=>	132
		347	=>	25
		348	=>	167
		350	=>	171
		352	=>	152
		353	=>	31
		354	=>	121
		355	=>	143
		359	=>	158
		363	=>	170
		364	=>	141
		365	=>	40
		366	=>	46
		367	=>	113
		368	=>	130
		369	=>	123
		371	=>	59
		373	=>	156
		375	=>	165
		379	=>	57
		380	=>	8
		382	=>	47
		389	=>	112
		392	=>	51 and 157
		394	=>	109
		395	=>	73
		403	=>	5
		405	=>	85
		409	=>	63
		410	=>	179
		414	=>	69 and 117
		416	=>	136
		418	=>	55
		422	=>	118
		424	=>	102
		427	=>	56
		434	=>	131
		435	=>	172
		436	=>	122
		437	=>	161
		439	=>	151
		442	=>	169
		447	=>	124
		452	=>	48
		453	=>	93
		455	=>	134
		457	=>	90
		459	=>	105

Class: surge.nms.NMSX$1	NameNotChanged
	Source: "NMSX.java"
	FieldsOf: surge.nms.NMSX$1
		private final synthetic org.bukkit.entity.Player val$player	NameNotChanged
	MethodsOf: surge.nms.NMSX$1
		public void run() 	NameNotChanged
	LineNumbersOf: surge.nms.NMSX$1
		1	=>	4
		382	=>	2
		387	=>	1
		388	=>	3

Class: surge.nms.NMSX$2	NameNotChanged
	Source: "NMSX.java"
	FieldsOf: surge.nms.NMSX$2
		private final synthetic java.lang.String val$message	NameNotChanged
		private final synthetic org.bukkit.entity.Player val$player	NameNotChanged
	MethodsOf: surge.nms.NMSX$2
		public void run() 	NameNotChanged
	LineNumbersOf: surge.nms.NMSX$2
		1	=>	4
		395	=>	3
		401	=>	2
		402	=>	1

Class: public surge.nms.PacketUtil	NameNotChanged
	Source: "PacketUtil.java"
	FieldsOf: surge.nms.PacketUtil
	MethodsOf: surge.nms.PacketUtil
		public static void clearTitle(org.bukkit.entity.Player) 	NameNotChanged
		public static surge.nms.PacketUtil$V getVersion() 	NameNotChanged
		public static void sendActionBar(org.bukkit.entity.Player, java.lang.String) 	NameNotChanged
		public static void sendTitle(org.bukkit.entity.Player, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.nms.PacketUtil
		6	=>	22
		20	=>	30
		22	=>	8
		25	=>	1
		27	=>	31
		30	=>	24
		32	=>	13
		35	=>	7
		37	=>	12
		40	=>	15
		42	=>	20
		45	=>	18
		50	=>	10
		52	=>	3
		57	=>	16
		58	=>	29
		60	=>	5
		64	=>	27
		68	=>	9
		70	=>	11
		75	=>	17
		76	=>	25
		78	=>	6
		82	=>	19
		86	=>	14
		88	=>	26
		93	=>	21
		94	=>	23
		96	=>	28
		98	=>	2
		100	=>	4

Class: public final enum surge.nms.PacketUtil$V	NameNotChanged
	Source: "PacketUtil.java"
	FieldsOf: surge.nms.PacketUtil$V
		private static final synthetic surge.nms.PacketUtil$V[] ENUM$VALUES	=>	a
		public static final enum surge.nms.PacketUtil$V R110	NameNotChanged
		public static final enum surge.nms.PacketUtil$V R111	NameNotChanged
		public static final enum surge.nms.PacketUtil$V R112	NameNotChanged
		public static final enum surge.nms.PacketUtil$V R17	NameNotChanged
		public static final enum surge.nms.PacketUtil$V R18	NameNotChanged
		public static final enum surge.nms.PacketUtil$V R19	NameNotChanged
	MethodsOf: surge.nms.PacketUtil$V
		public static surge.nms.PacketUtil$V valueOf(java.lang.String) 	NameNotChanged
		public static surge.nms.PacketUtil$V[] values() 	NameNotChanged
	LineNumbersOf: surge.nms.PacketUtil$V
		1	=>	3 and 5
		8	=>	7 and 8
		10	=>	9
		11	=>	6
		12	=>	4
		13	=>	2
		14	=>	1
		15	=>	10

Class: public surge.nms.Title	NameNotChanged
	Source: "Title.java"
	FieldsOf: surge.nms.Title
		private java.lang.String action	=>	c
		private java.lang.Integer fadeIn	=>	d
		private java.lang.Integer fadeOut	=>	e
		private java.lang.Integer stayTime	=>	f
		private java.lang.String subTitle	=>	b
		private java.lang.String title	=>	a
	MethodsOf: surge.nms.Title
		public java.lang.String getAction() 	NameNotChanged
		public java.lang.Integer getFadeIn() 	NameNotChanged
		public java.lang.Integer getFadeOut() 	NameNotChanged
		public java.lang.Integer getStayTime() 	NameNotChanged
		public java.lang.String getSubTitle() 	NameNotChanged
		public java.lang.String getTitle() 	NameNotChanged
		public void send(org.bukkit.entity.Player) 	NameNotChanged
		public void setAction(java.lang.String) 	NameNotChanged
		public void setFadeIn(java.lang.Integer) 	NameNotChanged
		public void setFadeOut(java.lang.Integer) 	NameNotChanged
		public void setStayTime(java.lang.Integer) 	NameNotChanged
		public void setSubTitle(java.lang.String) 	NameNotChanged
		public void setTitle(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.nms.Title
		14	=>	19
		16	=>	4
		17	=>	8
		18	=>	14
		19	=>	49
		21	=>	36
		23	=>	40
		24	=>	25
		25	=>	29
		26	=>	22
		27	=>	33
		28	=>	48
		29	=>	6
		31	=>	42
		33	=>	32
		34	=>	37
		35	=>	7
		36	=>	50
		37	=>	26
		38	=>	35
		40	=>	27
		42	=>	10
		43	=>	16
		44	=>	31
		45	=>	28
		46	=>	15
		52	=>	2
		53	=>	13
		54	=>	34
		56	=>	12
		58	=>	38
		60	=>	47
		64	=>	1
		69	=>	46
		70	=>	45
		74	=>	18
		79	=>	21
		80	=>	39
		84	=>	5
		89	=>	23
		90	=>	44
		94	=>	3
		99	=>	24
		100	=>	20
		104	=>	9
		109	=>	11
		110	=>	41
		114	=>	43
		119	=>	30
		120	=>	17

Class: public final enum surge.nms.VersionBukkit	NameNotChanged
	Source: "VersionBukkit.java"
	FieldsOf: surge.nms.VersionBukkit
		private static final synthetic surge.nms.VersionBukkit[] ENUM$VALUES	=>	a
		public static final enum surge.nms.VersionBukkit V11	NameNotChanged
		public static final enum surge.nms.VersionBukkit V111	NameNotChanged
		public static final enum surge.nms.VersionBukkit V112	NameNotChanged
		public static final enum surge.nms.VersionBukkit V7	NameNotChanged
		public static final enum surge.nms.VersionBukkit V8	NameNotChanged
		public static final enum surge.nms.VersionBukkit V9	NameNotChanged
		public static final enum surge.nms.VersionBukkit VU	NameNotChanged
	MethodsOf: surge.nms.VersionBukkit
		public static surge.nms.VersionBukkit get() 	NameNotChanged
		public static boolean tc() 	NameNotChanged
		public static boolean uc() 	NameNotChanged
		public static surge.nms.VersionBukkit valueOf(java.lang.String) 	NameNotChanged
		public static surge.nms.VersionBukkit[] values() 	NameNotChanged
	LineNumbersOf: surge.nms.VersionBukkit
		1	=>	1 and 26
		5	=>	5 and 15
		7	=>	30
		8	=>	2
		9	=>	18
		10	=>	4
		11	=>	16
		12	=>	28
		13	=>	7
		17	=>	3
		19	=>	10
		22	=>	20
		27	=>	19
		29	=>	13
		32	=>	12
		37	=>	22
		39	=>	24
		42	=>	21
		44	=>	27
		47	=>	9
		49	=>	6
		52	=>	23
		54	=>	17
		57	=>	14
		59	=>	29
		62	=>	8
		64	=>	25
		67	=>	11

Class: public abstract surge.pool.A	NameNotChanged
	Source: "A.java"
	FieldsOf: surge.pool.A
	MethodsOf: surge.pool.A
	LineNumbersOf: surge.pool.A
		7	=>	1
		9	=>	3
		17	=>	2

Class: surge.pool.A$1	NameNotChanged
	Source: "A.java"
	FieldsOf: surge.pool.A$1
		final synthetic surge.pool.A this$0	NameNotChanged
	MethodsOf: surge.pool.A$1
		public void run() 	NameNotChanged
	LineNumbersOf: surge.pool.A$1
		1	=>	2
		9	=>	3
		14	=>	4
		15	=>	1

Class: public abstract surge.pool.Execution	NameNotChanged
	Source: "Execution.java"
	FieldsOf: surge.pool.Execution
		public static boolean a	=>	b
	MethodsOf: surge.pool.Execution
	LineNumbersOf: surge.pool.Execution
		3	=>	1

Class: public surge.pool.ParallelPoolManager	NameNotChanged
	Source: "ParallelPoolManager.java"
	FieldsOf: surge.pool.ParallelPoolManager
		private static synthetic int[] $SWITCH_TABLE$surge$pool$QueueMode	=>	h
		private surge.pool.ThreadInformation info	=>	g
		private java.lang.String key	=>	f
		private surge.pool.QueueMode mode	=>	a
		private int next	=>	c
		private java.util.Queue squeue	=>	e
		private int threadCount	=>	d
		private surge.collection.GList threads	=>	b
	MethodsOf: surge.pool.ParallelPoolManager
		static synthetic int[] $SWITCH_TABLE$surge$pool$QueueMode() 	=>	c
		private void createThreads(int) 	=>	a
		public surge.pool.ThreadInformation getAverageInfo() 	NameNotChanged
		public java.lang.String getKey() 	NameNotChanged
		public surge.pool.QueueMode getMode() 	NameNotChanged
		public int getNext() 	NameNotChanged
		public int getQueueSize() 	NameNotChanged
		public int getSize() 	NameNotChanged
		public java.util.Queue getSqueue() 	NameNotChanged
		public int getThreadCount() 	NameNotChanged
		public surge.pool.ParallelThread[] getThreads() 	NameNotChanged
		public long lock() 	NameNotChanged
		private surge.pool.ParallelThread nextThread() 	=>	b
		public void queue(surge.pool.Execution) 	NameNotChanged
		public void shutdown() 	NameNotChanged
		public void start() 	NameNotChanged
		public void syncQueue(surge.pool.Execution) 	NameNotChanged
		public void tickSyncQueue() 	NameNotChanged
		private void updateThreadInformation() 	=>	a
	LineNumbersOf: surge.pool.ParallelPoolManager
		11	=>	33
		23	=>	72
		24	=>	61
		28	=>	63
		30	=>	21 and 90
		32	=>	55
		34	=>	46
		36	=>	86
		38	=>	28
		41	=>	15
		45	=>	95
		46	=>	77
		47	=>	65
		48	=>	10
		50	=>	48
		52	=>	11
		54	=>	58
		57	=>	69
		59	=>	36
		62	=>	25
		63	=>	59
		64	=>	7
		65	=>	60
		66	=>	22
		67	=>	92
		68	=>	66
		69	=>	85
		73	=>	52
		75	=>	73 and 80
		79	=>	9
		80	=>	51
		82	=>	6
		88	=>	54
		93	=>	53
		94	=>	20
		98	=>	14 and 43
		100	=>	49
		102	=>	41
		106	=>	17
		107	=>	64
		111	=>	89
		112	=>	50
		116	=>	38
		121	=>	24
		123	=>	27 and 97
		125	=>	35
		128	=>	71
		133	=>	19
		140	=>	75
		142	=>	37
		145	=>	91
		146	=>	16
		147	=>	57
		149	=>	3 and 70
		151	=>	96
		152	=>	67
		153	=>	56
		156	=>	12
		157	=>	93
		158	=>	42
		159	=>	39
		160	=>	44
		161	=>	82
		163	=>	5
		167	=>	83
		171	=>	4
		173	=>	78
		175	=>	68
		178	=>	29
		180	=>	62
		183	=>	8
		184	=>	2
		186	=>	94
		188	=>	79 and 84
		190	=>	23
		192	=>	18
		194	=>	45
		195	=>	32
		203	=>	30
		208	=>	1 and 47
		210	=>	87
		211	=>	34
		212	=>	40
		214	=>	88
		218	=>	31
		223	=>	26
		228	=>	74
		233	=>	13
		238	=>	76
		243	=>	81

Class: synthetic surge.pool.ParallelPoolManager$1	NameNotChanged
	Source: "ParallelPoolManager.java"
	FieldsOf: surge.pool.ParallelPoolManager$1
		static final synthetic int[] $SwitchMap$surge$pool$QueueMode	=>	a
	MethodsOf: surge.pool.ParallelPoolManager$1
	LineNumbersOf: surge.pool.ParallelPoolManager$1
		169	=>	1

Class: public surge.pool.ParallelThread	NameNotChanged
	Source: "ParallelThread.java"
	FieldsOf: surge.pool.ParallelThread
		private surge.pool.ThreadInformation info	=>	b
		private java.util.Queue queue	=>	a
	MethodsOf: surge.pool.ParallelThread
		private void conditionallySleep(double) 	=>	a
		private void execute() 	=>	a
		private void execute(surge.pool.Execution) 	=>	a
		public surge.pool.ThreadInformation getInfo() 	NameNotChanged
		public java.util.Queue getQueue() 	NameNotChanged
		public void queue(surge.pool.Execution) 	NameNotChanged
		public void run() 	NameNotChanged
	LineNumbersOf: surge.pool.ParallelThread
		14	=>	46
		15	=>	41
		16	=>	21
		17	=>	34
		18	=>	31
		19	=>	47
		24	=>	36
		28	=>	20
		29	=>	18
		30	=>	23
		31	=>	3
		32	=>	17
		33	=>	37
		34	=>	26
		35	=>	5
		36	=>	32
		37	=>	9
		38	=>	30
		39	=>	49
		40	=>	13
		41	=>	48
		42	=>	16
		43	=>	35
		46	=>	1
		48	=>	15
		51	=>	40
		53	=>	44
		54	=>	7, 11 and 25
		56	=>	28
		60	=>	42
		62	=>	8
		64	=>	39
		70	=>	6
		73	=>	33
		75	=>	2
		76	=>	29
		77	=>	14
		81	=>	22
		83	=>	24
		85	=>	43
		86	=>	19
		89	=>	38
		91	=>	12
		95	=>	27
		96	=>	10
		100	=>	4
		105	=>	45

Class: public final enum surge.pool.QueueMode	NameNotChanged
	Source: "QueueMode.java"
	FieldsOf: surge.pool.QueueMode
		private static final synthetic surge.pool.QueueMode[] $VALUES	=>	a
		public static final enum surge.pool.QueueMode ROUND_ROBIN	NameNotChanged
		public static final enum surge.pool.QueueMode SMALLEST	NameNotChanged
	MethodsOf: surge.pool.QueueMode
		public static surge.pool.QueueMode valueOf(java.lang.String) 	NameNotChanged
		public static surge.pool.QueueMode[] values() 	NameNotChanged
	LineNumbersOf: surge.pool.QueueMode
		3	=>	1, 2, 4 and 6
		5	=>	5
		6	=>	3

Class: public abstract surge.pool.S	NameNotChanged
	Source: "S.java"
	FieldsOf: surge.pool.S
	MethodsOf: surge.pool.S
	LineNumbersOf: surge.pool.S
		7	=>	2
		9	=>	3
		17	=>	1

Class: surge.pool.S$1	NameNotChanged
	Source: "S.java"
	FieldsOf: surge.pool.S$1
		final synthetic surge.pool.S this$0	NameNotChanged
	MethodsOf: surge.pool.S$1
		public void run() 	NameNotChanged
	LineNumbersOf: surge.pool.S$1
		1	=>	4
		9	=>	1
		14	=>	3
		15	=>	2

Class: public surge.pool.ThreadInformation	NameNotChanged
	Source: "ThreadInformation.java"
	FieldsOf: surge.pool.ThreadInformation
		private final int id	=>	g
		private boolean processing	=>	c
		private int queuedSize	=>	b
		private long tick	=>	f
		private double ticksPerSecond	=>	a
		private surge.math.Average ticksPerSecondAverage	=>	e
		private double utilization	=>	d
	MethodsOf: surge.pool.ThreadInformation
		public int getId() 	NameNotChanged
		public int getQueuedSize() 	NameNotChanged
		public long getTick() 	NameNotChanged
		public long getTickLag() 	NameNotChanged
		public double getTicksPerSecond() 	NameNotChanged
		public double getTicksPerSecondAverage() 	NameNotChanged
		public double getUtilization() 	NameNotChanged
		public boolean isProcessing() 	NameNotChanged
		public void setProcessing(boolean) 	NameNotChanged
		public void setQueuedSize(int) 	NameNotChanged
		public void setTick(long) 	NameNotChanged
		public void setTicksPerSecond(double) 	NameNotChanged
		public void setUtilization(double) 	NameNotChanged
	LineNumbersOf: surge.pool.ThreadInformation
		17	=>	27
		18	=>	11
		19	=>	7
		20	=>	8
		21	=>	16
		22	=>	24
		23	=>	26
		24	=>	5
		25	=>	14
		29	=>	1
		34	=>	15
		35	=>	28
		36	=>	18
		40	=>	3
		45	=>	25
		46	=>	10
		50	=>	22
		55	=>	17
		56	=>	9
		60	=>	19
		65	=>	4
		66	=>	12
		70	=>	23
		75	=>	2
		80	=>	13
		81	=>	20
		85	=>	21
		90	=>	6

Class: public abstract surge.sched.IBursterator	NameNotChanged
	Source: "IBursterator.java"
	FieldsOf: surge.sched.IBursterator
	MethodsOf: surge.sched.IBursterator
		public abstract void burst(java.lang.Object) 	NameNotChanged
		public abstract int flush() 	NameNotChanged
		public abstract int flush(surge.math.Profiler) 	NameNotChanged
		public abstract double getEstimatedTimeUse() 	NameNotChanged
		public abstract void queue(java.lang.Object) 	NameNotChanged
		public abstract void queue(java.lang.Object[]) 	NameNotChanged
		public abstract void queue(java.util.List) 	NameNotChanged
		public abstract void setTimeLock(double) 	NameNotChanged
	LineNumbersOf: surge.sched.IBursterator

Class: public abstract surge.sched.ICancellable	NameNotChanged
	Source: "ICancellable.java"
	FieldsOf: surge.sched.ICancellable
	MethodsOf: surge.sched.ICancellable
		public abstract void cancel() 	NameNotChanged
	LineNumbersOf: surge.sched.ICancellable

Class: public abstract surge.sched.IMasterTickComponent	NameNotChanged
	Source: "IMasterTickComponent.java"
	FieldsOf: surge.sched.IMasterTickComponent
	MethodsOf: surge.sched.IMasterTickComponent
		public abstract java.lang.String getTickName() 	NameNotChanged
		public abstract void onTick() 	NameNotChanged
	LineNumbersOf: surge.sched.IMasterTickComponent

Class: public abstract surge.sched.ITask	NameNotChanged
	Source: "ITask.java"
	FieldsOf: surge.sched.ITask
	MethodsOf: surge.sched.ITask
		public abstract double getActiveTime() 	NameNotChanged
		public abstract double getComputeTime() 	NameNotChanged
		public abstract int getId() 	NameNotChanged
		public abstract java.lang.String getName() 	NameNotChanged
		public abstract double getTotalComputeTime() 	NameNotChanged
		public abstract boolean hasCompleted() 	NameNotChanged
		public abstract boolean isRepeating() 	NameNotChanged
		public abstract void run() 	NameNotChanged
	LineNumbersOf: surge.sched.ITask

Class: public surge.sched.TICK	NameNotChanged
	Source: "TICK.java"
	FieldsOf: surge.sched.TICK
		public static long tick	NameNotChanged
	MethodsOf: surge.sched.TICK
	LineNumbersOf: surge.sched.TICK
		3	=>	2
		5	=>	1

Class: public abstract surge.sched.Task	NameNotChanged
	Source: "Task.java"
	FieldsOf: surge.sched.Task
		public static int a	=>	k
		private surge.math.Profiler activeProfiler	=>	i
		private double activeTime	=>	f
		private boolean completed	=>	g
		private double computeTime	=>	d
		private int id	=>	a
		private java.lang.String name	=>	b
		private surge.math.Profiler profiler	=>	h
		private boolean repeating	=>	c
		private int ticks	=>	j
		private double totalComputeTime	=>	e
	MethodsOf: surge.sched.Task
		static synthetic surge.math.Profiler access$0(surge.sched.Task) 	NameNotChanged
		static synthetic void access$1(surge.sched.Task, boolean) 	NameNotChanged
		static synthetic double access$10(surge.sched.Task) 	NameNotChanged
		static synthetic surge.math.Profiler access$2(surge.sched.Task) 	NameNotChanged
		static synthetic void access$3(surge.sched.Task, double) 	NameNotChanged
		static synthetic void access$4(surge.sched.Task, double) 	NameNotChanged
		static synthetic double access$5(surge.sched.Task) 	NameNotChanged
		static synthetic void access$6(surge.sched.Task, double) 	NameNotChanged
		static synthetic int access$7(surge.sched.Task) 	NameNotChanged
		static synthetic void access$8(surge.sched.Task, int) 	NameNotChanged
		static synthetic double access$9(surge.sched.Task) 	NameNotChanged
		public void cancel() 	NameNotChanged
		public double getActiveTime() 	NameNotChanged
		public double getComputeTime() 	NameNotChanged
		public int getId() 	NameNotChanged
		public java.lang.String getName() 	NameNotChanged
		public double getTotalComputeTime() 	NameNotChanged
		public boolean hasCompleted() 	NameNotChanged
		public boolean isRepeating() 	NameNotChanged
		private void setup(java.lang.String, boolean) 	=>	a
	LineNumbersOf: surge.sched.Task
		11	=>	25 and 29
		12	=>	22 and 26
		13	=>	2 and 6
		14	=>	30
		15	=>	42
		16	=>	1
		17	=>	45 and 50
		19	=>	37
		21	=>	3
		22	=>	41
		24	=>	27
		41	=>	24
		43	=>	28
		45	=>	44
		46	=>	43
		48	=>	49
		66	=>	16
		68	=>	10
		70	=>	17
		71	=>	15
		73	=>	46
		96	=>	47
		100	=>	33
		101	=>	13
		102	=>	34
		103	=>	14
		104	=>	20
		105	=>	8
		106	=>	23
		107	=>	40
		108	=>	11
		109	=>	4
		114	=>	36
		115	=>	12
		116	=>	35
		117	=>	9
		118	=>	31
		119	=>	39
		120	=>	7
		125	=>	18
		131	=>	19
		137	=>	38
		143	=>	48
		149	=>	21
		155	=>	32
		161	=>	5

Class: surge.sched.Task$1	NameNotChanged
	Source: "Task.java"
	FieldsOf: surge.sched.Task$1
		final synthetic surge.sched.Task this$0	NameNotChanged
	MethodsOf: surge.sched.Task$1
		public void run() 	NameNotChanged
	LineNumbersOf: surge.sched.Task$1
		1	=>	1
		24	=>	10
		29	=>	8
		30	=>	4
		31	=>	6
		32	=>	13
		33	=>	2
		34	=>	5
		35	=>	12
		36	=>	11
		37	=>	9
		38	=>	7
		39	=>	3

Class: surge.sched.Task$2	NameNotChanged
	Source: "Task.java"
	FieldsOf: surge.sched.Task$2
		final synthetic surge.sched.Task this$0	NameNotChanged
	MethodsOf: surge.sched.Task$2
		public void run() 	NameNotChanged
	LineNumbersOf: surge.sched.Task$2
		1	=>	4
		48	=>	12
		53	=>	10
		54	=>	2
		55	=>	9
		56	=>	13
		57	=>	5
		58	=>	7
		59	=>	11
		60	=>	8
		61	=>	14
		62	=>	3
		63	=>	1
		64	=>	6

Class: surge.sched.Task$3	NameNotChanged
	Source: "Task.java"
	FieldsOf: surge.sched.Task$3
		final synthetic surge.sched.Task this$0	NameNotChanged
		private final synthetic int val$total	NameNotChanged
	MethodsOf: surge.sched.Task$3
		public void run() 	NameNotChanged
	LineNumbersOf: surge.sched.Task$3
		1	=>	12
		73	=>	13
		78	=>	3
		79	=>	4
		80	=>	9
		81	=>	1
		82	=>	16
		83	=>	11
		84	=>	10
		85	=>	8
		86	=>	15
		87	=>	7
		88	=>	5
		90	=>	2
		92	=>	6
		94	=>	14

Class: public surge.sched.TaskManager	NameNotChanged
	Source: "TaskManager.java"
	FieldsOf: surge.sched.TaskManager
		private surge.collection.GMap taskProfiles	=>	b
		private surge.collection.GList tasks	=>	a
	MethodsOf: surge.sched.TaskManager
		public java.lang.String getTickName() 	NameNotChanged
		public void onTick() 	NameNotChanged
		private void putFinishingTask(surge.sched.ITask) 	=>	a
		private void putTask(surge.sched.ITask) 	=>	b
	LineNumbersOf: surge.sched.TaskManager
		11	=>	11
		13	=>	18
		14	=>	8
		15	=>	2
		20	=>	1 and 19
		22	=>	14
		24	=>	7
		26	=>	17
		27	=>	15
		30	=>	9
		34	=>	3
		35	=>	13
		39	=>	4
		41	=>	12
		44	=>	5
		45	=>	6
		46	=>	16
		47	=>	21
		48	=>	20
		53	=>	10

Class: public surge.sched.TaskProfile	NameNotChanged
	Source: "TaskProfile.java"
	FieldsOf: surge.sched.TaskProfile
		private double activeTime	=>	a
		private double computeTickTime	=>	b
		private double computeTime	=>	c
	MethodsOf: surge.sched.TaskProfile
		public double getActiveTime() 	NameNotChanged
		public double getComputeTickTime() 	NameNotChanged
		public double getComputeTime() 	NameNotChanged
		public void setActiveTime(double) 	NameNotChanged
		public void setComputeTickTime(double) 	NameNotChanged
		public void setComputeTime(double) 	NameNotChanged
	LineNumbersOf: surge.sched.TaskProfile
		10	=>	2
		11	=>	7
		12	=>	10
		13	=>	14
		14	=>	4
		18	=>	8
		23	=>	13
		24	=>	6
		28	=>	1
		33	=>	3
		34	=>	12
		38	=>	9
		43	=>	5
		44	=>	11

Class: public abstract annotation surge.server.AsyncTick	NameNotChanged
	Source: "AsyncTick.java"
	FieldsOf: surge.server.AsyncTick
	MethodsOf: surge.server.AsyncTick
	LineNumbersOf: surge.server.AsyncTick

Class: public surge.server.CoreTickThread	NameNotChanged
	Source: "CoreTickThread.java"
	FieldsOf: surge.server.CoreTickThread
	MethodsOf: surge.server.CoreTickThread
		public void run() 	NameNotChanged
	LineNumbersOf: surge.server.CoreTickThread
		10	=>	6
		11	=>	7
		12	=>	3
		17	=>	8
		19	=>	14
		23	=>	2
		25	=>	13
		27	=>	5
		28	=>	1
		31	=>	4
		33	=>	9
		34	=>	10 and 12
		36	=>	11

Class: public abstract surge.server.MemoryMonitor	NameNotChanged
	Source: "MemoryMonitor.java"
	FieldsOf: surge.server.MemoryMonitor
		private long allocated	=>	f
		private long collected	=>	g
		private long collections	=>	h
		private long lastMemoryUsed	=>	d
		private long mah	=>	m
		private long mahs	=>	n
		private long memoryAllocatedPerTick	=>	j
		private long memoryCollectedPerTick	=>	k
		private long memoryFree	=>	a
		private long memoryFullyAllocatedPerTick	=>	l
		private long memoryMax	=>	c
		private long memoryUsed	=>	b
		private long memoryUsedAfterGC	=>	e
		private long sms	=>	i
	MethodsOf: surge.server.MemoryMonitor
		public long getAllocated() 	NameNotChanged
		public long getCollected() 	NameNotChanged
		public long getCollections() 	NameNotChanged
		public long getLastMemoryUsed() 	NameNotChanged
		public long getMah() 	NameNotChanged
		public long getMahs() 	NameNotChanged
		public long getMemoryAllocatedPerTick() 	NameNotChanged
		public long getMemoryCollectedPerTick() 	NameNotChanged
		public long getMemoryFree() 	NameNotChanged
		public long getMemoryFullyAllocatedPerTick() 	NameNotChanged
		public long getMemoryMax() 	NameNotChanged
		public long getMemoryUsed() 	NameNotChanged
		public long getMemoryUsedAfterGC() 	NameNotChanged
		public long getSms() 	NameNotChanged
		public abstract void onAllocationSet() 	NameNotChanged
		public void run() 	NameNotChanged
	LineNumbersOf: surge.server.MemoryMonitor
		22	=>	7
		24	=>	34
		25	=>	9
		26	=>	56
		27	=>	25
		28	=>	40
		29	=>	10
		30	=>	2
		31	=>	16
		32	=>	22
		33	=>	57
		34	=>	39
		35	=>	14
		36	=>	44
		37	=>	21
		38	=>	4
		39	=>	54
		46	=>	36 and 53
		48	=>	23
		49	=>	58
		50	=>	51
		52	=>	29
		54	=>	59
		57	=>	1
		59	=>	15
		60	=>	24
		61	=>	30
		65	=>	8
		66	=>	19
		67	=>	20
		70	=>	26
		72	=>	3
		74	=>	32
		75	=>	28
		76	=>	38
		77	=>	47
		78	=>	11
		79	=>	41
		80	=>	50
		85	=>	48
		86	=>	35
		88	=>	46
		90	=>	5
		93	=>	45
		97	=>	27
		102	=>	55
		107	=>	12
		112	=>	49
		117	=>	6
		122	=>	31
		127	=>	37
		132	=>	17
		137	=>	18
		142	=>	43
		147	=>	52
		152	=>	33
		157	=>	42
		162	=>	13

Class: public surge.server.SuperSampler	NameNotChanged
	Source: "SuperSampler.java"
	FieldsOf: surge.server.SuperSampler
		public static int a	=>	z
		private int chunksLoaded	=>	u
		private int chunksUnloaded	=>	v
		private double leftoverTickTime	=>	k
		private surge.math.Average mahL	=>	c
		private long mahs	=>	o
		private long memoryAllocated	=>	m
		private long memoryCollected	=>	n
		private surge.server.MemoryMonitor memoryMonitor	=>	y
		private long memoryUse	=>	l
		private boolean running	=>	h
		private double tickTime	=>	f
		private surge.math.Average tickTimeL	=>	b
		private double tickTimeRaw	=>	g
		private double tickUtilization	=>	j
		private double tickUtilizationRaw	=>	i
		private double ticksPerSecond	=>	d
		private surge.math.Average ticksPerSecondL	=>	a
		private double ticksPerSecondRaw	=>	e
		private int totalChunks	=>	p
		private int totalDrops	=>	r
		private int totalEntities	=>	q
		private int totalLiving	=>	t
		private int totalTiles	=>	s
		private surge.server.TPSMonitor tpsMonitor	=>	x
		private surge.server.WorldMonitor worldMonitor	=>	w
	MethodsOf: surge.server.SuperSampler
		static synthetic void access$0(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic void access$1(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic double access$10(surge.server.SuperSampler) 	NameNotChanged
		static synthetic surge.math.Average access$11(surge.server.SuperSampler) 	NameNotChanged
		static synthetic double access$12(surge.server.SuperSampler) 	NameNotChanged
		static synthetic void access$13(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic void access$14(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic void access$15(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic double access$16(surge.server.SuperSampler) 	NameNotChanged
		static synthetic void access$17(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic double access$18(surge.server.SuperSampler) 	NameNotChanged
		static synthetic void access$19(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic void access$2(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic void access$20(surge.server.SuperSampler, long) 	NameNotChanged
		static synthetic void access$21(surge.server.SuperSampler, long) 	NameNotChanged
		static synthetic void access$22(surge.server.SuperSampler, long) 	NameNotChanged
		static synthetic surge.math.Average access$23(surge.server.SuperSampler) 	NameNotChanged
		static synthetic void access$24(surge.server.SuperSampler, long) 	NameNotChanged
		static synthetic void access$3(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic void access$4(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic void access$5(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic void access$6(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic void access$7(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic void access$8(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic surge.math.Average access$9(surge.server.SuperSampler) 	NameNotChanged
		public int getChunksLoaded() 	NameNotChanged
		public int getChunksUnloaded() 	NameNotChanged
		public double getLeftoverTickTime() 	NameNotChanged
		public surge.math.Average getMahL() 	NameNotChanged
		public long getMahs() 	NameNotChanged
		public long getMemoryAllocated() 	NameNotChanged
		public long getMemoryCollected() 	NameNotChanged
		public surge.server.MemoryMonitor getMemoryMonitor() 	NameNotChanged
		public long getMemoryUse() 	NameNotChanged
		public java.lang.String getTickName() 	NameNotChanged
		public double getTickTime() 	NameNotChanged
		public surge.math.Average getTickTimeL() 	NameNotChanged
		public double getTickTimeRaw() 	NameNotChanged
		public double getTickUtilization() 	NameNotChanged
		public double getTickUtilizationRaw() 	NameNotChanged
		public double getTicksPerSecond() 	NameNotChanged
		public surge.math.Average getTicksPerSecondL() 	NameNotChanged
		public double getTicksPerSecondRaw() 	NameNotChanged
		public int getTotalChunks() 	NameNotChanged
		public int getTotalDrops() 	NameNotChanged
		public int getTotalEntities() 	NameNotChanged
		public int getTotalLiving() 	NameNotChanged
		public int getTotalTiles() 	NameNotChanged
		public surge.server.TPSMonitor getTpsMonitor() 	NameNotChanged
		public surge.server.WorldMonitor getWorldMonitor() 	NameNotChanged
		public boolean isRunning() 	NameNotChanged
		public void onTick() 	NameNotChanged
		public void setChunksLoaded(int) 	NameNotChanged
		public void setChunksUnloaded(int) 	NameNotChanged
		public void setLeftoverTickTime(double) 	NameNotChanged
		public void setMahL(surge.math.Average) 	NameNotChanged
		public void setMahs(long) 	NameNotChanged
		public void setMemoryAllocated(long) 	NameNotChanged
		public void setMemoryCollected(long) 	NameNotChanged
		public void setMemoryMonitor(surge.server.MemoryMonitor) 	NameNotChanged
		public void setMemoryUse(long) 	NameNotChanged
		public void setRunning(boolean) 	NameNotChanged
		public void setTickTime(double) 	NameNotChanged
		public void setTickTimeL(surge.math.Average) 	NameNotChanged
		public void setTickTimeRaw(double) 	NameNotChanged
		public void setTickUtilization(double) 	NameNotChanged
		public void setTickUtilizationRaw(double) 	NameNotChanged
		public void setTicksPerSecond(double) 	NameNotChanged
		public void setTicksPerSecondL(surge.math.Average) 	NameNotChanged
		public void setTicksPerSecondRaw(double) 	NameNotChanged
		public void setTotalChunks(int) 	NameNotChanged
		public void setTotalDrops(int) 	NameNotChanged
		public void setTotalEntities(int) 	NameNotChanged
		public void setTotalLiving(int) 	NameNotChanged
		public void setTotalTiles(int) 	NameNotChanged
		public void setTpsMonitor(surge.server.TPSMonitor) 	NameNotChanged
		public void setWorldMonitor(surge.server.WorldMonitor) 	NameNotChanged
		public void start() 	NameNotChanged
		public void stop() 	NameNotChanged
	LineNumbersOf: surge.server.SuperSampler
		11	=>	30
		12	=>	85
		13	=>	18
		14	=>	115
		15	=>	129 and 131
		16	=>	49 and 95
		17	=>	34 and 139
		19	=>	107
		20	=>	20 and 46
		21	=>	106
		22	=>	111
		23	=>	36
		24	=>	31
		25	=>	113
		26	=>	7
		27	=>	126
		28	=>	14
		29	=>	43
		30	=>	75
		31	=>	44 and 135
		32	=>	38 and 99
		37	=>	81
		39	=>	76
		40	=>	112
		41	=>	50
		42	=>	33
		43	=>	66
		44	=>	9
		45	=>	91
		46	=>	1
		47	=>	119
		48	=>	71
		49	=>	63
		50	=>	132
		51	=>	144
		52	=>	136
		53	=>	118
		54	=>	121
		55	=>	42
		56	=>	72
		57	=>	100
		58	=>	48
		59	=>	53
		61	=>	117
		76	=>	142
		93	=>	92
		105	=>	17
		109	=>	16
		110	=>	78
		111	=>	54
		112	=>	8
		113	=>	69
		114	=>	40
		118	=>	84
		119	=>	79
		120	=>	57
		121	=>	67
		122	=>	23
		123	=>	73
		128	=>	12
		130	=>	65
		132	=>	89
		137	=>	122
		142	=>	124
		147	=>	4
		152	=>	29
		157	=>	64
		162	=>	87
		167	=>	3
		172	=>	104
		177	=>	60
		182	=>	114
		187	=>	21
		192	=>	56
		197	=>	98
		202	=>	32
		207	=>	105
		212	=>	128
		217	=>	51
		222	=>	25
		227	=>	101
		232	=>	2
		237	=>	96
		242	=>	77
		247	=>	123
		252	=>	108
		257	=>	52
		262	=>	28
		267	=>	22
		268	=>	27
		272	=>	70
		273	=>	133
		277	=>	103
		278	=>	37
		282	=>	15
		283	=>	125
		287	=>	97
		288	=>	130
		292	=>	13
		293	=>	86
		297	=>	88
		298	=>	45
		302	=>	41
		303	=>	102
		307	=>	62
		308	=>	74
		312	=>	83
		313	=>	47
		317	=>	127
		318	=>	90
		322	=>	80
		323	=>	134
		327	=>	120
		328	=>	61
		332	=>	116
		333	=>	138
		337	=>	110
		338	=>	19
		342	=>	6
		343	=>	39
		347	=>	141
		348	=>	10
		352	=>	5
		353	=>	68
		357	=>	140
		358	=>	55
		362	=>	137
		363	=>	58
		367	=>	59
		368	=>	35
		372	=>	94
		373	=>	82
		377	=>	24
		378	=>	143
		382	=>	11
		383	=>	26
		387	=>	109
		388	=>	93

Class: surge.server.SuperSampler$1	NameNotChanged
	Source: "SuperSampler.java"
	FieldsOf: surge.server.SuperSampler$1
		final synthetic surge.server.SuperSampler this$0	NameNotChanged
	MethodsOf: surge.server.SuperSampler$1
		public void updated(int, int, int, int, int, int, int) 	NameNotChanged
	LineNumbersOf: surge.server.SuperSampler$1
		1	=>	4
		61	=>	6
		66	=>	3
		67	=>	9
		68	=>	1
		69	=>	8
		70	=>	10
		71	=>	2
		72	=>	7
		73	=>	5

Class: surge.server.SuperSampler$2	NameNotChanged
	Source: "SuperSampler.java"
	FieldsOf: surge.server.SuperSampler$2
		final synthetic surge.server.SuperSampler this$0	NameNotChanged
	MethodsOf: surge.server.SuperSampler$2
		public void onTicked() 	NameNotChanged
	LineNumbersOf: surge.server.SuperSampler$2
		1	=>	10
		76	=>	2
		81	=>	1
		82	=>	8
		83	=>	5
		84	=>	3
		85	=>	6
		86	=>	7
		87	=>	11
		88	=>	9
		89	=>	12
		90	=>	4

Class: surge.server.SuperSampler$3	NameNotChanged
	Source: "SuperSampler.java"
	FieldsOf: surge.server.SuperSampler$3
		final synthetic surge.server.SuperSampler this$0	NameNotChanged
	MethodsOf: surge.server.SuperSampler$3
		public void onAllocationSet() 	NameNotChanged
	LineNumbersOf: surge.server.SuperSampler$3
		1	=>	2
		93	=>	7
		98	=>	8
		99	=>	6
		100	=>	4
		101	=>	1
		102	=>	3
		103	=>	5

Class: public abstract surge.server.TPSMonitor	NameNotChanged
	Source: "TPSMonitor.java"
	FieldsOf: surge.server.TPSMonitor
		private double actualTickTimeMS	=>	g
		private java.lang.Thread$State lastState	=>	f
		private long lastTick	=>	i
		private double ltt	=>	h
		private double rawTicksPerSecond	=>	b
		private surge.math.Profiler tickProfiler	=>	c
		private double tickTimeMS	=>	a
		private surge.math.Profiler tickTimeProfiler	=>	d
		private boolean ticked	=>	e
	MethodsOf: surge.server.TPSMonitor
		public double getActualTickTimeMS() 	NameNotChanged
		public java.lang.Thread$State getLastState() 	NameNotChanged
		public double getRawTicksPerSecond() 	NameNotChanged
		public surge.math.Profiler getTickProfiler() 	NameNotChanged
		public double getTickTimeMS() 	NameNotChanged
		public surge.math.Profiler getTickTimeProfiler() 	NameNotChanged
		public boolean isTicked() 	NameNotChanged
		public void markTick() 	NameNotChanged
		public abstract void onTicked() 	NameNotChanged
		private void processState(java.lang.Thread$State) 	=>	a
		public void run() 	NameNotChanged
	LineNumbersOf: surge.server.TPSMonitor
		19	=>	54
		21	=>	31
		22	=>	41
		23	=>	10
		24	=>	55
		25	=>	14
		26	=>	18
		27	=>	26
		28	=>	56
		29	=>	59
		30	=>	46
		31	=>	4
		32	=>	37
		39	=>	19 and 44
		41	=>	50
		43	=>	24
		51	=>	36
		53	=>	57
		54	=>	13
		55	=>	20
		56	=>	5
		57	=>	29
		58	=>	17
		59	=>	21
		60	=>	15
		61	=>	49
		62	=>	27
		63	=>	38
		64	=>	52
		66	=>	40
		68	=>	3
		69	=>	8
		70	=>	45
		75	=>	2
		76	=>	39
		78	=>	34
		80	=>	53
		83	=>	7
		87	=>	9
		89	=>	51
		92	=>	43
		94	=>	62
		97	=>	60
		99	=>	42
		102	=>	23
		104	=>	11
		105	=>	33
		106	=>	48
		109	=>	22
		111	=>	47
		114	=>	35
		115	=>	1
		119	=>	16
		124	=>	61
		129	=>	32
		134	=>	30
		139	=>	6
		140	=>	28
		144	=>	12
		149	=>	58
		154	=>	25

Class: public abstract surge.server.WorldMonitor	NameNotChanged
	Source: "WorldMonitor.java"
	FieldsOf: surge.server.WorldMonitor
		private boolean chunksChanged	=>	a
		private int chunksLoaded	=>	l
		private int chunksUnloaded	=>	m
		private boolean dropChanged	=>	b
		private boolean livingChanged	=>	d
		private long ms	=>	n
		private boolean tileChanged	=>	c
		private boolean totalChanged	=>	e
		private int totalChunks	=>	g
		private int totalDrops	=>	h
		private int totalEntities	=>	k
		private int totalLiving	=>	j
		private int totalTiles	=>	i
		private boolean updated	=>	f
	MethodsOf: surge.server.WorldMonitor
		private void doUpdate() 	=>	a
		public void on(org.bukkit.event.block.BlockBreakEvent) 	NameNotChanged
		public void on(org.bukkit.event.block.BlockPlaceEvent) 	NameNotChanged
		public void on(org.bukkit.event.entity.EntityDeathEvent) 	NameNotChanged
		public void on(org.bukkit.event.entity.EntityPickupItemEvent) 	NameNotChanged
		public void on(org.bukkit.event.entity.EntitySpawnEvent) 	NameNotChanged
		public void on(org.bukkit.event.player.PlayerDropItemEvent) 	NameNotChanged
		public void on(org.bukkit.event.player.PlayerPickupItemEvent) 	NameNotChanged
		public void on(org.bukkit.event.world.ChunkLoadEvent) 	NameNotChanged
		public void on(org.bukkit.event.world.ChunkUnloadEvent) 	NameNotChanged
		public void run() 	NameNotChanged
		private void sample() 	=>	b
		private void sampleChunkCount() 	=>	g
		private void sampleDropCount() 	=>	f
		private void sampleLivingCount() 	=>	d
		private void sampleTileCount() 	=>	e
		private void sampleTotalCount() 	=>	c
		public abstract void updated(int, int, int, int, int, int, int) 	NameNotChanged
	LineNumbersOf: surge.server.WorldMonitor
		25	=>	58
		26	=>	13
		27	=>	8
		28	=>	39
		29	=>	60
		30	=>	97
		31	=>	44
		32	=>	22
		33	=>	99
		34	=>	63
		35	=>	15
		36	=>	96
		37	=>	21
		38	=>	51
		41	=>	46
		42	=>	6
		43	=>	10
		44	=>	31
		49	=>	36
		53	=>	30
		54	=>	103
		57	=>	49
		60	=>	43 and 88
		63	=>	101
		64	=>	45
		71	=>	70
		72	=>	29
		73	=>	80
		74	=>	16
		75	=>	32
		76	=>	9
		81	=>	69
		82	=>	20
		83	=>	87
		84	=>	66
		85	=>	61
		86	=>	85
		91	=>	48
		92	=>	57
		97	=>	54
		98	=>	68
		103	=>	14
		104	=>	71
		109	=>	33
		110	=>	18
		115	=>	26
		116	=>	83
		121	=>	23
		122	=>	102
		127	=>	35
		128	=>	3
		132	=>	42
		133	=>	91
		137	=>	100
		139	=>	53
		142	=>	19
		144	=>	25
		145	=>	108
		146	=>	81
		149	=>	98
		151	=>	41
		152	=>	82
		153	=>	79
		156	=>	17
		158	=>	73
		159	=>	40
		160	=>	92
		163	=>	107
		165	=>	72
		166	=>	5
		167	=>	2
		170	=>	47
		172	=>	110
		173	=>	12
		174	=>	56
		177	=>	67
		179	=>	109
		181	=>	65
		183	=>	62
		184	=>	34
		185	=>	94
		188	=>	95
		192	=>	37
		194	=>	105
		196	=>	93
		197	=>	89
		198	=>	38
		202	=>	84
		204	=>	106
		206	=>	52
		207	=>	7
		208	=>	86
		212	=>	76
		214	=>	1
		216	=>	50 and 90
		218	=>	28
		220	=>	77
		221	=>	78
		225	=>	24
		227	=>	4
		229	=>	27
		230	=>	55
		231	=>	64
		235	=>	104
		237	=>	75
		239	=>	74
		240	=>	59
		241	=>	11

Class: public surge.text.PhantomSpinner	NameNotChanged
	Source: "PhantomSpinner.java"
	FieldsOf: surge.text.PhantomSpinner
		private surge.text.ProgressSpinner c	=>	b
		private surge.text.ProgressSpinner s	=>	a
	MethodsOf: surge.text.PhantomSpinner
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.text.PhantomSpinner
		15	=>	2
		17	=>	1
		18	=>	5
		19	=>	3
		24	=>	4

Class: public surge.text.ProgressSpinner	NameNotChanged
	Source: "ProgressSpinner.java"
	FieldsOf: surge.text.ProgressSpinner
		public static final surge.text.ProgressSpinner CIRCLES	NameNotChanged
		public static final surge.text.ProgressSpinner DEFAULT	NameNotChanged
		public static final surge.text.ProgressSpinner MERGERS	NameNotChanged
		public static final surge.text.ProgressSpinner NETWORK	NameNotChanged
		public static final surge.text.ProgressSpinner RANDOMS	NameNotChanged
		public static boolean a	=>	c
		private java.lang.String[] chars	=>	a
		private int index	=>	b
	MethodsOf: surge.text.ProgressSpinner
		public java.lang.String[] getChars() 	NameNotChanged
		public int getIndex() 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.text.ProgressSpinner
		25	=>	10
		27	=>	8
		28	=>	3
		29	=>	4
		36	=>	5
		37	=>	14
		45	=>	11
		47	=>	13
		48	=>	12
		52	=>	9
		55	=>	7
		60	=>	17
		65	=>	18
		70	=>	2
		71	=>	15
		72	=>	6
		73	=>	1
		74	=>	16
		75	=>	19

Class: public abstract surge.util.Adapter	NameNotChanged
	Source: "Adapter.java"
	FieldsOf: surge.util.Adapter
	MethodsOf: surge.util.Adapter
		public abstract java.lang.Object adapt(java.lang.Object) 	NameNotChanged
		public abstract java.lang.Object onAdapt(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.util.Adapter

Class: public abstract annotation surge.util.Anchor	NameNotChanged
	Source: "Anchor.java"
	FieldsOf: surge.util.Anchor
	MethodsOf: surge.util.Anchor
		public abstract int value() 	NameNotChanged
	LineNumbersOf: surge.util.Anchor

Class: public surge.util.Area	NameNotChanged
	Source: "Area.java"
	FieldsOf: surge.util.Area
		private org.bukkit.Location location	=>	a
		private java.lang.Double radius	=>	b
	MethodsOf: surge.util.Area
		public java.lang.Double distance(org.bukkit.Location) 	NameNotChanged
		public org.bukkit.Location getLocation() 	NameNotChanged
		public org.bukkit.entity.Entity[] getNearbyEntities() 	NameNotChanged
		public org.bukkit.entity.Entity[] getNearbyEntities(java.lang.Class) 	NameNotChanged
		public org.bukkit.entity.Entity[] getNearbyEntities(org.bukkit.entity.EntityType) 	NameNotChanged
		public org.bukkit.entity.Player[] getNearbyPlayers() 	NameNotChanged
		public java.lang.Double getRadius() 	NameNotChanged
		public boolean hasEntities() 	NameNotChanged
		public boolean isWithin(org.bukkit.Location) 	NameNotChanged
		public org.bukkit.Location random() 	NameNotChanged
		public void setLocation(org.bukkit.Location) 	NameNotChanged
		public void setRadius(java.lang.Double) 	NameNotChanged
		public java.lang.Double slowDistance(org.bukkit.Location) 	NameNotChanged
		public surge.util.Cuboid toCuboid() 	NameNotChanged
		public static boolean within(org.bukkit.Location, org.bukkit.Location, double) 	NameNotChanged
	LineNumbersOf: surge.util.Area
		26	=>	59
		39	=>	46
		40	=>	31
		41	=>	55
		42	=>	19
		46	=>	24
		59	=>	12
		60	=>	25
		61	=>	9
		62	=>	38
		76	=>	23
		77	=>	58
		79	=>	49 and 50
		81	=>	44
		84	=>	43
		98	=>	27
		110	=>	37
		120	=>	21
		132	=>	17
		134	=>	48
		136	=>	34
		138	=>	42
		140	=>	40
		142	=>	57
		154	=>	14
		156	=>	20
		158	=>	16
		160	=>	4
		162	=>	7
		164	=>	62
		177	=>	53
		178	=>	18
		180	=>	11 and 36
		182	=>	54 and 61
		184	=>	52
		186	=>	6 and 45
		188	=>	26
		190	=>	8
		196	=>	28
		199	=>	22
		201	=>	60
		212	=>	5
		214	=>	33 and 41
		216	=>	35
		218	=>	2
		222	=>	10
		232	=>	32
		243	=>	1
		244	=>	51
		253	=>	15
		264	=>	29
		265	=>	30
		274	=>	47
		275	=>	39
		276	=>	56
		277	=>	13
		279	=>	3

Class: public final enum surge.util.Axis	NameNotChanged
	Source: "Axis.java"
	FieldsOf: surge.util.Axis
		private static final synthetic surge.util.Axis[] $VALUES	=>	d
		public static final enum surge.util.Axis X	NameNotChanged
		public static final enum surge.util.Axis Y	NameNotChanged
		public static final enum surge.util.Axis Z	NameNotChanged
		private int x	=>	a
		private int y	=>	b
		private int z	=>	c
	MethodsOf: surge.util.Axis
		public org.bukkit.util.Vector negative() 	NameNotChanged
		public org.bukkit.util.Vector positive() 	NameNotChanged
		public static surge.util.Axis valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.Axis[] values() 	NameNotChanged
	LineNumbersOf: surge.util.Axis
		5	=>	1, 2 and 5
		7	=>	11
		8	=>	8
		9	=>	6
		16	=>	12
		17	=>	10
		18	=>	7
		19	=>	4
		20	=>	13
		24	=>	3
		29	=>	9

Class: public final enum surge.util.BlastResistance	NameNotChanged
	Source: "BlastResistance.java"
	FieldsOf: surge.util.BlastResistance
		private static final synthetic surge.util.BlastResistance[] $VALUES	=>	b
		public static final enum surge.util.BlastResistance ACACIA_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance ACACIA_FENCE	NameNotChanged
		public static final enum surge.util.BlastResistance ACACIA_FENCE_GATE	NameNotChanged
		public static final enum surge.util.BlastResistance ACACIA_WOOD_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance ACTIVATOR_RAIL	NameNotChanged
		public static final enum surge.util.BlastResistance ANVIL	NameNotChanged
		public static final enum surge.util.BlastResistance BANNER	NameNotChanged
		public static final enum surge.util.BlastResistance BARRIER	NameNotChanged
		public static final enum surge.util.BlastResistance BEACON	NameNotChanged
		public static final enum surge.util.BlastResistance BEDROCK	NameNotChanged
		public static final enum surge.util.BlastResistance BED_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance BIRCH_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance BIRCH_FENCE	NameNotChanged
		public static final enum surge.util.BlastResistance BIRCH_FENCE_GATE	NameNotChanged
		public static final enum surge.util.BlastResistance BIRCH_WOOD_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance BOOKSHELF	NameNotChanged
		public static final enum surge.util.BlastResistance BREWING_STAND	NameNotChanged
		public static final enum surge.util.BlastResistance BRICK	NameNotChanged
		public static final enum surge.util.BlastResistance BRICK_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance BURNING_FURNACE	NameNotChanged
		public static final enum surge.util.BlastResistance CACTUS	NameNotChanged
		public static final enum surge.util.BlastResistance CAKE_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance CAULDRON	NameNotChanged
		public static final enum surge.util.BlastResistance CHEST	NameNotChanged
		public static final enum surge.util.BlastResistance CLAY	NameNotChanged
		public static final enum surge.util.BlastResistance COAL_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance COAL_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance COBBLESTONE_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance COCOA	NameNotChanged
		public static final enum surge.util.BlastResistance COMMAND	NameNotChanged
		public static final enum surge.util.BlastResistance DARK_OAK_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance DARK_OAK_FENCE	NameNotChanged
		public static final enum surge.util.BlastResistance DARK_OAK_FENCE_GATE	NameNotChanged
		public static final enum surge.util.BlastResistance DARK_OAK_WOOD_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance DAYLIGHT_DETECTOR	NameNotChanged
		public static final enum surge.util.BlastResistance DAYLIGHT_DETECTOR_INVERTED	NameNotChanged
		public static final enum surge.util.BlastResistance DETECTOR_RAIL	NameNotChanged
		public static final enum surge.util.BlastResistance DIAMOND_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance DIAMOND_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance DIRT	NameNotChanged
		public static final enum surge.util.BlastResistance DISPENSER	NameNotChanged
		public static final enum surge.util.BlastResistance DOUBLE_STONE_SLAB2	NameNotChanged
		public static final enum surge.util.BlastResistance DRAGON_EGG	NameNotChanged
		public static final enum surge.util.BlastResistance DROPPER	NameNotChanged
		public static final enum surge.util.BlastResistance EMERALD_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance EMERALD_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance ENCHANTMENT_TABLE	NameNotChanged
		public static final enum surge.util.BlastResistance ENDER_CHEST	NameNotChanged
		public static final enum surge.util.BlastResistance ENDER_PORTAL	NameNotChanged
		public static final enum surge.util.BlastResistance ENDER_PORTAL_FRAME	NameNotChanged
		public static final enum surge.util.BlastResistance ENDER_STONE	NameNotChanged
		public static final enum surge.util.BlastResistance FENCE	NameNotChanged
		public static final enum surge.util.BlastResistance FENCE_GATE	NameNotChanged
		public static final enum surge.util.BlastResistance FURNACE	NameNotChanged
		public static final enum surge.util.BlastResistance GLASS	NameNotChanged
		public static final enum surge.util.BlastResistance GLOWSTONE	NameNotChanged
		public static final enum surge.util.BlastResistance GOLD_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance GOLD_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance GOLD_PLATE	NameNotChanged
		public static final enum surge.util.BlastResistance GRASS	NameNotChanged
		public static final enum surge.util.BlastResistance GRAVEL	NameNotChanged
		public static final enum surge.util.BlastResistance HARD_CLAY	NameNotChanged
		public static final enum surge.util.BlastResistance HOPPER	NameNotChanged
		public static final enum surge.util.BlastResistance HUGE_MUSHROOM_1	NameNotChanged
		public static final enum surge.util.BlastResistance HUGE_MUSHROOM_2	NameNotChanged
		public static final enum surge.util.BlastResistance ICE	NameNotChanged
		public static final enum surge.util.BlastResistance IRON_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance IRON_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance IRON_DOOR_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance IRON_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance IRON_PLATE	NameNotChanged
		public static final enum surge.util.BlastResistance IRON_TRAPDOOR	NameNotChanged
		public static final enum surge.util.BlastResistance JACK_O_LANTERN	NameNotChanged
		public static final enum surge.util.BlastResistance JUNGLE_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance JUNGLE_FENCE	NameNotChanged
		public static final enum surge.util.BlastResistance JUNGLE_FENCE_GATE	NameNotChanged
		public static final enum surge.util.BlastResistance JUNGLE_WOOD_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance LADDER	NameNotChanged
		public static final enum surge.util.BlastResistance LAPIS_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance LAPIS_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance LAVA	NameNotChanged
		public static final enum surge.util.BlastResistance LEAVES	NameNotChanged
		public static final enum surge.util.BlastResistance LEAVES_2	NameNotChanged
		public static final enum surge.util.BlastResistance LEVER	NameNotChanged
		public static final enum surge.util.BlastResistance LOG	NameNotChanged
		public static final enum surge.util.BlastResistance LOG_2	NameNotChanged
		public static final enum surge.util.BlastResistance MELON_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance MOB_SPAWNER	NameNotChanged
		public static final enum surge.util.BlastResistance MONSTER_EGG	NameNotChanged
		public static final enum surge.util.BlastResistance MYCEL	NameNotChanged
		public static final enum surge.util.BlastResistance NETHERRACK	NameNotChanged
		public static final enum surge.util.BlastResistance NETHER_BRICK_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance NOTE_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance OBSIDIAN	NameNotChanged
		public static final enum surge.util.BlastResistance PACKED_ICE	NameNotChanged
		public static final enum surge.util.BlastResistance PISTON_BASE	NameNotChanged
		public static final enum surge.util.BlastResistance PISTON_EXTENSION	NameNotChanged
		public static final enum surge.util.BlastResistance PISTON_MOVING_PIECE	NameNotChanged
		public static final enum surge.util.BlastResistance PISTON_STICKY_BASE	NameNotChanged
		public static final enum surge.util.BlastResistance POWERED_RAIL	NameNotChanged
		public static final enum surge.util.BlastResistance PUMPKIN	NameNotChanged
		public static final enum surge.util.BlastResistance QUARTZ_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance QUARTZ_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance QUARTZ_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance RAILS	NameNotChanged
		public static final enum surge.util.BlastResistance REDSTONE_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance REDSTONE_LAMP_OFF	NameNotChanged
		public static final enum surge.util.BlastResistance REDSTONE_LAMP_ON	NameNotChanged
		public static final enum surge.util.BlastResistance REDSTONE_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance RED_SANDSTONE	NameNotChanged
		public static final enum surge.util.BlastResistance RED_SANDSTONE_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance SAND	NameNotChanged
		public static final enum surge.util.BlastResistance SANDSTONE	NameNotChanged
		public static final enum surge.util.BlastResistance SANDSTONE_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance SEA_LANTERN	NameNotChanged
		public static final enum surge.util.BlastResistance SIGN	NameNotChanged
		public static final enum surge.util.BlastResistance SIGN_POST	NameNotChanged
		public static final enum surge.util.BlastResistance SKULL	NameNotChanged
		public static final enum surge.util.BlastResistance SMOOTH_BRICK	NameNotChanged
		public static final enum surge.util.BlastResistance SMOOTH_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance SNOW	NameNotChanged
		public static final enum surge.util.BlastResistance SOUL_SAND	NameNotChanged
		public static final enum surge.util.BlastResistance SPONGE	NameNotChanged
		public static final enum surge.util.BlastResistance SPRUCE_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance SPRUCE_FENCE	NameNotChanged
		public static final enum surge.util.BlastResistance SPRUCE_FENCE_GATE	NameNotChanged
		public static final enum surge.util.BlastResistance SPRUCE_WOOD_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance STAINED_GLASS	NameNotChanged
		public static final enum surge.util.BlastResistance STAINED_GLASS_PANE	NameNotChanged
		public static final enum surge.util.BlastResistance STANDING_BANNER	NameNotChanged
		public static final enum surge.util.BlastResistance STATIONARY_WATER	NameNotChanged
		public static final enum surge.util.BlastResistance STONE	NameNotChanged
		public static final enum surge.util.BlastResistance STONE_BUTTON	NameNotChanged
		public static final enum surge.util.BlastResistance STONE_PLATE	NameNotChanged
		public static final enum surge.util.BlastResistance STONE_SLAB2	NameNotChanged
		public static final enum surge.util.BlastResistance THIN_GLASS	NameNotChanged
		public static final enum surge.util.BlastResistance TRAPPED_CHEST	NameNotChanged
		public static final enum surge.util.BlastResistance TRAP_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance WALL_BANNER	NameNotChanged
		public static final enum surge.util.BlastResistance WALL_SIGN	NameNotChanged
		public static final enum surge.util.BlastResistance WATER	NameNotChanged
		public static final enum surge.util.BlastResistance WEB	NameNotChanged
		public static final enum surge.util.BlastResistance WOOD	NameNotChanged
		public static final enum surge.util.BlastResistance WOOD_BUTTON	NameNotChanged
		public static final enum surge.util.BlastResistance WOOD_PLATE	NameNotChanged
		public static final enum surge.util.BlastResistance WOOD_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance WOOL	NameNotChanged
		public static final enum surge.util.BlastResistance WORKBENCH	NameNotChanged
		private int br	=>	a
	MethodsOf: surge.util.BlastResistance
		public static int get(org.bukkit.Material) 	NameNotChanged
		public int getBlastResistance() 	NameNotChanged
		public static surge.util.BlastResistance valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.BlastResistance[] values() 	NameNotChanged
	LineNumbersOf: surge.util.BlastResistance
		10	=>	69, 125 and 137
		12	=>	28
		13	=>	108
		14	=>	136
		15	=>	46
		16	=>	21
		17	=>	120
		18	=>	117
		19	=>	78
		20	=>	51
		21	=>	132
		22	=>	39
		23	=>	24
		24	=>	43
		25	=>	84
		26	=>	123
		27	=>	41
		28	=>	62
		29	=>	17
		30	=>	9
		31	=>	22
		32	=>	79
		33	=>	113
		34	=>	139
		35	=>	77
		36	=>	131
		37	=>	40
		38	=>	119
		39	=>	82
		40	=>	18
		41	=>	150
		42	=>	8
		43	=>	106
		44	=>	2
		45	=>	128
		46	=>	45
		47	=>	122
		48	=>	145
		49	=>	42
		50	=>	142
		51	=>	134
		52	=>	140
		53	=>	101
		54	=>	98
		55	=>	14
		56	=>	93
		57	=>	73
		58	=>	34
		59	=>	74
		60	=>	47
		61	=>	10
		62	=>	36
		63	=>	61
		64	=>	126
		65	=>	5
		66	=>	48
		67	=>	100
		68	=>	68
		69	=>	92
		70	=>	12
		71	=>	6
		72	=>	65
		73	=>	52
		74	=>	29
		75	=>	67
		76	=>	81
		77	=>	156
		78	=>	56
		79	=>	71
		80	=>	44
		81	=>	76
		82	=>	91
		83	=>	151
		84	=>	135
		85	=>	102
		86	=>	116
		87	=>	99
		88	=>	88
		89	=>	86
		90	=>	66
		91	=>	7
		92	=>	55
		93	=>	114
		94	=>	37
		95	=>	38
		96	=>	87
		97	=>	13
		98	=>	49
		99	=>	96
		100	=>	90
		101	=>	155
		102	=>	112
		103	=>	3
		104	=>	124
		105	=>	111
		106	=>	64
		107	=>	1
		108	=>	149
		109	=>	50
		110	=>	30
		111	=>	89
		112	=>	107
		113	=>	143
		114	=>	11
		115	=>	103
		116	=>	53
		117	=>	23
		118	=>	16
		119	=>	118
		120	=>	83
		121	=>	146
		122	=>	95
		123	=>	138
		124	=>	94
		125	=>	32
		126	=>	154
		127	=>	20
		128	=>	70
		129	=>	159
		130	=>	152
		131	=>	54
		132	=>	104
		133	=>	141
		134	=>	133
		135	=>	75
		136	=>	130
		137	=>	25
		138	=>	153
		139	=>	33
		140	=>	15
		141	=>	147
		142	=>	115
		143	=>	158
		144	=>	63
		145	=>	109
		146	=>	129
		147	=>	160
		148	=>	35
		149	=>	121
		150	=>	4
		151	=>	57
		152	=>	72
		153	=>	31
		154	=>	58
		155	=>	110
		156	=>	85
		157	=>	97
		158	=>	148
		159	=>	127
		164	=>	19
		165	=>	26
		166	=>	80
		170	=>	157
		175	=>	59
		177	=>	144
		182	=>	27
		185	=>	105
		190	=>	60

Class: public surge.util.Blocks	NameNotChanged
	Source: "Blocks.java"
	FieldsOf: surge.util.Blocks
	MethodsOf: surge.util.Blocks
		public static org.bukkit.Location getCenter(org.bukkit.block.Block) 	NameNotChanged
	LineNumbersOf: surge.util.Blocks
		11	=>	1
		22	=>	2

Class: public enum surge.util.C	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C
		private static synthetic int[] $SWITCH_TABLE$surge$util$C	=>	k
		public static final enum surge.util.C AQUA	NameNotChanged
		public static final enum surge.util.C BLACK	NameNotChanged
		public static final enum surge.util.C BLUE	NameNotChanged
		public static final enum surge.util.C BOLD	NameNotChanged
		private static final java.util.Map BY_CHAR	=>	g
		private static final java.util.Map BY_ID	=>	f
		public static final char COLOR_CHAR	NameNotChanged
		public static final enum surge.util.C DARK_AQUA	NameNotChanged
		public static final enum surge.util.C DARK_BLUE	NameNotChanged
		public static final enum surge.util.C DARK_GRAY	NameNotChanged
		public static final enum surge.util.C DARK_GREEN	NameNotChanged
		public static final enum surge.util.C DARK_PURPLE	NameNotChanged
		public static final enum surge.util.C DARK_RED	NameNotChanged
		private static final synthetic surge.util.C[] ENUM$VALUES	=>	l
		public static final enum surge.util.C GOLD	NameNotChanged
		public static final enum surge.util.C GRAY	NameNotChanged
		public static final enum surge.util.C GREEN	NameNotChanged
		public static final enum surge.util.C ITALIC	NameNotChanged
		public static final enum surge.util.C LIGHT_PURPLE	NameNotChanged
		public static final enum surge.util.C MAGIC	NameNotChanged
		public static final enum surge.util.C RED	NameNotChanged
		public static final enum surge.util.C RESET	NameNotChanged
		public static final enum surge.util.C STRIKETHROUGH	NameNotChanged
		private static final java.util.regex.Pattern STRIP_COLOR_PATTERN	=>	a
		public static final enum surge.util.C UNDERLINE	NameNotChanged
		public static final enum surge.util.C WHITE	NameNotChanged
		public static final enum surge.util.C YELLOW	NameNotChanged
		public static int a	=>	m
		private static final java.util.Map chatHexMap	=>	i
		private final char code	=>	c
		private static final java.util.Map dyeChatMap	=>	h
		private static final java.util.Map dyeHexMap	=>	j
		private final int intCode	=>	b
		private final boolean isFormat	=>	d
		private final java.lang.String toString	=>	e
	MethodsOf: surge.util.C
		static synthetic int[] $SWITCH_TABLE$surge$util$C() 	=>	a
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
		public org.bukkit.ChatColor chatColor() 	NameNotChanged
		public static org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) 	NameNotChanged
		public static java.lang.String chatToHex(org.bukkit.ChatColor) 	NameNotChanged
		public org.bukkit.DyeColor dye() 	NameNotChanged
		public static surge.util.C dyeToChat(org.bukkit.DyeColor) 	NameNotChanged
		public static java.lang.String dyeToHex(org.bukkit.DyeColor) 	NameNotChanged
		public static surge.util.C fromItemMeta(byte) 	NameNotChanged
		public static java.lang.String generateColorTable() 	NameNotChanged
		public static surge.util.C getByChar(char) 	NameNotChanged
		public static surge.util.C getByChar(java.lang.String) 	NameNotChanged
		public char getChar() 	NameNotChanged
		public byte getItemMeta() 	NameNotChanged
		public static java.lang.String getLastColors(java.lang.String) 	NameNotChanged
		public java.lang.String hex() 	NameNotChanged
		public static org.bukkit.Color hexToColor(java.lang.String) 	NameNotChanged
		public boolean isColor() 	NameNotChanged
		public boolean isFormat() 	NameNotChanged
		public static org.bukkit.Color rgbToColor(java.lang.String) 	NameNotChanged
		public static java.lang.String stripColor(java.lang.String) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public static java.lang.String translateAlternateColorCodes(char, java.lang.String) 	NameNotChanged
		public static surge.util.C valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.C[] values() 	NameNotChanged
	LineNumbersOf: surge.util.C
		1	=>	56 and 114
		17	=>	148
		19	=>	139
		22	=>	63
		30	=>	188
		33	=>	177
		41	=>	189
		44	=>	162
		52	=>	41
		55	=>	222
		63	=>	51
		66	=>	213
		74	=>	113
		77	=>	211
		85	=>	199
		88	=>	195
		96	=>	32
		99	=>	175
		107	=>	96
		110	=>	166
		118	=>	209
		121	=>	70
		129	=>	28
		132	=>	121
		140	=>	225
		143	=>	193
		151	=>	6
		154	=>	159
		162	=>	23
		165	=>	30
		173	=>	99
		176	=>	205
		184	=>	176
		187	=>	17
		195	=>	18
		198	=>	73
		206	=>	207
		209	=>	171
		217	=>	186
		220	=>	141
		228	=>	154
		231	=>	81
		239	=>	198
		242	=>	218
		251	=>	84
		254	=>	174
		268	=>	89
		274	=>	8
		275	=>	133
		276	=>	136
		277	=>	178
		278	=>	12
		282	=>	129
		283	=>	229
		284	=>	184
		285	=>	37
		286	=>	168
		287	=>	204
		288	=>	116
		289	=>	65
		290	=>	157
		291	=>	144
		292	=>	1
		293	=>	21
		294	=>	152
		295	=>	115
		296	=>	38
		297	=>	124
		298	=>	202
		299	=>	214
		300	=>	201
		301	=>	54
		302	=>	82
		303	=>	49
		304	=>	103
		305	=>	33
		306	=>	43
		307	=>	22
		308	=>	64
		309	=>	200
		310	=>	45
		311	=>	7
		312	=>	14
		313	=>	85
		314	=>	156
		315	=>	101
		316	=>	87
		317	=>	128
		318	=>	102
		319	=>	50
		320	=>	206
		321	=>	29
		322	=>	220
		323	=>	4
		324	=>	104
		325	=>	130
		326	=>	42
		327	=>	72
		328	=>	118
		329	=>	98
		332	=>	125
		334	=>	169
		335	=>	117
		337	=>	88 and 219
		339	=>	119
		340	=>	217
		341	=>	158
		342	=>	31
		343	=>	80
		347	=>	77
		357	=>	127
		363	=>	143
		373	=>	185
		378	=>	190
		388	=>	36
		398	=>	93
		413	=>	226
		416	=>	92
		418	=>	228
		434	=>	100
		435	=>	95
		437	=>	25
		440	=>	24
		442	=>	58
		455	=>	91
		457	=>	52
		460	=>	216
		472	=>	40
		474	=>	46
		477	=>	47
		482	=>	111 and 112
		484	=>	122
		486	=>	60
		490	=>	71
		496	=>	173
		498	=>	192
		501	=>	5
		506	=>	109
		508	=>	181
		511	=>	15
		516	=>	44
		518	=>	179
		521	=>	76
		523	=>	9
		526	=>	161
		528	=>	57
		530	=>	48
		532	=>	120 and 223
		534	=>	11
		537	=>	183
		542	=>	138
		543	=>	66
		545	=>	106
		548	=>	212
		550	=>	164 and 221
		552	=>	55
		555	=>	187
		560	=>	27
		562	=>	142
		564	=>	67 and 180
		566	=>	107
		569	=>	79
		570	=>	78
		571	=>	132 and 170
		573	=>	62
		576	=>	134
		578	=>	150
		588	=>	90
		605	=>	19
		606	=>	131 and 146
		608	=>	94
		610	=>	74
		611	=>	105
		614	=>	69
		619	=>	61 and 145
		621	=>	163
		623	=>	20
		627	=>	97
		632	=>	227
		635	=>	86
		637	=>	153
		639	=>	59
		641	=>	75
		643	=>	126
		645	=>	53
		647	=>	191
		649	=>	155
		651	=>	208
		653	=>	140
		655	=>	83
		657	=>	108
		659	=>	210
		661	=>	203
		663	=>	224
		665	=>	137
		667	=>	3
		669	=>	39
		671	=>	13
		673	=>	68
		675	=>	196
		677	=>	26
		679	=>	215
		692	=>	149
		693	=>	197
		696	=>	160 and 182
		698	=>	10
		699	=>	194
		701	=>	34
		702	=>	172
		704	=>	35
		706	=>	110
		709	=>	147
		711	=>	165
		717	=>	167
		722	=>	16 and 151
		724	=>	135
		725	=>	123
		727	=>	2

Class: enum surge.util.C$1	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$1
	MethodsOf: surge.util.C$1
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$1
		1	=>	2
		23	=>	1
		27	=>	3

Class: enum surge.util.C$10	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$10
	MethodsOf: surge.util.C$10
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$10
		1	=>	1
		122	=>	2
		126	=>	3

Class: enum surge.util.C$11	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$11
	MethodsOf: surge.util.C$11
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$11
		1	=>	1
		133	=>	2
		137	=>	3

Class: enum surge.util.C$12	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$12
	MethodsOf: surge.util.C$12
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$12
		1	=>	1
		144	=>	3
		148	=>	2

Class: enum surge.util.C$13	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$13
	MethodsOf: surge.util.C$13
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$13
		1	=>	3
		155	=>	1
		159	=>	2

Class: enum surge.util.C$14	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$14
	MethodsOf: surge.util.C$14
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$14
		1	=>	2
		166	=>	1
		170	=>	3

Class: enum surge.util.C$15	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$15
	MethodsOf: surge.util.C$15
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$15
		1	=>	2
		177	=>	1
		181	=>	3

Class: enum surge.util.C$16	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$16
	MethodsOf: surge.util.C$16
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$16
		1	=>	2
		188	=>	1
		192	=>	3

Class: enum surge.util.C$17	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$17
	MethodsOf: surge.util.C$17
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$17
		1	=>	2
		199	=>	1
		203	=>	3

Class: enum surge.util.C$18	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$18
	MethodsOf: surge.util.C$18
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$18
		1	=>	1
		210	=>	3
		214	=>	2

Class: enum surge.util.C$19	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$19
	MethodsOf: surge.util.C$19
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$19
		1	=>	2
		221	=>	3
		225	=>	1

Class: enum surge.util.C$2	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$2
	MethodsOf: surge.util.C$2
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$2
		1	=>	1
		34	=>	2
		38	=>	3

Class: enum surge.util.C$20	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$20
	MethodsOf: surge.util.C$20
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$20
		1	=>	2
		232	=>	3
		236	=>	1

Class: enum surge.util.C$21	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$21
	MethodsOf: surge.util.C$21
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$21
		1	=>	2
		243	=>	3
		247	=>	1

Class: enum surge.util.C$22	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$22
	MethodsOf: surge.util.C$22
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$22
		1	=>	2
		255	=>	3
		259	=>	1

Class: enum surge.util.C$3	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$3
	MethodsOf: surge.util.C$3
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$3
		1	=>	2
		45	=>	3
		49	=>	1

Class: enum surge.util.C$4	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$4
	MethodsOf: surge.util.C$4
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$4
		1	=>	2
		56	=>	1
		60	=>	3

Class: enum surge.util.C$5	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$5
	MethodsOf: surge.util.C$5
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$5
		1	=>	1
		67	=>	3
		71	=>	2

Class: enum surge.util.C$6	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$6
	MethodsOf: surge.util.C$6
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$6
		1	=>	3
		78	=>	1
		82	=>	2

Class: enum surge.util.C$7	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$7
	MethodsOf: surge.util.C$7
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$7
		1	=>	1
		89	=>	2
		93	=>	3

Class: enum surge.util.C$8	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$8
	MethodsOf: surge.util.C$8
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$8
		1	=>	3
		100	=>	2
		104	=>	1

Class: enum surge.util.C$9	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$9
	MethodsOf: surge.util.C$9
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$9
		1	=>	2
		111	=>	1
		115	=>	3

Class: public surge.util.CDou	NameNotChanged
	Source: "CDou.java"
	FieldsOf: surge.util.CDou
		private double max	=>	b
		private double number	=>	a
	MethodsOf: surge.util.CDou
		public surge.util.CDou add(double) 	NameNotChanged
		public void circ() 	NameNotChanged
		public double get() 	NameNotChanged
		public surge.util.CDou set(double) 	NameNotChanged
		public surge.util.CDou sub(double) 	NameNotChanged
	LineNumbersOf: surge.util.CDou
		8	=>	4
		10	=>	1
		11	=>	8
		12	=>	16
		16	=>	18
		17	=>	17
		18	=>	3
		23	=>	12
		24	=>	2
		25	=>	6
		30	=>	7
		31	=>	5
		32	=>	9
		37	=>	13
		42	=>	10
		44	=>	15
		47	=>	11
		48	=>	14

Class: public surge.util.CMD	NameNotChanged
	Source: "CMD.java"
	FieldsOf: surge.util.CMD
		private java.lang.String command	=>	a
		private org.bukkit.command.CommandSender sender	=>	b
		private boolean virtual	=>	c
	MethodsOf: surge.util.CMD
		public void execute() 	NameNotChanged
		public void execute(org.bukkit.command.CommandSender) 	NameNotChanged
		public surge.util.CMD virtual() 	NameNotChanged
	LineNumbersOf: surge.util.CMD
		25	=>	9
		27	=>	7
		28	=>	4
		29	=>	16
		30	=>	11
		39	=>	14
		40	=>	17
		51	=>	1
		52	=>	5
		53	=>	10
		60	=>	2
		62	=>	12
		64	=>	3
		65	=>	18
		69	=>	13
		71	=>	15
		75	=>	8
		77	=>	6

Class: public surge.util.CNum	NameNotChanged
	Source: "CNum.java"
	FieldsOf: surge.util.CNum
		private int max	=>	b
		private int number	=>	a
	MethodsOf: surge.util.CNum
		public surge.util.CNum add(int) 	NameNotChanged
		public void circ() 	NameNotChanged
		public int get() 	NameNotChanged
		public int getMax() 	NameNotChanged
		public surge.util.CNum set(int) 	NameNotChanged
		public void setMax(int) 	NameNotChanged
		public surge.util.CNum sub(int) 	NameNotChanged
	LineNumbersOf: surge.util.CNum
		8	=>	3
		10	=>	12
		11	=>	15
		12	=>	18
		16	=>	17
		17	=>	9
		18	=>	7
		23	=>	20
		24	=>	22
		25	=>	19
		30	=>	14
		31	=>	21
		32	=>	8
		37	=>	13
		42	=>	11
		44	=>	5
		47	=>	16
		48	=>	1
		52	=>	6
		57	=>	4
		58	=>	10
		59	=>	2

Class: public abstract surge.util.Callback	NameNotChanged
	Source: "Callback.java"
	FieldsOf: surge.util.Callback
	MethodsOf: surge.util.Callback
		public abstract java.lang.Object get() 	NameNotChanged
	LineNumbersOf: surge.util.Callback

Class: public surge.util.Chunks	NameNotChanged
	Source: "Chunks.java"
	FieldsOf: surge.util.Chunks
	MethodsOf: surge.util.Chunks
		public static surge.collection.GList getLoadedChunks() 	NameNotChanged
		public static surge.collection.GList getLoadedChunks(org.bukkit.World) 	NameNotChanged
		public static surge.collection.GList getRadius(org.bukkit.Chunk, int) 	NameNotChanged
		public static boolean isLoaded(java.lang.String, int, int) 	NameNotChanged
		public static boolean isLoaded(org.bukkit.World, int, int) 	NameNotChanged
		public static void load(surge.collection.GList) 	NameNotChanged
		public static boolean unload(org.bukkit.Chunk) 	NameNotChanged
		public static boolean unload(org.bukkit.Chunk, boolean) 	NameNotChanged
		public static boolean unload(org.bukkit.Chunk, boolean, boolean) 	NameNotChanged
		public static int unload(surge.collection.GList) 	NameNotChanged
		public static int unload(surge.collection.GList, boolean) 	NameNotChanged
		public static int unload(surge.collection.GList, boolean, boolean) 	NameNotChanged
	LineNumbersOf: surge.util.Chunks
		13	=>	9
		24	=>	7
		34	=>	23
		36	=>	8 and 27
		38	=>	29
		41	=>	14
		55	=>	24
		73	=>	3
		87	=>	16
		99	=>	6
		115	=>	22
		117	=>	5 and 19
		119	=>	2
		121	=>	21
		125	=>	11
		139	=>	13
		151	=>	15
		167	=>	20
		183	=>	4 and 17
		185	=>	18
		187	=>	1
		191	=>	28
		202	=>	12 and 26
		204	=>	25
		206	=>	10

Class: public surge.util.Cuboid	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: surge.util.Cuboid
		protected final java.lang.String worldName	=>	a
		protected int x1	=>	b
		protected int x2	=>	e
		protected int y1	=>	c
		protected int y2	=>	f
		protected int z1	=>	d
		protected int z2	=>	g
	MethodsOf: surge.util.Cuboid
		public byte averageLightLevel() 	NameNotChanged
		public bridge synthetic java.lang.Object clone() 	NameNotChanged
		public surge.util.Cuboid clone() 	NameNotChanged
		public boolean contains(int, int, int) 	NameNotChanged
		public boolean contains(org.bukkit.Location) 	NameNotChanged
		public boolean contains(org.bukkit.block.Block) 	NameNotChanged
		public boolean containsOnly(org.bukkit.Material) 	NameNotChanged
		public surge.util.Cuboid contract() 	NameNotChanged
		public surge.util.Cuboid contract(surge.util.Cuboid$CuboidDirection) 	NameNotChanged
		public org.bukkit.block.Block[] corners() 	NameNotChanged
		public int depth(surge.util.Axis) 	NameNotChanged
		public boolean equals(java.lang.Object) 	NameNotChanged
		public surge.util.Cuboid expand(surge.util.Cuboid$CuboidDirection, int) 	NameNotChanged
		public void fill(int, byte) 	NameNotChanged
		public surge.util.Cuboid flatten(int) 	NameNotChanged
		public surge.util.Cuboid getBoundingCuboid(surge.util.Cuboid) 	NameNotChanged
		public org.bukkit.Location getCenter() 	NameNotChanged
		public java.util.List getChunks() 	NameNotChanged
		public surge.collection.GList getEntities() 	NameNotChanged
		public surge.util.Cuboid getFace(surge.util.Cuboid$CuboidDirection) 	NameNotChanged
		public org.bukkit.Location getLowerNE() 	NameNotChanged
		public int getLowerX() 	NameNotChanged
		public int getLowerY() 	NameNotChanged
		public int getLowerZ() 	NameNotChanged
		public surge.collection.GList getPlayers() 	NameNotChanged
		public org.bukkit.block.Block getRelativeBlock(int, int, int) 	NameNotChanged
		public org.bukkit.block.Block getRelativeBlock(org.bukkit.World, int, int, int) 	NameNotChanged
		public int getSizeX() 	NameNotChanged
		public int getSizeY() 	NameNotChanged
		public int getSizeZ() 	NameNotChanged
		public org.bukkit.Location getUpperSW() 	NameNotChanged
		public int getUpperX() 	NameNotChanged
		public int getUpperY() 	NameNotChanged
		public int getUpperZ() 	NameNotChanged
		public org.bukkit.World getWorld() 	NameNotChanged
		public boolean hasPlayers() 	NameNotChanged
		public int hashCode() 	NameNotChanged
		public surge.util.Cuboid inset(surge.util.Cuboid$CuboidDirection, int) 	NameNotChanged
		public java.util.Iterator iterator() 	NameNotChanged
		public surge.util.Cuboid outset(surge.util.Cuboid$CuboidDirection, int) 	NameNotChanged
		public java.util.Map serialize() 	NameNotChanged
		public void set(org.bukkit.Location, org.bukkit.Location) 	NameNotChanged
		public surge.util.Cuboid shift(surge.util.Cuboid$CuboidDirection, int) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public int volume() 	NameNotChanged
	LineNumbersOf: surge.util.Cuboid
		27	=>	172
		43	=>	54
		44	=>	105
		46	=>	5
		49	=>	175
		50	=>	31
		51	=>	69
		52	=>	68
		53	=>	56
		54	=>	15
		55	=>	207
		56	=>	155
		60	=>	90
		63	=>	148
		65	=>	232
		67	=>	211
		70	=>	194
		83	=>	100
		84	=>	118
		85	=>	250
		86	=>	149
		87	=>	158
		88	=>	24
		89	=>	139
		93	=>	8
		98	=>	126 and 143
		110	=>	70
		115	=>	134
		119	=>	206
		121	=>	89 and 116
		123	=>	225
		125	=>	203
		128	=>	82
		130	=>	230
		133	=>	169
		135	=>	75
		138	=>	94
		140	=>	33
		143	=>	108
		145	=>	153
		148	=>	78
		150	=>	46
		153	=>	125
		155	=>	193
		158	=>	185
		161	=>	4
		164	=>	201
		166	=>	87
		177	=>	84
		178	=>	38
		188	=>	44
		189	=>	91
		210	=>	96
		211	=>	136
		212	=>	224
		213	=>	115
		214	=>	106
		215	=>	74
		216	=>	140
		217	=>	104
		218	=>	10
		239	=>	137
		240	=>	243
		241	=>	88
		242	=>	12
		243	=>	2
		244	=>	145
		245	=>	45
		246	=>	247
		247	=>	168
		250	=>	200
		251	=>	85
		252	=>	152
		253	=>	95
		254	=>	51
		255	=>	11
		256	=>	1
		257	=>	55
		258	=>	135
		263	=>	27
		264	=>	196
		265	=>	240
		266	=>	221
		267	=>	97
		268	=>	58
		269	=>	101
		270	=>	98
		271	=>	103
		276	=>	238
		287	=>	121
		298	=>	219
		308	=>	73
		309	=>	223
		310	=>	30
		311	=>	21
		323	=>	229
		324	=>	236
		326	=>	13
		328	=>	62
		338	=>	227
		348	=>	42
		358	=>	162
		368	=>	17
		378	=>	79
		388	=>	237
		398	=>	77
		408	=>	71
		418	=>	163
		428	=>	129
		429	=>	151
		430	=>	40
		431	=>	213
		432	=>	228
		433	=>	57
		434	=>	183
		435	=>	50
		436	=>	119
		437	=>	170
		438	=>	59
		454	=>	159
		457	=>	165
		459	=>	81
		461	=>	192
		463	=>	127
		465	=>	142
		467	=>	205
		469	=>	202
		484	=>	231
		500	=>	133
		503	=>	180
		504	=>	72
		506	=>	179
		507	=>	26
		509	=>	146
		510	=>	190
		512	=>	176
		514	=>	171
		530	=>	32
		546	=>	154
		558	=>	86
		570	=>	99
		580	=>	111
		591	=>	41
		592	=>	34
		593	=>	114
		595	=>	39
		597	=>	14
		598	=>	182
		600	=>	3
		601	=>	209
		612	=>	245
		626	=>	242
		627	=>	16
		630	=>	19
		632	=>	220
		634	=>	36
		636	=>	48
		638	=>	195
		640	=>	248
		642	=>	156
		644	=>	117
		646	=>	241
		648	=>	167
		650	=>	160
		652	=>	164
		654	=>	43
		656	=>	181
		658	=>	61
		660	=>	107
		662	=>	18
		664	=>	187
		666	=>	147
		680	=>	249
		683	=>	218
		685	=>	214
		687	=>	184
		689	=>	25
		691	=>	65
		693	=>	138
		695	=>	67
		708	=>	188
		710	=>	234
		712	=>	122
		714	=>	120
		715	=>	197
		727	=>	186
		729	=>	244
		732	=>	64
		733	=>	246
		734	=>	37
		735	=>	110
		736	=>	23
		737	=>	174
		739	=>	49
		755	=>	83
		775	=>	123
		786	=>	251
		788	=>	52
		789	=>	191
		790	=>	22
		791	=>	212
		792	=>	150
		793	=>	66 and 130
		795	=>	128 and 141
		797	=>	60
		800	=>	132
		815	=>	166
		817	=>	47
		818	=>	7
		819	=>	204
		843	=>	9
		854	=>	216
		865	=>	161
		961	=>	93
		962	=>	210
		963	=>	29
		964	=>	198
		965	=>	102
		966	=>	208
		967	=>	53
		968	=>	233
		969	=>	112
		970	=>	226
		976	=>	76
		978	=>	177
		981	=>	173
		983	=>	80
		986	=>	215
		988	=>	20
		991	=>	144
		993	=>	199
		995	=>	109
		997	=>	157
		1001	=>	178
		1003	=>	235
		1006	=>	113
		1008	=>	63
		1011	=>	239
		1013	=>	92
		1016	=>	124
		1018	=>	217
		1021	=>	35
		1023	=>	6
		1026	=>	28
		1028	=>	131
		1031	=>	222
		1033	=>	252
		1036	=>	189

Class: surge.util.Cuboid$1	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: surge.util.Cuboid$1
		final synthetic surge.util.Cuboid this$0	NameNotChanged
	MethodsOf: surge.util.Cuboid$1
		public bridge synthetic java.lang.Object onAdapt(java.lang.Object) 	NameNotChanged
		public org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) 	NameNotChanged
	LineNumbersOf: surge.util.Cuboid$1
		99	=>	1 and 4
		103	=>	5
		105	=>	2
		108	=>	3

Class: synthetic surge.util.Cuboid$2	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: surge.util.Cuboid$2
		static final synthetic int[] $SwitchMap$surge$util$Axis	=>	a
		static final synthetic int[] $SwitchMap$surge$util$Cuboid$CuboidDirection	=>	b
	MethodsOf: surge.util.Cuboid$2
	LineNumbersOf: surge.util.Cuboid$2
		60	=>	1
		454	=>	2

Class: public final enum surge.util.Cuboid$CuboidDirection	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: surge.util.Cuboid$CuboidDirection
		private static final synthetic surge.util.Cuboid$CuboidDirection[] $VALUES	=>	a
		public static final enum surge.util.Cuboid$CuboidDirection Both	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection Down	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection East	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection Horizontal	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection North	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection South	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection Unknown	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection Up	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection Vertical	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection West	NameNotChanged
	MethodsOf: surge.util.Cuboid$CuboidDirection
		public surge.util.Cuboid$CuboidDirection opposite() 	NameNotChanged
		public static surge.util.Cuboid$CuboidDirection valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.Cuboid$CuboidDirection[] values() 	NameNotChanged
	LineNumbersOf: surge.util.Cuboid$CuboidDirection
		916	=>	6, 9, 23 and 25
		919	=>	18
		920	=>	13
		921	=>	24
		922	=>	11
		923	=>	20
		924	=>	19
		925	=>	10
		926	=>	22
		927	=>	5
		928	=>	16
		932	=>	17
		935	=>	12
		937	=>	15
		939	=>	1
		941	=>	2
		943	=>	21
		945	=>	7
		947	=>	4
		949	=>	14
		951	=>	8
		953	=>	3

Class: public surge.util.Cuboid$CuboidIterator	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: surge.util.Cuboid$CuboidIterator
		private int baseX	=>	b
		private int baseY	=>	c
		private int baseZ	=>	d
		private int sizeX	=>	h
		private int sizeY	=>	i
		private int sizeZ	=>	j
		final synthetic surge.util.Cuboid this$0	NameNotChanged
		private org.bukkit.World w	=>	a
		private int x	=>	e
		private int y	=>	f
		private int z	=>	g
	MethodsOf: surge.util.Cuboid$CuboidIterator
		public boolean hasNext() 	NameNotChanged
		public bridge synthetic java.lang.Object next() 	NameNotChanged
		public org.bukkit.block.Block next() 	NameNotChanged
		public void remove() 	NameNotChanged
	LineNumbersOf: surge.util.Cuboid$CuboidIterator
		868	=>	7
		876	=>	13
		877	=>	9
		878	=>	18
		879	=>	6
		880	=>	8
		881	=>	14
		882	=>	11
		883	=>	17
		884	=>	4
		885	=>	3
		890	=>	19
		896	=>	1
		897	=>	2
		899	=>	20
		900	=>	12
		902	=>	10
		903	=>	5
		906	=>	15
		913	=>	16

Class: public surge.util.CuboidException	NameNotChanged
	Source: "CuboidException.java"
	FieldsOf: surge.util.CuboidException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.util.CuboidException
	LineNumbersOf: surge.util.CuboidException
		12	=>	2
		13	=>	1

Class: public surge.util.D	NameNotChanged
	Source: "D.java"
	FieldsOf: surge.util.D
		private static surge.collection.GList buffer	=>	a
	MethodsOf: surge.util.D
		public static void f(java.lang.Object, java.lang.String) 	NameNotChanged
		public static void f(java.lang.String) 	NameNotChanged
		public static void flush() 	NameNotChanged
		public static void l(java.lang.Object, java.lang.String) 	NameNotChanged
		public static void l(java.lang.String) 	NameNotChanged
		private static void log(java.lang.String, java.lang.String) 	=>	a
		public static void s(java.lang.Object, java.lang.String) 	NameNotChanged
		public static void s(java.lang.String) 	NameNotChanged
		public static void v(java.lang.Object, java.lang.String) 	NameNotChanged
		public static void v(java.lang.String) 	NameNotChanged
		public static void w(java.lang.Object, java.lang.String) 	NameNotChanged
		public static void w(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.util.D
		8	=>	3
		10	=>	27
		14	=>	14 and 25
		16	=>	19
		18	=>	28
		22	=>	46
		24	=>	4
		26	=>	2
		27	=>	38
		31	=>	18
		33	=>	20
		37	=>	10
		38	=>	40
		42	=>	31
		43	=>	35
		47	=>	26
		48	=>	12
		52	=>	22
		53	=>	34
		57	=>	44
		58	=>	13
		62	=>	24
		64	=>	39
		65	=>	17
		68	=>	16
		69	=>	6
		73	=>	29
		75	=>	30
		76	=>	42
		79	=>	21
		80	=>	45
		84	=>	11
		86	=>	47
		87	=>	32
		90	=>	37
		91	=>	33
		95	=>	36
		97	=>	5
		98	=>	8
		101	=>	23
		102	=>	43
		106	=>	15
		108	=>	41
		109	=>	7
		112	=>	9
		113	=>	1

Class: public abstract annotation surge.util.DMSRequire	NameNotChanged
	Source: "DMSRequire.java"
	FieldsOf: surge.util.DMSRequire
	MethodsOf: surge.util.DMSRequire
		public abstract surge.util.DMSRequirement value() 	NameNotChanged
	LineNumbersOf: surge.util.DMSRequire

Class: public final enum surge.util.DMSRequirement	NameNotChanged
	Source: "DMSRequirement.java"
	FieldsOf: surge.util.DMSRequirement
		private static final synthetic surge.util.DMSRequirement[] ENUM$VALUES	=>	a
		public static final enum surge.util.DMSRequirement SQL	NameNotChanged
	MethodsOf: surge.util.DMSRequirement
		public static surge.util.DMSRequirement valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.DMSRequirement[] values() 	NameNotChanged
	LineNumbersOf: surge.util.DMSRequirement
		1	=>	2 and 5
		3	=>	1 and 4
		5	=>	3

Class: public final enum surge.util.Depend	NameNotChanged
	Source: "Depend.java"
	FieldsOf: surge.util.Depend
		public static final enum surge.util.Depend CITIZENS	NameNotChanged
		private static final synthetic surge.util.Depend[] ENUM$VALUES	=>	b
		public static final enum surge.util.Depend FAWE	NameNotChanged
		public static final enum surge.util.Depend PROTOLIB	NameNotChanged
		public static final enum surge.util.Depend VAULT	NameNotChanged
		public static final enum surge.util.Depend WORLDEDIT	NameNotChanged
		private java.lang.String name	=>	a
	MethodsOf: surge.util.Depend
		public boolean exists() 	NameNotChanged
		public static surge.util.Depend valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.Depend[] values() 	NameNotChanged
	LineNumbersOf: surge.util.Depend
		1	=>	4 and 6
		5	=>	7
		7	=>	3
		8	=>	11
		9	=>	8
		10	=>	12
		11	=>	1
		15	=>	2
		17	=>	9
		18	=>	10
		22	=>	5

Class: public surge.util.Dimension	NameNotChanged
	Source: "Dimension.java"
	FieldsOf: surge.util.Dimension
		private final int depth	=>	c
		private final int height	=>	b
		private final int width	=>	a
	MethodsOf: surge.util.Dimension
		public int getDepth() 	NameNotChanged
		public int getHeight() 	NameNotChanged
		public surge.util.DimensionFace getPane() 	NameNotChanged
		public int getWidth() 	NameNotChanged
	LineNumbersOf: surge.util.Dimension
		25	=>	7
		26	=>	8
		27	=>	5
		28	=>	1
		29	=>	16
		40	=>	12
		41	=>	13
		42	=>	15
		43	=>	19
		44	=>	9
		53	=>	20
		55	=>	17
		58	=>	11
		60	=>	4
		63	=>	2
		65	=>	18
		68	=>	14
		73	=>	10
		78	=>	6
		83	=>	3

Class: public final enum surge.util.DimensionFace	NameNotChanged
	Source: "DimensionFace.java"
	FieldsOf: surge.util.DimensionFace
		private static final synthetic surge.util.DimensionFace[] $VALUES	=>	a
		public static final enum surge.util.DimensionFace X	NameNotChanged
		public static final enum surge.util.DimensionFace Y	NameNotChanged
		public static final enum surge.util.DimensionFace Z	NameNotChanged
	MethodsOf: surge.util.DimensionFace
		public static surge.util.DimensionFace valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.DimensionFace[] values() 	NameNotChanged
	LineNumbersOf: surge.util.DimensionFace
		8	=>	1, 3, 6 and 7
		13	=>	5
		18	=>	4
		23	=>	2

Class: public final enum surge.util.Direction	NameNotChanged
	Source: "Direction.java"
	FieldsOf: surge.util.Direction
		private static synthetic int[] $SWITCH_TABLE$surge$util$Direction	=>	e
		public static final enum surge.util.Direction D	NameNotChanged
		public static final enum surge.util.Direction E	NameNotChanged
		private static final synthetic surge.util.Direction[] ENUM$VALUES	=>	f
		public static final enum surge.util.Direction N	NameNotChanged
		public static final enum surge.util.Direction S	NameNotChanged
		public static final enum surge.util.Direction U	NameNotChanged
		public static final enum surge.util.Direction W	NameNotChanged
		private surge.util.Cuboid$CuboidDirection f	=>	d
		private int x	=>	a
		private int y	=>	b
		private int z	=>	c
	MethodsOf: surge.util.Direction
		static synthetic int[] $SWITCH_TABLE$surge$util$Direction() 	=>	a
		public byte byteValue() 	NameNotChanged
		public surge.util.Cuboid$CuboidDirection f() 	NameNotChanged
		public static surge.util.Direction facing(org.bukkit.entity.Player) 	NameNotChanged
		public static surge.util.Direction fromByte(byte) 	NameNotChanged
		public static surge.collection.GList news() 	NameNotChanged
		public surge.util.Direction reverse() 	NameNotChanged
		public static surge.collection.GList udnews() 	NameNotChanged
		public static surge.util.Direction valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.Direction[] values() 	NameNotChanged
		public int x() 	NameNotChanged
		public int y() 	NameNotChanged
		public int z() 	NameNotChanged
	LineNumbersOf: surge.util.Direction
		1	=>	44 and 57
		14	=>	2 and 24
		16	=>	22
		17	=>	41
		18	=>	20
		19	=>	39
		20	=>	54
		21	=>	5
		28	=>	21
		30	=>	25
		31	=>	53
		32	=>	46
		33	=>	52
		34	=>	31
		38	=>	23
		41	=>	51
		43	=>	18
		45	=>	43
		47	=>	26
		49	=>	4
		51	=>	40
		56	=>	56
		61	=>	48
		66	=>	35
		71	=>	32
		76	=>	55
		81	=>	11
		86	=>	28
		91	=>	27
		93	=>	13 and 42
		95	=>	50
		97	=>	3
		101	=>	34
		115	=>	9
		117	=>	30
		120	=>	19
		122	=>	15
		125	=>	36
		127	=>	37
		130	=>	10
		132	=>	17
		135	=>	33
		137	=>	14
		140	=>	16
		142	=>	38
		147	=>	6
		158	=>	1
		161	=>	7
		163	=>	47
		165	=>	49
		167	=>	12
		169	=>	8
		171	=>	45
		176	=>	29

Class: public abstract surge.util.Embedded	NameNotChanged
	Source: "Embedded.java"
	FieldsOf: surge.util.Embedded
	MethodsOf: surge.util.Embedded
		public abstract void add(java.lang.Object) 	NameNotChanged
		public abstract surge.collection.GList get() 	NameNotChanged
	LineNumbersOf: surge.util.Embedded

Class: public surge.util.F	NameNotChanged
	Source: "F.java"
	FieldsOf: surge.util.F
		private static java.text.DecimalFormat DF	=>	b
		private static final java.util.NavigableMap MAP	=>	e
		private static final java.lang.String[] NAMES	=>	c
		private static java.text.NumberFormat NF	=>	a
		private static final java.math.BigInteger THOUSAND	=>	d
		public static boolean a	=>	f
	MethodsOf: surge.util.F
		public static java.lang.String b(double) 	NameNotChanged
		public static java.lang.String b(int) 	NameNotChanged
		public static java.lang.String b(java.math.BigInteger) 	NameNotChanged
		public static java.lang.String b(long) 	NameNotChanged
		public static java.lang.String cname(java.lang.String) 	NameNotChanged
		public static java.lang.String color(java.lang.String) 	NameNotChanged
		public static surge.collection.GList color(java.util.List) 	NameNotChanged
		public static java.lang.String f(double) 	NameNotChanged
		public static java.lang.String f(double, int) 	NameNotChanged
		public static java.lang.String f(float) 	NameNotChanged
		public static java.lang.String f(float, int) 	NameNotChanged
		public static java.lang.String f(int) 	NameNotChanged
		public static java.lang.String f(long) 	NameNotChanged
		public static java.lang.String fd(double, int) 	NameNotChanged
		public static java.lang.String fileSize(long) 	NameNotChanged
		public static surge.collection.GList getParameters(java.lang.String, char) 	NameNotChanged
		private static void instantiate() 	=>	a
		public static java.lang.String mem(long) 	NameNotChanged
		public static java.lang.String memSize(long) 	NameNotChanged
		public static java.lang.String memx(long) 	NameNotChanged
		public static java.lang.String msSeconds(long) 	NameNotChanged
		public static java.lang.String msSeconds(long, int) 	NameNotChanged
		public static java.lang.String nsMs(long) 	NameNotChanged
		public static java.lang.String nsMs(long, int) 	NameNotChanged
		public static java.lang.String nsMsd(long, int) 	NameNotChanged
		public static java.lang.String ofSize(long, int) 	NameNotChanged
		public static java.lang.String ofSize(long, int, surge.util.C) 	NameNotChanged
		public static java.lang.String pc(double) 	NameNotChanged
		public static java.lang.String pc(double, int) 	NameNotChanged
		public static java.lang.String pc(float) 	NameNotChanged
		public static java.lang.String pc(float, int) 	NameNotChanged
		public static java.lang.String pc(int, int) 	NameNotChanged
		public static java.lang.String pc(int, int, int) 	NameNotChanged
		public static java.lang.String pc(long, long) 	NameNotChanged
		public static java.lang.String pc(long, long, int) 	NameNotChanged
		public static java.lang.String repeat(java.lang.String, int) 	NameNotChanged
		public static java.lang.String stamp() 	NameNotChanged
		public static java.lang.String stamp(long) 	NameNotChanged
		public static java.lang.String time(double, int) 	NameNotChanged
		public static java.lang.String trim(java.lang.String, int) 	NameNotChanged
		public static surge.collection.GList wrap(java.lang.String) 	NameNotChanged
		public static surge.collection.GList wrap(java.lang.String, int) 	NameNotChanged
	LineNumbersOf: surge.util.F
		19	=>	164
		24	=>	58
		25	=>	120
		30	=>	125
		31	=>	49 and 146
		33	=>	18
		35	=>	118
		39	=>	121
		41	=>	87
		44	=>	45
		46	=>	26
		49	=>	75
		51	=>	57
		54	=>	91
		59	=>	114
		64	=>	27
		69	=>	24
		74	=>	6
		75	=>	100
		77	=>	38
		80	=>	65
		81	=>	37
		82	=>	71
		83	=>	78
		84	=>	149
		86	=>	46
		88	=>	161
		91	=>	39
		96	=>	23
		98	=>	68
		100	=>	80
		111	=>	11
		124	=>	14
		137	=>	62
		150	=>	144
		151	=>	9
		161	=>	72
		177	=>	151
		178	=>	89
		180	=>	51
		182	=>	163
		183	=>	124
		185	=>	135
		187	=>	102
		188	=>	34
		190	=>	42
		192	=>	73
		193	=>	22
		195	=>	2
		197	=>	56
		198	=>	77
		204	=>	84
		209	=>	143
		210	=>	159
		212	=>	61
		214	=>	162
		215	=>	148
		217	=>	136
		219	=>	4
		220	=>	155
		222	=>	79
		224	=>	116
		225	=>	160
		227	=>	90
		229	=>	69
		230	=>	53
		236	=>	59
		248	=>	74
		262	=>	103
		263	=>	48
		265	=>	1 and 35
		267	=>	108
		269	=>	150
		271	=>	50
		274	=>	40
		276	=>	54
		279	=>	127
		293	=>	112
		295	=>	156
		298	=>	66
		311	=>	8
		313	=>	94 and 122
		315	=>	20
		317	=>	32
		318	=>	134
		322	=>	29
		326	=>	13
		328	=>	130
		331	=>	140
		346	=>	63
		347	=>	86
		348	=>	93
		350	=>	19 and 96
		352	=>	99
		354	=>	5
		356	=>	76
		358	=>	30
		360	=>	36
		363	=>	104
		364	=>	113
		368	=>	133
		370	=>	41
		374	=>	115
		376	=>	16
		381	=>	67
		395	=>	3
		397	=>	137
		400	=>	60
		402	=>	12 and 154
		404	=>	7
		407	=>	109
		419	=>	157
		421	=>	85
		426	=>	31
		439	=>	28
		441	=>	129
		446	=>	147
		448	=>	95
		450	=>	131
		455	=>	128
		457	=>	82
		471	=>	21
		472	=>	101
		484	=>	81
		485	=>	97
		499	=>	141
		501	=>	107
		503	=>	111
		506	=>	88
		508	=>	126
		524	=>	106
		526	=>	15
		528	=>	145
		531	=>	55
		533	=>	119
		547	=>	142
		549	=>	132
		551	=>	43
		554	=>	33
		556	=>	153
		567	=>	165
		578	=>	123
		593	=>	17
		608	=>	44
		621	=>	98
		634	=>	83
		650	=>	138
		664	=>	47
		680	=>	64
		694	=>	10
		706	=>	25
		720	=>	70
		732	=>	52
		746	=>	139
		760	=>	110
		772	=>	92
		774	=>	105 and 152
		776	=>	158
		779	=>	117

Class: public surge.util.FU	NameNotChanged
	Source: "FU.java"
	FieldsOf: surge.util.FU
		public static final java.io.File[] EMPTY_FILE_ARRAY	NameNotChanged
		public static final long ONE_GB	NameNotChanged
		public static final long ONE_KB	NameNotChanged
		public static final long ONE_MB	NameNotChanged
	MethodsOf: surge.util.FU
		public static java.lang.String byteCountToDisplaySize(long) 	NameNotChanged
		public static void cleanDirectory(java.io.File) 	NameNotChanged
		private static void cleanDirectoryOnExit(java.io.File) 	=>	b
		public static java.io.File[] convertFileCollectionToFileArray(java.util.Collection) 	NameNotChanged
		public static void copyDirectory(java.io.File, java.io.File) 	NameNotChanged
		public static void copyDirectory(java.io.File, java.io.File, boolean) 	NameNotChanged
		public static void copyDirectoryToDirectory(java.io.File, java.io.File) 	NameNotChanged
		public static void copyFile(java.io.File, java.io.File) 	NameNotChanged
		public static void copyFile(java.io.File, java.io.File, boolean) 	NameNotChanged
		public static void copyFileToDirectory(java.io.File, java.io.File) 	NameNotChanged
		public static void copyURLToFile(java.net.URL, java.io.File) 	NameNotChanged
		public static void deleteDirectory(java.io.File) 	NameNotChanged
		private static void deleteDirectoryOnExit(java.io.File) 	=>	a
		private static void doCopyDirectory(java.io.File, java.io.File, boolean) 	=>	b
		private static void doCopyFile(java.io.File, java.io.File, boolean) 	=>	a
		public static void forceDelete(java.io.File) 	NameNotChanged
		public static void forceDeleteOnExit(java.io.File) 	NameNotChanged
		public static void forceMkdir(java.io.File) 	NameNotChanged
		public static boolean isFileNewer(java.io.File, java.io.File) 	NameNotChanged
		public static boolean isFileNewer(java.io.File, java.util.Date) 	NameNotChanged
		public static boolean isFileNewer(java.io.File, long) 	NameNotChanged
		public static byte[] readFileToByteArray(java.io.File) 	NameNotChanged
		public static java.lang.String readFileToString(java.io.File, java.lang.String) 	NameNotChanged
		public static java.util.List readLines(java.io.File, java.lang.String) 	NameNotChanged
		public static long sizeOfDirectory(java.io.File) 	NameNotChanged
		public static java.io.File toFile(java.net.URL) 	NameNotChanged
		public static java.io.File[] toFiles(java.net.URL[]) 	NameNotChanged
		public static java.net.URL[] toURLs(java.io.File[]) 	NameNotChanged
		public static void touch(java.io.File) 	NameNotChanged
		public static boolean waitFor(java.io.File, int) 	NameNotChanged
		public static void writeByteArrayToFile(java.io.File, byte[]) 	NameNotChanged
		public static void writeLines(java.io.File, java.lang.String, java.util.Collection) 	NameNotChanged
		public static void writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String) 	NameNotChanged
		public static void writeStringToFile(java.io.File, java.lang.String, java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.util.FU
		74	=>	141
		75	=>	136
		95	=>	231
		110	=>	286
		112	=>	255
		113	=>	305
		115	=>	180
		116	=>	154
		118	=>	315
		119	=>	128
		121	=>	269
		123	=>	124
		139	=>	241
		141	=>	292
		142	=>	56
		144	=>	151
		145	=>	191
		159	=>	173
		179	=>	131
		181	=>	70
		184	=>	138
		185	=>	284
		186	=>	41 and 245
		188	=>	28
		190	=>	11
		191	=>	117
		192	=>	215
		195	=>	172
		222	=>	98
		224	=>	83
		226	=>	155
		227	=>	103 and 248
		229	=>	110
		230	=>	111
		232	=>	212
		234	=>	79
		236	=>	227
		239	=>	17
		256	=>	68
		258	=>	55 and 74
		260	=>	132
		263	=>	253
		290	=>	306
		292	=>	92
		294	=>	73
		296	=>	267
		298	=>	120
		299	=>	104
		324	=>	113
		325	=>	184
		353	=>	304
		355	=>	24
		357	=>	264
		359	=>	94
		361	=>	268
		363	=>	122
		365	=>	179
		367	=>	112
		369	=>	175
		371	=>	38
		373	=>	61
		375	=>	271
		377	=>	259
		380	=>	37
		382	=>	3
		384	=>	34
		385	=>	99
		401	=>	186
		403	=>	26
		406	=>	7
		409	=>	244
		412	=>	194
		413	=>	127
		414	=>	15
		415	=>	89 and 137
		416	=>	76
		417	=>	229
		418	=>	209
		419	=>	129 and 223
		420	=>	43
		422	=>	48
		424	=>	235
		426	=>	220
		428	=>	156
		430	=>	44
		458	=>	100
		460	=>	143
		462	=>	2
		464	=>	282
		466	=>	47
		468	=>	90
		470	=>	82
		472	=>	4
		474	=>	225
		475	=>	198
		503	=>	195
		504	=>	192
		534	=>	96
		536	=>	197
		538	=>	185
		540	=>	75
		542	=>	202
		544	=>	139
		546	=>	121
		548	=>	297
		550	=>	142
		552	=>	107
		554	=>	52
		555	=>	146
		572	=>	148
		574	=>	93
		576	=>	106
		580	=>	133
		582	=>	84
		584	=>	203
		586	=>	85
		589	=>	169
		591	=>	293
		594	=>	91
		595	=>	157
		597	=>	193
		599	=>	123 and 260
		601	=>	53
		602	=>	39
		604	=>	303
		605	=>	190
		607	=>	119
		610	=>	31
		636	=>	228
		638	=>	32
		642	=>	233
		644	=>	109
		645	=>	9
		648	=>	150
		651	=>	20
		654	=>	251
		655	=>	232
		656	=>	95
		657	=>	171 and 234
		658	=>	152
		659	=>	316
		660	=>	211
		661	=>	145 and 206
		662	=>	18
		663	=>	168
		676	=>	51
		678	=>	183
		681	=>	261
		682	=>	283
		684	=>	257
		685	=>	240
		687	=>	108
		699	=>	205
		701	=>	319
		702	=>	238
		705	=>	12
		707	=>	237
		708	=>	67
		711	=>	66
		712	=>	243
		714	=>	275
		717	=>	54
		718	=>	163 and 266
		720	=>	176
		723	=>	249
		724	=>	277
		726	=>	300
		730	=>	71
		732	=>	58
		734	=>	226
		753	=>	272
		754	=>	135
		755	=>	29 and 252
		757	=>	46
		759	=>	36
		760	=>	153
		762	=>	299
		767	=>	62
		768	=>	63
		771	=>	149
		773	=>	116
		776	=>	14
		799	=>	254
		802	=>	298
		803	=>	187 and 288
		805	=>	65
		806	=>	50 and 281
		807	=>	33
		823	=>	216
		826	=>	279
		827	=>	30 and 140
		829	=>	64
		830	=>	291 and 308
		831	=>	280
		855	=>	246
		858	=>	158
		859	=>	86 and 88
		861	=>	296
		862	=>	81 and 310
		863	=>	144
		886	=>	218
		889	=>	159
		890	=>	208
		891	=>	102
		892	=>	247 and 294
		893	=>	5
		894	=>	134
		909	=>	177
		912	=>	10
		913	=>	201
		914	=>	8
		915	=>	13 and 188
		916	=>	166
		917	=>	307
		942	=>	217
		943	=>	213
		970	=>	101
		973	=>	219
		974	=>	263
		975	=>	40
		976	=>	204 and 285
		977	=>	16
		978	=>	314
		1000	=>	210
		1002	=>	25
		1003	=>	250
		1005	=>	60
		1007	=>	59
		1009	=>	6
		1011	=>	270
		1012	=>	174
		1015	=>	21
		1030	=>	274
		1032	=>	125
		1033	=>	199
		1035	=>	311
		1037	=>	276
		1051	=>	78
		1053	=>	165
		1056	=>	115
		1057	=>	80
		1058	=>	87
		1072	=>	189
		1074	=>	309
		1075	=>	182
		1078	=>	97
		1080	=>	167
		1081	=>	289
		1084	=>	23
		1085	=>	317
		1087	=>	302
		1090	=>	57
		1091	=>	19 and 27
		1093	=>	273
		1096	=>	35
		1097	=>	69
		1099	=>	118
		1103	=>	313
		1105	=>	318
		1107	=>	262
		1123	=>	22
		1125	=>	295
		1127	=>	77
		1128	=>	290
		1132	=>	178
		1134	=>	224
		1135	=>	236
		1138	=>	239
		1152	=>	170
		1154	=>	42
		1155	=>	72
		1158	=>	230
		1160	=>	130
		1161	=>	256
		1164	=>	1
		1166	=>	301
		1167	=>	265
		1169	=>	114
		1171	=>	162 and 222
		1173	=>	221
		1175	=>	161
		1177	=>	147
		1178	=>	278
		1180	=>	105
		1184	=>	181
		1207	=>	242
		1209	=>	258
		1211	=>	160
		1213	=>	196
		1215	=>	49
		1236	=>	126
		1238	=>	214
		1240	=>	207
		1260	=>	200
		1262	=>	312
		1264	=>	287
		1266	=>	45
		1268	=>	164

Class: public surge.util.FinalDouble	NameNotChanged
	Source: "FinalDouble.java"
	FieldsOf: surge.util.FinalDouble
		private double i	=>	a
	MethodsOf: surge.util.FinalDouble
		public void add(double) 	NameNotChanged
		public double get() 	NameNotChanged
		public void set(double) 	NameNotChanged
		public void sub(double) 	NameNotChanged
	LineNumbersOf: surge.util.FinalDouble
		18	=>	10
		20	=>	6
		21	=>	4
		30	=>	7
		41	=>	8
		42	=>	2
		52	=>	3
		53	=>	5
		63	=>	9
		64	=>	1

Class: public surge.util.FinalFloat	NameNotChanged
	Source: "FinalFloat.java"
	FieldsOf: surge.util.FinalFloat
		private float i	=>	a
	MethodsOf: surge.util.FinalFloat
		public void add(float) 	NameNotChanged
		public float get() 	NameNotChanged
		public void set(float) 	NameNotChanged
		public void sub(float) 	NameNotChanged
	LineNumbersOf: surge.util.FinalFloat
		18	=>	7
		20	=>	3
		21	=>	5
		30	=>	6
		41	=>	4
		42	=>	1
		52	=>	2
		53	=>	9
		63	=>	8
		64	=>	10

Class: public surge.util.FinalInteger	NameNotChanged
	Source: "FinalInteger.java"
	FieldsOf: surge.util.FinalInteger
		private int i	=>	a
	MethodsOf: surge.util.FinalInteger
		public void add(int) 	NameNotChanged
		public int get() 	NameNotChanged
		public void set(int) 	NameNotChanged
		public void sub(int) 	NameNotChanged
	LineNumbersOf: surge.util.FinalInteger
		18	=>	2
		20	=>	10
		21	=>	3
		30	=>	6
		41	=>	4
		42	=>	8
		52	=>	9
		53	=>	7
		63	=>	5
		64	=>	1

Class: public surge.util.FinalLong	NameNotChanged
	Source: "FinalLong.java"
	FieldsOf: surge.util.FinalLong
		private long i	=>	a
	MethodsOf: surge.util.FinalLong
		public void add(long) 	NameNotChanged
		public long get() 	NameNotChanged
		public void set(long) 	NameNotChanged
		public void sub(long) 	NameNotChanged
	LineNumbersOf: surge.util.FinalLong
		18	=>	2
		20	=>	5
		21	=>	7
		30	=>	9
		41	=>	6
		42	=>	4
		52	=>	3
		53	=>	1
		63	=>	8
		64	=>	10

Class: public surge.util.FinalString	NameNotChanged
	Source: "FinalString.java"
	FieldsOf: surge.util.FinalString
		private java.lang.String string	=>	a
	MethodsOf: surge.util.FinalString
		public java.lang.String get() 	NameNotChanged
		public void set(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.util.FinalString
		18	=>	4
		20	=>	3
		21	=>	5
		30	=>	2
		41	=>	6
		42	=>	1

Class: public surge.util.Fingerprint	NameNotChanged
	Source: "Fingerprint.java"
	FieldsOf: surge.util.Fingerprint
	MethodsOf: surge.util.Fingerprint
		public static java.lang.String randomFingerprint(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.util.Fingerprint
		5	=>	2
		9	=>	1
		11	=>	3
		12	=>	5
		14	=>	4

Class: public abstract surge.util.GListAdapter	NameNotChanged
	Source: "GListAdapter.java"
	FieldsOf: surge.util.GListAdapter
	MethodsOf: surge.util.GListAdapter
		public java.util.List adapt(java.util.List) 	NameNotChanged
		public abstract java.lang.Object onAdapt(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.util.GListAdapter
		16	=>	2
		27	=>	3
		29	=>	4 and 6
		31	=>	5
		33	=>	1
		35	=>	8
		39	=>	7

Class: public surge.util.Health	NameNotChanged
	Source: "Health.java"
	FieldsOf: surge.util.Health
		private double hp	=>	a
	MethodsOf: surge.util.Health
		public int getFlatHalfHearts() 	NameNotChanged
		public int getFlatHearts() 	NameNotChanged
		public double getHalfHearts() 	NameNotChanged
		public double getHearts() 	NameNotChanged
	LineNumbersOf: surge.util.Health
		20	=>	7
		21	=>	5
		22	=>	6
		31	=>	4
		41	=>	1
		51	=>	3
		61	=>	2

Class: public surge.util.IO	NameNotChanged
	Source: "IO.java"
	FieldsOf: surge.util.IO
		public static final char DIR_SEPARATOR	NameNotChanged
		public static final char DIR_SEPARATOR_UNIX	NameNotChanged
		public static final char DIR_SEPARATOR_WINDOWS	NameNotChanged
		public static final java.lang.String LINE_SEPARATOR	NameNotChanged
		public static final java.lang.String LINE_SEPARATOR_UNIX	NameNotChanged
		public static final java.lang.String LINE_SEPARATOR_WINDOWS	NameNotChanged
	MethodsOf: surge.util.IO
		public static void closeQuietly(java.io.InputStream) 	NameNotChanged
		public static void closeQuietly(java.io.OutputStream) 	NameNotChanged
		public static void closeQuietly(java.io.Reader) 	NameNotChanged
		public static void closeQuietly(java.io.Writer) 	NameNotChanged
		public static boolean contentEquals(java.io.InputStream, java.io.InputStream) 	NameNotChanged
		public static boolean contentEquals(java.io.Reader, java.io.Reader) 	NameNotChanged
		public static int copy(java.io.InputStream, java.io.OutputStream) 	NameNotChanged
		public static void copy(java.io.InputStream, java.io.Writer) 	NameNotChanged
		public static void copy(java.io.InputStream, java.io.Writer, java.lang.String) 	NameNotChanged
		public static void copy(java.io.Reader, java.io.OutputStream) 	NameNotChanged
		public static void copy(java.io.Reader, java.io.OutputStream, java.lang.String) 	NameNotChanged
		public static int copy(java.io.Reader, java.io.Writer) 	NameNotChanged
		public static long copyLarge(java.io.InputStream, java.io.OutputStream) 	NameNotChanged
		public static long copyLarge(java.io.Reader, java.io.Writer) 	NameNotChanged
		public static java.util.List readLines(java.io.InputStream) 	NameNotChanged
		public static java.util.List readLines(java.io.InputStream, java.lang.String) 	NameNotChanged
		public static java.util.List readLines(java.io.Reader) 	NameNotChanged
		public static byte[] toByteArray(java.io.InputStream) 	NameNotChanged
		public static byte[] toByteArray(java.io.Reader) 	NameNotChanged
		public static byte[] toByteArray(java.io.Reader, java.lang.String) 	NameNotChanged
		public static byte[] toByteArray(java.lang.String) 	NameNotChanged
		public static char[] toCharArray(java.io.InputStream) 	NameNotChanged
		public static char[] toCharArray(java.io.InputStream, java.lang.String) 	NameNotChanged
		public static char[] toCharArray(java.io.Reader) 	NameNotChanged
		public static java.io.InputStream toInputStream(java.lang.String) 	NameNotChanged
		public static java.io.InputStream toInputStream(java.lang.String, java.lang.String) 	NameNotChanged
		public static java.lang.String toString(byte[]) 	NameNotChanged
		public static java.lang.String toString(byte[], java.lang.String) 	NameNotChanged
		public static java.lang.String toString(java.io.InputStream) 	NameNotChanged
		public static java.lang.String toString(java.io.InputStream, java.lang.String) 	NameNotChanged
		public static java.lang.String toString(java.io.Reader) 	NameNotChanged
		public static void write(byte[], java.io.OutputStream) 	NameNotChanged
		public static void write(byte[], java.io.Writer) 	NameNotChanged
		public static void write(byte[], java.io.Writer, java.lang.String) 	NameNotChanged
		public static void write(char[], java.io.OutputStream) 	NameNotChanged
		public static void write(char[], java.io.OutputStream, java.lang.String) 	NameNotChanged
		public static void write(char[], java.io.Writer) 	NameNotChanged
		public static void write(java.lang.String, java.io.OutputStream) 	NameNotChanged
		public static void write(java.lang.String, java.io.OutputStream, java.lang.String) 	NameNotChanged
		public static void write(java.lang.String, java.io.Writer) 	NameNotChanged
		public static void write(java.lang.StringBuffer, java.io.OutputStream) 	NameNotChanged
		public static void write(java.lang.StringBuffer, java.io.OutputStream, java.lang.String) 	NameNotChanged
		public static void write(java.lang.StringBuffer, java.io.Writer) 	NameNotChanged
		public static void writeLines(java.util.Collection, java.lang.String, java.io.OutputStream) 	NameNotChanged
		public static void writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String) 	NameNotChanged
		public static void writeLines(java.util.Collection, java.lang.String, java.io.Writer) 	NameNotChanged
	LineNumbersOf: surge.util.IO
		97	=>	69
		113	=>	149
		114	=>	188
		115	=>	208
		116	=>	29
		122	=>	18
		129	=>	13
		130	=>	181
		146	=>	48
		148	=>	143
		150	=>	94
		154	=>	213
		169	=>	168
		171	=>	114
		173	=>	53
		177	=>	191
		192	=>	65
		194	=>	163
		196	=>	26
		200	=>	111
		215	=>	4
		217	=>	227
		219	=>	49
		223	=>	67
		243	=>	175
		244	=>	71
		245	=>	16
		265	=>	125
		266	=>	66
		267	=>	92
		293	=>	155
		294	=>	164
		295	=>	78
		315	=>	224
		338	=>	225
		339	=>	220
		340	=>	176
		366	=>	205
		367	=>	19
		368	=>	198
		388	=>	80
		389	=>	197
		390	=>	20
		412	=>	97
		413	=>	96
		414	=>	118
		439	=>	32
		440	=>	30
		441	=>	184
		460	=>	70
		461	=>	209
		462	=>	152
		480	=>	110
		503	=>	170
		505	=>	90
		508	=>	98
		532	=>	122
		533	=>	133
		559	=>	148
		561	=>	141
		564	=>	99
		565	=>	162
		587	=>	21
		588	=>	136
		589	=>	212
		590	=>	121 and 129
		592	=>	103
		593	=>	15
		595	=>	127
		610	=>	106
		611	=>	174
		632	=>	102
		633	=>	186
		654	=>	37
		656	=>	228
		658	=>	57
		679	=>	219
		681	=>	33
		683	=>	126
		709	=>	51
		711	=>	157
		713	=>	14
		714	=>	41
		716	=>	79
		719	=>	153
		740	=>	221
		742	=>	215
		744	=>	56
		766	=>	73
		768	=>	139
		770	=>	187
		797	=>	36
		799	=>	23
		801	=>	88
		802	=>	159
		804	=>	25
		807	=>	107
		826	=>	46
		828	=>	145
		830	=>	24
		851	=>	217
		853	=>	216
		855	=>	63
		880	=>	169
		882	=>	72
		884	=>	144
		885	=>	22
		887	=>	100
		890	=>	146
		909	=>	64
		911	=>	193
		913	=>	86
		934	=>	123
		936	=>	183
		938	=>	210
		963	=>	135
		965	=>	173
		967	=>	93
		968	=>	45
		970	=>	150
		973	=>	83
		997	=>	68
		999	=>	40
		1001	=>	189
		1003	=>	38
		1005	=>	180 and 222
		1007	=>	161
		1008	=>	54
		1010	=>	35
		1012	=>	117
		1014	=>	43
		1041	=>	75
		1043	=>	108
		1044	=>	27
		1046	=>	76
		1048	=>	138
		1050	=>	113
		1052	=>	190
		1054	=>	95 and 119
		1056	=>	10
		1057	=>	201
		1059	=>	142
		1061	=>	147
		1064	=>	120
		1084	=>	112
		1086	=>	203
		1088	=>	42
		1090	=>	131
		1092	=>	62 and 218
		1094	=>	151
		1095	=>	115
		1097	=>	167
		1099	=>	156
		1101	=>	5
		1132	=>	7
		1133	=>	44
		1135	=>	89
		1137	=>	11
		1160	=>	128
		1161	=>	223
		1162	=>	31
		1163	=>	132 and 134
		1165	=>	82
		1166	=>	204
		1168	=>	60
		1192	=>	34
		1193	=>	202
		1194	=>	12
		1222	=>	154
		1224	=>	192
		1225	=>	74
		1227	=>	182
		1228	=>	59
		1230	=>	104
		1260	=>	179
		1261	=>	160
		1263	=>	87
		1265	=>	8
		1288	=>	109
		1289	=>	211
		1290	=>	166
		1291	=>	124 and 226
		1293	=>	1
		1294	=>	81
		1296	=>	105
		1324	=>	61
		1325	=>	165
		1327	=>	177
		1328	=>	39
		1360	=>	85
		1362	=>	207
		1363	=>	171
		1365	=>	3
		1366	=>	116
		1368	=>	158
		1370	=>	77
		1394	=>	200
		1396	=>	195
		1398	=>	214
		1400	=>	199
		1403	=>	172
		1404	=>	2 and 47
		1406	=>	185
		1407	=>	140
		1409	=>	101
		1411	=>	52
		1414	=>	58
		1415	=>	206
		1439	=>	196
		1441	=>	137
		1443	=>	178
		1445	=>	55
		1448	=>	84
		1449	=>	28 and 194
		1451	=>	50
		1452	=>	6
		1454	=>	130
		1456	=>	9
		1459	=>	91
		1460	=>	17

Class: public surge.util.Items	NameNotChanged
	Source: "Items.java"
	FieldsOf: surge.util.Items
	MethodsOf: surge.util.Items
		public static void damage(org.bukkit.inventory.ItemStack, int) 	NameNotChanged
		public static short getDurability(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static double getDurabilityPercent(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static short getMaxDurability(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean hasDurability(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean hasEnchantment(org.bukkit.inventory.ItemStack, org.bukkit.enchantments.Enchantment) 	NameNotChanged
		public static boolean hasEnchantment(org.bukkit.inventory.ItemStack, org.bukkit.enchantments.Enchantment, int) 	NameNotChanged
		public static boolean hasEnchantments(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean hasLore(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean hasLore(org.bukkit.inventory.ItemStack, java.util.List) 	NameNotChanged
		public static boolean hasMeta(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean hasName(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean hasName(org.bukkit.inventory.ItemStack, java.lang.String) 	NameNotChanged
		public static boolean is(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean is(org.bukkit.inventory.ItemStack, org.bukkit.Material) 	NameNotChanged
		public static boolean is(org.bukkit.inventory.ItemStack, org.bukkit.Material, byte) 	NameNotChanged
		public static boolean is(org.bukkit.inventory.ItemStack, org.bukkit.Material, int) 	NameNotChanged
		public static boolean is(org.bukkit.inventory.ItemStack, surge.util.MaterialBlock) 	NameNotChanged
		public static boolean isBroken(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean isMergable(org.bukkit.inventory.ItemStack, org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static void setDurability(org.bukkit.inventory.ItemStack, int) 	NameNotChanged
		public static void setDurability(org.bukkit.inventory.ItemStack, short) 	NameNotChanged
		public static void setDurabilityPercent(org.bukkit.inventory.ItemStack, double) 	NameNotChanged
		public static surge.util.MaterialBlock toMaterialBlock(org.bukkit.inventory.ItemStack) 	NameNotChanged
	LineNumbersOf: surge.util.Items
		16	=>	31
		27	=>	55
		41	=>	54
		56	=>	13
		72	=>	22
		88	=>	47
		100	=>	67
		112	=>	44
		124	=>	27
		138	=>	56
		152	=>	40
		166	=>	36
		182	=>	26
		184	=>	52
		187	=>	70
		199	=>	61
		201	=>	12
		204	=>	32
		217	=>	38
		219	=>	29
		222	=>	7
		234	=>	14
		246	=>	8
		258	=>	51
		260	=>	15
		263	=>	25
		265	=>	30
		268	=>	21
		281	=>	23
		283	=>	42
		286	=>	60
		288	=>	62
		290	=>	37
		293	=>	20
		294	=>	58
		305	=>	65
		307	=>	45
		310	=>	35
		322	=>	59
		324	=>	33
		327	=>	18
		340	=>	4
		342	=>	19
		345	=>	6
		346	=>	5
		358	=>	69
		360	=>	28
		363	=>	53
		364	=>	9
		376	=>	66
		378	=>	39
		381	=>	50
		382	=>	16
		396	=>	10
		398	=>	17
		400	=>	68
		403	=>	11
		405	=>	1
		408	=>	24
		410	=>	2
		413	=>	41
		415	=>	43
		418	=>	63
		420	=>	64
		422	=>	48
		425	=>	46
		427	=>	3
		431	=>	34
		433	=>	71
		436	=>	49
		439	=>	57

Class: public final enum surge.util.MSound	NameNotChanged
	Source: "MSound.java"
	FieldsOf: surge.util.MSound
		public static final enum surge.util.MSound AMBIENCE_CAVE	NameNotChanged
		public static final enum surge.util.MSound AMBIENCE_RAIN	NameNotChanged
		public static final enum surge.util.MSound AMBIENCE_THUNDER	NameNotChanged
		public static final enum surge.util.MSound ANVIL_BREAK	NameNotChanged
		public static final enum surge.util.MSound ANVIL_LAND	NameNotChanged
		public static final enum surge.util.MSound ANVIL_USE	NameNotChanged
		public static final enum surge.util.MSound ARROW_HIT	NameNotChanged
		public static final enum surge.util.MSound BAT_DEATH	NameNotChanged
		public static final enum surge.util.MSound BAT_HURT	NameNotChanged
		public static final enum surge.util.MSound BAT_IDLE	NameNotChanged
		public static final enum surge.util.MSound BAT_LOOP	NameNotChanged
		public static final enum surge.util.MSound BAT_TAKEOFF	NameNotChanged
		public static final enum surge.util.MSound BLAZE_BREATH	NameNotChanged
		public static final enum surge.util.MSound BLAZE_DEATH	NameNotChanged
		public static final enum surge.util.MSound BLAZE_HIT	NameNotChanged
		public static final enum surge.util.MSound BURP	NameNotChanged
		public static final enum surge.util.MSound CAT_HISS	NameNotChanged
		public static final enum surge.util.MSound CAT_HIT	NameNotChanged
		public static final enum surge.util.MSound CAT_MEOW	NameNotChanged
		public static final enum surge.util.MSound CAT_PURR	NameNotChanged
		public static final enum surge.util.MSound CAT_PURREOW	NameNotChanged
		public static final enum surge.util.MSound CHEST_CLOSE	NameNotChanged
		public static final enum surge.util.MSound CHEST_OPEN	NameNotChanged
		public static final enum surge.util.MSound CHICKEN_EGG_POP	NameNotChanged
		public static final enum surge.util.MSound CHICKEN_HURT	NameNotChanged
		public static final enum surge.util.MSound CHICKEN_IDLE	NameNotChanged
		public static final enum surge.util.MSound CHICKEN_WALK	NameNotChanged
		public static final enum surge.util.MSound CLICK	NameNotChanged
		public static final enum surge.util.MSound COW_HURT	NameNotChanged
		public static final enum surge.util.MSound COW_IDLE	NameNotChanged
		public static final enum surge.util.MSound COW_WALK	NameNotChanged
		public static final enum surge.util.MSound CREEPER_DEATH	NameNotChanged
		public static final enum surge.util.MSound CREEPER_HISS	NameNotChanged
		public static final enum surge.util.MSound DIG_GRASS	NameNotChanged
		public static final enum surge.util.MSound DIG_GRAVEL	NameNotChanged
		public static final enum surge.util.MSound DIG_SAND	NameNotChanged
		public static final enum surge.util.MSound DIG_SNOW	NameNotChanged
		public static final enum surge.util.MSound DIG_STONE	NameNotChanged
		public static final enum surge.util.MSound DIG_WOOD	NameNotChanged
		public static final enum surge.util.MSound DIG_WOOL	NameNotChanged
		public static final enum surge.util.MSound DONKEY_ANGRY	NameNotChanged
		public static final enum surge.util.MSound DONKEY_DEATH	NameNotChanged
		public static final enum surge.util.MSound DONKEY_HIT	NameNotChanged
		public static final enum surge.util.MSound DONKEY_IDLE	NameNotChanged
		public static final enum surge.util.MSound DOOR_CLOSE	NameNotChanged
		public static final enum surge.util.MSound DOOR_OPEN	NameNotChanged
		public static final enum surge.util.MSound DRINK	NameNotChanged
		public static final enum surge.util.MSound EAT	NameNotChanged
		public static final enum surge.util.MSound ENDERDRAGON_DEATH	NameNotChanged
		public static final enum surge.util.MSound ENDERDRAGON_GROWL	NameNotChanged
		public static final enum surge.util.MSound ENDERDRAGON_HIT	NameNotChanged
		public static final enum surge.util.MSound ENDERDRAGON_WINGS	NameNotChanged
		public static final enum surge.util.MSound ENDERMAN_DEATH	NameNotChanged
		public static final enum surge.util.MSound ENDERMAN_HIT	NameNotChanged
		public static final enum surge.util.MSound ENDERMAN_IDLE	NameNotChanged
		public static final enum surge.util.MSound ENDERMAN_SCREAM	NameNotChanged
		public static final enum surge.util.MSound ENDERMAN_STARE	NameNotChanged
		public static final enum surge.util.MSound ENDERMAN_TELEPORT	NameNotChanged
		private static final synthetic surge.util.MSound[] ENUM$VALUES	=>	d
		public static final enum surge.util.MSound EXPLODE	NameNotChanged
		public static final enum surge.util.MSound FALL_BIG	NameNotChanged
		public static final enum surge.util.MSound FALL_SMALL	NameNotChanged
		public static final enum surge.util.MSound FIRE	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_BLAST	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_BLAST2	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_LARGE_BLAST	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_LARGE_BLAST2	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_LAUNCH	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_TWINKLE	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_TWINKLE2	NameNotChanged
		public static final enum surge.util.MSound FIRE_IGNITE	NameNotChanged
		public static final enum surge.util.MSound FIZZ	NameNotChanged
		public static final enum surge.util.MSound FUSE	NameNotChanged
		public static final enum surge.util.MSound GHAST_CHARGE	NameNotChanged
		public static final enum surge.util.MSound GHAST_DEATH	NameNotChanged
		public static final enum surge.util.MSound GHAST_FIREBALL	NameNotChanged
		public static final enum surge.util.MSound GHAST_MOAN	NameNotChanged
		public static final enum surge.util.MSound GHAST_SCREAM	NameNotChanged
		public static final enum surge.util.MSound GHAST_SCREAM2	NameNotChanged
		public static final enum surge.util.MSound GLASS	NameNotChanged
		public static final enum surge.util.MSound HORSE_ANGRY	NameNotChanged
		public static final enum surge.util.MSound HORSE_ARMOR	NameNotChanged
		public static final enum surge.util.MSound HORSE_BREATHE	NameNotChanged
		public static final enum surge.util.MSound HORSE_DEATH	NameNotChanged
		public static final enum surge.util.MSound HORSE_GALLOP	NameNotChanged
		public static final enum surge.util.MSound HORSE_HIT	NameNotChanged
		public static final enum surge.util.MSound HORSE_IDLE	NameNotChanged
		public static final enum surge.util.MSound HORSE_JUMP	NameNotChanged
		public static final enum surge.util.MSound HORSE_LAND	NameNotChanged
		public static final enum surge.util.MSound HORSE_SADDLE	NameNotChanged
		public static final enum surge.util.MSound HORSE_SKELETON_DEATH	NameNotChanged
		public static final enum surge.util.MSound HORSE_SKELETON_HIT	NameNotChanged
		public static final enum surge.util.MSound HORSE_SKELETON_IDLE	NameNotChanged
		public static final enum surge.util.MSound HORSE_SOFT	NameNotChanged
		public static final enum surge.util.MSound HORSE_WOOD	NameNotChanged
		public static final enum surge.util.MSound HORSE_ZOMBIE_DEATH	NameNotChanged
		public static final enum surge.util.MSound HORSE_ZOMBIE_HIT	NameNotChanged
		public static final enum surge.util.MSound HORSE_ZOMBIE_IDLE	NameNotChanged
		public static final enum surge.util.MSound HURT_FLESH	NameNotChanged
		public static final enum surge.util.MSound IRONGOLEM_DEATH	NameNotChanged
		public static final enum surge.util.MSound IRONGOLEM_HIT	NameNotChanged
		public static final enum surge.util.MSound IRONGOLEM_THROW	NameNotChanged
		public static final enum surge.util.MSound IRONGOLEM_WALK	NameNotChanged
		public static final enum surge.util.MSound ITEM_BREAK	NameNotChanged
		public static final enum surge.util.MSound ITEM_PICKUP	NameNotChanged
		public static final enum surge.util.MSound LAVA	NameNotChanged
		public static final enum surge.util.MSound LAVA_POP	NameNotChanged
		public static final enum surge.util.MSound LEVEL_UP	NameNotChanged
		public static final enum surge.util.MSound MAGMACUBE_JUMP	NameNotChanged
		public static final enum surge.util.MSound MAGMACUBE_WALK	NameNotChanged
		public static final enum surge.util.MSound MAGMACUBE_WALK2	NameNotChanged
		public static final enum surge.util.MSound MINECART_BASE	NameNotChanged
		public static final enum surge.util.MSound MINECART_INSIDE	NameNotChanged
		public static final enum surge.util.MSound NOTE_BASS	NameNotChanged
		public static final enum surge.util.MSound NOTE_BASS_DRUM	NameNotChanged
		public static final enum surge.util.MSound NOTE_BASS_GUITAR	NameNotChanged
		public static final enum surge.util.MSound NOTE_PIANO	NameNotChanged
		public static final enum surge.util.MSound NOTE_PLING	NameNotChanged
		public static final enum surge.util.MSound NOTE_SNARE_DRUM	NameNotChanged
		public static final enum surge.util.MSound NOTE_STICKS	NameNotChanged
		public static final enum surge.util.MSound ORB_PICKUP	NameNotChanged
		public static final enum surge.util.MSound PIG_DEATH	NameNotChanged
		public static final enum surge.util.MSound PIG_IDLE	NameNotChanged
		public static final enum surge.util.MSound PIG_WALK	NameNotChanged
		public static final enum surge.util.MSound PISTON_EXTEND	NameNotChanged
		public static final enum surge.util.MSound PISTON_RETRACT	NameNotChanged
		public static final enum surge.util.MSound PORTAL	NameNotChanged
		public static final enum surge.util.MSound PORTAL_TRAVEL	NameNotChanged
		public static final enum surge.util.MSound PORTAL_TRIGGER	NameNotChanged
		public static final enum surge.util.MSound SHEEP_IDLE	NameNotChanged
		public static final enum surge.util.MSound SHEEP_SHEAR	NameNotChanged
		public static final enum surge.util.MSound SHEEP_WALK	NameNotChanged
		public static final enum surge.util.MSound SHOOT_ARROW	NameNotChanged
		public static final enum surge.util.MSound SILVERFISH_HIT	NameNotChanged
		public static final enum surge.util.MSound SILVERFISH_IDLE	NameNotChanged
		public static final enum surge.util.MSound SILVERFISH_KILL	NameNotChanged
		public static final enum surge.util.MSound SILVERFISH_WALK	NameNotChanged
		public static final enum surge.util.MSound SKELETON_DEATH	NameNotChanged
		public static final enum surge.util.MSound SKELETON_HURT	NameNotChanged
		public static final enum surge.util.MSound SKELETON_IDLE	NameNotChanged
		public static final enum surge.util.MSound SKELETON_WALK	NameNotChanged
		public static final enum surge.util.MSound SLIME_ATTACK	NameNotChanged
		public static final enum surge.util.MSound SLIME_WALK	NameNotChanged
		public static final enum surge.util.MSound SLIME_WALK2	NameNotChanged
		public static final enum surge.util.MSound SPIDER_DEATH	NameNotChanged
		public static final enum surge.util.MSound SPIDER_IDLE	NameNotChanged
		public static final enum surge.util.MSound SPIDER_WALK	NameNotChanged
		public static final enum surge.util.MSound SPLASH	NameNotChanged
		public static final enum surge.util.MSound SPLASH2	NameNotChanged
		public static final enum surge.util.MSound STEP_GRASS	NameNotChanged
		public static final enum surge.util.MSound STEP_GRAVEL	NameNotChanged
		public static final enum surge.util.MSound STEP_LADDER	NameNotChanged
		public static final enum surge.util.MSound STEP_SAND	NameNotChanged
		public static final enum surge.util.MSound STEP_SNOW	NameNotChanged
		public static final enum surge.util.MSound STEP_STONE	NameNotChanged
		public static final enum surge.util.MSound STEP_WOOD	NameNotChanged
		public static final enum surge.util.MSound STEP_WOOL	NameNotChanged
		public static final enum surge.util.MSound SUCCESSFUL_HIT	NameNotChanged
		public static final enum surge.util.MSound SWIM	NameNotChanged
		public static final enum surge.util.MSound VILLAGER_DEATH	NameNotChanged
		public static final enum surge.util.MSound VILLAGER_HAGGLE	NameNotChanged
		public static final enum surge.util.MSound VILLAGER_HIT	NameNotChanged
		public static final enum surge.util.MSound VILLAGER_IDLE	NameNotChanged
		public static final enum surge.util.MSound VILLAGER_NO	NameNotChanged
		public static final enum surge.util.MSound VILLAGER_YES	NameNotChanged
		public static final enum surge.util.MSound WATER	NameNotChanged
		public static final enum surge.util.MSound WITHER_DEATH	NameNotChanged
		public static final enum surge.util.MSound WITHER_HURT	NameNotChanged
		public static final enum surge.util.MSound WITHER_IDLE	NameNotChanged
		public static final enum surge.util.MSound WITHER_SHOOT	NameNotChanged
		public static final enum surge.util.MSound WITHER_SPAWN	NameNotChanged
		public static final enum surge.util.MSound WOLF_BARK	NameNotChanged
		public static final enum surge.util.MSound WOLF_DEATH	NameNotChanged
		public static final enum surge.util.MSound WOLF_GROWL	NameNotChanged
		public static final enum surge.util.MSound WOLF_HOWL	NameNotChanged
		public static final enum surge.util.MSound WOLF_HURT	NameNotChanged
		public static final enum surge.util.MSound WOLF_PANT	NameNotChanged
		public static final enum surge.util.MSound WOLF_SHAKE	NameNotChanged
		public static final enum surge.util.MSound WOLF_WALK	NameNotChanged
		public static final enum surge.util.MSound WOLF_WHINE	NameNotChanged
		public static final enum surge.util.MSound WOOD_CLICK	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_DEATH	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_HURT	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_IDLE	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_INFECT	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_METAL	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_PIG_ANGRY	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_PIG_DEATH	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_PIG_HURT	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_PIG_IDLE	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_REMEDY	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_UNFECT	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_WALK	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_WOOD	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_WOODBREAK	NameNotChanged
		private java.lang.String post19sound	=>	b
		private java.lang.String pre19sound	=>	a
		private org.bukkit.Sound resolvedSound	=>	c
	MethodsOf: surge.util.MSound
		public org.bukkit.Sound bukkitSound() 	NameNotChanged
		public static surge.util.MSound valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.MSound[] values() 	NameNotChanged
	LineNumbersOf: surge.util.MSound
		1	=>	51 and 194
		8	=>	35
		10	=>	31
		11	=>	188
		12	=>	150
		13	=>	104
		14	=>	154
		15	=>	107
		16	=>	151
		17	=>	156
		18	=>	32
		19	=>	94
		20	=>	102
		21	=>	172
		22	=>	192
		23	=>	17
		24	=>	197
		25	=>	159
		26	=>	124
		27	=>	50
		28	=>	52
		29	=>	162
		30	=>	121
		31	=>	66
		32	=>	183
		33	=>	86
		34	=>	80
		35	=>	160
		36	=>	125
		37	=>	76
		38	=>	176
		39	=>	91
		40	=>	167
		41	=>	142
		42	=>	92
		43	=>	23
		44	=>	195
		45	=>	202
		46	=>	185
		47	=>	118
		48	=>	1
		49	=>	73
		50	=>	99
		51	=>	168
		52	=>	45
		53	=>	181
		54	=>	135
		55	=>	53
		56	=>	113
		57	=>	119
		58	=>	201
		59	=>	9
		60	=>	115
		61	=>	29
		62	=>	55
		63	=>	169
		64	=>	147
		65	=>	85
		66	=>	207
		67	=>	87
		68	=>	128
		69	=>	161
		70	=>	120
		71	=>	122
		72	=>	158
		73	=>	60
		74	=>	153
		75	=>	58
		76	=>	136
		77	=>	44
		78	=>	24
		79	=>	67
		80	=>	68
		81	=>	114
		82	=>	186
		83	=>	123
		84	=>	131
		85	=>	139
		86	=>	129
		87	=>	22
		88	=>	43
		89	=>	133
		90	=>	203
		91	=>	98
		92	=>	27
		93	=>	171
		94	=>	88
		95	=>	47
		96	=>	71
		97	=>	33
		98	=>	196
		99	=>	204
		100	=>	170
		101	=>	137
		102	=>	130
		103	=>	152
		104	=>	110
		105	=>	26
		106	=>	16
		107	=>	111
		108	=>	74
		109	=>	200
		110	=>	127
		111	=>	46
		112	=>	101
		113	=>	117
		114	=>	37
		115	=>	206
		116	=>	11
		117	=>	5
		118	=>	112
		119	=>	143
		120	=>	146
		121	=>	59
		122	=>	65
		123	=>	132
		124	=>	56
		125	=>	39
		126	=>	145
		127	=>	42
		128	=>	4
		129	=>	28
		130	=>	75
		131	=>	79
		132	=>	191
		133	=>	34
		134	=>	141
		135	=>	100
		136	=>	20
		137	=>	205
		138	=>	81
		139	=>	64
		140	=>	90
		141	=>	18
		142	=>	138
		143	=>	187
		144	=>	198
		145	=>	126
		146	=>	72
		147	=>	193
		148	=>	108
		149	=>	165
		150	=>	82
		151	=>	89
		152	=>	77
		153	=>	175
		154	=>	30
		155	=>	78
		156	=>	103
		157	=>	116
		158	=>	54
		159	=>	166
		160	=>	84
		161	=>	189
		162	=>	149
		163	=>	163
		164	=>	180
		165	=>	97
		166	=>	184
		167	=>	38
		168	=>	144
		169	=>	7
		170	=>	182
		171	=>	179
		172	=>	199
		173	=>	21
		174	=>	2
		175	=>	164
		176	=>	41
		177	=>	96
		178	=>	25
		179	=>	140
		180	=>	109
		181	=>	93
		182	=>	49
		183	=>	3
		184	=>	174
		185	=>	177
		186	=>	63
		187	=>	134
		188	=>	14
		189	=>	62
		190	=>	106
		191	=>	13
		192	=>	48
		193	=>	15
		194	=>	40
		195	=>	178
		196	=>	10
		197	=>	69
		198	=>	61
		199	=>	155
		200	=>	36
		201	=>	8
		202	=>	19
		203	=>	173
		207	=>	148
		209	=>	12
		211	=>	190
		212	=>	57
		213	=>	70
		217	=>	83
		219	=>	157
		224	=>	105
		227	=>	95
		229	=>	6

Class: public surge.util.MaterialBlock	NameNotChanged
	Source: "MaterialBlock.java"
	FieldsOf: surge.util.MaterialBlock
		private java.lang.Byte data	=>	b
		private org.bukkit.Material material	=>	a
	MethodsOf: surge.util.MaterialBlock
		public boolean equals(java.lang.Object) 	NameNotChanged
		public java.lang.Byte getData() 	NameNotChanged
		public org.bukkit.Material getMaterial() 	NameNotChanged
		public int hashCode() 	NameNotChanged
		public void setData(java.lang.Byte) 	NameNotChanged
		public void setMaterial(org.bukkit.Material) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.util.MaterialBlock
		26	=>	37
		27	=>	34
		28	=>	22
		29	=>	21
		32	=>	19
		33	=>	16
		34	=>	1
		35	=>	39
		38	=>	18
		39	=>	32
		40	=>	5
		41	=>	30
		44	=>	24
		45	=>	28
		46	=>	42
		47	=>	4
		51	=>	7
		56	=>	13
		57	=>	20
		61	=>	45
		66	=>	31
		67	=>	36
		72	=>	11
		74	=>	35
		77	=>	17
		83	=>	40
		84	=>	3
		85	=>	29
		86	=>	38
		87	=>	8
		93	=>	25
		95	=>	41
		97	=>	14
		99	=>	44
		101	=>	27
		103	=>	43
		105	=>	33
		106	=>	2
		108	=>	15
		110	=>	26
		113	=>	12
		115	=>	10
		117	=>	9
		119	=>	6
		121	=>	23

Class: public surge.util.P	NameNotChanged
	Source: "P.java"
	FieldsOf: surge.util.P
	MethodsOf: surge.util.P
		public static boolean canFindPlayer(java.lang.String) 	NameNotChanged
		public static void clear(org.bukkit.entity.Player) 	NameNotChanged
		public static void clearEffects(org.bukkit.entity.Player) 	NameNotChanged
		public static void disable(org.bukkit.entity.Player) 	NameNotChanged
		public static void enable(org.bukkit.entity.Player) 	NameNotChanged
		public static org.bukkit.entity.Player findPlayer(java.lang.String) 	NameNotChanged
		public static org.bukkit.entity.Player getAnyPlayer() 	NameNotChanged
		public static org.bukkit.Location getCrotchLocation(org.bukkit.entity.Player) 	NameNotChanged
		public static org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Player, double, double) 	NameNotChanged
		public static org.bukkit.Location getHand(org.bukkit.entity.Player) 	NameNotChanged
		public static org.bukkit.Location getHand(org.bukkit.entity.Player, float, float) 	NameNotChanged
		public static org.bukkit.entity.Player getPlayer(java.lang.String) 	NameNotChanged
		public static surge.util.Shape getShape(org.bukkit.entity.Player) 	NameNotChanged
		public static int getTotalExperience(org.bukkit.entity.Player) 	NameNotChanged
		public static boolean hasInventoryOpen(org.bukkit.entity.Player) 	NameNotChanged
		public static void heal(org.bukkit.entity.Player) 	NameNotChanged
		public static void heal(org.bukkit.entity.Player, double) 	NameNotChanged
		public static surge.collection.GList inArea(org.bukkit.Location, double) 	NameNotChanged
		public static surge.collection.GList inArea(org.bukkit.Location, int) 	NameNotChanged
		public static surge.collection.GList inChunk(org.bukkit.Chunk) 	NameNotChanged
		public static surge.collection.GList inWorld(org.bukkit.World) 	NameNotChanged
		public static boolean isAnyOnline() 	NameNotChanged
		public static boolean isOnline(java.lang.String) 	NameNotChanged
		public static void kill(org.bukkit.entity.Player) 	NameNotChanged
		public static surge.collection.GList onlinePlayers() 	NameNotChanged
		public static void resetHunger(org.bukkit.entity.Player) 	NameNotChanged
		public static void resetMaxHeath(org.bukkit.entity.Player) 	NameNotChanged
		public static void setTotalExperience(org.bukkit.entity.Player, int) 	NameNotChanged
		public static org.bukkit.Location targetBlock(org.bukkit.entity.Player, int) 	NameNotChanged
		public static org.bukkit.entity.Entity targetEntity(org.bukkit.entity.Player, int) 	NameNotChanged
	LineNumbersOf: surge.util.P
		25	=>	56
		36	=>	60
		48	=>	73
		58	=>	3
		68	=>	19
		80	=>	32
		92	=>	29 and 52
		104	=>	33
		118	=>	23
		132	=>	11
		143	=>	70
		144	=>	75
		154	=>	63
		155	=>	44
		168	=>	78
		182	=>	55
		194	=>	28
		195	=>	81
		211	=>	65
		213	=>	51
		216	=>	2
		218	=>	5
		221	=>	12
		222	=>	50
		224	=>	34
		241	=>	21
		243	=>	79
		257	=>	8
		258	=>	42
		261	=>	40
		266	=>	59
		281	=>	20
		282	=>	80
		283	=>	31
		285	=>	58
		289	=>	18
		300	=>	35
		312	=>	25 and 37
		314	=>	41
		316	=>	6
		320	=>	66 and 71
		322	=>	15
		324	=>	74
		328	=>	4
		338	=>	26
		340	=>	22 and 30
		342	=>	48
		345	=>	47
		357	=>	36
		368	=>	54
		369	=>	39
		370	=>	46
		371	=>	68
		381	=>	13 and 17
		383	=>	1
		385	=>	53
		398	=>	49
		399	=>	69
		409	=>	62
		410	=>	38
		421	=>	16
		422	=>	64
		432	=>	61
		433	=>	57
		443	=>	9
		444	=>	10
		455	=>	7
		467	=>	67
		483	=>	24
		484	=>	77
		485	=>	76
		486	=>	72
		488	=>	27
		489	=>	45
		490	=>	43
		492	=>	14

Class: surge.util.P$1	NameNotChanged
	Source: "P.java"
	FieldsOf: surge.util.P$1
	MethodsOf: surge.util.P$1
		public bridge synthetic java.lang.Object onAdapt(java.lang.Object) 	NameNotChanged
		public org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) 	NameNotChanged
	LineNumbersOf: surge.util.P$1
		1	=>	2 and 4
		92	=>	1
		97	=>	6
		99	=>	5
		102	=>	3

Class: surge.util.P$2	NameNotChanged
	Source: "P.java"
	FieldsOf: surge.util.P$2
		private final synthetic java.lang.Double val$doff	NameNotChanged
		private final synthetic org.bukkit.entity.Player val$e	NameNotChanged
		private final synthetic org.bukkit.entity.Entity[] val$result	NameNotChanged
	MethodsOf: surge.util.P$2
		public void onTrace(org.bukkit.Location) 	NameNotChanged
	LineNumbersOf: surge.util.P$2
		1	=>	7
		224	=>	5
		229	=>	10
		231	=>	4 and 8
		233	=>	9
		235	=>	1
		236	=>	2
		237	=>	6
		240	=>	3

Class: public surge.util.PE	NameNotChanged
	Source: "PE.java"
	FieldsOf: surge.util.PE
		public static surge.util.PE ABSORPTION	NameNotChanged
		public static surge.util.PE BLINDNESS	NameNotChanged
		public static surge.util.PE CONFUSION	NameNotChanged
		public static surge.util.PE DAMAGE_RESISTANCE	NameNotChanged
		public static surge.util.PE FAST_DIGGING	NameNotChanged
		public static surge.util.PE FIRE_RESISTANCE	NameNotChanged
		public static surge.util.PE GLOWING	NameNotChanged
		public static surge.util.PE HARM	NameNotChanged
		public static surge.util.PE HEAL	NameNotChanged
		public static surge.util.PE HEALTH_BOOST	NameNotChanged
		public static surge.util.PE HUNGER	NameNotChanged
		public static surge.util.PE INCREASE_DAMAGE	NameNotChanged
		public static surge.util.PE INVISIBILITY	NameNotChanged
		public static surge.util.PE JUMP	NameNotChanged
		public static surge.util.PE LEVITATION	NameNotChanged
		public static surge.util.PE LUCK	NameNotChanged
		public static surge.util.PE NIGHT_VISION	NameNotChanged
		public static surge.util.PE POISON	NameNotChanged
		public static surge.util.PE REGENERATION	NameNotChanged
		public static surge.util.PE SATURATION	NameNotChanged
		public static surge.util.PE SLOW	NameNotChanged
		public static surge.util.PE SLOW_DIGGING	NameNotChanged
		public static surge.util.PE SPEED	NameNotChanged
		public static surge.util.PE UNLUCK	NameNotChanged
		public static surge.util.PE WATER_BREATHING	NameNotChanged
		public static surge.util.PE WEAKNESS	NameNotChanged
		public static surge.util.PE WITHER	NameNotChanged
	MethodsOf: surge.util.PE
		public surge.util.PE a(int) 	NameNotChanged
		public boolean apply(org.bukkit.entity.LivingEntity) 	NameNotChanged
		public org.bukkit.potion.PotionEffect c() 	NameNotChanged
		public void c(org.bukkit.entity.LivingEntity) 	NameNotChanged
		public void crm(org.bukkit.entity.LivingEntity) 	NameNotChanged
		public surge.util.PE d(int) 	NameNotChanged
		public static surge.util.PE defaulted(org.bukkit.potion.PotionEffectType) 	NameNotChanged
		public boolean equals(java.lang.Object) 	NameNotChanged
		public int getAmplifier() 	NameNotChanged
		public int getDuration() 	NameNotChanged
		public org.bukkit.potion.PotionEffectType getType() 	NameNotChanged
		public boolean hasParticles() 	NameNotChanged
		public int hashCode() 	NameNotChanged
		public boolean isAmbient() 	NameNotChanged
		public void rm(org.bukkit.entity.LivingEntity) 	NameNotChanged
		public java.util.Map serialize() 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.util.PE
		50	=>	32
		51	=>	31
		55	=>	12
		56	=>	20
		60	=>	25
		61	=>	4
		65	=>	23
		66	=>	1
		71	=>	43
		77	=>	5
		79	=>	2
		85	=>	46
		91	=>	8
		97	=>	17
		103	=>	13
		109	=>	51
		115	=>	21
		121	=>	41
		127	=>	50
		132	=>	44
		144	=>	7
		156	=>	40
		166	=>	34
		177	=>	38
		178	=>	48
		182	=>	27
		183	=>	45
		187	=>	6
		188	=>	35
		192	=>	9
		193	=>	19
		194	=>	11
		195	=>	53
		196	=>	49
		197	=>	22
		198	=>	15
		199	=>	39
		200	=>	37
		201	=>	42
		202	=>	47
		203	=>	18
		204	=>	52
		205	=>	36
		206	=>	28
		207	=>	14
		208	=>	29
		209	=>	26
		210	=>	30
		211	=>	16
		212	=>	24
		213	=>	10
		214	=>	3
		215	=>	33

Class: public surge.util.Paste	NameNotChanged
	Source: "Paste.java"
	FieldsOf: surge.util.Paste
	MethodsOf: surge.util.Paste
		public static java.lang.String paste(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.util.Paste
		15	=>	4
		28	=>	6
		29	=>	7
		30	=>	5
		31	=>	3
		32	=>	8
		33	=>	2
		34	=>	1
		36	=>	9

Class: public abstract annotation surge.util.Persist	NameNotChanged
	Source: "Persist.java"
	FieldsOf: surge.util.Persist
	MethodsOf: surge.util.Persist
	LineNumbersOf: surge.util.Persist

Class: public surge.util.PluginUtil	NameNotChanged
	Source: "PluginUtil.java"
	FieldsOf: surge.util.PluginUtil
	MethodsOf: surge.util.PluginUtil
		public static void disable(org.bukkit.plugin.Plugin) 	NameNotChanged
		public static void disableAll() 	NameNotChanged
		public static void enable(org.bukkit.plugin.Plugin) 	NameNotChanged
		public static void enableAll() 	NameNotChanged
		public static java.util.List findByCommand(java.lang.String) 	NameNotChanged
		public static java.lang.String getFormattedName(org.bukkit.plugin.Plugin) 	NameNotChanged
		public static java.lang.String getFormattedName(org.bukkit.plugin.Plugin, boolean) 	NameNotChanged
		public static org.bukkit.plugin.Plugin getPluginByName(java.lang.String) 	NameNotChanged
		public static java.lang.String getPluginFileName(java.lang.String) 	NameNotChanged
		public static java.util.List getPluginNames(boolean) 	NameNotChanged
		public static java.lang.String getPluginVersion(java.lang.String) 	NameNotChanged
		public static java.lang.String getUsages(org.bukkit.plugin.Plugin) 	NameNotChanged
		public static void load(java.lang.String) 	NameNotChanged
		private static void load(org.bukkit.plugin.Plugin) 	=>	a
		public static void reload(org.bukkit.plugin.Plugin) 	NameNotChanged
		public static void reloadAll() 	NameNotChanged
		public static void unload(org.bukkit.plugin.Plugin) 	NameNotChanged
	LineNumbersOf: surge.util.PluginUtil
		61	=>	81
		72	=>	82
		73	=>	78
		74	=>	146
		81	=>	80 and 105
		83	=>	175
		85	=>	107
		95	=>	129
		97	=>	73
		99	=>	165
		106	=>	3 and 185
		108	=>	55
		110	=>	126
		121	=>	14
		135	=>	62
		136	=>	158
		137	=>	116
		139	=>	123
		142	=>	79
		154	=>	18 and 43
		156	=>	156
		157	=>	163
		159	=>	95
		169	=>	20
		170	=>	70 and 170
		171	=>	48
		172	=>	176
		184	=>	155
		185	=>	31
		186	=>	148
		187	=>	85
		200	=>	77
		202	=>	115
		204	=>	161
		206	=>	83
		207	=>	93 and 94
		209	=>	153
		210	=>	179
		212	=>	58
		217	=>	24
		219	=>	72
		222	=>	113
		237	=>	137
		239	=>	12 and 133
		243	=>	166
		245	=>	29
		249	=>	89
		251	=>	127 and 177
		255	=>	164
		258	=>	37
		260	=>	49
		261	=>	17
		266	=>	34
		268	=>	66 and 149
		272	=>	44
		275	=>	59
		278	=>	106
		280	=>	65
		282	=>	159
		284	=>	183
		285	=>	98
		292	=>	141
		295	=>	46 and 60
		297	=>	171
		299	=>	7
		316	=>	144
		337	=>	33
		338	=>	178
		342	=>	69
		344	=>	157 and 182
		346	=>	143
		350	=>	87
		351	=>	21
		353	=>	124
		357	=>	47
		364	=>	4
		377	=>	101
		379	=>	174
		381	=>	103
		383	=>	13
		386	=>	28
		388	=>	11
		390	=>	67 and 134
		392	=>	52
		396	=>	57
		397	=>	35
		399	=>	54
		400	=>	162
		403	=>	71
		405	=>	90
		413	=>	45
		414	=>	160
		415	=>	138
		417	=>	39
		418	=>	172
		420	=>	131
		422	=>	130
		423	=>	109
		426	=>	111
		427	=>	147
		429	=>	9
		441	=>	99
		443	=>	61
		444	=>	150
		446	=>	121
		453	=>	26 and 145
		455	=>	6
		457	=>	142
		469	=>	68
		471	=>	38
		473	=>	23
		475	=>	108
		477	=>	84
		478	=>	114
		479	=>	100
		481	=>	5
		483	=>	76
		486	=>	15
		491	=>	120
		492	=>	132
		493	=>	56
		495	=>	25
		496	=>	41
		497	=>	22
		501	=>	53
		502	=>	64
		503	=>	128
		504	=>	2
		505	=>	51
		507	=>	117
		510	=>	16
		511	=>	36
		512	=>	118
		514	=>	184
		515	=>	168
		516	=>	63
		518	=>	91
		519	=>	1
		521	=>	136
		522	=>	30
		524	=>	139
		526	=>	181
		527	=>	97
		531	=>	88
		533	=>	167
		534	=>	75
		536	=>	152
		537	=>	74
		539	=>	92
		541	=>	86 and 140
		543	=>	110 and 122
		545	=>	27
		546	=>	180
		548	=>	169
		554	=>	112
		556	=>	40 and 151
		558	=>	154
		559	=>	173
		561	=>	104
		562	=>	32
		564	=>	50
		565	=>	10
		574	=>	119
		576	=>	135
		580	=>	42
		581	=>	102
		582	=>	19
		584	=>	96
		593	=>	125
		595	=>	8

Class: public surge.util.PositionalSelector	NameNotChanged
	Source: "PositionalSelector.java"
	FieldsOf: surge.util.PositionalSelector
		private surge.collection.GSet allowedChunks	=>	a
	MethodsOf: surge.util.PositionalSelector
		public void addAllWorlds() 	NameNotChanged
		public void addChunk(org.bukkit.Chunk) 	NameNotChanged
		public void addWorld(org.bukkit.World) 	NameNotChanged
		public surge.collection.GSet getAllowedChunks() 	NameNotChanged
	LineNumbersOf: surge.util.PositionalSelector
		12	=>	11
		14	=>	8
		15	=>	3
		19	=>	4
		20	=>	7
		21	=>	10
		23	=>	12
		25	=>	2
		26	=>	5
		30	=>	13
		31	=>	9
		35	=>	6
		36	=>	16
		40	=>	15
		41	=>	1
		45	=>	14

Class: public final enum surge.util.Protocol	NameNotChanged
	Source: "Protocol.java"
	FieldsOf: surge.util.Protocol
		private static final synthetic surge.util.Protocol[] $VALUES	=>	c
		public static final enum surge.util.Protocol B1_2_4	NameNotChanged
		public static final enum surge.util.Protocol B1_2_5	NameNotChanged
		public static final enum surge.util.Protocol B1_3_1	NameNotChanged
		public static final enum surge.util.Protocol B1_3_2	NameNotChanged
		public static final enum surge.util.Protocol B1_4_2	NameNotChanged
		public static final enum surge.util.Protocol B1_4_4	NameNotChanged
		public static final enum surge.util.Protocol B1_4_5	NameNotChanged
		public static final enum surge.util.Protocol B1_4_6	NameNotChanged
		public static final enum surge.util.Protocol B1_4_7	NameNotChanged
		public static final enum surge.util.Protocol B1_5	NameNotChanged
		public static final enum surge.util.Protocol B1_5_1	NameNotChanged
		public static final enum surge.util.Protocol B1_5_2	NameNotChanged
		public static final enum surge.util.Protocol B1_6_1	NameNotChanged
		public static final enum surge.util.Protocol B1_6_2	NameNotChanged
		public static final enum surge.util.Protocol B1_6_3	NameNotChanged
		public static final enum surge.util.Protocol B1_6_4	NameNotChanged
		public static final enum surge.util.Protocol EARLIEST	NameNotChanged
		public static final enum surge.util.Protocol LATEST	NameNotChanged
		public static final enum surge.util.Protocol R1_10	NameNotChanged
		public static final enum surge.util.Protocol R1_10_1	NameNotChanged
		public static final enum surge.util.Protocol R1_10_2	NameNotChanged
		public static final enum surge.util.Protocol R1_11	NameNotChanged
		public static final enum surge.util.Protocol R1_11_1	NameNotChanged
		public static final enum surge.util.Protocol R1_11_2	NameNotChanged
		public static final enum surge.util.Protocol R1_12	NameNotChanged
		public static final enum surge.util.Protocol R1_12_1	NameNotChanged
		public static final enum surge.util.Protocol R1_12_2	NameNotChanged
		public static final enum surge.util.Protocol R1_12_2_PRE	NameNotChanged
		public static final enum surge.util.Protocol R1_7_1	NameNotChanged
		public static final enum surge.util.Protocol R1_7_10	NameNotChanged
		public static final enum surge.util.Protocol R1_7_2	NameNotChanged
		public static final enum surge.util.Protocol R1_7_3	NameNotChanged
		public static final enum surge.util.Protocol R1_7_4	NameNotChanged
		public static final enum surge.util.Protocol R1_7_5	NameNotChanged
		public static final enum surge.util.Protocol R1_7_6	NameNotChanged
		public static final enum surge.util.Protocol R1_7_7	NameNotChanged
		public static final enum surge.util.Protocol R1_7_8	NameNotChanged
		public static final enum surge.util.Protocol R1_7_9	NameNotChanged
		public static final enum surge.util.Protocol R1_8	NameNotChanged
		public static final enum surge.util.Protocol R1_8_1	NameNotChanged
		public static final enum surge.util.Protocol R1_8_2	NameNotChanged
		public static final enum surge.util.Protocol R1_8_3	NameNotChanged
		public static final enum surge.util.Protocol R1_8_4	NameNotChanged
		public static final enum surge.util.Protocol R1_8_5	NameNotChanged
		public static final enum surge.util.Protocol R1_8_6	NameNotChanged
		public static final enum surge.util.Protocol R1_8_7	NameNotChanged
		public static final enum surge.util.Protocol R1_8_8	NameNotChanged
		public static final enum surge.util.Protocol R1_8_9	NameNotChanged
		public static final enum surge.util.Protocol R1_9	NameNotChanged
		public static final enum surge.util.Protocol R1_9_1	NameNotChanged
		public static final enum surge.util.Protocol R1_9_2	NameNotChanged
		public static final enum surge.util.Protocol R1_9_3	NameNotChanged
		public static final enum surge.util.Protocol R1_9_4	NameNotChanged
		public static final enum surge.util.Protocol UNKNOWN	NameNotChanged
		private java.lang.String search	=>	b
		private int version	=>	a
	MethodsOf: surge.util.Protocol
		public int getMetaVersion() 	NameNotChanged
		public static surge.util.Protocol getProtocolVersion() 	NameNotChanged
		public int getVersion() 	NameNotChanged
		public java.lang.String getVersionString() 	NameNotChanged
		public boolean isActualVersion() 	NameNotChanged
		public boolean isNettySupported() 	NameNotChanged
		public boolean isServerVersion() 	NameNotChanged
		public surge.util.ProtocolRange to(surge.util.Protocol) 	NameNotChanged
		public static surge.util.Protocol valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.Protocol[] values() 	NameNotChanged
	LineNumbersOf: surge.util.Protocol
		5	=>	20, 52 and 75
		7	=>	3
		8	=>	8
		9	=>	27
		10	=>	26
		11	=>	36
		12	=>	60
		13	=>	37
		14	=>	24
		15	=>	22
		16	=>	67
		17	=>	47
		18	=>	25
		19	=>	72
		20	=>	59
		21	=>	42
		22	=>	53
		23	=>	73
		24	=>	46
		25	=>	23
		26	=>	35
		27	=>	7
		28	=>	16
		29	=>	51
		30	=>	71
		31	=>	2
		32	=>	13
		33	=>	6
		34	=>	77
		35	=>	43
		36	=>	28
		37	=>	1
		38	=>	12
		39	=>	56
		40	=>	15
		41	=>	54
		42	=>	4
		43	=>	76
		44	=>	38
		45	=>	70
		46	=>	10
		47	=>	9
		48	=>	66
		49	=>	21
		50	=>	65
		51	=>	14
		52	=>	68
		53	=>	58
		54	=>	11
		55	=>	50
		56	=>	33
		57	=>	74
		58	=>	49
		59	=>	18
		60	=>	39
		66	=>	34
		67	=>	45
		68	=>	31
		70	=>	32
		72	=>	19
		74	=>	41
		78	=>	55 and 61
		80	=>	44
		82	=>	17
		86	=>	69
		91	=>	62
		96	=>	29
		101	=>	63
		106	=>	57
		111	=>	48
		116	=>	30
		118	=>	40
		121	=>	5
		126	=>	64

Class: public surge.util.ProtocolRange	NameNotChanged
	Source: "ProtocolRange.java"
	FieldsOf: surge.util.ProtocolRange
		private surge.util.Protocol from	=>	a
		private surge.util.Protocol to	=>	b
	MethodsOf: surge.util.ProtocolRange
		public boolean contains(surge.util.Protocol) 	NameNotChanged
		public surge.util.Protocol getFrom() 	NameNotChanged
		public surge.util.Protocol getTo() 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.util.ProtocolRange
		9	=>	2
		10	=>	4
		11	=>	8
		12	=>	1
		16	=>	7
		21	=>	3
		26	=>	5
		32	=>	6

Class: public surge.util.Range	NameNotChanged
	Source: "Range.java"
	FieldsOf: surge.util.Range
		private double max	=>	b
		private double min	=>	a
	MethodsOf: surge.util.Range
		public double getMax() 	NameNotChanged
		public double getMin() 	NameNotChanged
		public boolean isWithin(double) 	NameNotChanged
		public boolean isWithin(int) 	NameNotChanged
		public boolean isWithin(long) 	NameNotChanged
		public double randomNext() 	NameNotChanged
		public int randomNextInt() 	NameNotChanged
		public long randomNextLong() 	NameNotChanged
		public void setMax(double) 	NameNotChanged
		public void setMin(double) 	NameNotChanged
	LineNumbersOf: surge.util.Range
		21	=>	10
		23	=>	20
		24	=>	2
		25	=>	6
		37	=>	1
		38	=>	9
		50	=>	8
		51	=>	15
		60	=>	11
		70	=>	16
		80	=>	14
		92	=>	13
		104	=>	19
		116	=>	3
		121	=>	17
		126	=>	12
		127	=>	4
		131	=>	18
		136	=>	7
		137	=>	5

Class: public surge.util.RayTrace	NameNotChanged
	Source: "RayTrace.java"
	FieldsOf: surge.util.RayTrace
		private org.bukkit.util.Vector direction	=>	b
		private java.lang.Double distanceCovered	=>	d
		private java.lang.Double maxDistance	=>	c
		private org.bukkit.Location start	=>	a
		private java.lang.Double step	=>	e
		private java.lang.Boolean stop	=>	f
	MethodsOf: surge.util.RayTrace
		public org.bukkit.util.Vector getDirection() 	NameNotChanged
		public java.lang.Double getDistanceCovered() 	NameNotChanged
		public java.lang.Double getMaxDistance() 	NameNotChanged
		public org.bukkit.Location getStart() 	NameNotChanged
		public java.lang.Double getStep() 	NameNotChanged
		public void onTrace(org.bukkit.Location) 	NameNotChanged
		public void setDirection(org.bukkit.util.Vector) 	NameNotChanged
		public void setDistanceCovered(java.lang.Double) 	NameNotChanged
		public void setMaxDistance(java.lang.Double) 	NameNotChanged
		public void setStart(org.bukkit.Location) 	NameNotChanged
		public void setStep(java.lang.Double) 	NameNotChanged
		public void stop() 	NameNotChanged
		public void trace() 	NameNotChanged
	LineNumbersOf: surge.util.RayTrace
		37	=>	19
		38	=>	23
		39	=>	6
		40	=>	4
		41	=>	22
		42	=>	12
		43	=>	26
		44	=>	2
		51	=>	3
		53	=>	32
		55	=>	10
		56	=>	17
		57	=>	30
		58	=>	34
		60	=>	25
		62	=>	20
		64	=>	29
		65	=>	1
		73	=>	27
		74	=>	36
		85	=>	5
		89	=>	9
		94	=>	24
		95	=>	16
		99	=>	33
		104	=>	14
		105	=>	18
		109	=>	35
		114	=>	13
		115	=>	28
		119	=>	31
		124	=>	21
		125	=>	8
		129	=>	15
		134	=>	7
		135	=>	11

Class: public final surge.util.ReflectionUtils	NameNotChanged
	Source: "ReflectionUtils.java"
	FieldsOf: surge.util.ReflectionUtils
	MethodsOf: surge.util.ReflectionUtils
		public static java.lang.reflect.Constructor getConstructor(java.lang.Class, java.lang.Class[]) 	NameNotChanged
		public static java.lang.reflect.Constructor getConstructor(java.lang.String, surge.util.ReflectionUtils$PackageType, java.lang.Class[]) 	NameNotChanged
		public static java.lang.reflect.Field getField(java.lang.Class, boolean, java.lang.String) 	NameNotChanged
		public static java.lang.reflect.Field getField(java.lang.String, surge.util.ReflectionUtils$PackageType, boolean, java.lang.String) 	NameNotChanged
		public static java.lang.reflect.Method getMethod(java.lang.Class, java.lang.String, java.lang.Class[]) 	NameNotChanged
		public static java.lang.reflect.Method getMethod(java.lang.String, surge.util.ReflectionUtils$PackageType, java.lang.String, java.lang.Class[]) 	NameNotChanged
		public static java.lang.Object getValue(java.lang.Object, boolean, java.lang.String) 	NameNotChanged
		public static java.lang.Object getValue(java.lang.Object, java.lang.Class, boolean, java.lang.String) 	NameNotChanged
		public static java.lang.Object getValue(java.lang.Object, java.lang.String, surge.util.ReflectionUtils$PackageType, boolean, java.lang.String) 	NameNotChanged
		public static java.lang.Object instantiateObject(java.lang.Class, java.lang.Object[]) 	NameNotChanged
		public static java.lang.Object instantiateObject(java.lang.String, surge.util.ReflectionUtils$PackageType, java.lang.Object[]) 	NameNotChanged
		public static java.lang.Object invokeMethod(java.lang.Object, java.lang.Class, java.lang.String, java.lang.Object[]) 	NameNotChanged
		public static java.lang.Object invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[]) 	NameNotChanged
		public static java.lang.Object invokeMethod(java.lang.Object, java.lang.String, surge.util.ReflectionUtils$PackageType, java.lang.String, java.lang.Object[]) 	NameNotChanged
		public static void setValue(java.lang.Object, boolean, java.lang.String, java.lang.Object) 	NameNotChanged
		public static void setValue(java.lang.Object, java.lang.Class, boolean, java.lang.String, java.lang.Object) 	NameNotChanged
		public static void setValue(java.lang.Object, java.lang.String, surge.util.ReflectionUtils$PackageType, boolean, java.lang.String, java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.util.ReflectionUtils
		33	=>	31
		36	=>	7
		56	=>	33
		57	=>	9 and 32
		59	=>	27
		61	=>	34
		63	=>	13
		65	=>	8
		89	=>	28
		119	=>	30
		156	=>	17
		178	=>	19
		179	=>	3 and 4
		181	=>	21
		183	=>	10
		185	=>	2
		187	=>	6
		213	=>	26
		243	=>	22
		276	=>	20
		312	=>	5
		332	=>	16
		333	=>	29
		334	=>	36
		360	=>	18
		387	=>	11
		419	=>	25
		446	=>	24
		475	=>	35
		476	=>	1
		509	=>	23
		510	=>	14
		536	=>	12
		537	=>	15

Class: public final enum surge.util.ReflectionUtils$DataType	NameNotChanged
	Source: "ReflectionUtils.java"
	FieldsOf: surge.util.ReflectionUtils$DataType
		public static final enum surge.util.ReflectionUtils$DataType BOOLEAN	NameNotChanged
		public static final enum surge.util.ReflectionUtils$DataType BYTE	NameNotChanged
		public static final enum surge.util.ReflectionUtils$DataType CHARACTER	NameNotChanged
		private static final java.util.Map CLASS_MAP	=>	a
		public static final enum surge.util.ReflectionUtils$DataType DOUBLE	NameNotChanged
		private static final synthetic surge.util.ReflectionUtils$DataType[] ENUM$VALUES	=>	d
		public static final enum surge.util.ReflectionUtils$DataType FLOAT	NameNotChanged
		public static final enum surge.util.ReflectionUtils$DataType INTEGER	NameNotChanged
		public static final enum surge.util.ReflectionUtils$DataType LONG	NameNotChanged
		public static final enum surge.util.ReflectionUtils$DataType SHORT	NameNotChanged
		private final java.lang.Class primitive	=>	b
		private final java.lang.Class reference	=>	c
	MethodsOf: surge.util.ReflectionUtils$DataType
		public static boolean compare(java.lang.Class[], java.lang.Class[]) 	NameNotChanged
		public static surge.util.ReflectionUtils$DataType fromClass(java.lang.Class) 	NameNotChanged
		public java.lang.Class getPrimitive() 	NameNotChanged
		public static java.lang.Class getPrimitive(java.lang.Class) 	NameNotChanged
		public static java.lang.Class[] getPrimitive(java.lang.Class[]) 	NameNotChanged
		public static java.lang.Class[] getPrimitive(java.lang.Object[]) 	NameNotChanged
		public java.lang.Class getReference() 	NameNotChanged
		public static java.lang.Class getReference(java.lang.Class) 	NameNotChanged
		public static java.lang.Class[] getReference(java.lang.Class[]) 	NameNotChanged
		public static java.lang.Class[] getReference(java.lang.Object[]) 	NameNotChanged
		public static surge.util.ReflectionUtils$DataType valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.ReflectionUtils$DataType[] values() 	NameNotChanged
	LineNumbersOf: surge.util.ReflectionUtils$DataType
		1	=>	19 and 40
		632	=>	52
		634	=>	42
		641	=>	5 and 38
		643	=>	25
		644	=>	32
		646	=>	15
		656	=>	48
		658	=>	14
		659	=>	7
		660	=>	22
		669	=>	50
		679	=>	49
		691	=>	33
		704	=>	37
		705	=>	2
		718	=>	45
		719	=>	44
		731	=>	1
		732	=>	46
		733	=>	26 and 35
		735	=>	53
		737	=>	4
		749	=>	10
		750	=>	20
		751	=>	27 and 39
		753	=>	9
		755	=>	16
		767	=>	47
		768	=>	34
		769	=>	8 and 41
		771	=>	28
		773	=>	18
		785	=>	31
		786	=>	24
		787	=>	43 and 54
		789	=>	11
		791	=>	23
		805	=>	3
		807	=>	12
		809	=>	17 and 36
		811	=>	6
		812	=>	21
		813	=>	29
		815	=>	13
		817	=>	51
		819	=>	30

Class: public final enum surge.util.ReflectionUtils$PackageType	NameNotChanged
	Source: "ReflectionUtils.java"
	FieldsOf: surge.util.ReflectionUtils$PackageType
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_BLOCK	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CHUNKIO	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_COMMAND	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CONVERSATIONS	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENCHANTMENS	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENTITY	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_EVENT	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_GENERATOR	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_HELP	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_INVENTORY	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_MAP	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_METADATA	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_POTION	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_PROJECTILES	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCHEDULER	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCOREBOARD	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UPDATER	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UTIL	NameNotChanged
		private static final synthetic surge.util.ReflectionUtils$PackageType[] ENUM$VALUES	=>	b
		public static final enum surge.util.ReflectionUtils$PackageType MINECRAFT_SERVER	NameNotChanged
		private final java.lang.String path	=>	a
	MethodsOf: surge.util.ReflectionUtils$PackageType
		public java.lang.Class getClass(java.lang.String) 	NameNotChanged
		public java.lang.String getPath() 	NameNotChanged
		public static java.lang.String getServerVersion() 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public static surge.util.ReflectionUtils$PackageType valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.ReflectionUtils$PackageType[] values() 	NameNotChanged
	LineNumbersOf: surge.util.ReflectionUtils$PackageType
		1	=>	4 and 7
		548	=>	3
		550	=>	8
		560	=>	13
		562	=>	12
		563	=>	9
		575	=>	2
		576	=>	6
		585	=>	1
		600	=>	10
		607	=>	5
		617	=>	11

Class: public abstract surge.util.Refreshable	NameNotChanged
	Source: "Refreshable.java"
	FieldsOf: surge.util.Refreshable
	MethodsOf: surge.util.Refreshable
		public abstract void refresh() 	NameNotChanged
	LineNumbersOf: surge.util.Refreshable

Class: public final enum surge.util.SQLOperation	NameNotChanged
	Source: "SQLOperation.java"
	FieldsOf: surge.util.SQLOperation
		private static final synthetic surge.util.SQLOperation[] ENUM$VALUES	=>	a
		public static final enum surge.util.SQLOperation LOAD	NameNotChanged
		public static final enum surge.util.SQLOperation SAVE	NameNotChanged
	MethodsOf: surge.util.SQLOperation
		public static surge.util.SQLOperation valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.SQLOperation[] values() 	NameNotChanged
	LineNumbersOf: surge.util.SQLOperation
		1	=>	1 and 5
		3	=>	2 and 3
		5	=>	4

Class: public final enum surge.util.ServerState	NameNotChanged
	Source: "ServerState.java"
	FieldsOf: surge.util.ServerState
		public static final enum surge.util.ServerState DISABLE	NameNotChanged
		public static final enum surge.util.ServerState ENABLE	NameNotChanged
		private static final synthetic surge.util.ServerState[] ENUM$VALUES	=>	a
		public static final enum surge.util.ServerState RUNNING	NameNotChanged
		public static final enum surge.util.ServerState START	NameNotChanged
		public static final enum surge.util.ServerState STOP	NameNotChanged
	MethodsOf: surge.util.ServerState
		public static surge.util.ServerState valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.ServerState[] values() 	NameNotChanged
	LineNumbersOf: surge.util.ServerState
		1	=>	11 and 14
		3	=>	9 and 12
		5	=>	5
		10	=>	6
		12	=>	1
		17	=>	4
		19	=>	13
		24	=>	7
		26	=>	3
		31	=>	10
		33	=>	2
		37	=>	8

Class: public surge.util.Shape	NameNotChanged
	Source: "Shape.java"
	FieldsOf: surge.util.Shape
		private org.bukkit.Location location	=>	a
		private org.bukkit.util.Vector offset	=>	b
		private org.bukkit.util.Vector size	=>	c
	MethodsOf: surge.util.Shape
		public org.bukkit.Location getCenter() 	NameNotChanged
		public org.bukkit.Location getLocation() 	NameNotChanged
		public org.bukkit.util.Vector getOffset() 	NameNotChanged
		public org.bukkit.util.Vector getSize() 	NameNotChanged
		public boolean isWithinShape(org.bukkit.Location) 	NameNotChanged
		public org.bukkit.Location randomLocation() 	NameNotChanged
		public org.bukkit.Location randomSurface() 	NameNotChanged
	LineNumbersOf: surge.util.Shape
		27	=>	13
		29	=>	2
		30	=>	10
		31	=>	19
		32	=>	17
		44	=>	5
		45	=>	8
		55	=>	4
		56	=>	22
		67	=>	12
		69	=>	24
		71	=>	18
		73	=>	21
		75	=>	9
		80	=>	15
		90	=>	20
		91	=>	16
		92	=>	14
		94	=>	6
		104	=>	11
		114	=>	1
		119	=>	3
		124	=>	7
		129	=>	23

Class: public surge.util.SnowLevel	NameNotChanged
	Source: "SnowLevel.java"
	FieldsOf: surge.util.SnowLevel
		private byte level	=>	a
	MethodsOf: surge.util.SnowLevel
		public byte getLevel() 	NameNotChanged
		public void setLevel(byte) 	NameNotChanged
	LineNumbersOf: surge.util.SnowLevel
		18	=>	1
		20	=>	8
		21	=>	5
		30	=>	4
		32	=>	3
		35	=>	6
		37	=>	9
		40	=>	2
		51	=>	10
		52	=>	7

Class: public abstract surge.util.T	NameNotChanged
	Source: "T.java"
	FieldsOf: surge.util.T
	MethodsOf: surge.util.T
		public abstract void onStop(long, double) 	NameNotChanged
		public void stop() 	NameNotChanged
	LineNumbersOf: surge.util.T
		15	=>	4
		16	=>	1
		17	=>	3
		32	=>	5
		34	=>	2
		35	=>	6

Class: public surge.util.TXT	NameNotChanged
	Source: "TXT.java"
	FieldsOf: surge.util.TXT
	MethodsOf: surge.util.TXT
		public static java.lang.String getLine(surge.util.C, int, double, java.lang.String, java.lang.String, java.lang.String) 	NameNotChanged
		public static java.lang.String line(surge.util.C, int) 	NameNotChanged
		public static java.lang.String makeTag(surge.util.C, surge.util.C, surge.util.C, java.lang.String) 	NameNotChanged
		public static java.lang.String makeTag(surge.util.C, surge.util.C, surge.util.C, surge.util.C, java.lang.String) 	NameNotChanged
		public static java.lang.String repeat(java.lang.String, int) 	NameNotChanged
		public static java.lang.String underline(surge.util.C, int) 	NameNotChanged
		public static surge.collection.GList wrap(java.lang.String, int) 	NameNotChanged
	LineNumbersOf: surge.util.TXT
		12	=>	16
		25	=>	9
		39	=>	15
		40	=>	18
		42	=>	5 and 11
		44	=>	7
		47	=>	17
		67	=>	6
		85	=>	8
		99	=>	12
		113	=>	14
		135	=>	13
		136	=>	10
		137	=>	3
		138	=>	2
		139	=>	1
		140	=>	4

Class: public abstract annotation surge.util.Tag	NameNotChanged
	Source: "Tag.java"
	FieldsOf: surge.util.Tag
	MethodsOf: surge.util.Tag
		public abstract java.lang.String value() 	NameNotChanged
	LineNumbersOf: surge.util.Tag

Class: public surge.util.Timer	NameNotChanged
	Source: "Timer.java"
	FieldsOf: surge.util.Timer
		private long cns	=>	b
		private long tns	=>	a
	MethodsOf: surge.util.Timer
		public long getLastRun() 	NameNotChanged
		public long getTime() 	NameNotChanged
		public void start() 	NameNotChanged
		public void stop() 	NameNotChanged
	LineNumbersOf: surge.util.Timer
		19	=>	11
		21	=>	6
		22	=>	10
		23	=>	7
		30	=>	4
		31	=>	9
		38	=>	8
		39	=>	5
		40	=>	2
		49	=>	3
		59	=>	1

Class: public surge.util.VectorMath	NameNotChanged
	Source: "VectorMath.java"
	FieldsOf: surge.util.VectorMath
		private static synthetic int[] $SWITCH_TABLE$org$bukkit$block$BlockFace	=>	b
		private static synthetic int[] $SWITCH_TABLE$surge$util$Axis	=>	a
	MethodsOf: surge.util.VectorMath
		static synthetic int[] $SWITCH_TABLE$org$bukkit$block$BlockFace() 	=>	b
		static synthetic int[] $SWITCH_TABLE$surge$util$Axis() 	=>	a
		public static org.bukkit.util.Vector angleDown(org.bukkit.util.Vector, float) 	NameNotChanged
		public static org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector, float) 	NameNotChanged
		public static org.bukkit.util.Vector angleRight(org.bukkit.util.Vector, float) 	NameNotChanged
		public static org.bukkit.util.Vector angleUp(org.bukkit.util.Vector, float) 	NameNotChanged
		public static org.bukkit.util.Vector clip(org.bukkit.util.Vector, int) 	NameNotChanged
		public static org.bukkit.util.Vector direction(org.bukkit.Location, org.bukkit.Location) 	NameNotChanged
		public static org.bukkit.util.Vector directionNoNormal(org.bukkit.Location, org.bukkit.Location) 	NameNotChanged
		public static org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) 	NameNotChanged
		public static double getSpeed(org.bukkit.util.Vector) 	NameNotChanged
		public static void impulse(org.bukkit.entity.Entity, org.bukkit.util.Vector) 	NameNotChanged
		public static void impulse(org.bukkit.entity.Entity, org.bukkit.util.Vector, double) 	NameNotChanged
		public static boolean isLookingNear(org.bukkit.Location, org.bukkit.Location, double) 	NameNotChanged
		public static org.bukkit.util.Vector reverse(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector, org.bukkit.util.Vector, double) 	NameNotChanged
		private static double round(double, int) 	=>	a
		public static org.bukkit.util.Vector scaleStatic(surge.util.Axis, org.bukkit.util.Vector, double) 	NameNotChanged
		public static org.bukkit.util.Vector scaleX(org.bukkit.util.Vector, double) 	NameNotChanged
		public static org.bukkit.util.Vector scaleY(org.bukkit.util.Vector, double) 	NameNotChanged
		public static org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector, double) 	NameNotChanged
		public static surge.collection.GList shift(org.bukkit.util.Vector, surge.collection.GList) 	NameNotChanged
		public static surge.collection.GList split(org.bukkit.block.BlockFace) 	NameNotChanged
		public static org.bukkit.util.Vector toVector(float, float) 	NameNotChanged
		public static org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) 	NameNotChanged
	LineNumbersOf: surge.util.VectorMath
		16	=>	4, 119 and 192
		20	=>	178
		23	=>	154
		25	=>	35
		27	=>	53
		30	=>	155
		35	=>	140
		36	=>	55
		37	=>	71
		38	=>	184
		40	=>	20
		45	=>	112
		46	=>	125
		47	=>	15
		48	=>	103
		50	=>	146
		55	=>	51
		56	=>	138
		57	=>	30
		58	=>	222
		60	=>	17
		65	=>	52
		66	=>	160
		67	=>	12
		72	=>	144
		73	=>	118
		75	=>	137
		80	=>	21
		85	=>	6
		90	=>	116
		95	=>	22
		100	=>	75
		105	=>	109
		110	=>	60
		115	=>	214
		116	=>	163
		117	=>	185
		118	=>	86
		123	=>	63
		126	=>	170
		127	=>	59
		128	=>	19
		129	=>	41
		130	=>	186
		131	=>	123
		132	=>	173
		133	=>	98
		134	=>	167
		136	=>	49
		149	=>	42
		151	=>	191
		154	=>	128
		155	=>	104
		157	=>	143
		158	=>	129
		160	=>	159
		161	=>	127
		162	=>	113
		163	=>	85
		165	=>	193
		166	=>	34
		167	=>	70
		168	=>	164
		170	=>	108
		171	=>	200
		173	=>	139
		174	=>	79
		175	=>	36
		177	=>	202
		178	=>	95
		179	=>	174
		180	=>	16
		182	=>	133
		183	=>	199
		184	=>	198
		185	=>	78
		187	=>	187
		188	=>	117
		189	=>	5
		191	=>	9
		192	=>	44
		194	=>	24
		195	=>	102
		197	=>	203
		198	=>	25
		199	=>	93
		201	=>	208
		202	=>	58
		203	=>	72
		204	=>	212
		206	=>	94
		207	=>	209
		208	=>	153
		209	=>	147
		211	=>	1
		212	=>	142
		213	=>	172
		215	=>	169
		216	=>	68
		218	=>	26
		219	=>	201
		221	=>	171
		222	=>	76
		223	=>	82
		224	=>	221
		226	=>	182
		227	=>	114
		228	=>	131
		229	=>	149
		234	=>	54
		248	=>	105
		253	=>	194
		267	=>	141
		280	=>	197
		281	=>	217
		295	=>	33
		296	=>	115
		297	=>	2
		298	=>	145
		309	=>	204
		311	=>	69
		314	=>	89
		316	=>	152
		319	=>	132
		321	=>	47
		324	=>	74
		336	=>	100
		337	=>	220
		339	=>	77
		353	=>	111 and 121
		360	=>	213
		372	=>	13
		374	=>	165 and 219
		376	=>	179
		378	=>	32
		382	=>	37 and 61
		384	=>	106
		386	=>	216
		390	=>	87 and 181
		392	=>	180
		394	=>	92
		398	=>	38 and 206
		400	=>	218
		402	=>	73
		406	=>	126 and 196
		408	=>	96
		410	=>	101
		414	=>	134
		428	=>	43
		429	=>	23
		430	=>	158
		431	=>	3
		432	=>	80
		433	=>	195
		434	=>	18
		435	=>	189
		436	=>	148
		437	=>	27
		438	=>	88
		440	=>	210
		454	=>	157
		455	=>	176
		456	=>	65
		457	=>	50
		458	=>	45
		459	=>	56
		460	=>	48
		461	=>	136
		462	=>	62
		463	=>	120
		464	=>	31
		466	=>	168
		480	=>	66
		481	=>	57
		482	=>	190
		483	=>	188
		484	=>	40
		485	=>	135
		486	=>	83
		487	=>	150
		489	=>	205
		503	=>	84
		504	=>	28
		505	=>	151
		506	=>	215
		507	=>	14
		508	=>	39
		509	=>	177
		510	=>	162
		512	=>	46
		525	=>	97
		526	=>	64
		528	=>	166
		530	=>	91
		531	=>	10
		533	=>	207
		535	=>	183
		536	=>	7
		540	=>	122
		543	=>	124
		545	=>	161
		546	=>	8
		548	=>	11
		550	=>	90
		551	=>	130
		555	=>	29
		558	=>	110
		560	=>	211
		561	=>	107
		563	=>	67
		565	=>	156
		566	=>	175
		570	=>	81
		573	=>	99

Class: surge.util.VectorMath$1	NameNotChanged
	Source: "VectorMath.java"
	FieldsOf: surge.util.VectorMath$1
		private final synthetic org.bukkit.util.Vector val$vector	NameNotChanged
	MethodsOf: surge.util.VectorMath$1
		public bridge synthetic java.lang.Object onAdapt(java.lang.Object) 	NameNotChanged
		public org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) 	NameNotChanged
	LineNumbersOf: surge.util.VectorMath$1
		1	=>	1 and 4
		353	=>	3
		358	=>	2

Class: public surge.util.W	NameNotChanged
	Source: "W.java"
	FieldsOf: surge.util.W
	MethodsOf: surge.util.W
		public static surge.collection.GList blockFaces(org.bukkit.block.Block) 	NameNotChanged
		public static surge.collection.GList blockRadius(org.bukkit.block.Block, int) 	NameNotChanged
		public static surge.collection.GList chunkFaces(org.bukkit.Chunk) 	NameNotChanged
		public static surge.collection.GList chunkRadius(org.bukkit.Chunk, int) 	NameNotChanged
		public static void colorArmor(org.bukkit.inventory.ItemStack, org.bukkit.Color) 	NameNotChanged
		public static int count(org.bukkit.entity.Player, surge.util.MaterialBlock) 	NameNotChanged
		public static double differenceOfVectors(org.bukkit.util.Vector, org.bukkit.util.Vector) 	NameNotChanged
		public static void dropXp(org.bukkit.Location, int) 	NameNotChanged
		public static surge.collection.GList getBlocks(org.bukkit.Chunk) 	NameNotChanged
		public static int getChunkX(org.bukkit.block.Block) 	NameNotChanged
		public static int getChunkY(org.bukkit.block.Block) 	NameNotChanged
		public static int getChunkZ(org.bukkit.block.Block) 	NameNotChanged
		public static org.bukkit.entity.Entity getEntity(int) 	NameNotChanged
		public static org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Entity, double, double) 	NameNotChanged
		public static int getHighestPotionLevel(org.bukkit.potion.PotionEffectType, java.util.Collection) 	NameNotChanged
		public static int getManhattanDistance(org.bukkit.Location, org.bukkit.Location, boolean) 	NameNotChanged
		public static int getManhattanDistance(org.bukkit.block.Block, org.bukkit.block.Block, boolean) 	NameNotChanged
		public static surge.util.MaterialBlock getMaterialBlock(java.lang.String) 	NameNotChanged
		public static org.bukkit.block.Block[] getRelative(org.bukkit.block.Block, org.bukkit.block.BlockFace[]) 	NameNotChanged
		public static org.bukkit.World getSyncWorld(org.bukkit.World) 	NameNotChanged
		public static boolean has(org.bukkit.entity.Player, surge.util.MaterialBlock, int) 	NameNotChanged
		public static boolean isLookingAt(org.bukkit.entity.Entity, org.bukkit.entity.Entity, double, double) 	NameNotChanged
		public static surge.collection.GList news(org.bukkit.Location) 	NameNotChanged
		public static void setData(org.bukkit.block.Block, org.bukkit.material.MaterialData) 	NameNotChanged
		public static void setData(org.bukkit.block.Block, org.bukkit.material.MaterialData, boolean) 	NameNotChanged
		public static void setTypeAndData(org.bukkit.block.Block, org.bukkit.Material, org.bukkit.material.MaterialData) 	NameNotChanged
		public static void setTypeAndData(org.bukkit.block.Block, org.bukkit.Material, org.bukkit.material.MaterialData, boolean) 	NameNotChanged
		public static void setTypeAndRawData(org.bukkit.block.Block, org.bukkit.Material, int) 	NameNotChanged
		public static void setTypeAndRawData(org.bukkit.block.Block, org.bukkit.Material, int, boolean) 	NameNotChanged
		public static org.bukkit.Location simulateFall(org.bukkit.Location) 	NameNotChanged
		public static void take(org.bukkit.entity.Player, surge.util.MaterialBlock, int) 	NameNotChanged
		public static org.bukkit.Chunk toSync(org.bukkit.Chunk) 	NameNotChanged
		public static org.bukkit.Location toSync(org.bukkit.Location) 	NameNotChanged
		public static org.bukkit.World toSync(org.bukkit.World) 	NameNotChanged
		public static org.bukkit.block.Block toSync(org.bukkit.block.Block) 	NameNotChanged
		public static boolean visible(org.bukkit.block.Block) 	NameNotChanged
	LineNumbersOf: surge.util.W
		30	=>	39
		41	=>	138
		43	=>	20
		45	=>	103
		47	=>	36
		49	=>	44
		62	=>	54
		63	=>	4
		64	=>	137
		65	=>	126
		76	=>	98
		78	=>	148
		80	=>	33
		82	=>	127
		84	=>	113
		85	=>	134
		87	=>	125
		102	=>	121
		104	=>	32 and 153
		106	=>	70
		108	=>	106
		110	=>	49
		115	=>	118
		132	=>	30
		144	=>	85
		156	=>	95
		169	=>	46
		170	=>	162
		181	=>	160
		197	=>	96
		199	=>	67 and 78
		201	=>	143
		204	=>	145
		220	=>	55
		221	=>	47
		223	=>	13
		225	=>	111
		228	=>	3
		233	=>	124
		235	=>	163
		236	=>	120
		237	=>	86
		238	=>	119
		240	=>	112
		257	=>	129
		258	=>	92
		260	=>	61
		262	=>	64
		265	=>	108
		277	=>	130
		289	=>	84
		301	=>	83
		313	=>	79
		325	=>	131
		337	=>	71
		353	=>	15
		354	=>	48
		355	=>	150
		356	=>	57
		358	=>	16
		360	=>	11
		361	=>	94
		366	=>	38
		371	=>	10
		373	=>	41
		377	=>	139
		379	=>	87
		381	=>	28
		385	=>	152
		387	=>	63
		388	=>	157
		392	=>	26
		396	=>	156
		398	=>	99
		400	=>	107
		404	=>	114
		406	=>	117
		407	=>	17
		408	=>	8
		412	=>	109
		415	=>	115
		417	=>	34
		418	=>	80
		420	=>	102
		434	=>	35
		436	=>	24
		439	=>	68
		441	=>	65 and 133
		443	=>	31
		446	=>	75
		461	=>	89
		462	=>	91
		479	=>	23
		480	=>	81
		494	=>	140
		495	=>	142
		512	=>	66
		513	=>	116
		526	=>	62
		527	=>	43
		542	=>	18
		543	=>	52
		559	=>	97
		561	=>	105
		563	=>	93
		565	=>	25
		567	=>	59
		569	=>	123
		581	=>	2
		583	=>	101
		584	=>	5
		585	=>	122
		586	=>	90
		588	=>	72
		600	=>	53
		602	=>	141
		603	=>	45
		604	=>	136
		605	=>	9
		606	=>	155
		607	=>	74
		609	=>	60
		621	=>	19
		623	=>	12 and 146
		625	=>	40
		627	=>	104
		629	=>	7
		631	=>	77
		635	=>	27
		649	=>	147
		651	=>	1 and 76
		653	=>	14 and 42
		655	=>	51
		659	=>	154
		661	=>	37
		675	=>	159
		677	=>	50 and 100
		679	=>	73 and 151
		681	=>	132
		685	=>	88
		687	=>	58
		709	=>	82
		711	=>	21
		714	=>	6
		716	=>	161
		719	=>	158
		720	=>	69
		722	=>	128
		739	=>	56
		741	=>	29
		759	=>	149
		761	=>	144
		763	=>	135
		766	=>	22
		780	=>	110

Class: final surge.util.W$1	NameNotChanged
	Source: "W.java"
	FieldsOf: surge.util.W$1
		final synthetic java.lang.Double val$doff	NameNotChanged
		final synthetic org.bukkit.entity.Entity val$e	NameNotChanged
		final synthetic org.bukkit.entity.Entity[] val$result	NameNotChanged
	MethodsOf: surge.util.W$1
		public void onTrace(org.bukkit.Location) 	NameNotChanged
	LineNumbersOf: surge.util.W$1
		723	=>	7
		727	=>	9
		729	=>	1 and 2
		731	=>	3
		733	=>	4
		734	=>	5
		735	=>	6
		738	=>	8

Class: public surge.util.Worlds	NameNotChanged
	Source: "Worlds.java"
	FieldsOf: surge.util.Worlds
	MethodsOf: surge.util.Worlds
		public static org.bukkit.World getWorld(java.lang.String) 	NameNotChanged
		public static surge.collection.GList getWorlds() 	NameNotChanged
		public static boolean hasWorld(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.util.Worlds
		13	=>	4
		22	=>	3
		34	=>	2
		46	=>	1

Class: abstract synthetic surge.util.package-info	NameNotChanged
	Source: "package-info.java"
	FieldsOf: surge.util.package-info
	MethodsOf: surge.util.package-info
	LineNumbersOf: surge.util.package-info


AutoReflectionClass: surge.util.a


TraceBackClass: surge.util.C	Data: 21298 g
ForwardClass: react.Info Package: react	Data: 11111 v
ForwardClass: react.action.ActionPurgeEntities Package: react.action	Data: 23358 l
ForwardClass: react.api.Sampler Package: react.api	Data: 11800 f
ForwardClass: react.command.CommandMonitor Package: react.command	Data: 12944 s
ForwardClass: react.controller.SampleController Package: react.controller	Data: 13524 m
ForwardClass: react.sampler.SampleTicksPerSecond Package: react.sampler	Data: 23537 c
ForwardClass: surge.Surge Package: surge	Data: 11256 h
ForwardClass: surge.cluster.Cluster Package: surge.cluster	Data: 22293 w
ForwardClass: surge.collection.GList Package: surge.collection	Data: 22336 y
ForwardClass: surge.control.Controller Package: surge.control	Data: 22614 x
ForwardClass: surge.hotload.HotloadManager Package: surge.hotload	Data: 22946 l
ForwardClass: surge.json.JSONObject Package: surge.json	Data: 12140 j
ForwardClass: surge.math.M Package: surge.math	Data: 21288 a
ForwardClass: surge.nms.NMSX Package: surge.nms	Data: 21445 r
ForwardClass: surge.pool.Execution Package: surge.pool	Data: 12175 y
ForwardClass: surge.sched.Task Package: surge.sched	Data: 21707 n
ForwardClass: surge.server.SuperSampler Package: surge.server	Data: 22699 u
ForwardClass: surge.text.ProgressSpinner Package: surge.text	Data: 12826 u
ForwardClass: surge.util.F Package: surge.util	Data: 11301 l
MemberClass: react.Base	Data: 954 I
MemberClass: react.CrackerChecker	Data: 1967
MemberClass: react.Info	Data: 971
MemberClass: react.React	Data: 1070
MemberClass: react.action.ActionPurgeEntities	Data: 3219 N
MemberClass: react.action.ActionPurgeEntities$1	Data: 3304
MemberClass: react.action.ActionPurgeEntities$2	Data: 3305
MemberClass: react.action.ActionPurgeEntities$3	Data: 3306 p
MemberClass: react.action.ActionPurgeEntities$4	Data: 3307
MemberClass: react.action.ActionPurgeEntities$5	Data: 3308
MemberClass: react.api.Action	Data: 1544 x
MemberClass: react.api.ActionAlreadyRunningException	Data: 3930
MemberClass: react.api.ActionException	Data: 2487
MemberClass: react.api.ActionHandle	Data: 2132
MemberClass: react.api.ActionNotRunningException	Data: 3529
MemberClass: react.api.ActionState	Data: 2057
MemberClass: react.api.ActionTargetType	Data: 2577
MemberClass: react.api.ActionType	Data: 1962
MemberClass: react.api.CommandSenderActionSource	Data: 3481
MemberClass: react.api.ConsoleActionSource	Data: 2892
MemberClass: react.api.Gate	Data: 1323
MemberClass: react.api.IAction	Data: 1617
MemberClass: react.api.IActionSource	Data: 2242
MemberClass: react.api.ICommand	Data: 1714
MemberClass: react.api.ISampler	Data: 1735
MemberClass: react.api.ISelector	Data: 1844
MemberClass: react.api.Lang	Data: 1324
MemberClass: react.api.MSampler	Data: 1739
MemberClass: react.api.MonitorHeading	Data: 2370
MemberClass: react.api.Permissable	Data: 2081
MemberClass: react.api.PlayerActionSource	Data: 2790
MemberClass: react.api.ReactActionSource	Data: 2664
MemberClass: react.api.ReactCommand	Data: 2136
MemberClass: react.api.ReactException	Data: 2376
MemberClass: react.api.ReactPlayer	Data: 2054 B
MemberClass: react.api.SampledType	Data: 2066
MemberClass: react.api.Sampler	Data: 1662
MemberClass: react.api.SelectionException	Data: 2815
MemberClass: react.api.SelectionMode	Data: 2261
MemberClass: react.api.Selector	Data: 1771
MemberClass: react.api.SelectorEntityType	Data: 2826
MemberClass: react.api.SelectorParseException	Data: 3221
MemberClass: react.api.SelectorPosition	Data: 2624
MemberClass: react.api.Side	Data: 1327
MemberClass: react.api.SideGate	Data: 1712
MemberClass: react.api.SideGate$1	Data: 1797
MemberClass: react.api.TitleMonitor	Data: 2196
MemberClass: react.command.CommandAct	Data: 2343
MemberClass: react.command.CommandFreeze	Data: 2672
MemberClass: react.command.CommandHelp	Data: 2456 j
MemberClass: react.command.CommandMonitor	Data: 2807 O
MemberClass: react.controller.ActionController	Data: 3384
MemberClass: react.controller.CommandController	Data: 3481
MemberClass: react.controller.MonitorController	Data: 3522 Ad
MemberClass: react.controller.PlayerController	Data: 3399
MemberClass: react.controller.SampleController	Data: 3388
MemberClass: react.sampler.SampleChunksLoaded	Data: 3198
MemberClass: react.sampler.SampleChunksLoadedPerSecond	Data: 4097
MemberClass: react.sampler.SampleEntitiesDrops	Data: 3350
MemberClass: react.sampler.SampleEntitiesLiving	Data: 3447 V
MemberClass: react.sampler.SampleEntitiesTiles	Data: 3343
MemberClass: react.sampler.SampleEntitiesTotal	Data: 3346
MemberClass: react.sampler.SampleMemoryAllocated	Data: 3531
MemberClass: react.sampler.SampleMemoryAllocationPerSecond	Data: 4555
MemberClass: react.sampler.SampleMemoryFree	Data: 3012
MemberClass: react.sampler.SampleMemoryMax	Data: 2920
MemberClass: react.sampler.SampleMemoryUse	Data: 2927 d
MemberClass: react.sampler.SampleTickTime	Data: 2787
MemberClass: react.sampler.SampleTickUtilization	Data: 3568
MemberClass: react.sampler.SampleTicksPerSecond	Data: 3402
MemberClass: surge.Main	Data: 993
MemberClass: surge.PluginAmp	Data: 1513 N
MemberClass: surge.PluginAmp$1	Data: 1598
MemberClass: surge.PluginAmp$2	Data: 1599
MemberClass: surge.Surge	Data: 1122 u
MemberClass: surge.cluster.Cluster	Data: 2162
MemberClass: surge.cluster.ClusterBoolean	Data: 2866
MemberClass: surge.cluster.ClusterDouble	Data: 2765
MemberClass: surge.cluster.ClusterInt	Data: 2461
MemberClass: surge.cluster.ClusterLong	Data: 2562
MemberClass: surge.cluster.ClusterString	Data: 2793
MemberClass: surge.cluster.ClusterStringList	Data: 3205
MemberClass: surge.cluster.ClusterType	Data: 2580
MemberClass: surge.cluster.ConfigurationDataInput	Data: 3698 J
MemberClass: surge.cluster.ConfigurationDataOutput	Data: 3827 z
MemberClass: surge.cluster.DataCluster	Data: 2540
MemberClass: surge.cluster.ICluster	Data: 2235
MemberClass: surge.cluster.IConfigurable	Data: 2730
MemberClass: surge.cluster.IDataInput	Data: 2403
MemberClass: surge.cluster.IDataOutput	Data: 2532
MemberClass: surge.cluster.Key	Data: 1721
MemberClass: surge.cluster.KeyPointer	Data: 2458
MemberClass: surge.cluster.KeyStore	Data: 2246
MemberClass: surge.cluster.ReflectedConfigurationException	Data: 4645
MemberClass: surge.cluster.YamlDataInput	Data: 2733
MemberClass: surge.cluster.YamlDataOutput	Data: 2862
MemberClass: surge.collection.GBiset	Data: 2297
MemberClass: surge.collection.GList	Data: 2206 Eo
MemberClass: surge.collection.GList$1	Data: 2291
MemberClass: surge.collection.GMap	Data: 2080
MemberClass: surge.collection.GQuadraset	Data: 2732
MemberClass: surge.collection.GSet	Data: 2094
MemberClass: surge.collection.GSound	Data: 2315
MemberClass: surge.collection.GTriset	Data: 2429
MemberClass: surge.collection.Snippet	Data: 2462
MemberClass: surge.control.AmpedPlugin	Data: 2535 Rt
MemberClass: surge.control.Control	Data: 2162
MemberClass: surge.control.Controller	Data: 2485
MemberClass: surge.control.Disable	Data: 2117
MemberClass: surge.control.Enable	Data: 2008
MemberClass: surge.control.IController	Data: 2558
MemberClass: surge.control.Instance	Data: 2246
MemberClass: surge.control.Plugin	Data: 2048
MemberClass: surge.control.SurgePlugin	Data: 2566
MemberClass: surge.hotload.HotloadManager	Data: 2818 Zv
MemberClass: surge.json.HTTP	Data: 1420 J
MemberClass: surge.json.HTTPTokener	Data: 2148
MemberClass: surge.json.JSONArray	Data: 1925
MemberClass: surge.json.JSONException	Data: 2357
MemberClass: surge.json.JSONML	Data: 1567 h
MemberClass: surge.json.JSONObject	Data: 2013
MemberClass: surge.json.JSONObject$Null	Data: 2460
MemberClass: surge.json.JSONString	Data: 2045
MemberClass: surge.json.JSONStringer	Data: 2260
MemberClass: surge.json.JSONTokener	Data: 2142
MemberClass: surge.json.JSONWriter	Data: 2051
MemberClass: surge.json.XML	Data: 1341
MemberClass: surge.json.XMLTokener	Data: 2069
MemberClass: surge.math.ArrayUtils	Data: 2125
MemberClass: surge.math.Average	Data: 1784
MemberClass: surge.math.M	Data: 1162 It
MemberClass: surge.math.Profiler	Data: 1920
MemberClass: surge.nms.NMSClass	Data: 1734
MemberClass: surge.nms.NMSX	Data: 1320
MemberClass: surge.nms.NMSX$1	Data: 1405
MemberClass: surge.nms.NMSX$2	Data: 1406
MemberClass: surge.nms.PacketUtil	Data: 2008
MemberClass: surge.nms.PacketUtil$V	Data: 2130
MemberClass: surge.nms.Title	Data: 1508 Yq
MemberClass: surge.nms.VersionBukkit	Data: 2354
MemberClass: surge.pool.A	Data: 1168
MemberClass: surge.pool.A$1	Data: 1253
MemberClass: surge.pool.Execution	Data: 2051
MemberClass: surge.pool.ParallelPoolManager	Data: 3025 X
MemberClass: surge.pool.ParallelPoolManager$1	Data: 3110
MemberClass: surge.pool.ParallelThread	Data: 2516 v
MemberClass: surge.pool.QueueMode	Data: 2009
MemberClass: surge.pool.S	Data: 1186
MemberClass: surge.pool.S$1	Data: 1271
MemberClass: surge.pool.ThreadInformation	Data: 2861
MemberClass: surge.sched.IBursterator	Data: 2437
MemberClass: surge.sched.ICancellable	Data: 2350
MemberClass: surge.sched.IMasterTickComponent	Data: 3218
MemberClass: surge.sched.ITask	Data: 1659
MemberClass: surge.sched.TICK	Data: 1482
MemberClass: surge.sched.Task	Data: 1586
MemberClass: surge.sched.Task$1	Data: 1671
MemberClass: surge.sched.Task$2	Data: 1672 n
MemberClass: surge.sched.Task$3	Data: 1673 O
MemberClass: surge.sched.TaskManager	Data: 2285
MemberClass: surge.sched.TaskProfile	Data: 2307
MemberClass: surge.server.AsyncTick	Data: 2233
MemberClass: surge.server.CoreTickThread	Data: 2716
MemberClass: surge.server.MemoryMonitor	Data: 2705
MemberClass: surge.server.SuperSampler	Data: 2579 S
MemberClass: surge.server.SuperSampler$1	Data: 2664
MemberClass: surge.server.SuperSampler$2	Data: 2665 l
MemberClass: surge.server.SuperSampler$3	Data: 2666
MemberClass: surge.server.TPSMonitor	Data: 2319
MemberClass: surge.server.WorldMonitor	Data: 2592
MemberClass: surge.text.PhantomSpinner	Data: 2581 T
MemberClass: surge.text.ProgressSpinner	Data: 2707 t
MemberClass: surge.util.Adapter	Data: 1818
MemberClass: surge.util.Anchor	Data: 1716
MemberClass: surge.util.Area	Data: 1490
MemberClass: surge.util.Axis	Data: 1518
MemberClass: surge.util.BlastResistance	Data: 2656
MemberClass: surge.util.Blocks	Data: 1719
MemberClass: surge.util.C	Data: 1180
MemberClass: surge.util.C$1	Data: 1265
MemberClass: surge.util.C$10	Data: 1313
MemberClass: surge.util.C$11	Data: 1314
MemberClass: surge.util.C$12	Data: 1315
MemberClass: surge.util.C$13	Data: 1316
MemberClass: surge.util.C$14	Data: 1317
MemberClass: surge.util.C$15	Data: 1318
MemberClass: surge.util.C$16	Data: 1319
MemberClass: surge.util.C$17	Data: 1320
MemberClass: surge.util.C$18	Data: 1321
MemberClass: surge.util.C$19	Data: 1322
MemberClass: surge.util.C$2	Data: 1266
MemberClass: surge.util.C$20	Data: 1314
MemberClass: surge.util.C$21	Data: 1315
MemberClass: surge.util.C$22	Data: 1316
MemberClass: surge.util.C$3	Data: 1267
MemberClass: surge.util.C$4	Data: 1268
MemberClass: surge.util.C$5	Data: 1269
MemberClass: surge.util.C$6	Data: 1270
MemberClass: surge.util.C$7	Data: 1271
MemberClass: surge.util.C$8	Data: 1272
MemberClass: surge.util.C$9	Data: 1273
MemberClass: surge.util.CDou	Data: 1476
MemberClass: surge.util.CMD	Data: 1325
MemberClass: surge.util.CNum	Data: 1484
MemberClass: surge.util.Callback	Data: 1894
MemberClass: surge.util.Chunks	Data: 1733
MemberClass: surge.util.Cuboid	Data: 1711 q
MemberClass: surge.util.Cuboid$1	Data: 1796
MemberClass: surge.util.Cuboid$2	Data: 1797
MemberClass: surge.util.Cuboid$CuboidDirection	Data: 3274
MemberClass: surge.util.Cuboid$CuboidIterator	Data: 3187
MemberClass: surge.util.CuboidException	Data: 2654
MemberClass: surge.util.D	Data: 1181
MemberClass: surge.util.DMSRequire	Data: 2074
MemberClass: surge.util.DMSRequirement	Data: 2510
MemberClass: surge.util.Depend	Data: 1705
MemberClass: surge.util.Dimension	Data: 2047
MemberClass: surge.util.DimensionFace	Data: 2414
MemberClass: surge.util.Direction	Data: 2042
MemberClass: surge.util.Embedded	Data: 1891
MemberClass: surge.util.F	Data: 1183
MemberClass: surge.util.FU	Data: 1268
MemberClass: surge.util.FinalDouble	Data: 2206
MemberClass: surge.util.FinalFloat	Data: 2105
MemberClass: surge.util.FinalInteger	Data: 2321
MemberClass: surge.util.FinalLong	Data: 2003
MemberClass: surge.util.FinalString	Data: 2234
MemberClass: surge.util.Fingerprint	Data: 2273
MemberClass: surge.util.GListAdapter	Data: 2301
MemberClass: surge.util.Health	Data: 1711
MemberClass: surge.util.IO	Data: 1265
MemberClass: surge.util.Items	Data: 1627
MemberClass: surge.util.MSound	Data: 1711
MemberClass: surge.util.MaterialBlock	Data: 2419
MemberClass: surge.util.P	Data: 1193
MemberClass: surge.util.P$1	Data: 1278
MemberClass: surge.util.P$2	Data: 1279
MemberClass: surge.util.PE	Data: 1262
MemberClass: surge.util.Paste	Data: 1622
MemberClass: surge.util.Persist	Data: 1859
MemberClass: surge.util.PluginUtil	Data: 2150
MemberClass: surge.util.PositionalSelector	Data: 3004
MemberClass: surge.util.Protocol	Data: 1963
MemberClass: surge.util.ProtocolRange	Data: 2456
MemberClass: surge.util.Range	Data: 1606
MemberClass: surge.util.RayTrace	Data: 1908
MemberClass: surge.util.ReflectionUtils	Data: 2677
MemberClass: surge.util.ReflectionUtils$DataType	Data: 3509
MemberClass: surge.util.ReflectionUtils$PackageType	Data: 3815
MemberClass: surge.util.Refreshable	Data: 2236
MemberClass: surge.util.SQLOperation	Data: 2298
MemberClass: surge.util.ServerState	Data: 2257
MemberClass: surge.util.Shape	Data: 1610
MemberClass: surge.util.SnowLevel	Data: 2040
MemberClass: surge.util.T	Data: 1197
MemberClass: surge.util.TXT	Data: 1369
MemberClass: surge.util.Tag	Data: 1397
MemberClass: surge.util.Timer	Data: 1626
MemberClass: surge.util.VectorMath	Data: 2134 D
MemberClass: surge.util.VectorMath$1	Data: 2219
MemberClass: surge.util.W	Data: 1200
MemberClass: surge.util.W$1	Data: 1285
MemberClass: surge.util.Worlds	Data: 1748
MemberClass: surge.util.package-info	Data: 2302
