// ["ChangeLog.txt" version=8.0.8 encoding="UTF-8" 2017.10.29 13:32:29]
// DO NOT EDIT THIS FILE. You need it to interpret exception stack traces.


Package: react	NameNotChanged
Package: react.action	NameNotChanged
Package: react.api	NameNotChanged
Package: react.command	NameNotChanged
Package: react.controller	NameNotChanged
Package: react.sampler	NameNotChanged
Package: surge	NameNotChanged
Package: surge.cluster	NameNotChanged
Package: surge.collection	NameNotChanged
Package: surge.control	NameNotChanged
Package: surge.hotload	NameNotChanged
Package: surge.json	NameNotChanged
Package: surge.math	NameNotChanged
Package: surge.nms	NameNotChanged
Package: surge.pool	NameNotChanged
Package: surge.sched	NameNotChanged
Package: surge.server	NameNotChanged
Package: surge.text	NameNotChanged
Package: surge.util	NameNotChanged



Class: public react.Base	NameNotChanged
	Source: "Base.java"
	FieldsOf: react.Base
	MethodsOf: react.Base
		public static void msg(org.bukkit.command.CommandSender, java.lang.String) 	NameNotChanged
	LineNumbersOf: react.Base
		8	=>	1
		12	=>	2
		13	=>	3

Class: public react.Info	NameNotChanged
	Source: "Info.java"
	FieldsOf: react.Info
		public static java.lang.String ACTION_PURGE_ENTITIES_DESCRIPTION	NameNotChanged
		public static java.lang.String ACTION_PURGE_ENTITIES_NAME	NameNotChanged
		public static java.lang.String COMMAND_HELP	NameNotChanged
		public static java.lang.String COMMAND_HELP_ALIAS_1	NameNotChanged
		public static java.lang.String COMMAND_HELP_ALIAS_2	NameNotChanged
		public static java.lang.String COMMAND_HELP_DESCRIPTION	NameNotChanged
		public static java.lang.String COMMAND_HELP_USAGE	NameNotChanged
		public static java.lang.String COMMAND_MONITOR	NameNotChanged
		public static java.lang.String COMMAND_MONITOR_ALIAS_1	NameNotChanged
		public static java.lang.String COMMAND_MONITOR_ALIAS_2	NameNotChanged
		public static java.lang.String COMMAND_MONITOR_DESCRIPTION	NameNotChanged
		public static java.lang.String COMMAND_MONITOR_USAGE	NameNotChanged
		public static java.lang.String COMMAND_REACT	NameNotChanged
		public static java.lang.String CORE_CACHE	NameNotChanged
		public static java.lang.String CORE_DOTYML	NameNotChanged
		public static java.lang.String CORE_NAME	NameNotChanged
		public static java.lang.String CORE_REACT_DOT	NameNotChanged
		public static java.lang.String MSG_MONITORING_STARTED	NameNotChanged
		public static java.lang.String MSG_MONITORING_STOPPED	NameNotChanged
		public static java.lang.String MSG_PERMISSION	NameNotChanged
		public static java.lang.String NAME_CHUNKS	NameNotChanged
		public static java.lang.String NAME_ENTITIES	NameNotChanged
		public static java.lang.String NAME_MEMORY	NameNotChanged
		public static java.lang.String NAME_TICK	NameNotChanged
		public static java.lang.String PERM_ACCESS	NameNotChanged
		public static java.lang.String PERM_ACT	NameNotChanged
		public static java.lang.String PERM_MONITOR	NameNotChanged
		public static java.lang.String PERM_MONITOR_ENVIRONMENT	NameNotChanged
		public static java.lang.String PERM_MONITOR_MAP	NameNotChanged
		public static java.lang.String PERM_MONITOR_TITLE	NameNotChanged
		public static java.lang.String PERM_RELOAD	NameNotChanged
		public static java.lang.String SAMPLER_ALLOCMEM	NameNotChanged
		public static java.lang.String SAMPLER_CHK	NameNotChanged
		public static java.lang.String SAMPLER_CHKS	NameNotChanged
		public static java.lang.String SAMPLER_ENT	NameNotChanged
		public static java.lang.String SAMPLER_ENTDROP	NameNotChanged
		public static java.lang.String SAMPLER_ENTLIV	NameNotChanged
		public static java.lang.String SAMPLER_ENTTILE	NameNotChanged
		public static java.lang.String SAMPLER_FREEMEM	NameNotChanged
		public static java.lang.String SAMPLER_MAHS	NameNotChanged
		public static java.lang.String SAMPLER_MAXMEM	NameNotChanged
		public static java.lang.String SAMPLER_MEM	NameNotChanged
		public static java.lang.String SAMPLER_TICK	NameNotChanged
		public static java.lang.String SAMPLER_TIU	NameNotChanged
		public static java.lang.String SAMPLER_TPS	NameNotChanged
		public static java.lang.String STATE_MAPPING_ENABLED	NameNotChanged
		public static java.lang.String STATE_MONITORING_ENABLED	NameNotChanged
		public static java.lang.String STATE_MONITORING_LASTTAB	NameNotChanged
		public static java.lang.String STATE_MONITORING_POSTED	NameNotChanged
		public static java.lang.String STATE_MONITORING_SWITCHNOTIFICATION	NameNotChanged
		public static java.lang.String STATE_MONITORING_TAB	NameNotChanged
		public static java.lang.String STATE_PLAYER_HEIGHT_CHANGING	NameNotChanged
		public static java.lang.String STATE_PLAYER_HEIGHT_CURRENT	NameNotChanged
		public static java.lang.String STATE_PLAYER_HOTBAR	NameNotChanged
		public static java.lang.String STATE_PLAYER_SCROLL	NameNotChanged
		public static java.lang.String STATE_PLAYER_SHIFT	NameNotChanged
		public static java.lang.String STATE_SOUND_PLAYS	NameNotChanged
		public static int a	=>	b
	MethodsOf: react.Info
	LineNumbersOf: react.Info
		5	=>	9
		7	=>	42
		8	=>	20
		9	=>	16
		10	=>	58
		12	=>	29
		13	=>	39
		14	=>	1
		15	=>	32
		18	=>	36
		19	=>	40
		20	=>	34
		21	=>	13
		22	=>	2
		25	=>	53
		26	=>	21
		28	=>	17
		29	=>	57
		30	=>	45
		33	=>	15
		36	=>	37
		39	=>	41
		42	=>	4
		44	=>	10
		45	=>	49
		46	=>	46
		47	=>	44
		48	=>	11
		49	=>	14
		50	=>	48
		51	=>	31
		52	=>	5
		53	=>	23
		54	=>	26
		55	=>	24
		57	=>	33
		58	=>	6
		59	=>	54
		60	=>	47
		61	=>	25
		62	=>	56
		63	=>	50
		65	=>	7
		66	=>	52
		67	=>	30
		68	=>	38
		69	=>	28
		70	=>	22
		71	=>	12
		72	=>	18
		73	=>	35
		74	=>	55
		75	=>	19
		76	=>	43
		77	=>	3
		78	=>	27
		81	=>	51
		84	=>	8

Class: public react.React	NameNotChanged
	Source: "React.java"
	FieldsOf: react.React
		public react.controller.CommandController commandController	NameNotChanged
		public static react.React instance	NameNotChanged
		public react.controller.MonitorController monitorController	NameNotChanged
		public react.controller.PlayerController playerController	NameNotChanged
		public react.controller.SampleController sampleController	NameNotChanged
	MethodsOf: react.React
		public void disable() 	NameNotChanged
		public void enable() 	NameNotChanged
	LineNumbersOf: react.React
		16	=>	2
		37	=>	1
		43	=>	3

Class: public react.action.ActionPurgeEntities	NameNotChanged
	Source: "ActionPurgeEntities.java"
	FieldsOf: react.action.ActionPurgeEntities
		public static boolean a	=>	g
	MethodsOf: react.action.ActionPurgeEntities
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void act(react.api.IActionSource, react.api.ISelector[]) 	NameNotChanged
		public void purge(org.bukkit.Chunk, react.api.IActionSource, react.api.ISelector[]) 	NameNotChanged
	LineNumbersOf: react.action.ActionPurgeEntities
		18	=>	7
		19	=>	12
		24	=>	2 and 15
		26	=>	13
		28	=>	10
		30	=>	14
		32	=>	17
		34	=>	1
		37	=>	11
		41	=>	3 and 6
		43	=>	5 and 18
		45	=>	4
		47	=>	9
		49	=>	8
		54	=>	16
		63	=>	19

Class: react.action.ActionPurgeEntities$1	NameNotChanged
	Source: "ActionPurgeEntities.java"
	FieldsOf: react.action.ActionPurgeEntities$1
		final synthetic react.action.ActionPurgeEntities this$0	NameNotChanged
		final synthetic org.bukkit.entity.Entity val$i	NameNotChanged
	MethodsOf: react.action.ActionPurgeEntities$1
		public void run() 	NameNotChanged
	LineNumbersOf: react.action.ActionPurgeEntities$1
		55	=>	2
		59	=>	1
		60	=>	3

Class: public abstract react.api.Action	NameNotChanged
	Source: "Action.java"
	FieldsOf: react.api.Action
		private java.lang.String description	=>	b
		private react.api.ActionHandle handle	=>	d
		private java.lang.String name	=>	a
		private double progress	=>	f
		private react.api.ActionState state	=>	e
		private java.lang.String status	=>	c
	MethodsOf: react.api.Action
		public java.lang.String getDescription() 	NameNotChanged
		public react.api.ActionHandle getHandleType() 	NameNotChanged
		public java.lang.String getName() 	NameNotChanged
		public double getProgress() 	NameNotChanged
		public react.api.ActionState getState() 	NameNotChanged
		public java.lang.String getStatus() 	NameNotChanged
		public void setProgress(double) 	NameNotChanged
		public void setStatus(java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.Action
		13	=>	12
		14	=>	1
		15	=>	8
		16	=>	6
		17	=>	4
		18	=>	2
		19	=>	3
		20	=>	14
		25	=>	18
		31	=>	16
		37	=>	9
		43	=>	13
		49	=>	10
		55	=>	7
		56	=>	11
		61	=>	15
		67	=>	17
		68	=>	5

Class: public final enum react.api.ActionHandle	NameNotChanged
	Source: "ActionHandle.java"
	FieldsOf: react.api.ActionHandle
		private static final synthetic react.api.ActionHandle[] $VALUES	=>	a
		public static final enum react.api.ActionHandle AUTOMATIC	NameNotChanged
		public static final enum react.api.ActionHandle MANUAL	NameNotChanged
		public static final enum react.api.ActionHandle MUTEX	NameNotChanged
	MethodsOf: react.api.ActionHandle
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static react.api.ActionHandle valueOf(java.lang.String) 	NameNotChanged
		public static react.api.ActionHandle[] values() 	NameNotChanged
	LineNumbersOf: react.api.ActionHandle
		3	=>	1, 5, 6 and 7
		5	=>	2
		6	=>	4
		7	=>	3

Class: public final enum react.api.ActionState	NameNotChanged
	Source: "ActionState.java"
	FieldsOf: react.api.ActionState
		private static final synthetic react.api.ActionState[] $VALUES	=>	a
		public static final enum react.api.ActionState IDLE	NameNotChanged
		public static final enum react.api.ActionState QUEUED	NameNotChanged
		public static final enum react.api.ActionState RUNNING	NameNotChanged
	MethodsOf: react.api.ActionState
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static react.api.ActionState valueOf(java.lang.String) 	NameNotChanged
		public static react.api.ActionState[] values() 	NameNotChanged
	LineNumbersOf: react.api.ActionState
		3	=>	2, 4, 6 and 7
		5	=>	1
		6	=>	3
		7	=>	5

Class: public final enum react.api.ActionTargetType	NameNotChanged
	Source: "ActionTargetType.java"
	FieldsOf: react.api.ActionTargetType
		private static final synthetic react.api.ActionTargetType[] $VALUES	=>	a
		public static final enum react.api.ActionTargetType POSITIONAL	NameNotChanged
		public static final enum react.api.ActionTargetType SYSTEM	NameNotChanged
	MethodsOf: react.api.ActionTargetType
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static react.api.ActionTargetType valueOf(java.lang.String) 	NameNotChanged
		public static react.api.ActionTargetType[] values() 	NameNotChanged
	LineNumbersOf: react.api.ActionTargetType
		3	=>	2, 3, 4 and 5
		5	=>	6
		6	=>	1

Class: public react.api.CommandSenderActionSource	NameNotChanged
	Source: "CommandSenderActionSource.java"
	FieldsOf: react.api.CommandSenderActionSource
		private org.bukkit.command.CommandSender sender	=>	a
	MethodsOf: react.api.CommandSenderActionSource
		public org.bukkit.command.CommandSender getSender() 	NameNotChanged
	LineNumbersOf: react.api.CommandSenderActionSource
		10	=>	4
		11	=>	2
		12	=>	3
		16	=>	1

Class: public react.api.Gate	NameNotChanged
	Source: "Gate.java"
	FieldsOf: react.api.Gate
	MethodsOf: react.api.Gate
		public static void removeEntity(org.bukkit.entity.Entity) 	NameNotChanged
	LineNumbersOf: react.api.Gate
		5	=>	1
		9	=>	3
		10	=>	2

Class: public abstract react.api.IAction	NameNotChanged
	Source: "IAction.java"
	FieldsOf: react.api.IAction
	MethodsOf: react.api.IAction
		public abstract void act(react.api.IActionSource, react.api.ISelector[]) 	NameNotChanged
		public abstract java.lang.String getDescription() 	NameNotChanged
		public abstract react.api.ActionHandle getHandleType() 	NameNotChanged
		public abstract java.lang.String getName() 	NameNotChanged
		public abstract double getProgress() 	NameNotChanged
		public abstract react.api.ActionState getState() 	NameNotChanged
		public abstract java.lang.String getStatus() 	NameNotChanged
		public abstract void setProgress(double) 	NameNotChanged
		public abstract void setStatus(java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.IAction

Class: public abstract react.api.IActionSource	NameNotChanged
	Source: "IActionSource.java"
	FieldsOf: react.api.IActionSource
	MethodsOf: react.api.IActionSource
	LineNumbersOf: react.api.IActionSource

Class: public abstract react.api.ICommand	NameNotChanged
	Source: "ICommand.java"
	FieldsOf: react.api.ICommand
	MethodsOf: react.api.ICommand
		public abstract void fire(org.bukkit.command.CommandSender, java.lang.String[]) 	NameNotChanged
		public abstract java.lang.String[] getAliases() 	NameNotChanged
		public abstract java.lang.String getCommand() 	NameNotChanged
		public abstract java.lang.String getDescription() 	NameNotChanged
		public abstract java.lang.String[] getPermissions() 	NameNotChanged
		public abstract react.api.SideGate getSideGate() 	NameNotChanged
		public abstract java.lang.String getUsage() 	NameNotChanged
	LineNumbersOf: react.api.ICommand

Class: public abstract react.api.ISampler	NameNotChanged
	Source: "ISampler.java"
	FieldsOf: react.api.ISampler
	MethodsOf: react.api.ISampler
		public abstract void construct() 	NameNotChanged
		public abstract java.lang.String get() 	NameNotChanged
		public abstract surge.util.C getAltColor() 	NameNotChanged
		public abstract surge.util.C getColor() 	NameNotChanged
		public abstract java.lang.String getDescription() 	NameNotChanged
		public abstract java.lang.String getID() 	NameNotChanged
		public abstract int getInterval() 	NameNotChanged
		public abstract java.lang.String getName() 	NameNotChanged
		public abstract double getValue() 	NameNotChanged
		public abstract void sample() 	NameNotChanged
		public abstract void setColor(surge.util.C, surge.util.C) 	NameNotChanged
		public abstract void setDescription(java.lang.String) 	NameNotChanged
		public abstract void setID(java.lang.String) 	NameNotChanged
		public abstract void setInterval(int) 	NameNotChanged
		public abstract void setName(java.lang.String) 	NameNotChanged
		public abstract void setValue(double) 	NameNotChanged
	LineNumbersOf: react.api.ISampler

Class: public abstract react.api.ISelector	NameNotChanged
	Source: "ISelector.java"
	FieldsOf: react.api.ISelector
	MethodsOf: react.api.ISelector
		public abstract boolean can(java.lang.Object) 	NameNotChanged
		public abstract surge.collection.GSet getList() 	NameNotChanged
		public abstract react.api.SelectionMode getMode() 	NameNotChanged
		public abstract surge.collection.GSet getPossibilities() 	NameNotChanged
		public abstract java.lang.Class getType() 	NameNotChanged
	LineNumbersOf: react.api.ISelector

Class: public abstract annotation react.api.Lang	NameNotChanged
	Source: "Lang.java"
	FieldsOf: react.api.Lang
	MethodsOf: react.api.Lang
		public abstract java.lang.String value() 	NameNotChanged
	LineNumbersOf: react.api.Lang

Class: public abstract react.api.MSampler	NameNotChanged
	Source: "MSampler.java"
	FieldsOf: react.api.MSampler
	MethodsOf: react.api.MSampler
		protected surge.server.SuperSampler ss() 	=>	a
	LineNumbersOf: react.api.MSampler
		6	=>	1
		10	=>	2

Class: public react.api.MonitorHeading	NameNotChanged
	Source: "MonitorHeading.java"
	FieldsOf: react.api.MonitorHeading
		private surge.collection.GList children	=>	b
		private react.api.ISampler head	=>	a
		private java.lang.String name	=>	c
	MethodsOf: react.api.MonitorHeading
		public void addSampler(react.api.ISampler) 	NameNotChanged
		public java.lang.String getChildText() 	NameNotChanged
		public surge.collection.GList getChildren() 	NameNotChanged
		public react.api.ISampler getHead() 	NameNotChanged
		public java.lang.String getHeadText() 	NameNotChanged
		public java.lang.String getName() 	NameNotChanged
		public void setChildren(surge.collection.GList) 	NameNotChanged
		public void setHead(react.api.ISampler) 	NameNotChanged
		public void setName(java.lang.String) 	NameNotChanged
	LineNumbersOf: react.api.MonitorHeading
		13	=>	7
		14	=>	14
		15	=>	5
		16	=>	13
		17	=>	15
		21	=>	8
		22	=>	21
		26	=>	19
		31	=>	3
		32	=>	24
		36	=>	6
		41	=>	12
		46	=>	22
		48	=>	25
		50	=>	4
		51	=>	20
		52	=>	23
		54	=>	18
		56	=>	9
		59	=>	1
		64	=>	16
		69	=>	17
		70	=>	2
		74	=>	10
		75	=>	11

Class: public final enum react.api.Permissable	NameNotChanged
	Source: "Permissable.java"
	FieldsOf: react.api.Permissable
		private static final synthetic react.api.Permissable[] $VALUES	=>	b
		public static final enum react.api.Permissable ACCESS	NameNotChanged
		public static final enum react.api.Permissable ACT	NameNotChanged
		public static final enum react.api.Permissable MONITOR	NameNotChanged
		public static final enum react.api.Permissable MONITOR_ENVIRONMENT	NameNotChanged
		public static final enum react.api.Permissable MONITOR_MAP	NameNotChanged
		public static final enum react.api.Permissable MONITOR_TITLE	NameNotChanged
		public static final enum react.api.Permissable RELOAD	NameNotChanged
		private java.lang.String node	=>	a
	MethodsOf: react.api.Permissable
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public java.lang.String getNode() 	NameNotChanged
		public boolean has(org.bukkit.command.CommandSender) 	NameNotChanged
		public static react.api.Permissable valueOf(java.lang.String) 	NameNotChanged
		public static react.api.Permissable[] values() 	NameNotChanged
	LineNumbersOf: react.api.Permissable
		7	=>	2, 9 and 15
		9	=>	11
		10	=>	6
		11	=>	12
		12	=>	7
		13	=>	16
		14	=>	10
		15	=>	4
		20	=>	1
		23	=>	5
		26	=>	13
		29	=>	3
		30	=>	17
		34	=>	8
		39	=>	14

Class: public react.api.ReactActionSource	NameNotChanged
	Source: "ReactActionSource.java"
	FieldsOf: react.api.ReactActionSource
	MethodsOf: react.api.ReactActionSource
	LineNumbersOf: react.api.ReactActionSource
		3	=>	1

Class: public abstract react.api.ReactCommand	NameNotChanged
	Source: "ReactCommand.java"
	FieldsOf: react.api.ReactCommand
		protected java.lang.String[] aliases	=>	b
		protected java.lang.String command	=>	a
		protected java.lang.String description	=>	e
		protected java.lang.String[] permissions	=>	c
		protected react.api.SideGate sideGate	=>	f
		protected java.lang.String usage	=>	d
	MethodsOf: react.api.ReactCommand
		public java.lang.String[] getAliases() 	NameNotChanged
		public java.lang.String getCommand() 	NameNotChanged
		public java.lang.String getDescription() 	NameNotChanged
		public java.lang.String[] getPermissions() 	NameNotChanged
		public react.api.SideGate getSideGate() 	NameNotChanged
		public java.lang.String getUsage() 	NameNotChanged
	LineNumbersOf: react.api.ReactCommand
		13	=>	7
		15	=>	2
		20	=>	5
		26	=>	6
		32	=>	3
		38	=>	1
		44	=>	4
		50	=>	8

Class: public react.api.ReactPlayer	NameNotChanged
	Source: "ReactPlayer.java"
	FieldsOf: react.api.ReactPlayer
		public boolean heightMovement	NameNotChanged
		public int hotbarSlot	NameNotChanged
		public static surge.collection.GMap keystore	NameNotChanged
		public double lastHeight	NameNotChanged
		public boolean mapping	NameNotChanged
		public int monitorLastSelection	NameNotChanged
		public boolean monitorPosted	NameNotChanged
		public int monitorSelection	NameNotChanged
		public boolean monitoring	NameNotChanged
		private org.bukkit.entity.Player p	=>	a
		public int plays	NameNotChanged
		public int scroll	NameNotChanged
		public boolean shift	NameNotChanged
		public int switchNotification	NameNotChanged
	MethodsOf: react.api.ReactPlayer
		public int getHotbarSlot() 	NameNotChanged
		public double getLastHeight() 	NameNotChanged
		public int getMonitorLastSelection() 	NameNotChanged
		public boolean getMonitorPosted() 	NameNotChanged
		public int getMonitorSelection() 	NameNotChanged
		public org.bukkit.entity.Player getP() 	NameNotChanged
		public int getPlays() 	NameNotChanged
		public int getScroll() 	NameNotChanged
		public int getSwitchNotification() 	NameNotChanged
		public boolean isHeightMovement() 	NameNotChanged
		public boolean isMapping() 	NameNotChanged
		public boolean isMonitoring() 	NameNotChanged
		public boolean isShift() 	NameNotChanged
		public boolean isShifting() 	NameNotChanged
		public void load() 	NameNotChanged
		public void save() 	NameNotChanged
		public void setHeightMovement(boolean) 	NameNotChanged
		public void setHotbarSlot(int) 	NameNotChanged
		public void setLastHeight(double) 	NameNotChanged
		public void setMapping(boolean) 	NameNotChanged
		public void setMonitorLastSelection(int) 	NameNotChanged
		public void setMonitorPosted(boolean) 	NameNotChanged
		public void setMonitorSelection(int) 	NameNotChanged
		public void setMonitoring(boolean) 	NameNotChanged
		public void setP(org.bukkit.entity.Player) 	NameNotChanged
		public void setPlays(int) 	NameNotChanged
		public void setScroll(int) 	NameNotChanged
		public void setShift(boolean) 	NameNotChanged
		public void setShifting(boolean) 	NameNotChanged
		public void setSwitchNotification(int) 	NameNotChanged
	LineNumbersOf: react.api.ReactPlayer
		23	=>	33
		24	=>	70
		25	=>	62
		26	=>	38
		27	=>	68
		28	=>	48
		29	=>	63
		30	=>	9
		31	=>	73
		32	=>	66
		33	=>	26
		34	=>	43
		35	=>	31
		36	=>	1
		38	=>	79
		41	=>	40
		44	=>	64
		47	=>	6
		50	=>	29
		53	=>	47
		56	=>	60
		59	=>	67
		62	=>	21
		65	=>	45
		68	=>	12
		71	=>	28
		77	=>	16
		78	=>	19
		79	=>	13
		80	=>	56
		86	=>	15
		89	=>	77
		91	=>	61
		92	=>	58
		93	=>	78
		99	=>	52
		102	=>	69
		104	=>	22
		105	=>	65
		106	=>	36
		110	=>	2
		115	=>	5
		120	=>	53
		125	=>	42
		126	=>	39
		130	=>	7
		131	=>	72
		135	=>	14
		140	=>	37
		141	=>	80
		145	=>	46
		150	=>	75
		151	=>	32
		155	=>	10
		160	=>	50
		161	=>	24
		165	=>	74
		170	=>	76
		171	=>	49
		175	=>	4
		180	=>	20
		181	=>	41
		185	=>	51
		190	=>	30
		191	=>	34
		195	=>	27
		196	=>	25
		200	=>	23
		205	=>	59
		206	=>	3
		210	=>	57
		215	=>	55
		216	=>	81
		220	=>	44
		225	=>	11
		226	=>	71
		230	=>	17
		235	=>	8
		236	=>	82
		240	=>	54
		245	=>	18
		246	=>	35

Class: public final enum react.api.SampledType	NameNotChanged
	Source: "SampledType.java"
	FieldsOf: react.api.SampledType
		private static final synthetic react.api.SampledType[] $VALUES	=>	b
		public static final enum react.api.SampledType ALLOCMEM	NameNotChanged
		public static final enum react.api.SampledType CHK	NameNotChanged
		public static final enum react.api.SampledType CHKS	NameNotChanged
		public static final enum react.api.SampledType ENT	NameNotChanged
		public static final enum react.api.SampledType ENTDROP	NameNotChanged
		public static final enum react.api.SampledType ENTLIV	NameNotChanged
		public static final enum react.api.SampledType ENTTILE	NameNotChanged
		public static final enum react.api.SampledType FREEMEM	NameNotChanged
		public static final enum react.api.SampledType MAHS	NameNotChanged
		public static final enum react.api.SampledType MAXMEM	NameNotChanged
		public static final enum react.api.SampledType MEM	NameNotChanged
		public static final enum react.api.SampledType TICK	NameNotChanged
		public static final enum react.api.SampledType TIU	NameNotChanged
		public static final enum react.api.SampledType TPS	NameNotChanged
		private java.lang.String node	=>	a
	MethodsOf: react.api.SampledType
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public java.lang.String getNode() 	NameNotChanged
		public static react.api.SampledType valueOf(java.lang.String) 	NameNotChanged
		public static react.api.SampledType[] values() 	NameNotChanged
	LineNumbersOf: react.api.SampledType
		5	=>	9, 20 and 23
		7	=>	17
		8	=>	6
		9	=>	21
		10	=>	13
		11	=>	7
		12	=>	8
		13	=>	4
		14	=>	18
		15	=>	22
		16	=>	15
		17	=>	12
		18	=>	10
		19	=>	3
		20	=>	5
		25	=>	16
		28	=>	19
		31	=>	11
		34	=>	1
		35	=>	2
		39	=>	14

Class: public abstract react.api.Sampler	NameNotChanged
	Source: "Sampler.java"
	FieldsOf: react.api.Sampler
		public static boolean a	=>	h
		private surge.util.C altColor	=>	f
		private surge.util.C color	=>	e
		private java.lang.String description	=>	d
		private java.lang.String id	=>	b
		private int interval	=>	g
		private java.lang.String name	=>	c
		private double value	=>	a
	MethodsOf: react.api.Sampler
		public abstract void construct() 	NameNotChanged
		public abstract java.lang.String get() 	NameNotChanged
		public surge.util.C getAltColor() 	NameNotChanged
		public surge.util.C getColor() 	NameNotChanged
		public java.lang.String getDescription() 	NameNotChanged
		public java.lang.String getID() 	NameNotChanged
		public int getInterval() 	NameNotChanged
		public java.lang.String getName() 	NameNotChanged
		public double getValue() 	NameNotChanged
		public abstract void sample() 	NameNotChanged
		public void setColor(surge.util.C, surge.util.C) 	NameNotChanged
		public void setDescription(java.lang.String) 	NameNotChanged
		public void setID(java.lang.String) 	NameNotChanged
		public void setInterval(int) 	NameNotChanged
		public void setName(java.lang.String) 	NameNotChanged
		public void setValue(double) 	NameNotChanged
	LineNumbersOf: react.api.Sampler
		17	=>	16
		18	=>	21
		19	=>	15
		24	=>	20
		30	=>	11
		36	=>	3
		42	=>	2
		48	=>	4
		54	=>	8
		69	=>	7
		70	=>	9
		75	=>	19
		81	=>	6
		82	=>	18
		87	=>	10
		88	=>	12
		93	=>	22
		94	=>	5
		99	=>	17
		100	=>	14
		101	=>	1
		106	=>	23
		107	=>	13

Class: public final enum react.api.SelectionMode	NameNotChanged
	Source: "SelectionMode.java"
	FieldsOf: react.api.SelectionMode
		private static final synthetic react.api.SelectionMode[] $VALUES	=>	a
		public static final enum react.api.SelectionMode BLACKLIST	NameNotChanged
		public static final enum react.api.SelectionMode WHITELIST	NameNotChanged
	MethodsOf: react.api.SelectionMode
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static react.api.SelectionMode valueOf(java.lang.String) 	NameNotChanged
		public static react.api.SelectionMode[] values() 	NameNotChanged
	LineNumbersOf: react.api.SelectionMode
		3	=>	1, 4, 5 and 6
		5	=>	2
		6	=>	3

Class: public react.api.Selector	NameNotChanged
	Source: "Selector.java"
	FieldsOf: react.api.Selector
		private surge.collection.GSet list	=>	c
		private react.api.SelectionMode mode	=>	b
		private java.lang.Class objectType	=>	a
		private surge.collection.GSet possibilities	=>	d
	MethodsOf: react.api.Selector
		public boolean can(java.lang.Object) 	NameNotChanged
		public surge.collection.GSet getList() 	NameNotChanged
		public react.api.SelectionMode getMode() 	NameNotChanged
		public surge.collection.GSet getPossibilities() 	NameNotChanged
		public java.lang.Class getType() 	NameNotChanged
	LineNumbersOf: react.api.Selector
		13	=>	10
		14	=>	7
		15	=>	6
		16	=>	8
		17	=>	4
		18	=>	9
		23	=>	3
		29	=>	2
		35	=>	5
		41	=>	11
		47	=>	1

Class: public react.api.SelectorEntityType	NameNotChanged
	Source: "SelectorEntityType.java"
	FieldsOf: react.api.SelectorEntityType
	MethodsOf: react.api.SelectorEntityType
		public void add(org.bukkit.entity.EntityType) 	NameNotChanged
	LineNumbersOf: react.api.SelectorEntityType
		9	=>	3
		11	=>	6 and 7
		13	=>	5
		15	=>	4
		19	=>	2
		20	=>	1

Class: public react.api.SelectorPosition	NameNotChanged
	Source: "SelectorPosition.java"
	FieldsOf: react.api.SelectorPosition
	MethodsOf: react.api.SelectorPosition
		public void add(org.bukkit.Chunk) 	NameNotChanged
		public void add(org.bukkit.Chunk, int) 	NameNotChanged
		public void add(org.bukkit.World) 	NameNotChanged
		public void addAll() 	NameNotChanged
	LineNumbersOf: react.api.SelectorPosition
		13	=>	13
		14	=>	5
		18	=>	8
		19	=>	1
		23	=>	11
		24	=>	4
		28	=>	2 and 6
		30	=>	3
		32	=>	14
		36	=>	12
		38	=>	9
		39	=>	7
		40	=>	10

Class: public final enum react.api.Side	NameNotChanged
	Source: "Side.java"
	FieldsOf: react.api.Side
		private static final synthetic react.api.Side[] $VALUES	=>	b
		public static final enum react.api.Side CONSOLE	NameNotChanged
		public static final enum react.api.Side PLAYERS	NameNotChanged
		private java.lang.String ss	=>	a
	MethodsOf: react.api.Side
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static react.api.Side get(org.bukkit.command.CommandSender) 	NameNotChanged
		public java.lang.String ss() 	NameNotChanged
		public static react.api.Side valueOf(java.lang.String) 	NameNotChanged
		public static react.api.Side[] values() 	NameNotChanged
	LineNumbersOf: react.api.Side
		6	=>	4, 7 and 8
		8	=>	11
		9	=>	6
		14	=>	5
		15	=>	9
		16	=>	3
		20	=>	2
		25	=>	12
		27	=>	1
		30	=>	10

Class: public final enum react.api.SideGate	NameNotChanged
	Source: "SideGate.java"
	FieldsOf: react.api.SideGate
		private static final synthetic react.api.SideGate[] $VALUES	=>	a
		public static final enum react.api.SideGate ANYTHING	NameNotChanged
		public static final enum react.api.SideGate CONSOLES_ONLY	NameNotChanged
		public static final enum react.api.SideGate PLAYERS_ONLY	NameNotChanged
	MethodsOf: react.api.SideGate
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public boolean supports(react.api.Side) 	NameNotChanged
		public static react.api.SideGate valueOf(java.lang.String) 	NameNotChanged
		public static react.api.SideGate[] values() 	NameNotChanged
	LineNumbersOf: react.api.SideGate
		3	=>	7, 8, 14 and 17
		5	=>	11
		6	=>	5
		7	=>	15
		11	=>	3
		13	=>	6
		16	=>	16
		18	=>	1
		20	=>	12
		24	=>	10
		27	=>	2
		29	=>	9
		31	=>	4
		34	=>	13

Class: synthetic react.api.SideGate$1	NameNotChanged
	Source: "SideGate.java"
	FieldsOf: react.api.SideGate$1
		static final synthetic int[] $SwitchMap$react$api$SideGate	=>	a
	MethodsOf: react.api.SideGate$1
	LineNumbersOf: react.api.SideGate$1
		13	=>	1

Class: public react.api.TitleMonitor	NameNotChanged
	Source: "TitleMonitor.java"
	FieldsOf: react.api.TitleMonitor
		private surge.collection.GList headings	=>	a
	MethodsOf: react.api.TitleMonitor
		public void addHeading(react.api.MonitorHeading) 	NameNotChanged
		public react.api.MonitorHeading getHeadFor(int) 	NameNotChanged
		public java.lang.String getHotbarFor(int, boolean) 	NameNotChanged
		public java.lang.String getHotbarHeadFor(int, boolean, react.controller.MonitorController, react.api.ReactPlayer, int) 	NameNotChanged
		public int getMaxSelection() 	NameNotChanged
		public int left(int) 	NameNotChanged
		public int right(int) 	NameNotChanged
	LineNumbersOf: react.api.TitleMonitor
		12	=>	10
		13	=>	31
		14	=>	29
		18	=>	22
		19	=>	18
		23	=>	36
		28	=>	33
		29	=>	17
		31	=>	13
		33	=>	35
		36	=>	25
		41	=>	28
		42	=>	37
		44	=>	19
		46	=>	26
		49	=>	39
		54	=>	24
		59	=>	5
		61	=>	15
		63	=>	1
		66	=>	30
		68	=>	20
		69	=>	16
		70	=>	2
		72	=>	12
		74	=>	8
		77	=>	27
		82	=>	11
		83	=>	7
		85	=>	9
		87	=>	23
		88	=>	38
		89	=>	3
		90	=>	4
		91	=>	14
		92	=>	32
		94	=>	6
		96	=>	34
		99	=>	21

Class: public react.command.CommandFreeze	NameNotChanged
	Source: "CommandFreeze.java"
	FieldsOf: react.command.CommandFreeze
	MethodsOf: react.command.CommandFreeze
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void fire(org.bukkit.command.CommandSender, java.lang.String[]) 	NameNotChanged
	LineNumbersOf: react.command.CommandFreeze
		14	=>	5
		15	=>	13
		16	=>	14
		17	=>	4
		18	=>	8
		19	=>	1
		20	=>	7
		21	=>	11
		26	=>	2
		30	=>	12
		33	=>	3
		35	=>	6
		36	=>	9
		37	=>	10

Class: public react.command.CommandHelp	NameNotChanged
	Source: "CommandHelp.java"
	FieldsOf: react.command.CommandHelp
	MethodsOf: react.command.CommandHelp
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void fire(org.bukkit.command.CommandSender, java.lang.String[]) 	NameNotChanged
	LineNumbersOf: react.command.CommandHelp
		15	=>	7
		16	=>	2
		17	=>	9
		18	=>	8
		19	=>	3
		20	=>	5
		21	=>	10
		22	=>	1
		27	=>	6
		28	=>	4

Class: public react.command.CommandMonitor	NameNotChanged
	Source: "CommandMonitor.java"
	FieldsOf: react.command.CommandMonitor
		public static int a	=>	g
	MethodsOf: react.command.CommandMonitor
		public void fire(org.bukkit.command.CommandSender, java.lang.String[]) 	NameNotChanged
	LineNumbersOf: react.command.CommandMonitor
		17	=>	4
		18	=>	10
		19	=>	3
		20	=>	11
		21	=>	7
		22	=>	5
		23	=>	9
		24	=>	8
		29	=>	1
		30	=>	2
		31	=>	6

Class: public react.controller.ActionController	NameNotChanged
	Source: "ActionController.java"
	FieldsOf: react.controller.ActionController
	MethodsOf: react.controller.ActionController
		public void start() 	NameNotChanged
		public void stop() 	NameNotChanged
		public void tick() 	NameNotChanged
	LineNumbersOf: react.controller.ActionController
		5	=>	4
		11	=>	2
		17	=>	3
		23	=>	1

Class: public react.controller.CommandController	NameNotChanged
	Source: "CommandController.java"
	FieldsOf: react.controller.CommandController
		private surge.collection.GList commands	=>	a
		private boolean k	=>	c
	MethodsOf: react.controller.CommandController
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void begin() 	NameNotChanged
		public void f(org.bukkit.command.CommandSender, java.lang.String) 	NameNotChanged
		public void msg(org.bukkit.command.CommandSender, java.lang.String) 	NameNotChanged
		public boolean onCommand(org.bukkit.command.CommandSender, org.bukkit.command.Command, java.lang.String, java.lang.String[]) 	NameNotChanged
		public void start() 	NameNotChanged
		public void stop() 	NameNotChanged
		public void tick() 	NameNotChanged
	LineNumbersOf: react.controller.CommandController
		25	=>	36
		33	=>	1
		34	=>	33
		39	=>	66
		40	=>	56
		44	=>	29
		45	=>	13
		46	=>	2
		47	=>	22
		49	=>	7
		53	=>	19
		54	=>	61
		55	=>	21
		58	=>	14
		60	=>	32
		63	=>	38
		65	=>	17
		68	=>	55
		70	=>	72
		73	=>	11
		75	=>	9
		78	=>	57
		80	=>	69
		83	=>	59
		85	=>	16
		86	=>	10, 39, 40, 54, 60 and 68
		87	=>	48
		88	=>	53
		93	=>	77
		95	=>	80
		97	=>	25
		101	=>	67
		102	=>	81
		106	=>	46
		107	=>	12
		112	=>	18
		114	=>	73
		115	=>	65
		117	=>	63
		119	=>	24
		121	=>	58
		122	=>	31
		125	=>	28
		127	=>	6
		128	=>	20
		131	=>	47
		133	=>	37
		135	=>	5
		137	=>	79
		138	=>	51
		140	=>	27
		142	=>	4
		144	=>	8
		146	=>	23 and 74
		148	=>	62
		150	=>	76
		151	=>	3
		154	=>	45
		157	=>	75
		159	=>	78
		160	=>	30
		162	=>	52
		164	=>	26
		165	=>	71
		169	=>	44
		171	=>	15
		173	=>	82
		178	=>	34
		180	=>	35 and 41
		182	=>	64
		185	=>	42
		188	=>	49
		193	=>	43
		194	=>	50
		198	=>	70

Class: public react.controller.MonitorController	NameNotChanged
	Source: "MonitorController.java"
	FieldsOf: react.controller.MonitorController
		public static int maxCooldown	NameNotChanged
		private surge.collection.GMap posts	=>	c
		private react.api.TitleMonitor titleMonitor	=>	a
	MethodsOf: react.controller.MonitorController
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public float calcVolume(react.api.ReactPlayer) 	NameNotChanged
		public boolean canMonitor(org.bukkit.entity.Player) 	NameNotChanged
		private void changePost(react.api.ReactPlayer) 	=>	a
		public void constructMonitor() 	NameNotChanged
		public java.lang.String getTickName() 	NameNotChanged
		public react.api.TitleMonitor getTitleMonitor() 	NameNotChanged
		private void handlePosting(react.api.ReactPlayer) 	=>	f
		private void handleScrolling(react.api.ReactPlayer) 	=>	d
		private void handleShifting(react.api.ReactPlayer) 	=>	e
		private void handleTriggers(react.api.ReactPlayer) 	=>	c
		public boolean isMonitoring(org.bukkit.entity.Player) 	NameNotChanged
		public void on(org.bukkit.event.player.PlayerJoinEvent) 	NameNotChanged
		public void on(org.bukkit.event.player.PlayerToggleSneakEvent) 	NameNotChanged
		public void onTick() 	NameNotChanged
		public java.lang.String prefixFor(react.api.ReactPlayer, int, int) 	NameNotChanged
		public java.lang.String prefixForSub(react.api.ReactPlayer, surge.util.C, int) 	NameNotChanged
		private void processPlayer(react.api.ReactPlayer) 	=>	b
		public void start() 	NameNotChanged
		public void startMonitoring(org.bukkit.entity.Player) 	NameNotChanged
		public void stop() 	NameNotChanged
		public void stopMonitoring(org.bukkit.entity.Player) 	NameNotChanged
		public void tick() 	NameNotChanged
		public void tickMonitor(react.api.ReactPlayer) 	NameNotChanged
		public void toggleMonitoring(org.bukkit.entity.Player) 	NameNotChanged
	LineNumbersOf: react.controller.MonitorController
		31	=>	91
		36	=>	20
		37	=>	163
		38	=>	7
		39	=>	43
		44	=>	15
		45	=>	129
		46	=>	40
		48	=>	17
		50	=>	60
		52	=>	54
		54	=>	169
		55	=>	38
		59	=>	98
		61	=>	102
		64	=>	126
		66	=>	47
		67	=>	133
		72	=>	64
		73	=>	30
		75	=>	80
		80	=>	117
		81	=>	141
		82	=>	94
		86	=>	170
		87	=>	122
		88	=>	127
		90	=>	14
		91	=>	107
		93	=>	104
		94	=>	5
		96	=>	12
		97	=>	111
		98	=>	2
		99	=>	113
		101	=>	16
		102	=>	11
		103	=>	88
		104	=>	123
		105	=>	93
		109	=>	89
		110	=>	96
		111	=>	154
		112	=>	73
		114	=>	4
		119	=>	39
		124	=>	24
		126	=>	76
		129	=>	3
		134	=>	144
		136	=>	140
		138	=>	36
		142	=>	160
		144	=>	118
		145	=>	18
		148	=>	9
		150	=>	75
		151	=>	101
		153	=>	6
		159	=>	106
		163	=>	120
		164	=>	44
		165	=>	132
		166	=>	121
		170	=>	59
		172	=>	137
		175	=>	53
		176	=>	62
		177	=>	103
		178	=>	151
		179	=>	13
		183	=>	90
		185	=>	82
		186	=>	112
		188	=>	152
		190	=>	130
		193	=>	167
		195	=>	48
		198	=>	136
		200	=>	173
		201	=>	33
		202	=>	135
		205	=>	85
		207	=>	159
		211	=>	21
		212	=>	171
		213	=>	46
		214	=>	172
		216	=>	97
		218	=>	57
		220	=>	142
		223	=>	81
		225	=>	37
		228	=>	99
		230	=>	86
		233	=>	156
		235	=>	35
		240	=>	83
		246	=>	164
		249	=>	147
		250	=>	119
		254	=>	146
		255	=>	105
		256	=>	72
		257	=>	23
		258	=>	27
		259	=>	70
		261	=>	145
		263	=>	150
		265	=>	55
		266	=>	124
		267	=>	66
		268	=>	148
		273	=>	71
		274	=>	165
		275	=>	61
		276	=>	128
		280	=>	87
		281	=>	32
		282	=>	68
		286	=>	143
		288	=>	166
		291	=>	100
		293	=>	139
		296	=>	74
		298	=>	29
		300	=>	153
		301	=>	158
		304	=>	52
		306	=>	108
		308	=>	109
		312	=>	67
		314	=>	69
		317	=>	51
		318	=>	65
		320	=>	155
		322	=>	138
		325	=>	56
		327	=>	131
		330	=>	115
		335	=>	84
		336	=>	22
		337	=>	58
		339	=>	25
		341	=>	114
		344	=>	125
		346	=>	63
		349	=>	149
		354	=>	1
		355	=>	31
		356	=>	77
		357	=>	134
		358	=>	157
		359	=>	78
		360	=>	45
		361	=>	8
		365	=>	110
		371	=>	161
		373	=>	28
		375	=>	19
		380	=>	79
		382	=>	50
		384	=>	116
		387	=>	168
		389	=>	10
		394	=>	42
		396	=>	34
		398	=>	92
		400	=>	49
		403	=>	26
		404	=>	95
		405	=>	41
		410	=>	162

Class: public react.controller.PlayerController	NameNotChanged
	Source: "PlayerController.java"
	FieldsOf: react.controller.PlayerController
		private surge.collection.GList players	=>	a
	MethodsOf: react.controller.PlayerController
		public react.api.ReactPlayer getPlayer(org.bukkit.entity.Player) 	NameNotChanged
		public surge.collection.GList getPlayers() 	NameNotChanged
		public boolean has(org.bukkit.entity.Player) 	NameNotChanged
		public void on(org.bukkit.event.player.PlayerQuitEvent) 	NameNotChanged
		public void start() 	NameNotChanged
		public void stop() 	NameNotChanged
		public void tick() 	NameNotChanged
	LineNumbersOf: react.controller.PlayerController
		12	=>	3
		19	=>	16
		20	=>	23
		21	=>	14
		26	=>	7
		27	=>	9
		33	=>	5
		37	=>	12
		39	=>	24
		41	=>	6
		43	=>	4
		45	=>	20
		50	=>	2
		52	=>	18
		54	=>	11
		56	=>	15
		58	=>	8
		59	=>	21
		61	=>	1
		66	=>	13
		72	=>	10
		74	=>	22
		75	=>	19
		77	=>	17

Class: public react.controller.SampleController	NameNotChanged
	Source: "SampleController.java"
	FieldsOf: react.controller.SampleController
		public static int a	=>	d
		private surge.collection.GMap samplers	=>	a
		private surge.server.SuperSampler ss	=>	c
	MethodsOf: react.controller.SampleController
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		private void constructSamplers() 	=>	a
		public react.api.ISampler getSampler(java.lang.String) 	NameNotChanged
		public surge.server.SuperSampler getSuperSampler() 	NameNotChanged
		public java.lang.String getTickName() 	NameNotChanged
		public void onTick() 	NameNotChanged
		public void registerSampler(react.api.ISampler) 	NameNotChanged
		public void start() 	NameNotChanged
		public void stop() 	NameNotChanged
		public void tick() 	NameNotChanged
	LineNumbersOf: react.controller.SampleController
		34	=>	10
		35	=>	5
		36	=>	1
		37	=>	38
		38	=>	4
		42	=>	31
		43	=>	32
		47	=>	46
		52	=>	20
		53	=>	29
		54	=>	6
		55	=>	7
		56	=>	40
		57	=>	23
		58	=>	8
		59	=>	21
		60	=>	30
		61	=>	43
		62	=>	11
		63	=>	36
		64	=>	16
		65	=>	19
		67	=>	35
		69	=>	25
		70	=>	39
		71	=>	26
		72	=>	34
		77	=>	47
		78	=>	12
		79	=>	14
		80	=>	45
		85	=>	44
		86	=>	41
		87	=>	18
		88	=>	15
		94	=>	3
		98	=>	24
		104	=>	37
		108	=>	28
		110	=>	17
		114	=>	27
		116	=>	13
		117	=>	9
		118	=>	2
		119	=>	42
		120	=>	22
		125	=>	33

Class: public react.sampler.SampleChunksLoaded	NameNotChanged
	Source: "SampleChunksLoaded.java"
	FieldsOf: react.sampler.SampleChunksLoaded
	MethodsOf: react.sampler.SampleChunksLoaded
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleChunksLoaded
		8	=>	1
		13	=>	5
		14	=>	9
		15	=>	2
		16	=>	8
		17	=>	6
		18	=>	10
		19	=>	3
		24	=>	11
		25	=>	4
		30	=>	7

Class: public react.sampler.SampleChunksLoadedPerSecond	NameNotChanged
	Source: "SampleChunksLoadedPerSecond.java"
	FieldsOf: react.sampler.SampleChunksLoadedPerSecond
		private surge.math.Average a	=>	i
	MethodsOf: react.sampler.SampleChunksLoadedPerSecond
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleChunksLoadedPerSecond
		9	=>	8
		11	=>	5
		16	=>	9
		17	=>	6
		18	=>	1
		19	=>	3
		20	=>	13
		21	=>	2
		22	=>	4
		27	=>	11
		28	=>	10
		29	=>	7
		34	=>	12

Class: public react.sampler.SampleEntitiesDrops	NameNotChanged
	Source: "SampleEntitiesDrops.java"
	FieldsOf: react.sampler.SampleEntitiesDrops
	MethodsOf: react.sampler.SampleEntitiesDrops
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleEntitiesDrops
		8	=>	1
		13	=>	4
		14	=>	3
		15	=>	11
		16	=>	8
		17	=>	2
		18	=>	10
		19	=>	9
		24	=>	5
		25	=>	6
		30	=>	7

Class: public react.sampler.SampleEntitiesLiving	NameNotChanged
	Source: "SampleEntitiesLiving.java"
	FieldsOf: react.sampler.SampleEntitiesLiving
	MethodsOf: react.sampler.SampleEntitiesLiving
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleEntitiesLiving
		8	=>	11
		13	=>	5
		14	=>	9
		15	=>	7
		16	=>	3
		17	=>	4
		18	=>	1
		19	=>	6
		24	=>	2
		25	=>	8
		30	=>	10

Class: public react.sampler.SampleEntitiesTiles	NameNotChanged
	Source: "SampleEntitiesTiles.java"
	FieldsOf: react.sampler.SampleEntitiesTiles
	MethodsOf: react.sampler.SampleEntitiesTiles
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleEntitiesTiles
		8	=>	4
		13	=>	8
		14	=>	6
		15	=>	10
		16	=>	7
		17	=>	3
		18	=>	1
		19	=>	9
		24	=>	5
		25	=>	11
		30	=>	2

Class: public react.sampler.SampleEntitiesTotal	NameNotChanged
	Source: "SampleEntitiesTotal.java"
	FieldsOf: react.sampler.SampleEntitiesTotal
	MethodsOf: react.sampler.SampleEntitiesTotal
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleEntitiesTotal
		8	=>	9
		13	=>	8
		14	=>	4
		15	=>	2
		16	=>	1
		17	=>	6
		18	=>	5
		19	=>	3
		24	=>	10
		25	=>	11
		30	=>	7

Class: public react.sampler.SampleMemoryAllocated	NameNotChanged
	Source: "SampleMemoryAllocated.java"
	FieldsOf: react.sampler.SampleMemoryAllocated
	MethodsOf: react.sampler.SampleMemoryAllocated
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleMemoryAllocated
		8	=>	4
		13	=>	5
		14	=>	9
		15	=>	11
		16	=>	3
		17	=>	7
		18	=>	6
		19	=>	2
		24	=>	1
		25	=>	8
		30	=>	10

Class: public react.sampler.SampleMemoryAllocationPerSecond	NameNotChanged
	Source: "SampleMemoryAllocationPerSecond.java"
	FieldsOf: react.sampler.SampleMemoryAllocationPerSecond
	MethodsOf: react.sampler.SampleMemoryAllocationPerSecond
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleMemoryAllocationPerSecond
		8	=>	11
		13	=>	10
		14	=>	7
		15	=>	8
		16	=>	1
		17	=>	2
		18	=>	4
		19	=>	6
		24	=>	9
		25	=>	5
		30	=>	3

Class: public react.sampler.SampleMemoryFree	NameNotChanged
	Source: "SampleMemoryFree.java"
	FieldsOf: react.sampler.SampleMemoryFree
	MethodsOf: react.sampler.SampleMemoryFree
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleMemoryFree
		8	=>	6
		13	=>	10
		14	=>	5
		15	=>	9
		16	=>	7
		17	=>	4
		18	=>	11
		19	=>	1
		24	=>	2
		25	=>	3
		30	=>	8

Class: public react.sampler.SampleMemoryMax	NameNotChanged
	Source: "SampleMemoryMax.java"
	FieldsOf: react.sampler.SampleMemoryMax
	MethodsOf: react.sampler.SampleMemoryMax
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleMemoryMax
		8	=>	11
		13	=>	8
		14	=>	5
		15	=>	6
		16	=>	4
		17	=>	1
		18	=>	9
		19	=>	7
		24	=>	10
		25	=>	2
		30	=>	3

Class: public react.sampler.SampleMemoryUse	NameNotChanged
	Source: "SampleMemoryUse.java"
	FieldsOf: react.sampler.SampleMemoryUse
	MethodsOf: react.sampler.SampleMemoryUse
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleMemoryUse
		8	=>	7
		13	=>	4
		14	=>	11
		15	=>	10
		16	=>	9
		17	=>	1
		18	=>	6
		19	=>	3
		24	=>	2
		25	=>	5
		30	=>	8

Class: public react.sampler.SampleTickTime	NameNotChanged
	Source: "SampleTickTime.java"
	FieldsOf: react.sampler.SampleTickTime
	MethodsOf: react.sampler.SampleTickTime
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleTickTime
		8	=>	11
		13	=>	1
		14	=>	4
		15	=>	3
		16	=>	2
		17	=>	7
		18	=>	9
		19	=>	8
		24	=>	6
		25	=>	10
		30	=>	5

Class: public react.sampler.SampleTickUtilization	NameNotChanged
	Source: "SampleTickUtilization.java"
	FieldsOf: react.sampler.SampleTickUtilization
	MethodsOf: react.sampler.SampleTickUtilization
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleTickUtilization
		8	=>	9
		13	=>	8
		14	=>	11
		15	=>	7
		16	=>	6
		17	=>	1
		18	=>	10
		19	=>	5
		24	=>	2
		25	=>	3
		30	=>	4

Class: public react.sampler.SampleTicksPerSecond	NameNotChanged
	Source: "SampleTicksPerSecond.java"
	FieldsOf: react.sampler.SampleTicksPerSecond
		public static int a	=>	i
	MethodsOf: react.sampler.SampleTicksPerSecond
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void construct() 	NameNotChanged
		public java.lang.String get() 	NameNotChanged
		public void sample() 	NameNotChanged
	LineNumbersOf: react.sampler.SampleTicksPerSecond
		9	=>	2
		14	=>	5
		15	=>	4
		16	=>	7
		17	=>	6
		18	=>	8
		19	=>	1
		20	=>	10
		25	=>	3
		26	=>	12
		31	=>	13
		33	=>	11
		36	=>	9

Class: public surge.Main	NameNotChanged
	Source: "Main.java"
	FieldsOf: surge.Main
		public static surge.collection.GMap anchors	NameNotChanged
		private surge.collection.GList controllerSet	=>	f
		private surge.collection.GMap pluginInstances	=>	e
		private surge.collection.GList plugins	=>	d
	MethodsOf: surge.Main
		private static java.lang.String b(char[]) 	NameNotChanged
		private static char[] b(java.lang.String) 	NameNotChanged
		private void initializeAmps() 	=>	b
		public void onControllerRegistry() 	NameNotChanged
		public void onPostInit() 	NameNotChanged
		public void onPreInit() 	NameNotChanged
		public void onStart(surge.util.Protocol) 	NameNotChanged
		public void onStop() 	NameNotChanged
		public void onTick() 	NameNotChanged
		private void scanForAmps() 	=>	c
		private void shutDownAmps() 	=>	a
	LineNumbersOf: surge.Main
		28	=>	166
		39	=>	136
		46	=>	107
		47	=>	137
		48	=>	89
		49	=>	121
		50	=>	90
		51	=>	167
		53	=>	173
		55	=>	105
		58	=>	125
		60	=>	123
		63	=>	108
		65	=>	24
		68	=>	66
		70	=>	4
		73	=>	49
		75	=>	152
		78	=>	104
		80	=>	36
		83	=>	133
		85	=>	175
		88	=>	165
		90	=>	44
		92	=>	120
		99	=>	156
		100	=>	129
		102	=>	14
		104	=>	6
		107	=>	1
		109	=>	45
		112	=>	64
		114	=>	18
		116	=>	5
		122	=>	116
		128	=>	170
		132	=>	68 and 102
		134	=>	155
		137	=>	31
		139	=>	47 and 141
		141	=>	84
		143	=>	124
		147	=>	80
		149	=>	115 and 158
		151	=>	98
		152	=>	160
		153	=>	20
		154	=>	153
		156	=>	67 and 86
		158	=>	139
		160	=>	48
		162	=>	9
		164	=>	42
		165	=>	150
		168	=>	26
		170	=>	117
		171	=>	73
		174	=>	74
		176	=>	91
		177	=>	110
		180	=>	27
		182	=>	145
		183	=>	11
		186	=>	96
		187	=>	148
		191	=>	51 and 57
		193	=>	28
		195	=>	3
		197	=>	101
		199	=>	83
		200	=>	99
		203	=>	94
		205	=>	164
		206	=>	144
		209	=>	79
		211	=>	95
		212	=>	69
		215	=>	16
		217	=>	29
		218	=>	39
		221	=>	12
		225	=>	37 and 128
		227	=>	143
		229	=>	54
		231	=>	138
		233	=>	30
		234	=>	34
		237	=>	161
		239	=>	168
		240	=>	2
		243	=>	35
		245	=>	19
		246	=>	70
		249	=>	81
		251	=>	72
		252	=>	22
		255	=>	140
		257	=>	33
		258	=>	151
		261	=>	8
		265	=>	53 and 85
		267	=>	56
		269	=>	178
		271	=>	114
		273	=>	162
		274	=>	59
		277	=>	71
		279	=>	109
		280	=>	13
		283	=>	126
		285	=>	103
		286	=>	163
		289	=>	130
		291	=>	169
		292	=>	146
		295	=>	87
		297	=>	119
		298	=>	17
		301	=>	135
		305	=>	10
		307	=>	63
		309	=>	43
		310	=>	38
		313	=>	55
		315	=>	113
		317	=>	177
		318	=>	7
		321	=>	40 and 77
		323	=>	122
		325	=>	41
		327	=>	142
		328	=>	88
		331	=>	172
		332	=>	92
		333	=>	50
		334	=>	127
		337	=>	75
		339	=>	62
		341	=>	171 and 179
		343	=>	58
		346	=>	93
		349	=>	25
		351	=>	157
		355	=>	32
		356	=>	159
		357	=>	52
		359	=>	112 and 132
		361	=>	100
		363	=>	82
		365	=>	15
		368	=>	154
		369	=>	21
		371	=>	97
		373	=>	176
		374	=>	118
		377	=>	147
		379	=>	131
		381	=>	23
		383	=>	134
		386	=>	149
		387	=>	106
		392	=>	65
		393	=>	61
		398	=>	78
		400	=>	46
		403	=>	76 and 111
		405	=>	60
		407	=>	174

Class: public surge.PluginAmp	NameNotChanged
	Source: "PluginAmp.java"
	FieldsOf: surge.PluginAmp
		private boolean connected	=>	b
		private int masterTask	=>	c
		private surge.control.AmpedPlugin plugin	=>	a
	MethodsOf: surge.PluginAmp
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		static synthetic void access$000(surge.PluginAmp) 	NameNotChanged
		public void connect() 	NameNotChanged
		public void disconnect() 	NameNotChanged
		public surge.control.AmpedPlugin getPluginInstance() 	NameNotChanged
		public boolean isConnected() 	NameNotChanged
		private void masterTick() 	=>	a
		public int startRepeatingTask(int, int, java.lang.Runnable) 	NameNotChanged
		public int startTask(int, java.lang.Runnable) 	NameNotChanged
		public void stopTask(int) 	NameNotChanged
	LineNumbersOf: surge.PluginAmp
		11	=>	11
		18	=>	5
		19	=>	14
		20	=>	22
		21	=>	15
		25	=>	33
		30	=>	2
		35	=>	19
		36	=>	4
		37	=>	25
		47	=>	20
		55	=>	31
		59	=>	29
		61	=>	17
		64	=>	8
		65	=>	26
		67	=>	32
		69	=>	9
		70	=>	23
		71	=>	35
		75	=>	34
		76	=>	27
		77	=>	7
		78	=>	3
		79	=>	28
		83	=>	21
		85	=>	1
		90	=>	12
		93	=>	13
		98	=>	6
		100	=>	24
		105	=>	30
		108	=>	18
		113	=>	10
		114	=>	16

Class: surge.PluginAmp$1	NameNotChanged
	Source: "PluginAmp.java"
	FieldsOf: surge.PluginAmp$1
		final synthetic surge.PluginAmp this$0	NameNotChanged
	MethodsOf: surge.PluginAmp$1
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void run() 	NameNotChanged
	LineNumbersOf: surge.PluginAmp$1
		38	=>	2
		42	=>	4
		43	=>	3
		44	=>	1

Class: surge.PluginAmp$2	NameNotChanged
	Source: "PluginAmp.java"
	FieldsOf: surge.PluginAmp$2
		final synthetic surge.PluginAmp this$0	NameNotChanged
	MethodsOf: surge.PluginAmp$2
		public void run() 	NameNotChanged
	LineNumbersOf: surge.PluginAmp$2
		48	=>	3
		52	=>	2
		53	=>	1

Class: public surge.Surge	NameNotChanged
	Source: "Surge.java"
	FieldsOf: surge.Surge
		public static int a	=>	g
		protected static surge.PluginAmp amp	=>	a
		private static surge.collection.GList atickComponents	=>	c
		private static surge.hotload.HotloadManager hotloadmgr	=>	e
		private static java.lang.Thread mainThread	=>	f
		private static surge.sched.TaskManager taskmgr	=>	d
		private static surge.collection.GList tickComponents	=>	b
	MethodsOf: surge.Surge
		public static surge.PluginAmp createAmp(surge.control.AmpedPlugin) 	NameNotChanged
		public static java.io.File folder() 	NameNotChanged
		public static java.io.File folder(java.lang.String) 	NameNotChanged
		public static surge.PluginAmp getAmp() 	NameNotChanged
		public static surge.collection.GList getAsyncTickComponents() 	NameNotChanged
		public static surge.hotload.HotloadManager getHotloadManager() 	NameNotChanged
		public static java.io.File getPluginJarFile() 	NameNotChanged
		public static java.lang.Thread getServerThread() 	NameNotChanged
		public static surge.sched.TaskManager getTaskManager() 	NameNotChanged
		public static surge.collection.GList getTickComponents() 	NameNotChanged
		public static boolean hasAmp() 	NameNotChanged
		public static boolean isMainThread() 	NameNotChanged
		public static void register(org.bukkit.event.Listener) 	NameNotChanged
		public static void registerTicked(surge.sched.IMasterTickComponent) 	NameNotChanged
		private static void startup() 	=>	a
		protected static void stopAmp() 	=>	b
		public static void unregister(org.bukkit.event.Listener) 	NameNotChanged
		public static void unregisterTicked(surge.sched.IMasterTickComponent) 	NameNotChanged
	LineNumbersOf: surge.Surge
		17	=>	18
		19	=>	6
		20	=>	10
		21	=>	36
		28	=>	37
		29	=>	34
		33	=>	33
		34	=>	20
		38	=>	35
		43	=>	16
		48	=>	7
		49	=>	39
		50	=>	9
		55	=>	13
		56	=>	22
		57	=>	29
		61	=>	32
		66	=>	26
		71	=>	4
		76	=>	11
		78	=>	12
		79	=>	14
		82	=>	28
		83	=>	41
		87	=>	5
		89	=>	23
		90	=>	21
		93	=>	31
		94	=>	38
		98	=>	40
		100	=>	27
		103	=>	19
		108	=>	17
		113	=>	25
		114	=>	30
		118	=>	8
		123	=>	2
		128	=>	1
		133	=>	15
		138	=>	3
		139	=>	24

Class: public surge.cluster.Cluster	NameNotChanged
	Source: "Cluster.java"
	FieldsOf: surge.cluster.Cluster
		public static boolean a	=>	c
		private java.lang.Object t	=>	b
		private surge.cluster.ClusterType type	=>	a
	MethodsOf: surge.cluster.Cluster
		public java.lang.Object get() 	NameNotChanged
		public surge.cluster.ClusterType getType() 	NameNotChanged
		public void set(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.cluster.Cluster
		9	=>	6
		10	=>	4
		11	=>	3
		12	=>	1
		17	=>	5
		23	=>	2
		24	=>	7
		29	=>	8

Class: public surge.cluster.ClusterBoolean	NameNotChanged
	Source: "ClusterBoolean.java"
	FieldsOf: surge.cluster.ClusterBoolean
	MethodsOf: surge.cluster.ClusterBoolean
	LineNumbersOf: surge.cluster.ClusterBoolean
		7	=>	2
		8	=>	1

Class: public surge.cluster.ClusterDouble	NameNotChanged
	Source: "ClusterDouble.java"
	FieldsOf: surge.cluster.ClusterDouble
	MethodsOf: surge.cluster.ClusterDouble
	LineNumbersOf: surge.cluster.ClusterDouble
		7	=>	2
		8	=>	1

Class: public surge.cluster.ClusterInt	NameNotChanged
	Source: "ClusterInt.java"
	FieldsOf: surge.cluster.ClusterInt
	MethodsOf: surge.cluster.ClusterInt
	LineNumbersOf: surge.cluster.ClusterInt
		7	=>	1
		8	=>	2

Class: public surge.cluster.ClusterLong	NameNotChanged
	Source: "ClusterLong.java"
	FieldsOf: surge.cluster.ClusterLong
	MethodsOf: surge.cluster.ClusterLong
	LineNumbersOf: surge.cluster.ClusterLong
		7	=>	2
		8	=>	1

Class: public surge.cluster.ClusterString	NameNotChanged
	Source: "ClusterString.java"
	FieldsOf: surge.cluster.ClusterString
	MethodsOf: surge.cluster.ClusterString
	LineNumbersOf: surge.cluster.ClusterString
		7	=>	1
		8	=>	2

Class: public surge.cluster.ClusterStringList	NameNotChanged
	Source: "ClusterStringList.java"
	FieldsOf: surge.cluster.ClusterStringList
	MethodsOf: surge.cluster.ClusterStringList
	LineNumbersOf: surge.cluster.ClusterStringList
		9	=>	2
		10	=>	1

Class: public final enum surge.cluster.ClusterType	NameNotChanged
	Source: "ClusterType.java"
	FieldsOf: surge.cluster.ClusterType
		private static final synthetic surge.cluster.ClusterType[] $VALUES	=>	a
		public static final enum surge.cluster.ClusterType BOOLEAN	NameNotChanged
		public static final enum surge.cluster.ClusterType DOUBLE	NameNotChanged
		public static final enum surge.cluster.ClusterType INT	NameNotChanged
		public static final enum surge.cluster.ClusterType LONG	NameNotChanged
		public static final enum surge.cluster.ClusterType STRING	NameNotChanged
		public static final enum surge.cluster.ClusterType STRING_LIST	NameNotChanged
	MethodsOf: surge.cluster.ClusterType
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static surge.cluster.ClusterType valueOf(java.lang.String) 	NameNotChanged
		public static surge.cluster.ClusterType[] values() 	NameNotChanged
	LineNumbersOf: surge.cluster.ClusterType
		3	=>	1, 2, 3 and 5
		5	=>	4

Class: public surge.cluster.ConfigurationDataInput	NameNotChanged
	Source: "ConfigurationDataInput.java"
	FieldsOf: surge.cluster.ConfigurationDataInput
		private static synthetic int[] $SWITCH_TABLE$surge$cluster$ClusterType	=>	a
	MethodsOf: surge.cluster.ConfigurationDataInput
		static synthetic int[] $SWITCH_TABLE$surge$cluster$ClusterType() 	=>	a
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public surge.cluster.DataCluster fillDefaults(surge.cluster.IConfigurable) 	NameNotChanged
		public void read(surge.cluster.IConfigurable, java.io.File) 	NameNotChanged
	LineNumbersOf: surge.cluster.ConfigurationDataInput
		11	=>	19 and 111
		16	=>	43
		17	=>	58
		18	=>	103
		20	=>	31
		22	=>	69
		23	=>	13
		26	=>	24
		28	=>	18 and 76
		30	=>	51
		32	=>	46
		34	=>	8
		37	=>	130
		40	=>	29
		41	=>	126
		43	=>	22
		46	=>	101
		47	=>	44
		49	=>	115
		50	=>	21
		52	=>	127
		53	=>	64
		55	=>	14
		56	=>	121
		58	=>	105
		59	=>	48
		61	=>	17
		66	=>	57 and 74
		68	=>	27
		70	=>	79
		73	=>	28
		75	=>	55
		77	=>	93
		78	=>	1
		82	=>	118
		84	=>	72 and 94
		86	=>	56
		88	=>	53
		91	=>	49
		92	=>	30
		93	=>	78
		95	=>	114
		97	=>	20
		98	=>	40
		101	=>	35
		103	=>	16
		106	=>	60
		107	=>	90
		109	=>	61
		110	=>	26
		112	=>	45
		113	=>	42
		115	=>	4
		116	=>	81
		118	=>	7
		119	=>	52
		121	=>	116
		126	=>	50
		131	=>	11
		132	=>	80
		133	=>	109
		135	=>	71 and 102
		137	=>	129
		139	=>	95
		142	=>	3
		143	=>	23
		144	=>	83
		146	=>	77
		148	=>	88
		149	=>	73
		151	=>	128
		153	=>	34
		154	=>	37
		156	=>	62
		158	=>	75
		159	=>	125
		161	=>	100
		163	=>	131
		164	=>	119
		166	=>	117
		168	=>	99
		169	=>	82
		171	=>	70
		173	=>	47
		174	=>	113
		178	=>	66
		182	=>	65 and 122
		184	=>	2
		186	=>	89
		189	=>	91
		191	=>	9
		193	=>	59
		194	=>	124
		198	=>	6
		200	=>	104 and 112
		202	=>	106
		204	=>	120
		207	=>	15
		208	=>	25
		209	=>	68
		211	=>	41
		213	=>	92
		214	=>	39
		217	=>	36
		219	=>	33
		221	=>	123
		222	=>	98
		224	=>	84
		226	=>	110
		227	=>	63
		229	=>	85
		231	=>	5
		232	=>	107
		234	=>	32
		236	=>	12
		237	=>	86
		239	=>	96
		241	=>	54
		242	=>	10
		244	=>	38
		246	=>	97
		247	=>	67
		251	=>	108
		256	=>	87

Class: public surge.cluster.ConfigurationDataOutput	NameNotChanged
	Source: "ConfigurationDataOutput.java"
	FieldsOf: surge.cluster.ConfigurationDataOutput
	MethodsOf: surge.cluster.ConfigurationDataOutput
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void write(surge.cluster.IConfigurable, java.io.File) 	NameNotChanged
	LineNumbersOf: surge.cluster.ConfigurationDataOutput
		11	=>	20
		16	=>	27
		17	=>	19
		18	=>	46
		20	=>	18 and 29
		22	=>	38
		24	=>	59
		27	=>	25
		28	=>	12
		29	=>	51
		31	=>	50
		33	=>	2
		34	=>	57
		36	=>	11
		38	=>	33
		39	=>	55
		41	=>	42
		43	=>	63
		44	=>	16
		46	=>	58
		48	=>	26
		49	=>	32
		51	=>	60
		53	=>	24
		54	=>	47
		56	=>	67
		58	=>	34
		59	=>	37
		63	=>	7
		67	=>	10 and 49
		69	=>	8
		71	=>	14
		74	=>	22
		76	=>	43
		78	=>	66
		79	=>	41
		83	=>	39
		85	=>	17 and 35
		87	=>	36
		89	=>	5
		92	=>	9
		93	=>	62
		94	=>	44
		96	=>	40
		98	=>	4
		99	=>	48
		102	=>	30
		104	=>	28
		106	=>	1
		107	=>	13
		109	=>	71
		111	=>	53
		112	=>	6
		114	=>	45
		116	=>	65
		117	=>	31
		119	=>	21
		121	=>	69
		122	=>	68
		124	=>	52
		126	=>	70
		127	=>	61
		129	=>	64
		131	=>	54
		132	=>	23
		136	=>	56
		141	=>	15
		142	=>	3

Class: public surge.cluster.DataCluster	NameNotChanged
	Source: "DataCluster.java"
	FieldsOf: surge.cluster.DataCluster
		private surge.collection.GMap clusters	=>	a
	MethodsOf: surge.cluster.DataCluster
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public boolean contains(java.lang.String) 	NameNotChanged
		public void fromFileConfiguration(org.bukkit.configuration.file.FileConfiguration) 	NameNotChanged
		public void fromJson(surge.json.JSONObject) 	NameNotChanged
		public java.lang.Object get(java.lang.String) 	NameNotChanged
		public boolean getBoolean(java.lang.String) 	NameNotChanged
		public double getDouble(java.lang.String) 	NameNotChanged
		public int getInt(java.lang.String) 	NameNotChanged
		public long getLong(java.lang.String) 	NameNotChanged
		public java.lang.String getString(java.lang.String) 	NameNotChanged
		public java.util.List getStringList(java.lang.String) 	NameNotChanged
		public surge.cluster.ClusterType getType(java.lang.String) 	NameNotChanged
		public surge.collection.GList keys() 	NameNotChanged
		public void set(java.lang.String, boolean) 	NameNotChanged
		public void set(java.lang.String, double) 	NameNotChanged
		public void set(java.lang.String, int) 	NameNotChanged
		public void set(java.lang.String, java.lang.String) 	NameNotChanged
		public void set(java.lang.String, java.util.List) 	NameNotChanged
		public void set(java.lang.String, long) 	NameNotChanged
		public org.bukkit.configuration.file.FileConfiguration toFileConfiguration() 	NameNotChanged
		public surge.json.JSONObject toJson() 	NameNotChanged
		public void trySet(java.lang.String, java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.cluster.DataCluster
		17	=>	21
		19	=>	75
		20	=>	66
		24	=>	72
		29	=>	17 and 30
		31	=>	35
		33	=>	14
		37	=>	32
		39	=>	4 and 51
		41	=>	71
		44	=>	9
		49	=>	1
		51	=>	18 and 67
		53	=>	28
		56	=>	55
		61	=>	40 and 54
		63	=>	15
		65	=>	2
		67	=>	37
		68	=>	12
		70	=>	56
		72	=>	39
		73	=>	25
		75	=>	41
		77	=>	43
		78	=>	48
		80	=>	34
		82	=>	26
		83	=>	29
		85	=>	69
		87	=>	62
		88	=>	44
		90	=>	38
		92	=>	36
		95	=>	7
		97	=>	8
		100	=>	3
		104	=>	70
		109	=>	49
		114	=>	65
		119	=>	50
		124	=>	11
		129	=>	23
		134	=>	57
		139	=>	46
		145	=>	24
		151	=>	59
		153	=>	60
		156	=>	5
		158	=>	53
		161	=>	42
		163	=>	19
		166	=>	52
		168	=>	73
		171	=>	64
		173	=>	31
		176	=>	22
		178	=>	20
		181	=>	27
		182	=>	13
		186	=>	33
		187	=>	10
		191	=>	47
		192	=>	76
		196	=>	61
		197	=>	74
		201	=>	6
		202	=>	16
		206	=>	45
		207	=>	58
		211	=>	63
		212	=>	68

Class: public abstract surge.cluster.ICluster	NameNotChanged
	Source: "ICluster.java"
	FieldsOf: surge.cluster.ICluster
	MethodsOf: surge.cluster.ICluster
		public abstract java.lang.Object get() 	NameNotChanged
		public abstract surge.cluster.ClusterType getType() 	NameNotChanged
		public abstract void set(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.cluster.ICluster

Class: public abstract surge.cluster.IConfigurable	NameNotChanged
	Source: "IConfigurable.java"
	FieldsOf: surge.cluster.IConfigurable
	MethodsOf: surge.cluster.IConfigurable
	LineNumbersOf: surge.cluster.IConfigurable

Class: public abstract surge.cluster.IDataInput	NameNotChanged
	Source: "IDataInput.java"
	FieldsOf: surge.cluster.IDataInput
	MethodsOf: surge.cluster.IDataInput
		public abstract surge.cluster.DataCluster read(java.io.File) 	NameNotChanged
	LineNumbersOf: surge.cluster.IDataInput

Class: public abstract surge.cluster.IDataOutput	NameNotChanged
	Source: "IDataOutput.java"
	FieldsOf: surge.cluster.IDataOutput
	MethodsOf: surge.cluster.IDataOutput
		public abstract void write(surge.cluster.DataCluster, java.io.File) 	NameNotChanged
	LineNumbersOf: surge.cluster.IDataOutput

Class: public abstract annotation surge.cluster.Key	NameNotChanged
	Source: "Key.java"
	FieldsOf: surge.cluster.Key
	MethodsOf: surge.cluster.Key
		public abstract java.lang.String value() 	NameNotChanged
	LineNumbersOf: surge.cluster.Key

Class: public abstract annotation surge.cluster.KeyPointer	NameNotChanged
	Source: "KeyPointer.java"
	FieldsOf: surge.cluster.KeyPointer
	MethodsOf: surge.cluster.KeyPointer
		public abstract int value() 	NameNotChanged
	LineNumbersOf: surge.cluster.KeyPointer

Class: public abstract annotation surge.cluster.KeyStore	NameNotChanged
	Source: "KeyStore.java"
	FieldsOf: surge.cluster.KeyStore
	MethodsOf: surge.cluster.KeyStore
	LineNumbersOf: surge.cluster.KeyStore

Class: public surge.cluster.ReflectedConfigurationException	NameNotChanged
	Source: "ReflectedConfigurationException.java"
	FieldsOf: surge.cluster.ReflectedConfigurationException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.cluster.ReflectedConfigurationException
	LineNumbersOf: surge.cluster.ReflectedConfigurationException
		3	=>	1

Class: public surge.cluster.YamlDataInput	NameNotChanged
	Source: "YamlDataInput.java"
	FieldsOf: surge.cluster.YamlDataInput
	MethodsOf: surge.cluster.YamlDataInput
		public surge.cluster.DataCluster read(java.io.File) 	NameNotChanged
	LineNumbersOf: surge.cluster.YamlDataInput
		8	=>	2
		13	=>	6
		17	=>	9
		18	=>	5
		19	=>	7
		20	=>	4
		22	=>	1
		24	=>	8
		27	=>	3

Class: public surge.cluster.YamlDataOutput	NameNotChanged
	Source: "YamlDataOutput.java"
	FieldsOf: surge.cluster.YamlDataOutput
	MethodsOf: surge.cluster.YamlDataOutput
		public void write(surge.cluster.DataCluster, java.io.File) 	NameNotChanged
	LineNumbersOf: surge.cluster.YamlDataOutput
		6	=>	6
		13	=>	5
		14	=>	2
		16	=>	3
		18	=>	1
		20	=>	4

Class: public surge.collection.GBiset	NameNotChanged
	Source: "GBiset.java"
	FieldsOf: surge.collection.GBiset
		private java.lang.Object a	=>	b
		private java.lang.Object b	=>	c
	MethodsOf: surge.collection.GBiset
		public java.lang.Object getA() 	NameNotChanged
		public java.lang.Object getB() 	NameNotChanged
		public void setA(java.lang.Object) 	NameNotChanged
		public void setB(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.collection.GBiset
		8	=>	9
		10	=>	1
		11	=>	5
		12	=>	8
		16	=>	4
		21	=>	2
		22	=>	7
		26	=>	6
		31	=>	3
		32	=>	10

Class: public surge.collection.GList	NameNotChanged
	Source: "GList.java"
	FieldsOf: surge.collection.GList
		public static int a	=>	b
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.collection.GList
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void add(java.lang.Object[]) 	NameNotChanged
		public void add(java.util.List) 	NameNotChanged
		public void addFirst(java.lang.Object) 	NameNotChanged
		public surge.collection.GList copy() 	NameNotChanged
		public boolean hasDuplicates() 	NameNotChanged
		public boolean hasIndex(int) 	NameNotChanged
		public java.lang.Object mostCommon() 	NameNotChanged
		public java.lang.Object pickRandom() 	NameNotChanged
		public java.lang.Object pop() 	NameNotChanged
		public void push(java.lang.Object, int) 	NameNotChanged
		public surge.collection.GList qadd(java.lang.Object) 	NameNotChanged
		public surge.collection.GList qdel(java.lang.Object) 	NameNotChanged
		public void remove(surge.collection.GList) 	NameNotChanged
		public surge.collection.GList removeDuplicates() 	NameNotChanged
		public surge.collection.GList reverse() 	NameNotChanged
		public surge.collection.GList shuffle() 	NameNotChanged
		public void sort() 	NameNotChanged
		public surge.collection.GList split() 	NameNotChanged
		public surge.collection.GList stringList() 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public java.lang.String toString(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.collection.GList
		19	=>	96
		20	=>	115
		24	=>	95
		25	=>	66
		26	=>	45
		30	=>	105
		32	=>	50
		34	=>	118
		36	=>	80
		40	=>	120
		42	=>	7
		44	=>	22
		47	=>	3
		48	=>	20
		52	=>	9
		53	=>	84
		55	=>	41
		57	=>	93
		59	=>	89
		61	=>	10
		64	=>	25
		65	=>	33
		67	=>	70
		68	=>	109
		70	=>	54
		72	=>	106
		74	=>	69
		75	=>	16
		77	=>	36
		79	=>	12
		84	=>	74
		86	=>	77
		87	=>	48
		88	=>	94
		92	=>	11
		93	=>	6
		94	=>	14
		100	=>	1
		101	=>	8
		102	=>	29
		104	=>	57 and 63
		106	=>	108
		108	=>	19
		111	=>	28
		114	=>	113 and 119
		116	=>	85
		118	=>	49
		121	=>	98
		124	=>	55
		126	=>	21
		131	=>	51
		136	=>	73
		137	=>	100
		142	=>	32
		144	=>	104
		146	=>	75
		147	=>	62
		148	=>	111
		152	=>	112
		154	=>	76
		156	=>	91
		157	=>	121
		158	=>	38
		163	=>	26
		165	=>	46
		167	=>	5
		168	=>	117
		169	=>	58
		173	=>	44
		175	=>	30
		177	=>	90
		178	=>	13
		180	=>	42
		185	=>	18
		186	=>	110
		187	=>	23
		189	=>	88
		194	=>	61
		199	=>	72
		207	=>	35
		211	=>	79
		213	=>	37
		215	=>	43
		217	=>	15
		221	=>	68
		222	=>	116
		227	=>	82 and 92
		229	=>	81
		231	=>	71
		235	=>	59
		236	=>	24
		241	=>	86
		243	=>	99
		244	=>	47
		245	=>	97
		249	=>	65
		251	=>	27
		253	=>	4
		254	=>	34
		256	=>	114
		258	=>	40
		261	=>	39
		266	=>	31
		267	=>	53
		268	=>	78
		274	=>	2
		279	=>	83
		281	=>	107
		283	=>	103
		284	=>	52
		286	=>	64
		291	=>	101
		292	=>	67
		297	=>	17
		299	=>	102
		302	=>	60
		303	=>	56
		304	=>	87

Class: surge.collection.GList$1	NameNotChanged
	Source: "GList.java"
	FieldsOf: surge.collection.GList$1
		final synthetic surge.collection.GList this$0	NameNotChanged
	MethodsOf: surge.collection.GList$1
		public int compare(java.lang.Object, java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.collection.GList$1
		200	=>	2
		204	=>	1

Class: public surge.collection.GMap	NameNotChanged
	Source: "GMap.java"
	FieldsOf: surge.collection.GMap
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.collection.GMap
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public surge.collection.GMap append(surge.collection.GMap) 	NameNotChanged
		public surge.collection.GMap copy() 	NameNotChanged
		public java.lang.Object findKey(java.lang.Object) 	NameNotChanged
		public surge.collection.GMap flip() 	NameNotChanged
		public surge.collection.GList get(surge.collection.GList) 	NameNotChanged
		public surge.collection.GList k() 	NameNotChanged
		public void put(surge.collection.GList, surge.collection.GList) 	NameNotChanged
		public void put(surge.collection.GMap) 	NameNotChanged
		public void putNVD(java.lang.Object, java.lang.Object) 	NameNotChanged
		public surge.collection.GMap qput(java.lang.Object, java.lang.Object) 	NameNotChanged
		public surge.collection.GMap removeDuplicateKeys() 	NameNotChanged
		public surge.collection.GMap removeDuplicateValues() 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public surge.collection.GList v() 	NameNotChanged
	LineNumbersOf: surge.collection.GMap
		5	=>	1
		11	=>	22
		13	=>	38
		15	=>	59
		16	=>	32
		18	=>	10
		23	=>	9
		25	=>	36
		27	=>	7
		29	=>	47
		31	=>	57
		36	=>	49
		37	=>	5
		42	=>	53
		44	=>	61
		46	=>	45
		48	=>	23
		51	=>	15
		53	=>	4
		56	=>	31
		57	=>	44
		59	=>	56
		65	=>	58
		67	=>	39
		69	=>	60
		70	=>	14
		72	=>	8
		77	=>	40
		79	=>	16
		80	=>	35
		82	=>	63
		87	=>	25
		92	=>	30
		97	=>	50
		99	=>	52
		101	=>	62
		105	=>	48
		107	=>	11
		109	=>	19
		111	=>	17
		113	=>	26
		115	=>	20
		120	=>	54
		121	=>	28
		123	=>	13
		125	=>	42
		127	=>	51
		128	=>	41
		130	=>	29
		135	=>	12
		136	=>	2
		138	=>	64
		140	=>	18
		142	=>	3
		143	=>	21
		145	=>	24
		150	=>	34
		152	=>	46
		155	=>	27 and 55
		157	=>	37
		159	=>	6
		163	=>	33
		164	=>	43

Class: public surge.collection.GQuadraset	NameNotChanged
	Source: "GQuadraset.java"
	FieldsOf: surge.collection.GQuadraset
		private java.lang.Object a	=>	b
		private java.lang.Object b	=>	c
		private java.lang.Object c	=>	d
		private java.lang.Object d	=>	e
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.collection.GQuadraset
		public java.lang.Object getA() 	NameNotChanged
		public java.lang.Object getB() 	NameNotChanged
		public java.lang.Object getC() 	NameNotChanged
		public java.lang.Object getD() 	NameNotChanged
		public void setA(java.lang.Object) 	NameNotChanged
		public void setB(java.lang.Object) 	NameNotChanged
		public void setC(java.lang.Object) 	NameNotChanged
		public void setD(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.collection.GQuadraset
		14	=>	10
		16	=>	5
		17	=>	13
		18	=>	7
		19	=>	1
		20	=>	16
		24	=>	8
		29	=>	17
		30	=>	15
		34	=>	12
		39	=>	9
		40	=>	4
		44	=>	3
		49	=>	2
		50	=>	18
		54	=>	11
		59	=>	6
		60	=>	14

Class: public surge.collection.GSet	NameNotChanged
	Source: "GSet.java"
	FieldsOf: surge.collection.GSet
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.collection.GSet
	LineNumbersOf: surge.collection.GSet
		12	=>	1
		13	=>	5
		17	=>	4
		18	=>	2
		22	=>	8
		23	=>	3
		27	=>	7
		28	=>	6

Class: public surge.collection.GSound	NameNotChanged
	Source: "GSound.java"
	FieldsOf: surge.collection.GSound
		private org.bukkit.Sound iSound	=>	b
		private java.lang.Float pitch	=>	d
		private java.lang.String sound	=>	a
		private java.lang.Float volume	=>	c
	MethodsOf: surge.collection.GSound
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public java.lang.Float getPitch() 	NameNotChanged
		public java.lang.String getSound() 	NameNotChanged
		public java.lang.Float getVolume() 	NameNotChanged
		public org.bukkit.Sound getiSound() 	NameNotChanged
		public void play(org.bukkit.Location) 	NameNotChanged
		public void play(org.bukkit.entity.Player) 	NameNotChanged
		public void play(org.bukkit.entity.Player, org.bukkit.util.Vector) 	NameNotChanged
		public void setPitch(java.lang.Float) 	NameNotChanged
		public void setSound(java.lang.String) 	NameNotChanged
		public void setVolume(java.lang.Float) 	NameNotChanged
		public void setiSound(org.bukkit.Sound) 	NameNotChanged
	LineNumbersOf: surge.collection.GSound
		16	=>	32
		18	=>	5
		19	=>	41
		20	=>	3
		21	=>	4
		23	=>	12
		25	=>	50
		26	=>	42
		27	=>	7
		28	=>	35
		30	=>	40
		32	=>	20
		33	=>	19
		34	=>	47
		35	=>	28
		37	=>	18
		39	=>	26
		40	=>	25
		41	=>	24
		42	=>	6
		46	=>	10
		48	=>	29
		51	=>	48
		53	=>	16
		55	=>	44
		57	=>	1
		61	=>	22
		63	=>	30
		66	=>	36
		68	=>	49
		70	=>	37
		72	=>	9
		76	=>	45
		78	=>	51
		80	=>	39
		83	=>	17
		85	=>	27
		87	=>	33
		89	=>	23
		93	=>	8
		98	=>	13
		99	=>	46
		103	=>	14
		108	=>	21
		109	=>	2
		113	=>	38
		118	=>	31
		119	=>	43
		123	=>	11
		128	=>	34
		129	=>	15

Class: public surge.collection.GTriset	NameNotChanged
	Source: "GTriset.java"
	FieldsOf: surge.collection.GTriset
		private java.lang.Object a	=>	b
		private java.lang.Object b	=>	c
		private java.lang.Object c	=>	d
	MethodsOf: surge.collection.GTriset
		public java.lang.Object getA() 	NameNotChanged
		public java.lang.Object getB() 	NameNotChanged
		public java.lang.Object getC() 	NameNotChanged
		public void setA(java.lang.Object) 	NameNotChanged
		public void setB(java.lang.Object) 	NameNotChanged
		public void setC(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.collection.GTriset
		11	=>	4
		12	=>	14
		13	=>	5
		14	=>	10
		15	=>	11
		19	=>	6
		24	=>	3
		25	=>	12
		29	=>	7
		34	=>	8
		35	=>	2
		39	=>	9
		44	=>	1
		45	=>	13

Class: public surge.collection.Snippet	NameNotChanged
	Source: "Snippet.java"
	FieldsOf: surge.collection.Snippet
	MethodsOf: surge.collection.Snippet
	LineNumbersOf: surge.collection.Snippet
		3	=>	1

Class: public abstract surge.control.AmpedPlugin	NameNotChanged
	Source: "AmpedPlugin.java"
	FieldsOf: surge.control.AmpedPlugin
		private surge.collection.GList controllers	=>	a
		private surge.server.CoreTickThread ctt	=>	c
		private surge.pool.ParallelPoolManager pp	=>	b
	MethodsOf: surge.control.AmpedPlugin
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public surge.collection.GList getControllers() 	NameNotChanged
		public surge.pool.ParallelPoolManager getThreadPool() 	NameNotChanged
		public java.lang.String getTickName() 	NameNotChanged
		public abstract void onControllerRegistry() 	NameNotChanged
		public void onDisable() 	NameNotChanged
		public void onEnable() 	NameNotChanged
		public void onLoad() 	NameNotChanged
		public abstract void onPostInit() 	NameNotChanged
		public abstract void onPreInit() 	NameNotChanged
		public abstract void onStart(surge.util.Protocol) 	NameNotChanged
		public abstract void onStop() 	NameNotChanged
		public void onTick() 	NameNotChanged
		public void registerController(surge.control.IController) 	NameNotChanged
	LineNumbersOf: surge.control.AmpedPlugin
		20	=>	4
		21	=>	19
		22	=>	8
		23	=>	27
		24	=>	11
		25	=>	16
		26	=>	1
		31	=>	23
		32	=>	7
		33	=>	36
		34	=>	38
		39	=>	30
		41	=>	6
		43	=>	37
		44	=>	25
		46	=>	15
		47	=>	35
		48	=>	14
		53	=>	13
		55	=>	5
		56	=>	29
		58	=>	24
		60	=>	3
		61	=>	2
		62	=>	26
		63	=>	21
		68	=>	32
		74	=>	33
		75	=>	9
		80	=>	18
		82	=>	20
		85	=>	22
		87	=>	28
		88	=>	34
		90	=>	10
		91	=>	17
		96	=>	12
		102	=>	31

Class: public abstract annotation surge.control.Control	NameNotChanged
	Source: "Control.java"
	FieldsOf: surge.control.Control
	MethodsOf: surge.control.Control
	LineNumbersOf: surge.control.Control

Class: public abstract surge.control.Controller	NameNotChanged
	Source: "Controller.java"
	FieldsOf: surge.control.Controller
		public static boolean a	=>	b
	MethodsOf: surge.control.Controller
	LineNumbersOf: surge.control.Controller
		7	=>	2
		10	=>	1

Class: public abstract annotation surge.control.Disable	NameNotChanged
	Source: "Disable.java"
	FieldsOf: surge.control.Disable
	MethodsOf: surge.control.Disable
	LineNumbersOf: surge.control.Disable

Class: public abstract annotation surge.control.Enable	NameNotChanged
	Source: "Enable.java"
	FieldsOf: surge.control.Enable
	MethodsOf: surge.control.Enable
	LineNumbersOf: surge.control.Enable

Class: public abstract surge.control.IController	NameNotChanged
	Source: "IController.java"
	FieldsOf: surge.control.IController
	MethodsOf: surge.control.IController
		public abstract void start() 	NameNotChanged
		public abstract void stop() 	NameNotChanged
		public abstract void tick() 	NameNotChanged
	LineNumbersOf: surge.control.IController

Class: public abstract annotation surge.control.Instance	NameNotChanged
	Source: "Instance.java"
	FieldsOf: surge.control.Instance
	MethodsOf: surge.control.Instance
	LineNumbersOf: surge.control.Instance

Class: public abstract annotation surge.control.Plugin	NameNotChanged
	Source: "Plugin.java"
	FieldsOf: surge.control.Plugin
	MethodsOf: surge.control.Plugin
	LineNumbersOf: surge.control.Plugin

Class: public abstract surge.control.SurgePlugin	NameNotChanged
	Source: "SurgePlugin.java"
	FieldsOf: surge.control.SurgePlugin
	MethodsOf: surge.control.SurgePlugin
		public abstract surge.collection.GList getControllers() 	NameNotChanged
		public abstract surge.pool.ParallelPoolManager getThreadPool() 	NameNotChanged
		public abstract void onControllerRegistry() 	NameNotChanged
		public abstract void onPostInit() 	NameNotChanged
		public abstract void onPreInit() 	NameNotChanged
		public abstract void onStart(surge.util.Protocol) 	NameNotChanged
		public abstract void onStop() 	NameNotChanged
		public abstract void registerController(surge.control.IController) 	NameNotChanged
	LineNumbersOf: surge.control.SurgePlugin

Class: public surge.hotload.HotloadManager	NameNotChanged
	Source: "HotloadManager.java"
	FieldsOf: surge.hotload.HotloadManager
		public static int a	=>	d
		private surge.collection.GMap fileacts	=>	c
		private surge.collection.GMap filemods	=>	a
		private surge.collection.GMap filesizes	=>	b
	MethodsOf: surge.hotload.HotloadManager
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public java.lang.String getTickName() 	NameNotChanged
		public void onTick() 	NameNotChanged
		public void track(java.io.File, java.lang.Runnable) 	NameNotChanged
		public void untrack(java.io.File) 	NameNotChanged
		public void untrackall() 	NameNotChanged
	LineNumbersOf: surge.hotload.HotloadManager
		15	=>	18
		17	=>	2
		18	=>	11
		19	=>	29
		20	=>	4
		24	=>	1
		25	=>	31
		26	=>	12
		27	=>	16
		28	=>	5
		32	=>	21
		33	=>	26
		34	=>	27
		35	=>	6
		39	=>	28
		40	=>	8
		41	=>	22
		42	=>	20
		47	=>	14 and 19
		51	=>	10
		53	=>	3
		54	=>	32
		55	=>	9
		56	=>	30
		59	=>	15
		61	=>	24
		62	=>	25
		64	=>	13
		66	=>	23
		71	=>	17
		76	=>	7

Class: public surge.json.HTTP	NameNotChanged
	Source: "HTTP.java"
	FieldsOf: surge.json.HTTP
		public static final java.lang.String CRLF	NameNotChanged
	MethodsOf: surge.json.HTTP
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static surge.json.JSONObject toJSONObject(java.lang.String) 	NameNotChanged
		public static java.lang.String toString(surge.json.JSONObject) 	NameNotChanged
	LineNumbersOf: surge.json.HTTP
		35	=>	45
		93	=>	49
		94	=>	37
		97	=>	5
		98	=>	33
		103	=>	48
		104	=>	12
		105	=>	41
		106	=>	10
		108	=>	6
		113	=>	25
		114	=>	9
		115	=>	24
		120	=>	7 and 20
		122	=>	43
		123	=>	15
		124	=>	16
		125	=>	21
		127	=>	39
		162	=>	35
		164	=>	11
		165	=>	28
		167	=>	13
		168	=>	22
		169	=>	17
		170	=>	42
		171	=>	31
		172	=>	3
		174	=>	26
		175	=>	46
		176	=>	14
		177	=>	4
		178	=>	18
		179	=>	38
		180	=>	27
		181	=>	8
		183	=>	34
		185	=>	29
		186	=>	19 and 40
		188	=>	32
		189	=>	1
		191	=>	36
		192	=>	44
		193	=>	2
		194	=>	23
		197	=>	47
		198	=>	30

Class: public surge.json.HTTPTokener	NameNotChanged
	Source: "HTTPTokener.java"
	FieldsOf: surge.json.HTTPTokener
	MethodsOf: surge.json.HTTPTokener
		private static java.lang.String b(char[]) 	NameNotChanged
		private static char[] b(java.lang.String) 	NameNotChanged
		public java.lang.String nextToken() 	NameNotChanged
	LineNumbersOf: surge.json.HTTPTokener
		45	=>	11
		46	=>	2
		58	=>	5
		61	=>	6
		62	=>	7
		63	=>	15
		65	=>	14
		68	=>	17
		69	=>	1
		71	=>	16
		73	=>	4
		75	=>	9
		77	=>	8
		82	=>	10
		84	=>	12
		86	=>	13
		87	=>	3

Class: public surge.json.JSONArray	NameNotChanged
	Source: "JSONArray.java"
	FieldsOf: surge.json.JSONArray
		private final java.util.ArrayList myArrayList	=>	a
	MethodsOf: surge.json.JSONArray
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public java.lang.Object get(int) 	NameNotChanged
		public java.math.BigDecimal getBigDecimal(int) 	NameNotChanged
		public java.math.BigInteger getBigInteger(int) 	NameNotChanged
		public boolean getBoolean(int) 	NameNotChanged
		public double getDouble(int) 	NameNotChanged
		public java.lang.Enum getEnum(java.lang.Class, int) 	NameNotChanged
		public int getInt(int) 	NameNotChanged
		public surge.json.JSONArray getJSONArray(int) 	NameNotChanged
		public surge.json.JSONObject getJSONObject(int) 	NameNotChanged
		public long getLong(int) 	NameNotChanged
		public java.lang.String getString(int) 	NameNotChanged
		public boolean isNull(int) 	NameNotChanged
		public java.util.Iterator iterator() 	NameNotChanged
		public java.lang.String join(java.lang.String) 	NameNotChanged
		public int length() 	NameNotChanged
		public java.lang.Object opt(int) 	NameNotChanged
		public java.math.BigDecimal optBigDecimal(int, java.math.BigDecimal) 	NameNotChanged
		public java.math.BigInteger optBigInteger(int, java.math.BigInteger) 	NameNotChanged
		public boolean optBoolean(int) 	NameNotChanged
		public boolean optBoolean(int, boolean) 	NameNotChanged
		public double optDouble(int) 	NameNotChanged
		public double optDouble(int, double) 	NameNotChanged
		public java.lang.Enum optEnum(java.lang.Class, int) 	NameNotChanged
		public java.lang.Enum optEnum(java.lang.Class, int, java.lang.Enum) 	NameNotChanged
		public int optInt(int) 	NameNotChanged
		public int optInt(int, int) 	NameNotChanged
		public surge.json.JSONArray optJSONArray(int) 	NameNotChanged
		public surge.json.JSONObject optJSONObject(int) 	NameNotChanged
		public long optLong(int) 	NameNotChanged
		public long optLong(int, long) 	NameNotChanged
		public java.lang.String optString(int) 	NameNotChanged
		public java.lang.String optString(int, java.lang.String) 	NameNotChanged
		public surge.json.JSONArray put(boolean) 	NameNotChanged
		public surge.json.JSONArray put(double) 	NameNotChanged
		public surge.json.JSONArray put(int) 	NameNotChanged
		public surge.json.JSONArray put(int, boolean) 	NameNotChanged
		public surge.json.JSONArray put(int, double) 	NameNotChanged
		public surge.json.JSONArray put(int, int) 	NameNotChanged
		public surge.json.JSONArray put(int, java.lang.Object) 	NameNotChanged
		public surge.json.JSONArray put(int, java.util.Collection) 	NameNotChanged
		public surge.json.JSONArray put(int, java.util.Map) 	NameNotChanged
		public surge.json.JSONArray put(int, long) 	NameNotChanged
		public surge.json.JSONArray put(java.lang.Object) 	NameNotChanged
		public surge.json.JSONArray put(java.util.Collection) 	NameNotChanged
		public surge.json.JSONArray put(java.util.Map) 	NameNotChanged
		public surge.json.JSONArray put(long) 	NameNotChanged
		public java.lang.Object remove(int) 	NameNotChanged
		public boolean similar(java.lang.Object) 	NameNotChanged
		public surge.json.JSONObject toJSONObject(surge.json.JSONArray) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public java.lang.String toString(int) 	NameNotChanged
		public java.io.Writer write(java.io.Writer) 	NameNotChanged
		java.io.Writer write(java.io.Writer, int, int) 	=>	a
	LineNumbersOf: surge.json.JSONArray
		93	=>	96
		95	=>	154
		96	=>	175
		108	=>	40
		109	=>	169
		111	=>	197
		113	=>	109
		115	=>	199
		118	=>	77
		120	=>	44
		121	=>	35
		122	=>	102
		124	=>	107
		125	=>	78
		127	=>	149
		130	=>	25
		132	=>	55
		134	=>	159
		135	=>	151
		137	=>	41
		139	=>	18
		143	=>	214
		157	=>	152
		158	=>	230
		166	=>	139
		168	=>	183
		169	=>	68
		171	=>	42
		172	=>	45 and 202
		174	=>	115
		177	=>	21
		187	=>	17
		188	=>	63
		190	=>	181
		191	=>	73 and 157
		193	=>	177
		195	=>	60
		197	=>	10
		199	=>	47
		204	=>	95
		218	=>	62
		219	=>	70
		221	=>	205
		223	=>	198
		239	=>	227
		240	=>	233
		242	=>	15
		243	=>	67
		245	=>	130
		247	=>	92
		262	=>	111
		265	=>	167
		266	=>	225
		268	=>	84
		286	=>	80
		287	=>	79
		292	=>	99
		294	=>	48
		309	=>	138
		312	=>	146
		313	=>	50
		315	=>	39
		331	=>	125
		334	=>	116
		335	=>	184
		337	=>	122
		352	=>	136
		355	=>	20
		356	=>	52
		358	=>	108
		374	=>	142
		375	=>	32
		377	=>	203
		379	=>	133
		394	=>	101
		395	=>	163
		397	=>	85
		399	=>	229
		414	=>	144
		417	=>	72
		418	=>	168
		420	=>	34
		435	=>	131
		436	=>	16
		438	=>	158
		440	=>	81
		452	=>	8
		468	=>	123
		469	=>	11
		471	=>	110 and 114
		473	=>	191
		475	=>	66
		477	=>	215
		479	=>	86
		489	=>	234
		501	=>	30
		515	=>	153
		533	=>	232
		534	=>	235
		536	=>	127
		551	=>	188
		569	=>	180
		570	=>	14
		572	=>	126
		587	=>	209
		605	=>	89
		606	=>	22
		608	=>	51
		623	=>	37
		642	=>	98
		643	=>	117
		645	=>	53
		647	=>	211
		651	=>	217
		652	=>	129
		654	=>	56
		657	=>	6
		659	=>	7
		662	=>	93
		664	=>	26
		683	=>	43
		684	=>	83
		686	=>	165
		705	=>	194
		706	=>	221
		708	=>	24
		722	=>	140
		723	=>	204
		737	=>	118
		738	=>	173
		752	=>	36
		770	=>	226
		771	=>	134
		773	=>	135
		788	=>	220
		803	=>	112
		804	=>	178
		816	=>	201
		817	=>	75
		830	=>	27
		831	=>	58
		845	=>	64
		846	=>	105
		847	=>	162
		848	=>	160
		860	=>	124
		861	=>	94
		873	=>	120
		874	=>	74
		887	=>	119
		888	=>	65
		902	=>	189
		903	=>	185
		921	=>	219
		922	=>	2
		939	=>	5
		940	=>	4
		958	=>	13
		959	=>	90
		977	=>	143
		978	=>	113
		996	=>	132
		997	=>	213
		1015	=>	207
		1016	=>	231
		1037	=>	33
		1038	=>	187
		1040	=>	49
		1042	=>	156
		1044	=>	195
		1045	=>	196
		1047	=>	97
		1049	=>	148
		1051	=>	224
		1053	=>	210
		1066	=>	218
		1079	=>	161
		1081	=>	46
		1083	=>	147
		1084	=>	222
		1086	=>	88
		1088	=>	12 and 87
		1090	=>	3
		1091	=>	186
		1092	=>	71
		1094	=>	29
		1096	=>	223
		1098	=>	192
		1100	=>	69
		1102	=>	172
		1104	=>	228
		1106	=>	1
		1109	=>	150
		1126	=>	103
		1128	=>	54
		1130	=>	174
		1131	=>	104 and 182
		1133	=>	208
		1135	=>	9
		1153	=>	176
		1154	=>	19
		1156	=>	76
		1174	=>	171
		1175	=>	38 and 59
		1177	=>	216
		1192	=>	190
		1212	=>	179
		1213	=>	137
		1214	=>	170
		1216	=>	206
		1218	=>	61
		1219	=>	121
		1221	=>	28
		1223	=>	31 and 212
		1225	=>	145
		1227	=>	164
		1229	=>	91
		1231	=>	106
		1233	=>	166
		1234	=>	193
		1235	=>	200
		1237	=>	141
		1239	=>	57
		1241	=>	82
		1243	=>	128
		1244	=>	23
		1245	=>	100
		1247	=>	155

Class: public surge.json.JSONException	NameNotChanged
	Source: "JSONException.java"
	FieldsOf: surge.json.JSONException
		private java.lang.Throwable cause	=>	a
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.json.JSONException
		public java.lang.Throwable getCause() 	NameNotChanged
	LineNumbersOf: surge.json.JSONException
		22	=>	3
		23	=>	1
		33	=>	5
		34	=>	6
		35	=>	4
		47	=>	2

Class: public surge.json.JSONML	NameNotChanged
	Source: "JSONML.java"
	FieldsOf: surge.json.JSONML
	MethodsOf: surge.json.JSONML
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		private static java.lang.Object parse(surge.json.XMLTokener, boolean, surge.json.JSONArray) 	=>	a
		public static surge.json.JSONArray toJSONArray(java.lang.String) 	NameNotChanged
		public static surge.json.JSONArray toJSONArray(surge.json.XMLTokener) 	NameNotChanged
		public static surge.json.JSONObject toJSONObject(java.lang.String) 	NameNotChanged
		public static surge.json.JSONObject toJSONObject(surge.json.XMLTokener) 	NameNotChanged
		public static java.lang.String toString(surge.json.JSONArray) 	NameNotChanged
		public static java.lang.String toString(surge.json.JSONObject) 	NameNotChanged
	LineNumbersOf: surge.json.JSONML
		37	=>	141
		57	=>	157
		59	=>	200
		60	=>	164
		62	=>	16
		70	=>	12
		72	=>	183
		74	=>	126
		76	=>	99
		77	=>	111
		79	=>	74
		80	=>	92
		82	=>	172
		87	=>	198
		88	=>	98
		90	=>	125
		92	=>	121
		94	=>	46
		96	=>	58
		97	=>	10
		102	=>	8
		103	=>	124
		105	=>	144
		107	=>	187
		108	=>	159
		110	=>	76
		112	=>	165
		114	=>	54
		115	=>	123
		117	=>	13
		119	=>	69
		121	=>	61
		123	=>	131
		127	=>	156
		128	=>	37
		130	=>	102
		131	=>	2
		133	=>	188
		134	=>	191
		136	=>	64
		137	=>	138
		139	=>	169
		141	=>	137
		143	=>	109
		148	=>	192
		149	=>	79
		151	=>	160
		158	=>	107
		160	=>	49
		162	=>	180
		163	=>	176
		164	=>	86
		165	=>	45
		167	=>	72
		168	=>	166
		170	=>	100
		172	=>	33
		174	=>	32
		175	=>	81
		177	=>	30
		180	=>	178
		181	=>	101
		183	=>	181
		185	=>	118
		187	=>	93
		189	=>	153
		191	=>	39
		193	=>	161
		198	=>	19
		199	=>	184
		201	=>	36
		203	=>	11
		204	=>	142
		206	=>	195
		207	=>	194
		209	=>	65
		211	=>	43
		212	=>	27
		213	=>	35
		215	=>	50
		218	=>	146
		220	=>	130
		225	=>	103
		227	=>	151
		229	=>	116
		231	=>	23
		233	=>	78
		235	=>	132
		238	=>	190
		246	=>	162
		248	=>	85
		250	=>	51
		251	=>	57
		253	=>	44
		255	=>	199
		257	=>	21
		258	=>	139
		260	=>	168
		262	=>	52
		264	=>	88
		266	=>	96
		269	=>	177
		277	=>	202
		279	=>	113
		301	=>	170
		320	=>	67
		340	=>	147
		360	=>	145
		379	=>	80
		385	=>	171
		386	=>	128
		387	=>	174
		388	=>	90
		389	=>	94
		391	=>	31
		392	=>	120
		394	=>	55
		395	=>	59
		399	=>	196
		400	=>	41 and 189
		402	=>	75
		403	=>	24
		404	=>	42
		405	=>	63
		407	=>	201
		408	=>	71
		409	=>	106
		410	=>	29
		411	=>	91
		412	=>	119
		415	=>	4
		417	=>	112
		422	=>	149
		423	=>	117
		425	=>	9
		426	=>	110
		427	=>	127
		429	=>	148
		430	=>	158
		432	=>	154
		433	=>	28
		434	=>	18
		436	=>	62
		438	=>	203
		439	=>	5
		441	=>	97
		442	=>	163
		444	=>	152
		445	=>	47
		447	=>	40
		450	=>	133
		451	=>	182
		452	=>	68
		453	=>	143
		454	=>	84
		456	=>	104
		472	=>	87
		484	=>	77
		485	=>	89
		487	=>	135
		489	=>	25
		490	=>	3
		491	=>	48
		492	=>	66
		496	=>	1
		497	=>	73 and 150
		499	=>	167
		500	=>	122
		502	=>	6
		503	=>	175
		504	=>	95
		506	=>	82
		507	=>	185
		508	=>	53
		509	=>	7
		510	=>	20
		511	=>	70
		518	=>	60
		519	=>	136
		521	=>	173
		522	=>	186
		523	=>	105
		525	=>	38
		526	=>	140
		527	=>	26 and 129
		529	=>	17
		530	=>	34
		532	=>	15
		534	=>	83
		535	=>	14
		537	=>	193
		538	=>	22
		540	=>	179
		541	=>	108
		543	=>	134
		547	=>	56
		548	=>	115
		549	=>	197
		550	=>	114
		552	=>	155

Class: public surge.json.JSONObject	NameNotChanged
	Source: "JSONObject.java"
	FieldsOf: surge.json.JSONObject
		public static final java.lang.Object NULL	NameNotChanged
		public static int a	=>	b
		private final java.util.Map map	=>	a
	MethodsOf: surge.json.JSONObject
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public surge.json.JSONObject accumulate(java.lang.String, java.lang.Object) 	NameNotChanged
		public surge.json.JSONObject append(java.lang.String, java.lang.Object) 	NameNotChanged
		public static java.lang.String doubleToString(double) 	NameNotChanged
		public java.lang.Object get(java.lang.String) 	NameNotChanged
		public java.math.BigDecimal getBigDecimal(java.lang.String) 	NameNotChanged
		public java.math.BigInteger getBigInteger(java.lang.String) 	NameNotChanged
		public boolean getBoolean(java.lang.String) 	NameNotChanged
		public double getDouble(java.lang.String) 	NameNotChanged
		public java.lang.Enum getEnum(java.lang.Class, java.lang.String) 	NameNotChanged
		public int getInt(java.lang.String) 	NameNotChanged
		public surge.json.JSONArray getJSONArray(java.lang.String) 	NameNotChanged
		public surge.json.JSONObject getJSONObject(java.lang.String) 	NameNotChanged
		public long getLong(java.lang.String) 	NameNotChanged
		public static java.lang.String[] getNames(java.lang.Object) 	NameNotChanged
		public static java.lang.String[] getNames(surge.json.JSONObject) 	NameNotChanged
		public java.lang.String getString(java.lang.String) 	NameNotChanged
		public boolean has(java.lang.String) 	NameNotChanged
		public surge.json.JSONObject increment(java.lang.String) 	NameNotChanged
		static final void indent(java.io.Writer, int) 	=>	a
		public boolean isNull(java.lang.String) 	NameNotChanged
		public java.util.Set keySet() 	NameNotChanged
		public java.util.Iterator keys() 	NameNotChanged
		public int length() 	NameNotChanged
		public surge.json.JSONArray names() 	NameNotChanged
		public static java.lang.String numberToString(java.lang.Number) 	NameNotChanged
		public java.lang.Object opt(java.lang.String) 	NameNotChanged
		public java.math.BigDecimal optBigDecimal(java.lang.String, java.math.BigDecimal) 	NameNotChanged
		public java.math.BigInteger optBigInteger(java.lang.String, java.math.BigInteger) 	NameNotChanged
		public boolean optBoolean(java.lang.String) 	NameNotChanged
		public boolean optBoolean(java.lang.String, boolean) 	NameNotChanged
		public double optDouble(java.lang.String) 	NameNotChanged
		public double optDouble(java.lang.String, double) 	NameNotChanged
		public java.lang.Enum optEnum(java.lang.Class, java.lang.String) 	NameNotChanged
		public java.lang.Enum optEnum(java.lang.Class, java.lang.String, java.lang.Enum) 	NameNotChanged
		public int optInt(java.lang.String) 	NameNotChanged
		public int optInt(java.lang.String, int) 	NameNotChanged
		public surge.json.JSONArray optJSONArray(java.lang.String) 	NameNotChanged
		public surge.json.JSONObject optJSONObject(java.lang.String) 	NameNotChanged
		public long optLong(java.lang.String) 	NameNotChanged
		public long optLong(java.lang.String, long) 	NameNotChanged
		public java.lang.String optString(java.lang.String) 	NameNotChanged
		public java.lang.String optString(java.lang.String, java.lang.String) 	NameNotChanged
		private void populateMap(java.lang.Object) 	=>	a
		public surge.json.JSONObject put(java.lang.String, boolean) 	NameNotChanged
		public surge.json.JSONObject put(java.lang.String, double) 	NameNotChanged
		public surge.json.JSONObject put(java.lang.String, int) 	NameNotChanged
		public surge.json.JSONObject put(java.lang.String, java.lang.Object) 	NameNotChanged
		public surge.json.JSONObject put(java.lang.String, java.util.Collection) 	NameNotChanged
		public surge.json.JSONObject put(java.lang.String, java.util.Map) 	NameNotChanged
		public surge.json.JSONObject put(java.lang.String, long) 	NameNotChanged
		public surge.json.JSONObject putOnce(java.lang.String, java.lang.Object) 	NameNotChanged
		public surge.json.JSONObject putOpt(java.lang.String, java.lang.Object) 	NameNotChanged
		public static java.lang.String quote(java.lang.String) 	NameNotChanged
		public static java.io.Writer quote(java.lang.String, java.io.Writer) 	NameNotChanged
		public java.lang.Object remove(java.lang.String) 	NameNotChanged
		public boolean similar(java.lang.Object) 	NameNotChanged
		public static java.lang.Object stringToValue(java.lang.String) 	NameNotChanged
		public static void testValidity(java.lang.Object) 	NameNotChanged
		public surge.json.JSONArray toJSONArray(surge.json.JSONArray) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public java.lang.String toString(int) 	NameNotChanged
		public static java.lang.String valueToString(java.lang.Object) 	NameNotChanged
		public static java.lang.Object wrap(java.lang.Object) 	NameNotChanged
		public java.io.Writer write(java.io.Writer) 	NameNotChanged
		java.io.Writer write(java.io.Writer, int, int) 	=>	a
		static final java.io.Writer writeValue(java.io.Writer, java.lang.Object, int, int) 	=>	a
	LineNumbersOf: surge.json.JSONObject
		153	=>	82
		158	=>	123
		160	=>	425
		161	=>	256
		179	=>	149
		180	=>	32 and 365
		184	=>	87
		185	=>	364
		189	=>	121
		202	=>	508
		206	=>	470
		208	=>	295
		212	=>	137
		213	=>	456
		216	=>	163
		218	=>	217
		220	=>	420
		221	=>	399
		226	=>	300
		227	=>	415
		229	=>	59
		231	=>	58
		235	=>	104
		239	=>	481
		241	=>	319
		243	=>	174
		244	=>	432
		246	=>	408
		248	=>	156
		261	=>	40
		263	=>	301
		264	=>	491
		266	=>	433
		267	=>	77 and 305
		269	=>	54
		270	=>	208
		271	=>	460
		273	=>	67
		277	=>	265
		302	=>	441
		303	=>	521
		304	=>	497
		322	=>	233
		323	=>	388
		324	=>	224 and 473
		326	=>	372
		329	=>	192
		330	=>	284
		334	=>	175
		350	=>	449
		351	=>	488
		365	=>	516
		366	=>	183
		370	=>	249
		371	=>	199 and 231
		373	=>	7
		374	=>	311
		383	=>	85
		384	=>	101
		385	=>	504
		386	=>	162 and 289
		388	=>	129
		389	=>	483
		390	=>	407
		392	=>	203
		393	=>	340
		395	=>	405
		397	=>	266
		400	=>	48
		423	=>	187
		424	=>	240
		425	=>	193
		427	=>	84
		428	=>	234
		430	=>	310
		431	=>	236
		433	=>	347
		435	=>	367
		455	=>	475
		456	=>	43
		457	=>	1
		459	=>	118
		460	=>	358
		462	=>	335
		463	=>	325
		465	=>	62
		467	=>	89
		480	=>	130
		482	=>	397
		487	=>	72
		488	=>	251
		490	=>	23 and 260
		492	=>	86
		494	=>	294
		496	=>	306
		499	=>	247
		513	=>	17
		515	=>	443
		517	=>	90
		518	=>	332
		520	=>	463
		522	=>	180
		539	=>	413
		540	=>	223
		545	=>	323
		547	=>	80
		562	=>	442
		563	=>	98
		565	=>	196
		566	=>	154
		568	=>	274
		570	=>	181
		585	=>	235
		588	=>	124
		589	=>	146
		591	=>	56
		607	=>	164
		610	=>	309
		611	=>	53
		613	=>	204
		629	=>	431
		632	=>	480
		633	=>	64
		635	=>	110
		651	=>	296
		654	=>	42
		655	=>	139
		657	=>	94
		672	=>	281
		673	=>	267
		675	=>	103
		677	=>	487
		691	=>	341
		692	=>	387
		694	=>	65
		696	=>	264
		711	=>	396
		714	=>	512
		715	=>	60
		717	=>	298
		728	=>	19
		729	=>	151
		731	=>	292
		733	=>	404
		734	=>	380
		735	=>	317
		736	=>	37 and 349
		738	=>	373
		739	=>	337
		741	=>	155
		751	=>	25
		753	=>	510
		755	=>	186
		756	=>	271
		757	=>	401
		758	=>	191
		760	=>	366
		762	=>	138
		763	=>	276 and 437
		765	=>	429
		767	=>	339
		781	=>	136
		782	=>	140
		784	=>	159
		786	=>	520
		798	=>	482
		815	=>	386
		816	=>	450
		818	=>	185
		819	=>	524
		821	=>	99
		822	=>	122
		824	=>	205
		825	=>	355
		827	=>	88
		828	=>	81
		830	=>	353
		831	=>	179
		833	=>	158
		834	=>	509
		836	=>	6
		837	=>	24
		839	=>	10
		841	=>	293
		855	=>	27
		865	=>	462
		875	=>	344
		885	=>	219
		897	=>	280
		898	=>	517
		899	=>	20 and 33
		901	=>	406
		903	=>	120
		917	=>	330
		919	=>	21
		921	=>	484
		925	=>	307
		926	=>	195
		928	=>	135 and 515
		930	=>	318
		932	=>	250
		934	=>	142
		937	=>	291
		949	=>	283
		963	=>	485
		982	=>	378
		983	=>	458
		985	=>	168
		987	=>	152
		991	=>	144
		992	=>	76
		994	=>	502
		997	=>	359
		999	=>	241
		1002	=>	494
		1004	=>	304
		1018	=>	184
		1036	=>	209
		1037	=>	194
		1039	=>	172
		1054	=>	290
		1072	=>	279
		1073	=>	145
		1075	=>	125
		1094	=>	245
		1095	=>	427
		1097	=>	493
		1116	=>	350
		1117	=>	222
		1119	=>	303
		1134	=>	63
		1152	=>	297
		1153	=>	36
		1155	=>	50
		1169	=>	409
		1170	=>	316
		1183	=>	141
		1184	=>	390
		1198	=>	356
		1216	=>	400
		1217	=>	166
		1219	=>	255
		1234	=>	474
		1249	=>	379
		1250	=>	343
		1255	=>	492
		1259	=>	38
		1261	=>	451
		1262	=>	246 and 282
		1266	=>	257
		1267	=>	74
		1269	=>	215
		1270	=>	381
		1271	=>	416
		1273	=>	229
		1275	=>	363
		1276	=>	153
		1278	=>	220
		1280	=>	171
		1282	=>	97
		1284	=>	55
		1286	=>	506
		1288	=>	115
		1289	=>	108
		1291	=>	277
		1294	=>	176
		1295	=>	375
		1297	=>	321
		1301	=>	467
		1305	=>	435
		1320	=>	170
		1321	=>	439
		1337	=>	216
		1338	=>	471
		1354	=>	132
		1355	=>	354
		1371	=>	73
		1372	=>	230
		1388	=>	111
		1389	=>	254
		1405	=>	106
		1406	=>	331
		1425	=>	66
		1427	=>	308
		1429	=>	421
		1431	=>	445
		1432	=>	464
		1433	=>	479
		1435	=>	382
		1437	=>	422
		1455	=>	126
		1457	=>	324
		1459	=>	190
		1461	=>	243
		1463	=>	383
		1482	=>	39
		1484	=>	198
		1486	=>	410
		1501	=>	148
		1502	=>	71 and 505
		1506	=>	346
		1507	=>	35
		1510	=>	28
		1517	=>	52
		1519	=>	211
		1520	=>	200
		1524	=>	92
		1527	=>	262
		1529	=>	414
		1530	=>	61 and 434
		1532	=>	275
		1533	=>	12
		1534	=>	428
		1538	=>	214
		1539	=>	299
		1540	=>	70
		1542	=>	16
		1544	=>	334
		1546	=>	477
		1547	=>	150
		1549	=>	361
		1550	=>	44
		1552	=>	22
		1553	=>	207
		1555	=>	278
		1556	=>	78
		1558	=>	57
		1559	=>	338
		1561	=>	499
		1562	=>	225
		1564	=>	5
		1566	=>	403
		1567	=>	114
		1568	=>	8
		1569	=>	446
		1570	=>	173
		1572	=>	143
		1576	=>	13
		1577	=>	188
		1590	=>	466
		1605	=>	75
		1607	=>	518
		1609	=>	523
		1610	=>	374
		1612	=>	100
		1614	=>	329
		1615	=>	102 and 511
		1617	=>	514
		1618	=>	472
		1619	=>	11
		1620	=>	328
		1622	=>	117
		1624	=>	398
		1626	=>	268
		1628	=>	41
		1630	=>	326
		1632	=>	348
		1634	=>	362
		1637	=>	105
		1638	=>	237
		1640	=>	213
		1655	=>	34
		1657	=>	500
		1659	=>	18
		1661	=>	113
		1663	=>	161
		1665	=>	412
		1667	=>	392
		1669	=>	459
		1677	=>	476
		1678	=>	160
		1682	=>	519
		1684	=>	448
		1685	=>	232
		1687	=>	147
		1691	=>	465
		1692	=>	371
		1694	=>	419
		1696	=>	377
		1699	=>	157
		1703	=>	96
		1707	=>	395
		1720	=>	411
		1722	=>	489
		1724	=>	287
		1726	=>	507
		1728	=>	167
		1730	=>	454
		1732	=>	269
		1736	=>	447
		1751	=>	178
		1753	=>	342
		1755	=>	384
		1756	=>	30 and 47
		1758	=>	26
		1760	=>	177
		1779	=>	322
		1780	=>	182
		1782	=>	486
		1802	=>	218
		1803	=>	244 and 444
		1805	=>	119
		1835	=>	253
		1837	=>	286
		1839	=>	68
		1844	=>	394
		1845	=>	131
		1847	=>	169
		1849	=>	221
		1851	=>	79
		1853	=>	522
		1855	=>	468
		1857	=>	3
		1859	=>	238
		1861	=>	197
		1863	=>	496
		1866	=>	29
		1867	=>	226
		1869	=>	402
		1872	=>	352
		1873	=>	436
		1875	=>	248
		1877	=>	128
		1879	=>	263
		1898	=>	242
		1900	=>	91
		1902	=>	440
		1904	=>	2
		1907	=>	478
		1910	=>	351
		1911	=>	4
		1913	=>	46
		1915	=>	261
		1917	=>	513
		1920	=>	503
		1921	=>	369
		1923	=>	385
		1924	=>	15
		1925	=>	45
		1927	=>	127
		1929	=>	93
		1930	=>	285
		1932	=>	133
		1947	=>	69
		1952	=>	457
		1954	=>	302
		1955	=>	469
		1957	=>	370
		1958	=>	327
		1960	=>	393
		1961	=>	313
		1964	=>	206
		1965	=>	360
		1966	=>	314
		1969	=>	315
		1970	=>	417
		1971	=>	189
		1973	=>	259
		1974	=>	490
		1976	=>	430
		1977	=>	501
		1979	=>	252
		1980	=>	438
		1985	=>	288
		1986	=>	426
		1988	=>	424
		1990	=>	202
		1991	=>	418
		1993	=>	368
		1995	=>	165
		2000	=>	112 and 201
		2002	=>	239
		2004	=>	212
		2019	=>	270
		2020	=>	14
		2021	=>	495
		2022	=>	227
		2024	=>	210
		2026	=>	376
		2027	=>	51
		2028	=>	49
		2029	=>	423
		2031	=>	336
		2033	=>	345
		2034	=>	453
		2036	=>	461
		2037	=>	83 and 333
		2039	=>	455
		2040	=>	228
		2042	=>	273
		2044	=>	498
		2046	=>	95
		2048	=>	389
		2049	=>	320
		2050	=>	391
		2051	=>	9
		2053	=>	258
		2055	=>	116
		2056	=>	272
		2058	=>	31
		2060	=>	109
		2062	=>	134
		2064	=>	357
		2065	=>	312
		2066	=>	107
		2068	=>	452

Class: final surge.json.JSONObject$Null	NameNotChanged
	Source: "JSONObject.java"
	FieldsOf: surge.json.JSONObject$Null
	MethodsOf: surge.json.JSONObject$Null
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		protected final java.lang.Object clone() 	NameNotChanged
		public boolean equals(java.lang.Object) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.json.JSONObject$Null
		102	=>	2 and 4
		114	=>	1
		128	=>	5
		138	=>	3

Class: public abstract surge.json.JSONString	NameNotChanged
	Source: "JSONString.java"
	FieldsOf: surge.json.JSONString
	MethodsOf: surge.json.JSONString
		public abstract java.lang.String toJSONString() 	NameNotChanged
	LineNumbersOf: surge.json.JSONString

Class: public surge.json.JSONStringer	NameNotChanged
	Source: "JSONStringer.java"
	FieldsOf: surge.json.JSONStringer
	MethodsOf: surge.json.JSONStringer
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.json.JSONStringer
		69	=>	1
		70	=>	2
		83	=>	3

Class: public surge.json.JSONTokener	NameNotChanged
	Source: "JSONTokener.java"
	FieldsOf: surge.json.JSONTokener
		private long character	=>	a
		private boolean eof	=>	b
		private long index	=>	c
		private long line	=>	d
		private char previous	=>	e
		private java.io.Reader reader	=>	f
		private boolean usePrevious	=>	g
	MethodsOf: surge.json.JSONTokener
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void back() 	NameNotChanged
		public static int dehexchar(char) 	NameNotChanged
		public boolean end() 	NameNotChanged
		public boolean more() 	NameNotChanged
		public char next() 	NameNotChanged
		public char next(char) 	NameNotChanged
		public java.lang.String next(int) 	NameNotChanged
		public char nextClean() 	NameNotChanged
		public java.lang.String nextString(char) 	NameNotChanged
		public java.lang.String nextTo(char) 	NameNotChanged
		public java.lang.String nextTo(java.lang.String) 	NameNotChanged
		public java.lang.Object nextValue() 	NameNotChanged
		public char skipTo(char) 	NameNotChanged
		public surge.json.JSONException syntaxError(java.lang.String) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.json.JSONTokener
		60	=>	67
		61	=>	82
		62	=>	32
		63	=>	34
		64	=>	135
		65	=>	54
		66	=>	48
		67	=>	3
		68	=>	79
		78	=>	125
		79	=>	77
		89	=>	121
		90	=>	65
		99	=>	35
		101	=>	88
		103	=>	124
		104	=>	38
		105	=>	63
		106	=>	23
		107	=>	46
		119	=>	103
		121	=>	39
		123	=>	115
		125	=>	104
		127	=>	117
		129	=>	47
		131	=>	107
		136	=>	143
		147	=>	97
		148	=>	86
		150	=>	51
		152	=>	102
		153	=>	83
		164	=>	16
		166	=>	71
		167	=>	40
		172	=>	10
		173	=>	37
		175	=>	113
		176	=>	66
		178	=>	126
		180	=>	6
		181	=>	145
		184	=>	26
		185	=>	44
		187	=>	72
		188	=>	114
		189	=>	89
		191	=>	78
		192	=>	98
		195	=>	123
		197	=>	111
		198	=>	106
		213	=>	119
		214	=>	13
		216	=>	137
		218	=>	24
		233	=>	19
		235	=>	87
		238	=>	81
		239	=>	96
		241	=>	68
		243	=>	90
		244	=>	42
		246	=>	74
		248	=>	56
		250	=>	28
		263	=>	80
		264	=>	30
		266	=>	20
		268	=>	27
		287	=>	25
		290	=>	62
		291	=>	92
		296	=>	8
		298	=>	131
		299	=>	69
		302	=>	128
		303	=>	129
		305	=>	17
		306	=>	21
		308	=>	53
		309	=>	52
		311	=>	100
		312	=>	18
		314	=>	36
		315	=>	61
		317	=>	105
		318	=>	31
		323	=>	33
		324	=>	29
		326	=>	132
		330	=>	11
		332	=>	136
		334	=>	70
		349	=>	109
		352	=>	43
		353	=>	95
		355	=>	91
		357	=>	133
		359	=>	15
		361	=>	73
		362	=>	85
		376	=>	84
		379	=>	99
		380	=>	41
		382	=>	116
		384	=>	2
		386	=>	5
		388	=>	110
		403	=>	9
		406	=>	118
		410	=>	1
		412	=>	140
		413	=>	59
		415	=>	49
		416	=>	138
		428	=>	12
		429	=>	14
		431	=>	130
		432	=>	139
		434	=>	134
		436	=>	22
		437	=>	60
		439	=>	58
		441	=>	94
		458	=>	142
		459	=>	45
		460	=>	4
		461	=>	144
		464	=>	75
		465	=>	122
		467	=>	127
		468	=>	101
		469	=>	64
		470	=>	50
		471	=>	55
		473	=>	141
		474	=>	108
		476	=>	120
		477	=>	76
		478	=>	112
		479	=>	93
		491	=>	7
		501	=>	57

Class: public surge.json.JSONWriter	NameNotChanged
	Source: "JSONWriter.java"
	FieldsOf: surge.json.JSONWriter
		private boolean comma	=>	a
		protected char mode	=>	b
		private final surge.json.JSONObject[] stack	=>	c
		private int top	=>	d
		protected java.io.Writer writer	=>	e
	MethodsOf: surge.json.JSONWriter
		private static java.lang.String a(char[]) 	NameNotChanged
		private surge.json.JSONWriter append(java.lang.String) 	=>	a
		public surge.json.JSONWriter array() 	NameNotChanged
		private static char[] b(java.lang.String) 	NameNotChanged
		private surge.json.JSONWriter end(char, char) 	=>	a
		public surge.json.JSONWriter endArray() 	NameNotChanged
		public surge.json.JSONWriter endObject() 	NameNotChanged
		public surge.json.JSONWriter key(java.lang.String) 	NameNotChanged
		public surge.json.JSONWriter object() 	NameNotChanged
		private void pop(char) 	=>	a
		private void push(surge.json.JSONObject) 	=>	a
		public surge.json.JSONWriter value(boolean) 	NameNotChanged
		public surge.json.JSONWriter value(double) 	NameNotChanged
		public surge.json.JSONWriter value(java.lang.Object) 	NameNotChanged
		public surge.json.JSONWriter value(long) 	NameNotChanged
	LineNumbersOf: surge.json.JSONWriter
		97	=>	39
		99	=>	68
		100	=>	70
		101	=>	48
		102	=>	12
		103	=>	21
		104	=>	16
		117	=>	33
		119	=>	40
		121	=>	41
		125	=>	74
		127	=>	38
		129	=>	9
		130	=>	35
		132	=>	57
		134	=>	64
		136	=>	76
		138	=>	52
		139	=>	53
		141	=>	2
		157	=>	67
		159	=>	3
		160	=>	7
		161	=>	50
		162	=>	1
		164	=>	42
		180	=>	56
		182	=>	13
		184	=>	26
		187	=>	19
		188	=>	36
		190	=>	60
		192	=>	61
		193	=>	73
		206	=>	24
		219	=>	47
		235	=>	18
		237	=>	28
		239	=>	63
		243	=>	29
		244	=>	65
		246	=>	10
		248	=>	15
		249	=>	46
		250	=>	4
		251	=>	49
		252	=>	71
		253	=>	30
		255	=>	44
		258	=>	14
		274	=>	45
		276	=>	25
		278	=>	54
		280	=>	69
		281	=>	17
		282	=>	37
		283	=>	32
		285	=>	51
		299	=>	23
		301	=>	5
		303	=>	27
		304	=>	34
		306	=>	8
		308	=>	22
		309	=>	58
		310	=>	75
		322	=>	59
		324	=>	72
		326	=>	66
		327	=>	11
		328	=>	43
		329	=>	31
		342	=>	62
		356	=>	6
		369	=>	55
		385	=>	20

Class: public surge.json.XML	NameNotChanged
	Source: "XML.java"
	FieldsOf: surge.json.XML
		public static final java.lang.Character AMP	NameNotChanged
		public static final java.lang.Character APOS	NameNotChanged
		public static final java.lang.Character BANG	NameNotChanged
		public static final java.lang.Character EQ	NameNotChanged
		public static final java.lang.Character GT	NameNotChanged
		public static final java.lang.Character LT	NameNotChanged
		public static final java.lang.Character QUEST	NameNotChanged
		public static final java.lang.Character QUOT	NameNotChanged
		public static final java.lang.Character SLASH	NameNotChanged
	MethodsOf: surge.json.XML
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static java.lang.String escape(java.lang.String) 	NameNotChanged
		public static void noSpace(java.lang.String) 	NameNotChanged
		private static boolean parse(surge.json.XMLTokener, surge.json.JSONObject, java.lang.String) 	=>	a
		public static java.lang.Object stringToValue(java.lang.String) 	NameNotChanged
		public static surge.json.JSONObject toJSONObject(java.lang.String) 	NameNotChanged
		public static java.lang.String toString(java.lang.Object) 	NameNotChanged
		public static java.lang.String toString(java.lang.Object, java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.json.XML
		36	=>	172
		40	=>	41
		43	=>	79
		46	=>	132
		49	=>	180
		52	=>	120
		55	=>	8
		58	=>	52
		61	=>	209
		64	=>	131
		82	=>	158
		83	=>	17 and 82
		85	=>	134
		86	=>	203
		89	=>	155
		90	=>	19
		92	=>	204
		93	=>	108
		95	=>	174
		96	=>	146
		98	=>	84
		99	=>	135
		101	=>	58
		102	=>	46
		104	=>	95
		107	=>	103
		120	=>	12
		121	=>	184
		123	=>	121
		125	=>	38 and 112
		127	=>	190
		129	=>	32
		132	=>	167
		150	=>	75
		165	=>	69
		169	=>	76
		171	=>	98
		172	=>	156
		174	=>	183
		176	=>	57
		177	=>	31
		179	=>	128
		180	=>	96
		182	=>	115
		183	=>	51
		185	=>	181
		187	=>	178
		188	=>	10
		190	=>	45
		192	=>	197
		195	=>	65
		197	=>	125
		198	=>	187
		200	=>	23
		201	=>	202
		203	=>	60
		204	=>	14
		206	=>	11
		207	=>	124
		209	=>	192
		211	=>	66
		212	=>	113
		213	=>	94
		218	=>	25
		219	=>	90
		220	=>	193
		225	=>	148
		226	=>	207
		228	=>	22
		230	=>	87
		232	=>	54
		234	=>	39
		236	=>	71
		238	=>	142
		240	=>	50
		242	=>	109
		248	=>	40
		249	=>	144
		250	=>	33
		253	=>	177
		255	=>	176
		260	=>	143
		262	=>	107
		263	=>	100
		264	=>	36
		266	=>	195
		267	=>	3
		269	=>	127
		271	=>	74
		272	=>	6
		273	=>	102
		275	=>	161
		280	=>	21
		282	=>	104
		284	=>	151
		286	=>	105
		288	=>	117
		289	=>	91
		291	=>	2
		293	=>	201
		297	=>	53
		301	=>	29
		302	=>	141
		304	=>	189
		306	=>	149
		308	=>	67
		309	=>	59
		311	=>	48
		312	=>	77
		314	=>	139
		319	=>	55
		321	=>	147
		323	=>	85
		325	=>	194
		326	=>	93
		328	=>	44
		329	=>	24
		331	=>	118
		333	=>	122
		339	=>	81
		358	=>	168
		360	=>	49
		362	=>	20
		364	=>	27
		366	=>	110
		368	=>	89
		377	=>	159
		378	=>	153
		380	=>	191
		381	=>	56
		383	=>	199
		386	=>	165
		390	=>	83
		391	=>	196
		393	=>	99
		395	=>	145
		399	=>	154
		420	=>	106
		421	=>	9
		422	=>	111 and 123
		424	=>	68
		426	=>	169
		439	=>	70
		454	=>	164
		463	=>	206
		468	=>	208
		470	=>	18
		471	=>	136
		472	=>	138
		477	=>	114
		478	=>	28
		479	=>	92 and 200
		481	=>	160
		482	=>	157
		483	=>	73
		485	=>	88
		487	=>	78
		491	=>	34
		493	=>	171
		495	=>	64
		496	=>	1
		497	=>	26 and 86
		499	=>	173
		501	=>	179
		503	=>	72
		505	=>	163
		507	=>	198
		512	=>	205
		514	=>	37
		515	=>	175
		516	=>	119 and 130
		518	=>	43
		519	=>	97
		521	=>	62
		522	=>	30
		523	=>	42
		524	=>	188
		525	=>	150
		526	=>	13
		527	=>	101
		528	=>	182
		530	=>	186
		533	=>	116
		535	=>	133
		536	=>	140
		537	=>	47
		541	=>	152
		543	=>	61
		546	=>	162
		551	=>	80
		552	=>	15
		553	=>	170
		555	=>	129
		563	=>	185
		565	=>	210
		567	=>	35
		569	=>	7
		570	=>	137
		571	=>	4 and 126
		573	=>	16
		575	=>	5
		578	=>	63
		579	=>	166

Class: public surge.json.XMLTokener	NameNotChanged
	Source: "XMLTokener.java"
	FieldsOf: surge.json.XMLTokener
		public static final java.util.HashMap entity	NameNotChanged
	MethodsOf: surge.json.XMLTokener
		private static java.lang.String b(char[]) 	NameNotChanged
		private static char[] b(java.lang.String) 	NameNotChanged
		public java.lang.String nextCDATA() 	NameNotChanged
		public java.lang.Object nextContent() 	NameNotChanged
		public java.lang.Object nextEntity(char) 	NameNotChanged
		public java.lang.Object nextMeta() 	NameNotChanged
		public java.lang.Object nextToken() 	NameNotChanged
		public boolean skipPast(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.json.XMLTokener
		45	=>	42
		46	=>	129
		47	=>	40
		48	=>	71
		49	=>	50
		50	=>	51
		51	=>	20
		61	=>	96
		62	=>	23
		75	=>	15
		78	=>	67
		79	=>	99
		81	=>	115
		83	=>	68
		84	=>	87
		85	=>	119
		87	=>	76
		88	=>	4
		108	=>	112
		109	=>	12
		110	=>	121
		112	=>	109
		114	=>	108
		116	=>	103
		118	=>	6
		119	=>	21
		121	=>	110
		123	=>	75
		124	=>	45
		126	=>	65
		128	=>	62
		129	=>	38
		131	=>	7
		133	=>	24
		149	=>	70
		152	=>	92
		153	=>	124
		155	=>	80
		156	=>	14
		158	=>	74
		161	=>	66
		164	=>	122
		165	=>	29
		166	=>	114
		186	=>	28
		187	=>	69
		188	=>	22
		191	=>	111
		193	=>	64
		195	=>	48
		197	=>	107
		199	=>	102
		201	=>	2
		203	=>	85
		206	=>	8
		209	=>	105
		210	=>	39
		212	=>	37
		214	=>	11
		216	=>	46
		220	=>	89
		222	=>	83
		223	=>	41
		225	=>	55
		227	=>	52
		238	=>	32
		239	=>	86
		261	=>	78
		262	=>	30
		263	=>	54
		266	=>	58
		268	=>	5
		270	=>	27
		272	=>	117
		274	=>	73
		276	=>	100
		278	=>	25
		284	=>	35
		285	=>	93
		286	=>	94
		288	=>	106
		289	=>	61
		291	=>	72
		293	=>	1
		295	=>	26
		297	=>	53
		299	=>	91
		300	=>	95
		302	=>	18
		309	=>	125
		310	=>	82
		312	=>	59
		313	=>	88
		314	=>	13
		316	=>	36
		318	=>	128
		321	=>	113
		329	=>	63
		330	=>	34
		334	=>	43
		354	=>	3
		355	=>	84
		356	=>	31
		363	=>	10 and 123
		365	=>	60
		366	=>	17
		368	=>	56
		370	=>	9
		375	=>	16
		377	=>	57
		378	=>	33
		382	=>	104 and 127
		384	=>	49
		386	=>	118
		387	=>	97
		389	=>	101
		390	=>	47
		392	=>	98
		398	=>	90
		400	=>	116
		407	=>	126
		408	=>	81
		410	=>	120
		416	=>	19
		417	=>	77
		418	=>	79
		420	=>	44

Class: public surge.math.ArrayUtils	NameNotChanged
	Source: "ArrayUtils.java"
	FieldsOf: surge.math.ArrayUtils
	MethodsOf: surge.math.ArrayUtils
		public static void fill(double[], double) 	NameNotChanged
		public static void shiftRight(double[], double) 	NameNotChanged
		public static void wrapRight(double[]) 	NameNotChanged
	LineNumbersOf: surge.math.ArrayUtils
		3	=>	8
		7	=>	7 and 10
		9	=>	9
		12	=>	1
		13	=>	3
		17	=>	5
		18	=>	2
		19	=>	13
		23	=>	4 and 6
		25	=>	11
		27	=>	12

Class: public surge.math.Average	NameNotChanged
	Source: "Average.java"
	FieldsOf: surge.math.Average
		private double average	=>	b
		private boolean dirty	=>	c
		private double[] values	=>	a
	MethodsOf: surge.math.Average
		private void calculateAverage() 	=>	a
		public double getAverage() 	NameNotChanged
		public void put(double) 	NameNotChanged
	LineNumbersOf: surge.math.Average
		10	=>	11
		11	=>	14
		12	=>	8
		13	=>	1
		14	=>	5
		15	=>	20
		19	=>	7
		20	=>	10
		21	=>	6
		25	=>	4
		27	=>	9
		28	=>	13
		31	=>	3
		36	=>	12
		38	=>	15 and 19
		40	=>	2
		43	=>	16
		44	=>	17
		45	=>	18

Class: public surge.math.M	NameNotChanged
	Source: "M.java"
	FieldsOf: surge.math.M
		public static int a	=>	c
		private static double[] fastsqrt	=>	a
		private static final float[] sin	=>	b
	MethodsOf: surge.math.M
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static double avg(surge.collection.GList) 	NameNotChanged
		public static int chunkShift(int) 	NameNotChanged
		public static double clip(double, double, double) 	NameNotChanged
		public static float cos(float) 	NameNotChanged
		public static surge.collection.GList cradShift(org.bukkit.Location, double) 	NameNotChanged
		public static double distance(org.bukkit.Location, org.bukkit.Location) 	NameNotChanged
		public static double dof(double, double) 	NameNotChanged
		public static double evaluate(java.lang.String) 	NameNotChanged
		public static double evaluate(java.lang.String, java.lang.Double[]) 	NameNotChanged
		public static int fromRoman(java.lang.String) 	NameNotChanged
		public static double fsqrt(double) 	NameNotChanged
		public static surge.collection.GList getChunks(org.bukkit.Chunk, int) 	NameNotChanged
		public static org.bukkit.block.Block highestBlock(org.bukkit.Location, int, int) 	NameNotChanged
		public static boolean isLoaded(org.bukkit.Location) 	NameNotChanged
		public static boolean isLoaded(org.bukkit.Location, double) 	NameNotChanged
		public static boolean isLoaded(org.bukkit.World, int, int) 	NameNotChanged
		public static void lim(surge.collection.GList, int) 	NameNotChanged
		public static int max(int[]) 	NameNotChanged
		public static double maxSafeRadius(org.bukkit.Location) 	NameNotChanged
		public static double maxSafeRadius(org.bukkit.Location, double, double) 	NameNotChanged
		public static int min(int[]) 	NameNotChanged
		public static long ms() 	NameNotChanged
		public static long ns() 	NameNotChanged
		public static boolean r(java.lang.Double) 	NameNotChanged
		public static int rand(int, int) 	NameNotChanged
		private static java.lang.String repeat(java.lang.String, int) 	=>	a
		public static float sin(float) 	NameNotChanged
		private static float sinLookup(int) 	=>	a
		public static double ticksFromNS(long) 	NameNotChanged
		public static java.lang.String toRoman(int) 	NameNotChanged
		public static double tps(long, int) 	NameNotChanged
		public static boolean within(int, int, int) 	NameNotChanged
		public static boolean within(org.bukkit.Location, org.bukkit.Location, java.lang.Double) 	NameNotChanged
	LineNumbersOf: surge.math.M
		20	=>	139
		26	=>	144
		39	=>	131
		40	=>	113
		42	=>	80
		54	=>	120
		56	=>	162
		59	=>	170
		81	=>	4 and 150
		83	=>	91
		85	=>	158
		87	=>	159
		91	=>	56
		96	=>	53
		97	=>	169
		99	=>	96 and 140
		101	=>	130
		103	=>	97
		105	=>	22
		107	=>	125
		108	=>	122
		113	=>	65
		114	=>	151
		119	=>	99
		134	=>	106
		146	=>	49
		158	=>	153
		160	=>	176
		161	=>	52
		162	=>	142
		163	=>	166
		164	=>	38
		165	=>	154
		166	=>	67
		167	=>	132
		168	=>	71
		169	=>	93
		170	=>	37
		171	=>	40
		172	=>	42
		174	=>	156
		176	=>	48 and 58
		178	=>	59
		180	=>	119
		181	=>	98
		184	=>	3
		198	=>	126
		200	=>	128
		203	=>	137
		205	=>	104 and 149
		207	=>	47
		210	=>	155
		215	=>	70
		227	=>	112
		229	=>	83
		232	=>	84
		234	=>	175
		236	=>	145
		239	=>	23
		241	=>	108
		244	=>	15
		246	=>	100
		249	=>	24
		251	=>	82
		254	=>	1
		256	=>	46
		259	=>	161
		261	=>	133
		264	=>	60
		266	=>	92
		269	=>	124
		271	=>	31
		274	=>	51
		276	=>	85
		279	=>	61
		281	=>	45
		284	=>	129
		286	=>	73
		289	=>	147
		291	=>	88
		294	=>	123
		296	=>	136
		299	=>	32
		309	=>	54
		319	=>	72
		331	=>	12
		333	=>	86 and 134
		335	=>	62
		338	=>	55
		351	=>	41 and 43
		353	=>	13
		355	=>	35
		368	=>	90
		385	=>	34
		397	=>	6
		409	=>	79
		421	=>	81
		423	=>	39 and 118
		425	=>	105
		427	=>	63
		431	=>	18
		443	=>	64
		445	=>	17 and 163
		447	=>	167
		449	=>	25
		453	=>	75
		469	=>	9
		474	=>	7 and 121
		476	=>	165
		482	=>	173
		487	=>	19
		489	=>	26
		492	=>	77
		494	=>	78
		497	=>	174
		502	=>	107
		507	=>	74
		512	=>	44
		514	=>	114
		516	=>	102
		519	=>	127 and 168
		521	=>	5
		523	=>	28
		525	=>	157
		529	=>	33
		534	=>	66 and 143
		536	=>	95
		538	=>	135
		542	=>	21
		547	=>	177
		548	=>	16
		549	=>	138
		550	=>	29
		551	=>	148
		553	=>	76 and 117
		555	=>	10 and 101
		557	=>	68
		561	=>	8
		566	=>	146
		571	=>	103 and 115
		573	=>	57
		575	=>	2
		579	=>	152
		584	=>	87 and 164
		586	=>	50
		588	=>	69
		592	=>	27
		597	=>	20
		599	=>	30
		602	=>	89
		607	=>	111
		609	=>	14 and 109
		611	=>	11 and 171
		613	=>	110
		617	=>	178
		619	=>	160
		624	=>	116
		626	=>	36 and 94
		628	=>	172
		630	=>	141

Class: public surge.math.Profiler	NameNotChanged
	Source: "Profiler.java"
	FieldsOf: surge.math.Profiler
		private long millis	=>	c
		private long nanos	=>	a
		private boolean profiling	=>	f
		private long startMillis	=>	d
		private long startNano	=>	b
		private double time	=>	e
	MethodsOf: surge.math.Profiler
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void begin() 	NameNotChanged
		public void end() 	NameNotChanged
		public double getHours() 	NameNotChanged
		public long getMillis() 	NameNotChanged
		public double getMilliseconds() 	NameNotChanged
		public double getMinutes() 	NameNotChanged
		public long getNanos() 	NameNotChanged
		public long getNanoseconds() 	NameNotChanged
		public double getSeconds() 	NameNotChanged
		public long getStartMillis() 	NameNotChanged
		public long getStartNano() 	NameNotChanged
		public double getTicks() 	NameNotChanged
		public double getTime() 	NameNotChanged
		public java.lang.String getTime(int) 	NameNotChanged
		public boolean isProfiling() 	NameNotChanged
		public void reset() 	NameNotChanged
	LineNumbersOf: surge.math.Profiler
		14	=>	23
		16	=>	32
		17	=>	35
		18	=>	16
		22	=>	25
		23	=>	6
		24	=>	18
		25	=>	5
		29	=>	1
		31	=>	4
		34	=>	24
		35	=>	39
		36	=>	19
		37	=>	44
		38	=>	37
		39	=>	30
		43	=>	8
		44	=>	29
		45	=>	12
		46	=>	41
		47	=>	13
		48	=>	26
		49	=>	11
		53	=>	9
		55	=>	21
		58	=>	43
		60	=>	38
		63	=>	2
		65	=>	3
		68	=>	36
		70	=>	15
		73	=>	28
		78	=>	7
		83	=>	27
		88	=>	40
		93	=>	17
		98	=>	22
		103	=>	31
		108	=>	20
		113	=>	34
		118	=>	33
		123	=>	42
		128	=>	10
		133	=>	14

Class: public surge.nms.NMSClass	NameNotChanged
	Source: "NMSClass.java"
	FieldsOf: surge.nms.NMSClass
		public static java.lang.Class ChatSerializer	NameNotChanged
		public static java.lang.Class EnumGamemode	NameNotChanged
		protected static java.lang.Class EnumPlayerInfoAction	=>	c
		public static java.lang.Class GameProfile	NameNotChanged
		public static java.lang.Class IChatBaseComponent	NameNotChanged
		public static java.lang.Class LoadingCache	NameNotChanged
		public static java.lang.Class PacketPlayOutPlayerInfo	NameNotChanged
		public static java.lang.Class PacketPlayOutPlayerListHeaderFooter	NameNotChanged
		public static java.lang.Class PlayerInfoData	NameNotChanged
		public static java.lang.Class TileEntitySkull	NameNotChanged
		private static boolean init	=>	a
		protected static int version	=>	b
	MethodsOf: surge.nms.NMSClass
	LineNumbersOf: surge.nms.NMSClass
		3	=>	32
		6	=>	5
		7	=>	1
		22	=>	30
		24	=>	46
		26	=>	19
		29	=>	41
		31	=>	44
		34	=>	16
		36	=>	25
		39	=>	26
		41	=>	21
		44	=>	14
		46	=>	9
		49	=>	3
		51	=>	43
		54	=>	33
		56	=>	36
		58	=>	35
		59	=>	17
		62	=>	6
		65	=>	10
		67	=>	11
		69	=>	18
		72	=>	8
		74	=>	22
		75	=>	38
		79	=>	13
		84	=>	37
		86	=>	28
		87	=>	12
		91	=>	4
		93	=>	39
		95	=>	47
		100	=>	15
		102	=>	45
		103	=>	20
		107	=>	31
		110	=>	27
		114	=>	29
		116	=>	34
		117	=>	23
		120	=>	24
		122	=>	40
		124	=>	42
		129	=>	7
		131	=>	2

Class: public surge.nms.NMSX	NameNotChanged
	Source: "NMSX.java"
	FieldsOf: surge.nms.NMSX
		public static boolean a	=>	b
		public static surge.nms.NMSX bountifulAPI	NameNotChanged
		public static java.lang.Object eSubtitle	NameNotChanged
		public static java.lang.Object eTimes	NameNotChanged
		public static java.lang.Object eTitle	NameNotChanged
		public static java.lang.String nmsver	NameNotChanged
		private static boolean useOldMethods	=>	a
	MethodsOf: surge.nms.NMSX
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static void clearTitle(org.bukkit.entity.Player) 	NameNotChanged
		public static java.lang.String craftPackage() 	NameNotChanged
		public static java.lang.String getBukkitVersion() 	NameNotChanged
		public static java.lang.Class getCBClass(java.lang.String) 	NameNotChanged
		public static java.lang.Class getCBNMSClass(java.lang.String) 	NameNotChanged
		public static java.lang.String getEntityName(org.bukkit.entity.Entity) 	NameNotChanged
		public static java.lang.Class getNMSClass(java.lang.String) 	NameNotChanged
		public static java.lang.String getVersion() 	NameNotChanged
		public static java.lang.String nmsPackage() 	NameNotChanged
		public static int ping(org.bukkit.entity.Player) 	NameNotChanged
		public static void sendActionBar(org.bukkit.entity.Player, java.lang.String) 	NameNotChanged
		public static void sendActionBar(org.bukkit.entity.Player, java.lang.String, int) 	NameNotChanged
		public static void sendActionBarToAllPlayers(java.lang.String) 	NameNotChanged
		public static void sendActionBarToAllPlayers(java.lang.String, int) 	NameNotChanged
		public static void sendPacket(org.bukkit.entity.Player, java.lang.Object) 	NameNotChanged
		public static void sendTabTitle(org.bukkit.entity.Player, java.lang.String, java.lang.String) 	NameNotChanged
		public static void sendTitle(org.bukkit.entity.Player, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.String) 	NameNotChanged
		public static java.lang.Object serializeChat(java.lang.String) 	NameNotChanged
		public static java.lang.reflect.Field setAccessible(java.lang.reflect.Field) 	NameNotChanged
		public static java.lang.reflect.Method setAccessible(java.lang.reflect.Method) 	NameNotChanged
		public static void setAi(org.bukkit.entity.LivingEntity, boolean) 	NameNotChanged
		public static void showPickup(org.bukkit.entity.Player, org.bukkit.entity.Entity, org.bukkit.entity.Entity) 	NameNotChanged
	LineNumbersOf: surge.nms.NMSX
		15	=>	37
		20	=>	102
		21	=>	113
		22	=>	98
		26	=>	81
		27	=>	15
		28	=>	155
		35	=>	72
		37	=>	69
		39	=>	85
		41	=>	20
		45	=>	48
		56	=>	165
		58	=>	16
		62	=>	75
		63	=>	83
		65	=>	150
		70	=>	8
		75	=>	129
		77	=>	79
		81	=>	121
		82	=>	11
		84	=>	146
		89	=>	82
		96	=>	80
		99	=>	151
		104	=>	131
		109	=>	59
		110	=>	95
		111	=>	38
		112	=>	133
		114	=>	118
		119	=>	33
		121	=>	58
		131	=>	169
		141	=>	136
		151	=>	158
		166	=>	167
		167	=>	26
		168	=>	43
		169	=>	142
		170	=>	153
		171	=>	66
		172	=>	21
		174	=>	56
		178	=>	130
		184	=>	44
		185	=>	179
		186	=>	162
		187	=>	145
		189	=>	71
		191	=>	57
		193	=>	111
		197	=>	149
		201	=>	89
		204	=>	19
		206	=>	106
		207	=>	99
		217	=>	55
		219	=>	60
		222	=>	76
		224	=>	45
		227	=>	152
		229	=>	54
		234	=>	159
		236	=>	174
		237	=>	6
		238	=>	36
		239	=>	156
		240	=>	116
		241	=>	124
		242	=>	119
		244	=>	132
		245	=>	93
		246	=>	117
		247	=>	27
		248	=>	28
		251	=>	65
		253	=>	110
		254	=>	141
		256	=>	23
		258	=>	166
		259	=>	170
		260	=>	96
		261	=>	135
		263	=>	14
		264	=>	161
		265	=>	175
		266	=>	112
		267	=>	171
		269	=>	163
		271	=>	10
		273	=>	109
		275	=>	22
		279	=>	123
		280	=>	41
		284	=>	87
		286	=>	61
		289	=>	42
		291	=>	35
		293	=>	97
		296	=>	157
		297	=>	101
		298	=>	73
		302	=>	91
		303	=>	34
		304	=>	30
		305	=>	126
		306	=>	9
		307	=>	51
		308	=>	52
		309	=>	25
		310	=>	18
		312	=>	32
		314	=>	108
		316	=>	105
		320	=>	84
		322	=>	50
		330	=>	12
		331	=>	74
		332	=>	122
		333	=>	137
		335	=>	86
		337	=>	147
		338	=>	125
		339	=>	40
		340	=>	2
		341	=>	134
		342	=>	139
		346	=>	160
		347	=>	103
		348	=>	4
		350	=>	107
		352	=>	148
		353	=>	70
		354	=>	144
		355	=>	115
		359	=>	92
		363	=>	178
		364	=>	29
		365	=>	164
		366	=>	173
		367	=>	67
		368	=>	143
		369	=>	5
		371	=>	176
		373	=>	94
		375	=>	64
		379	=>	138
		380	=>	47
		382	=>	39
		389	=>	127
		392	=>	78 and 90
		394	=>	168
		395	=>	62
		403	=>	7
		405	=>	53
		409	=>	120
		410	=>	114
		414	=>	3 and 140
		416	=>	100
		418	=>	17
		422	=>	31
		424	=>	172
		427	=>	88
		434	=>	154
		435	=>	104
		436	=>	68
		437	=>	63
		439	=>	77
		442	=>	46
		447	=>	49
		452	=>	128
		453	=>	13
		455	=>	177
		457	=>	1
		459	=>	24

Class: surge.nms.NMSX$1	NameNotChanged
	Source: "NMSX.java"
	FieldsOf: surge.nms.NMSX$1
		private final synthetic org.bukkit.entity.Player val$player	NameNotChanged
	MethodsOf: surge.nms.NMSX$1
		public void run() 	NameNotChanged
	LineNumbersOf: surge.nms.NMSX$1
		1	=>	3
		382	=>	4
		387	=>	2
		388	=>	1

Class: surge.nms.NMSX$2	NameNotChanged
	Source: "NMSX.java"
	FieldsOf: surge.nms.NMSX$2
		private final synthetic java.lang.String val$message	NameNotChanged
		private final synthetic org.bukkit.entity.Player val$player	NameNotChanged
	MethodsOf: surge.nms.NMSX$2
		public void run() 	NameNotChanged
	LineNumbersOf: surge.nms.NMSX$2
		1	=>	1
		395	=>	3
		401	=>	4
		402	=>	2

Class: public surge.nms.PacketUtil	NameNotChanged
	Source: "PacketUtil.java"
	FieldsOf: surge.nms.PacketUtil
	MethodsOf: surge.nms.PacketUtil
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static void clearTitle(org.bukkit.entity.Player) 	NameNotChanged
		public static surge.nms.PacketUtil$V getVersion() 	NameNotChanged
		public static void sendActionBar(org.bukkit.entity.Player, java.lang.String) 	NameNotChanged
		public static void sendTitle(org.bukkit.entity.Player, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.nms.PacketUtil
		6	=>	26
		20	=>	13
		22	=>	17
		25	=>	24
		27	=>	20
		30	=>	18
		32	=>	31
		35	=>	14
		37	=>	28
		40	=>	4
		42	=>	7
		45	=>	10
		50	=>	3
		52	=>	1
		57	=>	15
		58	=>	12
		60	=>	23
		64	=>	27
		68	=>	11
		70	=>	2
		75	=>	30
		76	=>	8
		78	=>	25
		82	=>	6
		86	=>	19
		88	=>	22
		93	=>	21
		94	=>	29
		96	=>	9
		98	=>	16
		100	=>	5

Class: public final enum surge.nms.PacketUtil$V	NameNotChanged
	Source: "PacketUtil.java"
	FieldsOf: surge.nms.PacketUtil$V
		private static final synthetic surge.nms.PacketUtil$V[] ENUM$VALUES	=>	a
		public static final enum surge.nms.PacketUtil$V R110	NameNotChanged
		public static final enum surge.nms.PacketUtil$V R111	NameNotChanged
		public static final enum surge.nms.PacketUtil$V R112	NameNotChanged
		public static final enum surge.nms.PacketUtil$V R17	NameNotChanged
		public static final enum surge.nms.PacketUtil$V R18	NameNotChanged
		public static final enum surge.nms.PacketUtil$V R19	NameNotChanged
	MethodsOf: surge.nms.PacketUtil$V
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static surge.nms.PacketUtil$V valueOf(java.lang.String) 	NameNotChanged
		public static surge.nms.PacketUtil$V[] values() 	NameNotChanged
	LineNumbersOf: surge.nms.PacketUtil$V
		1	=>	4 and 5
		8	=>	8 and 10
		10	=>	9
		11	=>	2
		12	=>	1
		13	=>	6
		14	=>	7
		15	=>	3

Class: public surge.nms.Title	NameNotChanged
	Source: "Title.java"
	FieldsOf: surge.nms.Title
		private java.lang.String action	=>	c
		private java.lang.Integer fadeIn	=>	d
		private java.lang.Integer fadeOut	=>	e
		private java.lang.Integer stayTime	=>	f
		private java.lang.String subTitle	=>	b
		private java.lang.String title	=>	a
	MethodsOf: surge.nms.Title
		public java.lang.String getAction() 	NameNotChanged
		public java.lang.Integer getFadeIn() 	NameNotChanged
		public java.lang.Integer getFadeOut() 	NameNotChanged
		public java.lang.Integer getStayTime() 	NameNotChanged
		public java.lang.String getSubTitle() 	NameNotChanged
		public java.lang.String getTitle() 	NameNotChanged
		public void send(org.bukkit.entity.Player) 	NameNotChanged
		public void setAction(java.lang.String) 	NameNotChanged
		public void setFadeIn(java.lang.Integer) 	NameNotChanged
		public void setFadeOut(java.lang.Integer) 	NameNotChanged
		public void setStayTime(java.lang.Integer) 	NameNotChanged
		public void setSubTitle(java.lang.String) 	NameNotChanged
		public void setTitle(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.nms.Title
		14	=>	48
		16	=>	8
		17	=>	35
		18	=>	49
		19	=>	44
		21	=>	41
		23	=>	17
		24	=>	16
		25	=>	39
		26	=>	31
		27	=>	3
		28	=>	34
		29	=>	42
		31	=>	40
		33	=>	1
		34	=>	4
		35	=>	15
		36	=>	28
		37	=>	19
		38	=>	10
		40	=>	25
		42	=>	38
		43	=>	47
		44	=>	50
		45	=>	24
		46	=>	33
		52	=>	11
		53	=>	37
		54	=>	2
		56	=>	30
		58	=>	36
		60	=>	9
		64	=>	32
		69	=>	6
		70	=>	26
		74	=>	23
		79	=>	13
		80	=>	7
		84	=>	45
		89	=>	20
		90	=>	29
		94	=>	14
		99	=>	46
		100	=>	43
		104	=>	21
		109	=>	27
		110	=>	12
		114	=>	22
		119	=>	18
		120	=>	5

Class: public final enum surge.nms.VersionBukkit	NameNotChanged
	Source: "VersionBukkit.java"
	FieldsOf: surge.nms.VersionBukkit
		private static final synthetic surge.nms.VersionBukkit[] ENUM$VALUES	=>	a
		public static final enum surge.nms.VersionBukkit V11	NameNotChanged
		public static final enum surge.nms.VersionBukkit V111	NameNotChanged
		public static final enum surge.nms.VersionBukkit V112	NameNotChanged
		public static final enum surge.nms.VersionBukkit V7	NameNotChanged
		public static final enum surge.nms.VersionBukkit V8	NameNotChanged
		public static final enum surge.nms.VersionBukkit V9	NameNotChanged
		public static final enum surge.nms.VersionBukkit VU	NameNotChanged
	MethodsOf: surge.nms.VersionBukkit
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static surge.nms.VersionBukkit get() 	NameNotChanged
		public static boolean tc() 	NameNotChanged
		public static boolean uc() 	NameNotChanged
		public static surge.nms.VersionBukkit valueOf(java.lang.String) 	NameNotChanged
		public static surge.nms.VersionBukkit[] values() 	NameNotChanged
	LineNumbersOf: surge.nms.VersionBukkit
		1	=>	21 and 30
		5	=>	11 and 26
		7	=>	20
		8	=>	7
		9	=>	27
		10	=>	28
		11	=>	9
		12	=>	25
		13	=>	22
		17	=>	29
		19	=>	8
		22	=>	19
		27	=>	12
		29	=>	16
		32	=>	15
		37	=>	24
		39	=>	6
		42	=>	18
		44	=>	17
		47	=>	14
		49	=>	13
		52	=>	3
		54	=>	1
		57	=>	5
		59	=>	4
		62	=>	10
		64	=>	2
		67	=>	23

Class: public abstract surge.pool.A	NameNotChanged
	Source: "A.java"
	FieldsOf: surge.pool.A
	MethodsOf: surge.pool.A
	LineNumbersOf: surge.pool.A
		8	=>	2
		9	=>	1
		17	=>	3

Class: surge.pool.A$1	NameNotChanged
	Source: "A.java"
	FieldsOf: surge.pool.A$1
		final synthetic surge.pool.A this$0	NameNotChanged
	MethodsOf: surge.pool.A$1
		public void run() 	NameNotChanged
	LineNumbersOf: surge.pool.A$1
		10	=>	3
		14	=>	1
		15	=>	2

Class: public abstract surge.pool.Execution	NameNotChanged
	Source: "Execution.java"
	FieldsOf: surge.pool.Execution
		public static int a	=>	b
	MethodsOf: surge.pool.Execution
	LineNumbersOf: surge.pool.Execution
		3	=>	1

Class: public surge.pool.ParallelPoolManager	NameNotChanged
	Source: "ParallelPoolManager.java"
	FieldsOf: surge.pool.ParallelPoolManager
		private surge.pool.ThreadInformation info	=>	g
		private java.lang.String key	=>	f
		private surge.pool.QueueMode mode	=>	a
		private int next	=>	c
		private java.util.Queue squeue	=>	e
		private int threadCount	=>	d
		private surge.collection.GList threads	=>	b
	MethodsOf: surge.pool.ParallelPoolManager
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		private void createThreads(int) 	=>	a
		public surge.pool.ThreadInformation getAverageInfo() 	NameNotChanged
		public java.lang.String getKey() 	NameNotChanged
		public surge.pool.QueueMode getMode() 	NameNotChanged
		public int getNext() 	NameNotChanged
		public int getQueueSize() 	NameNotChanged
		public int getSize() 	NameNotChanged
		public java.util.Queue getSqueue() 	NameNotChanged
		public int getThreadCount() 	NameNotChanged
		public surge.pool.ParallelThread[] getThreads() 	NameNotChanged
		public long lock() 	NameNotChanged
		private surge.pool.ParallelThread nextThread() 	=>	b
		public void queue(surge.pool.Execution) 	NameNotChanged
		public void shutdown() 	NameNotChanged
		public void start() 	NameNotChanged
		public void syncQueue(surge.pool.Execution) 	NameNotChanged
		public void tickSyncQueue() 	NameNotChanged
		private void updateThreadInformation() 	=>	a
	LineNumbersOf: surge.pool.ParallelPoolManager
		22	=>	29
		23	=>	42
		27	=>	53
		29	=>	46
		31	=>	31
		35	=>	67
		36	=>	11
		37	=>	85
		38	=>	30
		41	=>	69
		42	=>	8
		44	=>	21
		47	=>	34
		49	=>	78
		52	=>	60
		53	=>	10
		54	=>	55
		55	=>	90
		56	=>	17
		57	=>	1
		58	=>	2
		62	=>	58
		64	=>	89
		68	=>	36
		71	=>	5
		74	=>	16 and 82
		77	=>	62
		82	=>	79
		83	=>	73
		87	=>	3
		89	=>	76
		90	=>	33
		91	=>	54
		95	=>	61
		96	=>	47
		100	=>	24
		101	=>	45
		105	=>	57
		110	=>	9
		112	=>	37 and 44
		114	=>	72
		117	=>	25
		122	=>	4
		129	=>	38
		131	=>	50
		134	=>	26
		135	=>	40
		136	=>	49
		138	=>	64
		140	=>	27
		141	=>	88
		142	=>	66
		143	=>	75
		145	=>	68
		146	=>	28
		147	=>	74
		148	=>	48
		149	=>	86
		152	=>	14
		155	=>	77
		156	=>	63
		160	=>	18
		162	=>	51
		164	=>	59
		167	=>	35
		169	=>	65
		172	=>	6
		173	=>	39
		175	=>	15
		177	=>	13
		179	=>	52
		181	=>	20
		183	=>	12
		184	=>	83
		186	=>	22
		192	=>	81
		197	=>	19 and 43
		199	=>	87
		200	=>	7
		201	=>	70
		203	=>	84
		207	=>	23
		212	=>	56
		217	=>	32
		222	=>	71
		227	=>	41
		232	=>	80

Class: synthetic surge.pool.ParallelPoolManager$1	NameNotChanged
	Source: "ParallelPoolManager.java"
	FieldsOf: surge.pool.ParallelPoolManager$1
		static final synthetic int[] $SwitchMap$surge$pool$QueueMode	=>	a
	MethodsOf: surge.pool.ParallelPoolManager$1
	LineNumbersOf: surge.pool.ParallelPoolManager$1
		169	=>	1

Class: public surge.pool.ParallelThread	NameNotChanged
	Source: "ParallelThread.java"
	FieldsOf: surge.pool.ParallelThread
		private surge.pool.ThreadInformation info	=>	b
		private java.util.Queue queue	=>	a
	MethodsOf: surge.pool.ParallelThread
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		private void conditionallySleep(double) 	=>	a
		private void execute() 	=>	a
		private void execute(surge.pool.Execution) 	=>	a
		public surge.pool.ThreadInformation getInfo() 	NameNotChanged
		public java.util.Queue getQueue() 	NameNotChanged
		public void queue(surge.pool.Execution) 	NameNotChanged
		public void run() 	NameNotChanged
	LineNumbersOf: surge.pool.ParallelThread
		14	=>	37
		15	=>	23
		16	=>	4
		17	=>	28
		18	=>	19
		19	=>	24
		24	=>	39
		28	=>	3
		29	=>	14
		30	=>	13
		31	=>	27
		32	=>	20
		33	=>	34
		34	=>	7
		35	=>	47
		36	=>	36
		37	=>	35
		38	=>	21
		39	=>	25
		40	=>	9
		41	=>	30
		42	=>	17
		43	=>	29
		46	=>	45
		48	=>	16
		51	=>	6
		53	=>	22
		54	=>	10, 18 and 44
		56	=>	43
		60	=>	46
		62	=>	8
		64	=>	32
		70	=>	42
		73	=>	38
		75	=>	31
		76	=>	1
		77	=>	2
		81	=>	48
		83	=>	33
		85	=>	40
		86	=>	5
		89	=>	15
		91	=>	41
		95	=>	49
		96	=>	12
		100	=>	11
		105	=>	26

Class: public final enum surge.pool.QueueMode	NameNotChanged
	Source: "QueueMode.java"
	FieldsOf: surge.pool.QueueMode
		private static final synthetic surge.pool.QueueMode[] $VALUES	=>	a
		public static final enum surge.pool.QueueMode ROUND_ROBIN	NameNotChanged
		public static final enum surge.pool.QueueMode SMALLEST	NameNotChanged
	MethodsOf: surge.pool.QueueMode
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static surge.pool.QueueMode valueOf(java.lang.String) 	NameNotChanged
		public static surge.pool.QueueMode[] values() 	NameNotChanged
	LineNumbersOf: surge.pool.QueueMode
		3	=>	1, 4, 5 and 6
		5	=>	3
		6	=>	2

Class: public abstract surge.pool.S	NameNotChanged
	Source: "S.java"
	FieldsOf: surge.pool.S
	MethodsOf: surge.pool.S
	LineNumbersOf: surge.pool.S
		7	=>	3
		9	=>	1
		17	=>	2

Class: surge.pool.S$1	NameNotChanged
	Source: "S.java"
	FieldsOf: surge.pool.S$1
		final synthetic surge.pool.S this$0	NameNotChanged
	MethodsOf: surge.pool.S$1
		public void run() 	NameNotChanged
	LineNumbersOf: surge.pool.S$1
		1	=>	4
		9	=>	1
		14	=>	2
		15	=>	3

Class: public surge.pool.ThreadInformation	NameNotChanged
	Source: "ThreadInformation.java"
	FieldsOf: surge.pool.ThreadInformation
		private final int id	=>	g
		private boolean processing	=>	c
		private int queuedSize	=>	b
		private long tick	=>	f
		private double ticksPerSecond	=>	a
		private surge.math.Average ticksPerSecondAverage	=>	e
		private double utilization	=>	d
	MethodsOf: surge.pool.ThreadInformation
		public int getId() 	NameNotChanged
		public int getQueuedSize() 	NameNotChanged
		public long getTick() 	NameNotChanged
		public long getTickLag() 	NameNotChanged
		public double getTicksPerSecond() 	NameNotChanged
		public double getTicksPerSecondAverage() 	NameNotChanged
		public double getUtilization() 	NameNotChanged
		public boolean isProcessing() 	NameNotChanged
		public void setProcessing(boolean) 	NameNotChanged
		public void setQueuedSize(int) 	NameNotChanged
		public void setTick(long) 	NameNotChanged
		public void setTicksPerSecond(double) 	NameNotChanged
		public void setUtilization(double) 	NameNotChanged
	LineNumbersOf: surge.pool.ThreadInformation
		17	=>	24
		18	=>	27
		19	=>	12
		20	=>	6
		21	=>	4
		22	=>	11
		23	=>	10
		24	=>	3
		25	=>	16
		29	=>	21
		34	=>	9
		35	=>	15
		36	=>	19
		40	=>	1
		45	=>	20
		46	=>	8
		50	=>	17
		55	=>	2
		56	=>	26
		60	=>	18
		65	=>	14
		66	=>	5
		70	=>	22
		75	=>	7
		80	=>	23
		81	=>	28
		85	=>	25
		90	=>	13

Class: public abstract surge.sched.IBursterator	NameNotChanged
	Source: "IBursterator.java"
	FieldsOf: surge.sched.IBursterator
	MethodsOf: surge.sched.IBursterator
		public abstract void burst(java.lang.Object) 	NameNotChanged
		public abstract int flush() 	NameNotChanged
		public abstract int flush(surge.math.Profiler) 	NameNotChanged
		public abstract double getEstimatedTimeUse() 	NameNotChanged
		public abstract void queue(java.lang.Object) 	NameNotChanged
		public abstract void queue(java.lang.Object[]) 	NameNotChanged
		public abstract void queue(java.util.List) 	NameNotChanged
		public abstract void setTimeLock(double) 	NameNotChanged
	LineNumbersOf: surge.sched.IBursterator

Class: public abstract surge.sched.ICancellable	NameNotChanged
	Source: "ICancellable.java"
	FieldsOf: surge.sched.ICancellable
	MethodsOf: surge.sched.ICancellable
		public abstract void cancel() 	NameNotChanged
	LineNumbersOf: surge.sched.ICancellable

Class: public abstract surge.sched.IMasterTickComponent	NameNotChanged
	Source: "IMasterTickComponent.java"
	FieldsOf: surge.sched.IMasterTickComponent
	MethodsOf: surge.sched.IMasterTickComponent
		public abstract java.lang.String getTickName() 	NameNotChanged
		public abstract void onTick() 	NameNotChanged
	LineNumbersOf: surge.sched.IMasterTickComponent

Class: public abstract surge.sched.ITask	NameNotChanged
	Source: "ITask.java"
	FieldsOf: surge.sched.ITask
	MethodsOf: surge.sched.ITask
		public abstract double getActiveTime() 	NameNotChanged
		public abstract double getComputeTime() 	NameNotChanged
		public abstract int getId() 	NameNotChanged
		public abstract java.lang.String getName() 	NameNotChanged
		public abstract double getTotalComputeTime() 	NameNotChanged
		public abstract boolean hasCompleted() 	NameNotChanged
		public abstract boolean isRepeating() 	NameNotChanged
		public abstract void run() 	NameNotChanged
	LineNumbersOf: surge.sched.ITask

Class: public surge.sched.TICK	NameNotChanged
	Source: "TICK.java"
	FieldsOf: surge.sched.TICK
		public static boolean a	=>	b
		public static long tick	NameNotChanged
	MethodsOf: surge.sched.TICK
	LineNumbersOf: surge.sched.TICK
		3	=>	2
		5	=>	1

Class: public abstract surge.sched.Task	NameNotChanged
	Source: "Task.java"
	FieldsOf: surge.sched.Task
		private surge.math.Profiler activeProfiler	=>	i
		private double activeTime	=>	f
		private boolean completed	=>	g
		private double computeTime	=>	d
		private int id	=>	a
		private java.lang.String name	=>	b
		private surge.math.Profiler profiler	=>	h
		private boolean repeating	=>	c
		private int ticks	=>	j
		private double totalComputeTime	=>	e
	MethodsOf: surge.sched.Task
		static synthetic surge.math.Profiler access$0(surge.sched.Task) 	NameNotChanged
		static synthetic void access$1(surge.sched.Task, boolean) 	NameNotChanged
		static synthetic double access$10(surge.sched.Task) 	NameNotChanged
		static synthetic surge.math.Profiler access$2(surge.sched.Task) 	NameNotChanged
		static synthetic void access$3(surge.sched.Task, double) 	NameNotChanged
		static synthetic void access$4(surge.sched.Task, double) 	NameNotChanged
		static synthetic double access$5(surge.sched.Task) 	NameNotChanged
		static synthetic void access$6(surge.sched.Task, double) 	NameNotChanged
		static synthetic int access$7(surge.sched.Task) 	NameNotChanged
		static synthetic void access$8(surge.sched.Task, int) 	NameNotChanged
		static synthetic double access$9(surge.sched.Task) 	NameNotChanged
		public void cancel() 	NameNotChanged
		public double getActiveTime() 	NameNotChanged
		public double getComputeTime() 	NameNotChanged
		public int getId() 	NameNotChanged
		public java.lang.String getName() 	NameNotChanged
		public double getTotalComputeTime() 	NameNotChanged
		public boolean hasCompleted() 	NameNotChanged
		public boolean isRepeating() 	NameNotChanged
		private void setup(java.lang.String, boolean) 	=>	a
	LineNumbersOf: surge.sched.Task
		11	=>	34 and 50
		12	=>	16 and 19
		13	=>	17 and 47
		14	=>	15
		15	=>	42
		16	=>	9
		17	=>	14 and 29
		19	=>	48
		21	=>	36
		22	=>	27
		24	=>	7
		41	=>	21
		43	=>	39
		45	=>	12
		46	=>	41
		48	=>	8
		66	=>	4
		68	=>	30
		70	=>	45
		71	=>	31
		73	=>	20
		96	=>	1
		100	=>	33
		101	=>	6
		102	=>	18
		103	=>	44
		104	=>	3
		105	=>	38
		106	=>	32
		107	=>	22
		108	=>	13
		109	=>	40
		114	=>	28
		115	=>	5
		116	=>	35
		117	=>	49
		118	=>	10
		119	=>	11
		120	=>	23
		125	=>	25
		131	=>	26
		137	=>	24
		143	=>	46
		149	=>	43
		155	=>	2
		161	=>	37

Class: surge.sched.Task$1	NameNotChanged
	Source: "Task.java"
	FieldsOf: surge.sched.Task$1
		final synthetic surge.sched.Task this$0	NameNotChanged
	MethodsOf: surge.sched.Task$1
		public void run() 	NameNotChanged
	LineNumbersOf: surge.sched.Task$1
		1	=>	9
		24	=>	11
		29	=>	13
		30	=>	3
		31	=>	2
		32	=>	4
		33	=>	12
		34	=>	8
		35	=>	10
		36	=>	7
		37	=>	6
		38	=>	1
		39	=>	5

Class: surge.sched.Task$2	NameNotChanged
	Source: "Task.java"
	FieldsOf: surge.sched.Task$2
		final synthetic surge.sched.Task this$0	NameNotChanged
	MethodsOf: surge.sched.Task$2
		public void run() 	NameNotChanged
	LineNumbersOf: surge.sched.Task$2
		1	=>	5
		48	=>	9
		53	=>	8
		54	=>	14
		55	=>	2
		56	=>	3
		57	=>	12
		58	=>	11
		59	=>	6
		60	=>	13
		61	=>	1
		62	=>	10
		63	=>	7
		64	=>	4

Class: surge.sched.Task$3	NameNotChanged
	Source: "Task.java"
	FieldsOf: surge.sched.Task$3
		final synthetic surge.sched.Task this$0	NameNotChanged
		private final synthetic int val$total	NameNotChanged
	MethodsOf: surge.sched.Task$3
		public void run() 	NameNotChanged
	LineNumbersOf: surge.sched.Task$3
		1	=>	16
		73	=>	14
		78	=>	13
		79	=>	10
		80	=>	9
		81	=>	1
		82	=>	6
		83	=>	11
		84	=>	8
		85	=>	2
		86	=>	5
		87	=>	15
		88	=>	4
		90	=>	7
		92	=>	12
		94	=>	3

Class: public surge.sched.TaskManager	NameNotChanged
	Source: "TaskManager.java"
	FieldsOf: surge.sched.TaskManager
		private surge.collection.GMap taskProfiles	=>	b
		private surge.collection.GList tasks	=>	a
	MethodsOf: surge.sched.TaskManager
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public java.lang.String getTickName() 	NameNotChanged
		public void onTick() 	NameNotChanged
		private void putFinishingTask(surge.sched.ITask) 	=>	a
		private void putTask(surge.sched.ITask) 	=>	b
	LineNumbersOf: surge.sched.TaskManager
		11	=>	7
		13	=>	1
		14	=>	13
		15	=>	3
		20	=>	12 and 19
		22	=>	2
		24	=>	18
		26	=>	9
		27	=>	17
		30	=>	15
		34	=>	5
		35	=>	11
		39	=>	16
		41	=>	4
		44	=>	21
		45	=>	6
		46	=>	14
		47	=>	20
		48	=>	10
		53	=>	8

Class: public surge.sched.TaskProfile	NameNotChanged
	Source: "TaskProfile.java"
	FieldsOf: surge.sched.TaskProfile
		private double activeTime	=>	a
		private double computeTickTime	=>	b
		private double computeTime	=>	c
	MethodsOf: surge.sched.TaskProfile
		public double getActiveTime() 	NameNotChanged
		public double getComputeTickTime() 	NameNotChanged
		public double getComputeTime() 	NameNotChanged
		public void setActiveTime(double) 	NameNotChanged
		public void setComputeTickTime(double) 	NameNotChanged
		public void setComputeTime(double) 	NameNotChanged
	LineNumbersOf: surge.sched.TaskProfile
		10	=>	7
		11	=>	3
		12	=>	6
		13	=>	9
		14	=>	5
		18	=>	4
		23	=>	1
		24	=>	13
		28	=>	12
		33	=>	11
		34	=>	14
		38	=>	10
		43	=>	8
		44	=>	2

Class: public abstract annotation surge.server.AsyncTick	NameNotChanged
	Source: "AsyncTick.java"
	FieldsOf: surge.server.AsyncTick
	MethodsOf: surge.server.AsyncTick
	LineNumbersOf: surge.server.AsyncTick

Class: public surge.server.CoreTickThread	NameNotChanged
	Source: "CoreTickThread.java"
	FieldsOf: surge.server.CoreTickThread
	MethodsOf: surge.server.CoreTickThread
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void run() 	NameNotChanged
	LineNumbersOf: surge.server.CoreTickThread
		9	=>	5
		11	=>	8
		12	=>	1
		17	=>	3
		19	=>	2 and 4
		23	=>	12
		25	=>	6 and 11
		27	=>	14
		29	=>	7
		31	=>	13
		33	=>	10
		36	=>	9

Class: public abstract surge.server.MemoryMonitor	NameNotChanged
	Source: "MemoryMonitor.java"
	FieldsOf: surge.server.MemoryMonitor
		private long allocated	=>	f
		private long collected	=>	g
		private long collections	=>	h
		private long lastMemoryUsed	=>	d
		private long mah	=>	m
		private long mahs	=>	n
		private long memoryAllocatedPerTick	=>	j
		private long memoryCollectedPerTick	=>	k
		private long memoryFree	=>	a
		private long memoryFullyAllocatedPerTick	=>	l
		private long memoryMax	=>	c
		private long memoryUsed	=>	b
		private long memoryUsedAfterGC	=>	e
		private long sms	=>	i
	MethodsOf: surge.server.MemoryMonitor
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public long getAllocated() 	NameNotChanged
		public long getCollected() 	NameNotChanged
		public long getCollections() 	NameNotChanged
		public long getLastMemoryUsed() 	NameNotChanged
		public long getMah() 	NameNotChanged
		public long getMahs() 	NameNotChanged
		public long getMemoryAllocatedPerTick() 	NameNotChanged
		public long getMemoryCollectedPerTick() 	NameNotChanged
		public long getMemoryFree() 	NameNotChanged
		public long getMemoryFullyAllocatedPerTick() 	NameNotChanged
		public long getMemoryMax() 	NameNotChanged
		public long getMemoryUsed() 	NameNotChanged
		public long getMemoryUsedAfterGC() 	NameNotChanged
		public long getSms() 	NameNotChanged
		public abstract void onAllocationSet() 	NameNotChanged
		public void run() 	NameNotChanged
	LineNumbersOf: surge.server.MemoryMonitor
		23	=>	2
		24	=>	16
		25	=>	43
		26	=>	32
		27	=>	52
		28	=>	4
		29	=>	27
		30	=>	17
		31	=>	3
		32	=>	44
		33	=>	51
		34	=>	7
		35	=>	30
		36	=>	22
		37	=>	10
		38	=>	13
		39	=>	33
		46	=>	8
		48	=>	37
		49	=>	41
		50	=>	23
		52	=>	12
		54	=>	14
		57	=>	36
		59	=>	15
		60	=>	39
		65	=>	53
		66	=>	11
		67	=>	18
		70	=>	48
		72	=>	20
		74	=>	38
		75	=>	21
		76	=>	1
		77	=>	35
		78	=>	34
		79	=>	40
		80	=>	29
		83	=>	49
		87	=>	45
		92	=>	46
		97	=>	26
		102	=>	24
		107	=>	19
		112	=>	50
		117	=>	31
		122	=>	9
		127	=>	28
		132	=>	6
		137	=>	25
		142	=>	47
		147	=>	5
		152	=>	42

Class: public surge.server.SuperSampler	NameNotChanged
	Source: "SuperSampler.java"
	FieldsOf: surge.server.SuperSampler
		public static boolean a	=>	z
		private int chunksLoaded	=>	u
		private int chunksUnloaded	=>	v
		private double leftoverTickTime	=>	k
		private surge.math.Average mahL	=>	c
		private long mahs	=>	o
		private long memoryAllocated	=>	m
		private long memoryCollected	=>	n
		private surge.server.MemoryMonitor memoryMonitor	=>	y
		private long memoryUse	=>	l
		private boolean running	=>	h
		private double tickTime	=>	f
		private surge.math.Average tickTimeL	=>	b
		private double tickTimeRaw	=>	g
		private double tickUtilization	=>	j
		private double tickUtilizationRaw	=>	i
		private double ticksPerSecond	=>	d
		private surge.math.Average ticksPerSecondL	=>	a
		private double ticksPerSecondRaw	=>	e
		private int totalChunks	=>	p
		private int totalDrops	=>	r
		private int totalEntities	=>	q
		private int totalLiving	=>	t
		private int totalTiles	=>	s
		private surge.server.TPSMonitor tpsMonitor	=>	x
		private surge.server.WorldMonitor worldMonitor	=>	w
	MethodsOf: surge.server.SuperSampler
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		static synthetic void access$0(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic void access$1(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic double access$10(surge.server.SuperSampler) 	NameNotChanged
		static synthetic surge.math.Average access$11(surge.server.SuperSampler) 	NameNotChanged
		static synthetic double access$12(surge.server.SuperSampler) 	NameNotChanged
		static synthetic void access$13(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic void access$14(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic void access$15(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic double access$16(surge.server.SuperSampler) 	NameNotChanged
		static synthetic void access$17(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic double access$18(surge.server.SuperSampler) 	NameNotChanged
		static synthetic void access$19(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic void access$2(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic void access$20(surge.server.SuperSampler, long) 	NameNotChanged
		static synthetic void access$21(surge.server.SuperSampler, long) 	NameNotChanged
		static synthetic void access$22(surge.server.SuperSampler, long) 	NameNotChanged
		static synthetic surge.math.Average access$23(surge.server.SuperSampler) 	NameNotChanged
		static synthetic void access$24(surge.server.SuperSampler, long) 	NameNotChanged
		static synthetic void access$3(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic void access$4(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic void access$5(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic void access$6(surge.server.SuperSampler, int) 	NameNotChanged
		static synthetic void access$7(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic void access$8(surge.server.SuperSampler, double) 	NameNotChanged
		static synthetic surge.math.Average access$9(surge.server.SuperSampler) 	NameNotChanged
		public int getChunksLoaded() 	NameNotChanged
		public int getChunksUnloaded() 	NameNotChanged
		public double getLeftoverTickTime() 	NameNotChanged
		public surge.math.Average getMahL() 	NameNotChanged
		public long getMahs() 	NameNotChanged
		public long getMemoryAllocated() 	NameNotChanged
		public long getMemoryCollected() 	NameNotChanged
		public surge.server.MemoryMonitor getMemoryMonitor() 	NameNotChanged
		public long getMemoryUse() 	NameNotChanged
		public java.lang.String getTickName() 	NameNotChanged
		public double getTickTime() 	NameNotChanged
		public surge.math.Average getTickTimeL() 	NameNotChanged
		public double getTickTimeRaw() 	NameNotChanged
		public double getTickUtilization() 	NameNotChanged
		public double getTickUtilizationRaw() 	NameNotChanged
		public double getTicksPerSecond() 	NameNotChanged
		public surge.math.Average getTicksPerSecondL() 	NameNotChanged
		public double getTicksPerSecondRaw() 	NameNotChanged
		public int getTotalChunks() 	NameNotChanged
		public int getTotalDrops() 	NameNotChanged
		public int getTotalEntities() 	NameNotChanged
		public int getTotalLiving() 	NameNotChanged
		public int getTotalTiles() 	NameNotChanged
		public surge.server.TPSMonitor getTpsMonitor() 	NameNotChanged
		public surge.server.WorldMonitor getWorldMonitor() 	NameNotChanged
		public boolean isRunning() 	NameNotChanged
		public void onTick() 	NameNotChanged
		public void setChunksLoaded(int) 	NameNotChanged
		public void setChunksUnloaded(int) 	NameNotChanged
		public void setLeftoverTickTime(double) 	NameNotChanged
		public void setMahL(surge.math.Average) 	NameNotChanged
		public void setMahs(long) 	NameNotChanged
		public void setMemoryAllocated(long) 	NameNotChanged
		public void setMemoryCollected(long) 	NameNotChanged
		public void setMemoryMonitor(surge.server.MemoryMonitor) 	NameNotChanged
		public void setMemoryUse(long) 	NameNotChanged
		public void setRunning(boolean) 	NameNotChanged
		public void setTickTime(double) 	NameNotChanged
		public void setTickTimeL(surge.math.Average) 	NameNotChanged
		public void setTickTimeRaw(double) 	NameNotChanged
		public void setTickUtilization(double) 	NameNotChanged
		public void setTickUtilizationRaw(double) 	NameNotChanged
		public void setTicksPerSecond(double) 	NameNotChanged
		public void setTicksPerSecondL(surge.math.Average) 	NameNotChanged
		public void setTicksPerSecondRaw(double) 	NameNotChanged
		public void setTotalChunks(int) 	NameNotChanged
		public void setTotalDrops(int) 	NameNotChanged
		public void setTotalEntities(int) 	NameNotChanged
		public void setTotalLiving(int) 	NameNotChanged
		public void setTotalTiles(int) 	NameNotChanged
		public void setTpsMonitor(surge.server.TPSMonitor) 	NameNotChanged
		public void setWorldMonitor(surge.server.WorldMonitor) 	NameNotChanged
		public void start() 	NameNotChanged
		public void stop() 	NameNotChanged
	LineNumbersOf: surge.server.SuperSampler
		11	=>	53
		12	=>	35
		13	=>	65
		14	=>	81
		15	=>	32 and 73
		16	=>	43 and 62
		17	=>	8 and 96
		19	=>	2
		20	=>	88 and 130
		21	=>	139
		22	=>	113
		23	=>	70
		24	=>	97
		25	=>	89
		26	=>	52
		27	=>	41
		28	=>	57
		29	=>	27
		30	=>	125
		31	=>	12 and 134
		32	=>	28 and 75
		37	=>	71
		39	=>	3
		40	=>	144
		41	=>	122
		42	=>	110
		43	=>	87
		44	=>	39
		45	=>	55
		46	=>	109
		47	=>	129
		48	=>	132
		49	=>	64
		50	=>	34
		51	=>	19
		52	=>	14
		53	=>	61
		54	=>	120
		55	=>	86
		56	=>	128
		57	=>	93
		58	=>	69
		59	=>	118
		61	=>	108
		76	=>	101
		93	=>	38
		105	=>	142
		109	=>	104
		110	=>	21
		111	=>	111
		112	=>	46
		113	=>	83
		114	=>	116
		118	=>	42
		119	=>	4
		120	=>	103
		121	=>	7
		122	=>	124
		123	=>	30
		128	=>	60
		130	=>	45
		132	=>	16
		137	=>	107
		142	=>	126
		147	=>	99
		152	=>	10
		157	=>	138
		162	=>	106
		167	=>	117
		172	=>	22
		177	=>	137
		182	=>	123
		187	=>	131
		192	=>	26
		197	=>	78
		202	=>	85
		207	=>	51
		212	=>	100
		217	=>	91
		222	=>	114
		227	=>	5
		232	=>	82
		237	=>	20
		242	=>	54
		247	=>	84
		252	=>	9
		257	=>	29
		262	=>	24
		267	=>	36
		268	=>	72
		272	=>	37
		273	=>	49
		277	=>	140
		278	=>	92
		282	=>	76
		283	=>	80
		287	=>	98
		288	=>	67
		292	=>	135
		293	=>	127
		297	=>	47
		298	=>	136
		302	=>	121
		303	=>	79
		307	=>	119
		308	=>	105
		312	=>	48
		313	=>	74
		317	=>	112
		318	=>	133
		322	=>	1
		323	=>	141
		327	=>	77
		328	=>	31
		332	=>	44
		333	=>	90
		337	=>	143
		338	=>	11
		342	=>	66
		343	=>	50
		347	=>	94
		348	=>	13
		352	=>	63
		353	=>	58
		357	=>	40
		358	=>	33
		362	=>	68
		363	=>	102
		367	=>	95
		368	=>	56
		372	=>	59
		373	=>	23
		377	=>	18
		378	=>	15
		382	=>	115
		383	=>	25
		387	=>	17
		388	=>	6

Class: surge.server.SuperSampler$1	NameNotChanged
	Source: "SuperSampler.java"
	FieldsOf: surge.server.SuperSampler$1
		final synthetic surge.server.SuperSampler this$0	NameNotChanged
	MethodsOf: surge.server.SuperSampler$1
		public void updated(int, int, int, int, int, int, int) 	NameNotChanged
	LineNumbersOf: surge.server.SuperSampler$1
		1	=>	2
		61	=>	7
		66	=>	3
		67	=>	6
		68	=>	1
		69	=>	8
		70	=>	9
		71	=>	5
		72	=>	10
		73	=>	4

Class: surge.server.SuperSampler$2	NameNotChanged
	Source: "SuperSampler.java"
	FieldsOf: surge.server.SuperSampler$2
		final synthetic surge.server.SuperSampler this$0	NameNotChanged
	MethodsOf: surge.server.SuperSampler$2
		public void onTicked() 	NameNotChanged
	LineNumbersOf: surge.server.SuperSampler$2
		1	=>	11
		76	=>	10
		81	=>	3
		82	=>	7
		83	=>	8
		84	=>	5
		85	=>	1
		86	=>	12
		87	=>	2
		88	=>	4
		89	=>	9
		90	=>	6

Class: surge.server.SuperSampler$3	NameNotChanged
	Source: "SuperSampler.java"
	FieldsOf: surge.server.SuperSampler$3
		final synthetic surge.server.SuperSampler this$0	NameNotChanged
	MethodsOf: surge.server.SuperSampler$3
		public void onAllocationSet() 	NameNotChanged
	LineNumbersOf: surge.server.SuperSampler$3
		1	=>	1
		93	=>	7
		98	=>	3
		99	=>	6
		100	=>	2
		101	=>	8
		102	=>	5
		103	=>	4

Class: public abstract surge.server.TPSMonitor	NameNotChanged
	Source: "TPSMonitor.java"
	FieldsOf: surge.server.TPSMonitor
		private double actualTickTimeMS	=>	g
		private java.lang.Thread$State lastState	=>	f
		private long lastTick	=>	i
		private double ltt	=>	h
		private double rawTicksPerSecond	=>	b
		private surge.math.Profiler tickProfiler	=>	c
		private double tickTimeMS	=>	a
		private surge.math.Profiler tickTimeProfiler	=>	d
		private boolean ticked	=>	e
	MethodsOf: surge.server.TPSMonitor
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public double getActualTickTimeMS() 	NameNotChanged
		public java.lang.Thread$State getLastState() 	NameNotChanged
		public double getRawTicksPerSecond() 	NameNotChanged
		public surge.math.Profiler getTickProfiler() 	NameNotChanged
		public double getTickTimeMS() 	NameNotChanged
		public surge.math.Profiler getTickTimeProfiler() 	NameNotChanged
		public boolean isTicked() 	NameNotChanged
		public void markTick() 	NameNotChanged
		public abstract void onTicked() 	NameNotChanged
		private void processState(java.lang.Thread$State) 	=>	a
		public void run() 	NameNotChanged
	LineNumbersOf: surge.server.TPSMonitor
		19	=>	20
		21	=>	1
		22	=>	5
		23	=>	51
		24	=>	40
		25	=>	28
		26	=>	32
		27	=>	4
		28	=>	56
		29	=>	58
		30	=>	39
		31	=>	55
		32	=>	30
		39	=>	24 and 26
		41	=>	15
		43	=>	53
		51	=>	38
		53	=>	2
		54	=>	34
		55	=>	19
		56	=>	35
		57	=>	47
		58	=>	49
		59	=>	46
		60	=>	7
		61	=>	25
		62	=>	50
		63	=>	45
		64	=>	10
		66	=>	36
		68	=>	17
		69	=>	27
		70	=>	18
		73	=>	14
		77	=>	9
		79	=>	22
		82	=>	21
		84	=>	57
		87	=>	54
		89	=>	16
		92	=>	13
		94	=>	41
		95	=>	33
		96	=>	48
		99	=>	3
		101	=>	12
		104	=>	52
		105	=>	44
		109	=>	37
		114	=>	6
		119	=>	23
		124	=>	31
		129	=>	8
		130	=>	43
		134	=>	11
		139	=>	29
		144	=>	42

Class: public abstract surge.server.WorldMonitor	NameNotChanged
	Source: "WorldMonitor.java"
	FieldsOf: surge.server.WorldMonitor
		private boolean chunksChanged	=>	a
		private int chunksLoaded	=>	l
		private int chunksUnloaded	=>	m
		private boolean dropChanged	=>	b
		private boolean livingChanged	=>	d
		private long ms	=>	n
		private boolean tileChanged	=>	c
		private boolean totalChanged	=>	e
		private int totalChunks	=>	g
		private int totalDrops	=>	h
		private int totalEntities	=>	k
		private int totalLiving	=>	j
		private int totalTiles	=>	i
		private boolean updated	=>	f
	MethodsOf: surge.server.WorldMonitor
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		private void doUpdate() 	=>	a
		public void on(org.bukkit.event.block.BlockBreakEvent) 	NameNotChanged
		public void on(org.bukkit.event.block.BlockPlaceEvent) 	NameNotChanged
		public void on(org.bukkit.event.entity.EntityDeathEvent) 	NameNotChanged
		public void on(org.bukkit.event.entity.EntityPickupItemEvent) 	NameNotChanged
		public void on(org.bukkit.event.entity.EntitySpawnEvent) 	NameNotChanged
		public void on(org.bukkit.event.player.PlayerDropItemEvent) 	NameNotChanged
		public void on(org.bukkit.event.player.PlayerPickupItemEvent) 	NameNotChanged
		public void on(org.bukkit.event.world.ChunkLoadEvent) 	NameNotChanged
		public void on(org.bukkit.event.world.ChunkUnloadEvent) 	NameNotChanged
		public void run() 	NameNotChanged
		private void sample() 	=>	b
		private void sampleChunkCount() 	=>	g
		private void sampleDropCount() 	=>	f
		private void sampleLivingCount() 	=>	d
		private void sampleTileCount() 	=>	e
		private void sampleTotalCount() 	=>	c
		public abstract void updated(int, int, int, int, int, int, int) 	NameNotChanged
	LineNumbersOf: surge.server.WorldMonitor
		25	=>	43
		26	=>	80
		27	=>	73
		28	=>	5
		29	=>	1
		30	=>	2
		31	=>	46
		32	=>	42
		33	=>	76
		34	=>	55
		35	=>	95
		36	=>	99
		37	=>	35
		38	=>	62
		41	=>	53
		42	=>	105
		43	=>	61
		44	=>	19
		49	=>	15
		53	=>	88
		54	=>	31
		57	=>	110
		60	=>	30 and 39
		63	=>	36
		64	=>	9
		71	=>	13
		72	=>	94
		73	=>	106
		74	=>	67
		75	=>	26
		76	=>	87
		81	=>	108
		82	=>	22
		83	=>	58
		84	=>	107
		85	=>	41
		86	=>	69
		91	=>	59
		92	=>	12
		97	=>	83
		98	=>	89
		103	=>	91
		104	=>	33
		109	=>	7
		110	=>	81
		115	=>	23
		116	=>	38
		121	=>	45
		122	=>	78
		127	=>	75
		128	=>	66
		132	=>	10
		133	=>	40
		137	=>	8
		139	=>	72
		142	=>	11
		144	=>	20
		145	=>	70
		146	=>	3
		149	=>	101
		151	=>	85
		152	=>	79
		153	=>	16
		156	=>	54
		158	=>	29
		159	=>	84
		160	=>	92
		163	=>	48
		165	=>	93
		166	=>	50
		167	=>	68
		170	=>	97
		172	=>	18
		173	=>	77
		174	=>	96
		177	=>	56
		179	=>	47
		181	=>	63
		183	=>	98
		184	=>	71
		185	=>	37
		188	=>	103
		192	=>	44
		194	=>	102
		196	=>	52
		197	=>	109
		198	=>	104
		202	=>	25
		204	=>	51
		206	=>	24
		207	=>	64
		208	=>	82
		212	=>	90
		214	=>	60
		216	=>	28 and 34
		218	=>	32
		220	=>	17
		221	=>	57
		225	=>	86
		227	=>	6
		229	=>	100
		230	=>	65
		231	=>	49
		235	=>	21
		237	=>	74
		239	=>	14
		240	=>	27
		241	=>	4

Class: public surge.text.PhantomSpinner	NameNotChanged
	Source: "PhantomSpinner.java"
	FieldsOf: surge.text.PhantomSpinner
		private surge.text.ProgressSpinner c	=>	b
		private surge.text.ProgressSpinner s	=>	a
	MethodsOf: surge.text.PhantomSpinner
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.text.PhantomSpinner
		15	=>	4
		17	=>	5
		18	=>	2
		19	=>	3
		24	=>	1

Class: public surge.text.ProgressSpinner	NameNotChanged
	Source: "ProgressSpinner.java"
	FieldsOf: surge.text.ProgressSpinner
		public static final surge.text.ProgressSpinner CIRCLES	NameNotChanged
		public static final surge.text.ProgressSpinner DEFAULT	NameNotChanged
		public static final surge.text.ProgressSpinner MERGERS	NameNotChanged
		public static final surge.text.ProgressSpinner NETWORK	NameNotChanged
		public static final surge.text.ProgressSpinner RANDOMS	NameNotChanged
		public static boolean a	=>	c
		private java.lang.String[] chars	=>	a
		private int index	=>	b
	MethodsOf: surge.text.ProgressSpinner
		public java.lang.String[] getChars() 	NameNotChanged
		public int getIndex() 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.text.ProgressSpinner
		25	=>	10
		27	=>	2
		28	=>	5
		29	=>	16
		36	=>	9
		37	=>	12
		45	=>	1
		47	=>	6
		48	=>	17
		52	=>	15
		55	=>	11
		60	=>	13
		65	=>	7
		70	=>	14
		71	=>	8
		72	=>	4
		73	=>	18
		74	=>	19
		75	=>	3

Class: public abstract surge.util.Adapter	NameNotChanged
	Source: "Adapter.java"
	FieldsOf: surge.util.Adapter
	MethodsOf: surge.util.Adapter
		public abstract java.lang.Object adapt(java.lang.Object) 	NameNotChanged
		public abstract java.lang.Object onAdapt(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.util.Adapter

Class: public abstract annotation surge.util.Anchor	NameNotChanged
	Source: "Anchor.java"
	FieldsOf: surge.util.Anchor
	MethodsOf: surge.util.Anchor
		public abstract int value() 	NameNotChanged
	LineNumbersOf: surge.util.Anchor

Class: public surge.util.Area	NameNotChanged
	Source: "Area.java"
	FieldsOf: surge.util.Area
		private org.bukkit.Location location	=>	a
		private java.lang.Double radius	=>	b
	MethodsOf: surge.util.Area
		public java.lang.Double distance(org.bukkit.Location) 	NameNotChanged
		public org.bukkit.Location getLocation() 	NameNotChanged
		public org.bukkit.entity.Entity[] getNearbyEntities() 	NameNotChanged
		public org.bukkit.entity.Entity[] getNearbyEntities(java.lang.Class) 	NameNotChanged
		public org.bukkit.entity.Entity[] getNearbyEntities(org.bukkit.entity.EntityType) 	NameNotChanged
		public org.bukkit.entity.Player[] getNearbyPlayers() 	NameNotChanged
		public java.lang.Double getRadius() 	NameNotChanged
		public boolean hasEntities() 	NameNotChanged
		public boolean isWithin(org.bukkit.Location) 	NameNotChanged
		public org.bukkit.Location random() 	NameNotChanged
		public void setLocation(org.bukkit.Location) 	NameNotChanged
		public void setRadius(java.lang.Double) 	NameNotChanged
		public java.lang.Double slowDistance(org.bukkit.Location) 	NameNotChanged
		public surge.util.Cuboid toCuboid() 	NameNotChanged
		public static boolean within(org.bukkit.Location, org.bukkit.Location, double) 	NameNotChanged
	LineNumbersOf: surge.util.Area
		26	=>	57
		39	=>	17
		40	=>	19
		41	=>	28
		42	=>	18
		46	=>	55
		59	=>	37
		60	=>	41
		61	=>	49
		62	=>	45
		76	=>	24
		77	=>	10
		79	=>	12 and 59
		81	=>	25
		84	=>	62
		98	=>	60
		110	=>	43
		120	=>	38
		132	=>	34
		134	=>	11
		136	=>	20
		138	=>	2
		140	=>	51
		142	=>	29
		154	=>	32
		156	=>	8
		158	=>	48
		160	=>	7
		162	=>	15
		164	=>	31
		177	=>	27
		178	=>	42
		180	=>	35 and 44
		182	=>	23 and 56
		184	=>	13
		186	=>	9 and 21
		188	=>	14
		190	=>	1
		196	=>	52
		199	=>	61
		201	=>	30
		212	=>	16
		214	=>	3 and 22
		216	=>	54
		218	=>	53
		222	=>	26
		232	=>	40
		243	=>	47
		244	=>	4
		253	=>	50
		264	=>	58
		265	=>	36
		274	=>	33
		275	=>	6
		276	=>	5
		277	=>	46
		279	=>	39

Class: public final enum surge.util.Axis	NameNotChanged
	Source: "Axis.java"
	FieldsOf: surge.util.Axis
		private static final synthetic surge.util.Axis[] $VALUES	=>	d
		public static final enum surge.util.Axis X	NameNotChanged
		public static final enum surge.util.Axis Y	NameNotChanged
		public static final enum surge.util.Axis Z	NameNotChanged
		private int x	=>	a
		private int y	=>	b
		private int z	=>	c
	MethodsOf: surge.util.Axis
		public org.bukkit.util.Vector negative() 	NameNotChanged
		public org.bukkit.util.Vector positive() 	NameNotChanged
		public static surge.util.Axis valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.Axis[] values() 	NameNotChanged
	LineNumbersOf: surge.util.Axis
		5	=>	1, 9 and 13
		7	=>	6
		8	=>	12
		9	=>	5
		16	=>	10
		17	=>	7
		18	=>	11
		19	=>	3
		20	=>	2
		24	=>	4
		29	=>	8

Class: public final enum surge.util.BlastResistance	NameNotChanged
	Source: "BlastResistance.java"
	FieldsOf: surge.util.BlastResistance
		private static final synthetic surge.util.BlastResistance[] $VALUES	=>	b
		public static final enum surge.util.BlastResistance ACACIA_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance ACACIA_FENCE	NameNotChanged
		public static final enum surge.util.BlastResistance ACACIA_FENCE_GATE	NameNotChanged
		public static final enum surge.util.BlastResistance ACACIA_WOOD_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance ACTIVATOR_RAIL	NameNotChanged
		public static final enum surge.util.BlastResistance ANVIL	NameNotChanged
		public static final enum surge.util.BlastResistance BANNER	NameNotChanged
		public static final enum surge.util.BlastResistance BARRIER	NameNotChanged
		public static final enum surge.util.BlastResistance BEACON	NameNotChanged
		public static final enum surge.util.BlastResistance BEDROCK	NameNotChanged
		public static final enum surge.util.BlastResistance BED_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance BIRCH_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance BIRCH_FENCE	NameNotChanged
		public static final enum surge.util.BlastResistance BIRCH_FENCE_GATE	NameNotChanged
		public static final enum surge.util.BlastResistance BIRCH_WOOD_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance BOOKSHELF	NameNotChanged
		public static final enum surge.util.BlastResistance BREWING_STAND	NameNotChanged
		public static final enum surge.util.BlastResistance BRICK	NameNotChanged
		public static final enum surge.util.BlastResistance BRICK_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance BURNING_FURNACE	NameNotChanged
		public static final enum surge.util.BlastResistance CACTUS	NameNotChanged
		public static final enum surge.util.BlastResistance CAKE_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance CAULDRON	NameNotChanged
		public static final enum surge.util.BlastResistance CHEST	NameNotChanged
		public static final enum surge.util.BlastResistance CLAY	NameNotChanged
		public static final enum surge.util.BlastResistance COAL_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance COAL_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance COBBLESTONE_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance COCOA	NameNotChanged
		public static final enum surge.util.BlastResistance COMMAND	NameNotChanged
		public static final enum surge.util.BlastResistance DARK_OAK_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance DARK_OAK_FENCE	NameNotChanged
		public static final enum surge.util.BlastResistance DARK_OAK_FENCE_GATE	NameNotChanged
		public static final enum surge.util.BlastResistance DARK_OAK_WOOD_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance DAYLIGHT_DETECTOR	NameNotChanged
		public static final enum surge.util.BlastResistance DAYLIGHT_DETECTOR_INVERTED	NameNotChanged
		public static final enum surge.util.BlastResistance DETECTOR_RAIL	NameNotChanged
		public static final enum surge.util.BlastResistance DIAMOND_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance DIAMOND_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance DIRT	NameNotChanged
		public static final enum surge.util.BlastResistance DISPENSER	NameNotChanged
		public static final enum surge.util.BlastResistance DOUBLE_STONE_SLAB2	NameNotChanged
		public static final enum surge.util.BlastResistance DRAGON_EGG	NameNotChanged
		public static final enum surge.util.BlastResistance DROPPER	NameNotChanged
		public static final enum surge.util.BlastResistance EMERALD_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance EMERALD_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance ENCHANTMENT_TABLE	NameNotChanged
		public static final enum surge.util.BlastResistance ENDER_CHEST	NameNotChanged
		public static final enum surge.util.BlastResistance ENDER_PORTAL	NameNotChanged
		public static final enum surge.util.BlastResistance ENDER_PORTAL_FRAME	NameNotChanged
		public static final enum surge.util.BlastResistance ENDER_STONE	NameNotChanged
		public static final enum surge.util.BlastResistance FENCE	NameNotChanged
		public static final enum surge.util.BlastResistance FENCE_GATE	NameNotChanged
		public static final enum surge.util.BlastResistance FURNACE	NameNotChanged
		public static final enum surge.util.BlastResistance GLASS	NameNotChanged
		public static final enum surge.util.BlastResistance GLOWSTONE	NameNotChanged
		public static final enum surge.util.BlastResistance GOLD_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance GOLD_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance GOLD_PLATE	NameNotChanged
		public static final enum surge.util.BlastResistance GRASS	NameNotChanged
		public static final enum surge.util.BlastResistance GRAVEL	NameNotChanged
		public static final enum surge.util.BlastResistance HARD_CLAY	NameNotChanged
		public static final enum surge.util.BlastResistance HOPPER	NameNotChanged
		public static final enum surge.util.BlastResistance HUGE_MUSHROOM_1	NameNotChanged
		public static final enum surge.util.BlastResistance HUGE_MUSHROOM_2	NameNotChanged
		public static final enum surge.util.BlastResistance ICE	NameNotChanged
		public static final enum surge.util.BlastResistance IRON_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance IRON_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance IRON_DOOR_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance IRON_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance IRON_PLATE	NameNotChanged
		public static final enum surge.util.BlastResistance IRON_TRAPDOOR	NameNotChanged
		public static final enum surge.util.BlastResistance JACK_O_LANTERN	NameNotChanged
		public static final enum surge.util.BlastResistance JUNGLE_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance JUNGLE_FENCE	NameNotChanged
		public static final enum surge.util.BlastResistance JUNGLE_FENCE_GATE	NameNotChanged
		public static final enum surge.util.BlastResistance JUNGLE_WOOD_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance LADDER	NameNotChanged
		public static final enum surge.util.BlastResistance LAPIS_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance LAPIS_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance LAVA	NameNotChanged
		public static final enum surge.util.BlastResistance LEAVES	NameNotChanged
		public static final enum surge.util.BlastResistance LEAVES_2	NameNotChanged
		public static final enum surge.util.BlastResistance LEVER	NameNotChanged
		public static final enum surge.util.BlastResistance LOG	NameNotChanged
		public static final enum surge.util.BlastResistance LOG_2	NameNotChanged
		public static final enum surge.util.BlastResistance MELON_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance MOB_SPAWNER	NameNotChanged
		public static final enum surge.util.BlastResistance MONSTER_EGG	NameNotChanged
		public static final enum surge.util.BlastResistance MYCEL	NameNotChanged
		public static final enum surge.util.BlastResistance NETHERRACK	NameNotChanged
		public static final enum surge.util.BlastResistance NETHER_BRICK_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance NOTE_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance OBSIDIAN	NameNotChanged
		public static final enum surge.util.BlastResistance PACKED_ICE	NameNotChanged
		public static final enum surge.util.BlastResistance PISTON_BASE	NameNotChanged
		public static final enum surge.util.BlastResistance PISTON_EXTENSION	NameNotChanged
		public static final enum surge.util.BlastResistance PISTON_MOVING_PIECE	NameNotChanged
		public static final enum surge.util.BlastResistance PISTON_STICKY_BASE	NameNotChanged
		public static final enum surge.util.BlastResistance POWERED_RAIL	NameNotChanged
		public static final enum surge.util.BlastResistance PUMPKIN	NameNotChanged
		public static final enum surge.util.BlastResistance QUARTZ_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance QUARTZ_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance QUARTZ_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance RAILS	NameNotChanged
		public static final enum surge.util.BlastResistance REDSTONE_BLOCK	NameNotChanged
		public static final enum surge.util.BlastResistance REDSTONE_LAMP_OFF	NameNotChanged
		public static final enum surge.util.BlastResistance REDSTONE_LAMP_ON	NameNotChanged
		public static final enum surge.util.BlastResistance REDSTONE_ORE	NameNotChanged
		public static final enum surge.util.BlastResistance RED_SANDSTONE	NameNotChanged
		public static final enum surge.util.BlastResistance RED_SANDSTONE_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance SAND	NameNotChanged
		public static final enum surge.util.BlastResistance SANDSTONE	NameNotChanged
		public static final enum surge.util.BlastResistance SANDSTONE_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance SEA_LANTERN	NameNotChanged
		public static final enum surge.util.BlastResistance SIGN	NameNotChanged
		public static final enum surge.util.BlastResistance SIGN_POST	NameNotChanged
		public static final enum surge.util.BlastResistance SKULL	NameNotChanged
		public static final enum surge.util.BlastResistance SMOOTH_BRICK	NameNotChanged
		public static final enum surge.util.BlastResistance SMOOTH_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance SNOW	NameNotChanged
		public static final enum surge.util.BlastResistance SOUL_SAND	NameNotChanged
		public static final enum surge.util.BlastResistance SPONGE	NameNotChanged
		public static final enum surge.util.BlastResistance SPRUCE_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance SPRUCE_FENCE	NameNotChanged
		public static final enum surge.util.BlastResistance SPRUCE_FENCE_GATE	NameNotChanged
		public static final enum surge.util.BlastResistance SPRUCE_WOOD_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance STAINED_GLASS	NameNotChanged
		public static final enum surge.util.BlastResistance STAINED_GLASS_PANE	NameNotChanged
		public static final enum surge.util.BlastResistance STANDING_BANNER	NameNotChanged
		public static final enum surge.util.BlastResistance STATIONARY_WATER	NameNotChanged
		public static final enum surge.util.BlastResistance STONE	NameNotChanged
		public static final enum surge.util.BlastResistance STONE_BUTTON	NameNotChanged
		public static final enum surge.util.BlastResistance STONE_PLATE	NameNotChanged
		public static final enum surge.util.BlastResistance STONE_SLAB2	NameNotChanged
		public static final enum surge.util.BlastResistance THIN_GLASS	NameNotChanged
		public static final enum surge.util.BlastResistance TRAPPED_CHEST	NameNotChanged
		public static final enum surge.util.BlastResistance TRAP_DOOR	NameNotChanged
		public static final enum surge.util.BlastResistance WALL_BANNER	NameNotChanged
		public static final enum surge.util.BlastResistance WALL_SIGN	NameNotChanged
		public static final enum surge.util.BlastResistance WATER	NameNotChanged
		public static final enum surge.util.BlastResistance WEB	NameNotChanged
		public static final enum surge.util.BlastResistance WOOD	NameNotChanged
		public static final enum surge.util.BlastResistance WOOD_BUTTON	NameNotChanged
		public static final enum surge.util.BlastResistance WOOD_PLATE	NameNotChanged
		public static final enum surge.util.BlastResistance WOOD_STAIRS	NameNotChanged
		public static final enum surge.util.BlastResistance WOOL	NameNotChanged
		public static final enum surge.util.BlastResistance WORKBENCH	NameNotChanged
		private int br	=>	a
	MethodsOf: surge.util.BlastResistance
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static int get(org.bukkit.Material) 	NameNotChanged
		public int getBlastResistance() 	NameNotChanged
		public static surge.util.BlastResistance valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.BlastResistance[] values() 	NameNotChanged
	LineNumbersOf: surge.util.BlastResistance
		10	=>	42, 50 and 117
		12	=>	88
		13	=>	68
		14	=>	145
		15	=>	54
		16	=>	63
		17	=>	25
		18	=>	3
		19	=>	140
		20	=>	80
		21	=>	126
		22	=>	79
		23	=>	12
		24	=>	13
		25	=>	118
		26	=>	30
		27	=>	159
		28	=>	46
		29	=>	33
		30	=>	40
		31	=>	26
		32	=>	90
		33	=>	59
		34	=>	9
		35	=>	89
		36	=>	78
		37	=>	131
		38	=>	103
		39	=>	132
		40	=>	129
		41	=>	156
		42	=>	127
		43	=>	108
		44	=>	43
		45	=>	69
		46	=>	160
		47	=>	22
		48	=>	158
		49	=>	39
		50	=>	106
		51	=>	5
		52	=>	114
		53	=>	154
		54	=>	85
		55	=>	28
		56	=>	17
		57	=>	149
		58	=>	113
		59	=>	153
		60	=>	137
		61	=>	95
		62	=>	99
		63	=>	107
		64	=>	71
		65	=>	32
		66	=>	92
		67	=>	44
		68	=>	94
		69	=>	109
		70	=>	23
		71	=>	10
		72	=>	58
		73	=>	115
		74	=>	27
		75	=>	49
		76	=>	101
		77	=>	2
		78	=>	102
		79	=>	57
		80	=>	142
		81	=>	55
		82	=>	14
		83	=>	76
		84	=>	122
		85	=>	147
		86	=>	62
		87	=>	98
		88	=>	18
		89	=>	93
		90	=>	4
		91	=>	75
		92	=>	41
		93	=>	150
		94	=>	53
		95	=>	157
		96	=>	155
		97	=>	7
		98	=>	66
		99	=>	138
		100	=>	124
		101	=>	146
		102	=>	139
		103	=>	56
		104	=>	148
		105	=>	83
		106	=>	29
		107	=>	116
		108	=>	121
		109	=>	36
		110	=>	51
		111	=>	134
		112	=>	8
		113	=>	65
		114	=>	72
		115	=>	151
		116	=>	120
		117	=>	135
		118	=>	143
		119	=>	16
		120	=>	128
		121	=>	133
		122	=>	60
		123	=>	61
		124	=>	141
		125	=>	91
		126	=>	136
		127	=>	20
		128	=>	52
		129	=>	81
		130	=>	38
		131	=>	125
		132	=>	111
		133	=>	15
		134	=>	119
		135	=>	100
		136	=>	35
		137	=>	11
		138	=>	73
		139	=>	74
		140	=>	105
		141	=>	97
		142	=>	87
		143	=>	67
		144	=>	104
		145	=>	86
		146	=>	70
		147	=>	130
		148	=>	24
		149	=>	34
		150	=>	47
		151	=>	1
		152	=>	110
		153	=>	21
		154	=>	144
		155	=>	45
		156	=>	152
		157	=>	84
		158	=>	96
		159	=>	112
		164	=>	48
		165	=>	6
		166	=>	77
		170	=>	82
		175	=>	64
		177	=>	31
		182	=>	37
		185	=>	123
		190	=>	19

Class: public surge.util.Blocks	NameNotChanged
	Source: "Blocks.java"
	FieldsOf: surge.util.Blocks
	MethodsOf: surge.util.Blocks
		public static org.bukkit.Location getCenter(org.bukkit.block.Block) 	NameNotChanged
	LineNumbersOf: surge.util.Blocks
		11	=>	1
		22	=>	2

Class: public enum surge.util.C	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C
		private static synthetic int[] $SWITCH_TABLE$surge$util$C	=>	k
		public static final enum surge.util.C AQUA	NameNotChanged
		public static final enum surge.util.C BLACK	NameNotChanged
		public static final enum surge.util.C BLUE	NameNotChanged
		public static final enum surge.util.C BOLD	NameNotChanged
		private static final java.util.Map BY_CHAR	=>	g
		private static final java.util.Map BY_ID	=>	f
		public static final char COLOR_CHAR	NameNotChanged
		public static final enum surge.util.C DARK_AQUA	NameNotChanged
		public static final enum surge.util.C DARK_BLUE	NameNotChanged
		public static final enum surge.util.C DARK_GRAY	NameNotChanged
		public static final enum surge.util.C DARK_GREEN	NameNotChanged
		public static final enum surge.util.C DARK_PURPLE	NameNotChanged
		public static final enum surge.util.C DARK_RED	NameNotChanged
		private static final synthetic surge.util.C[] ENUM$VALUES	=>	l
		public static final enum surge.util.C GOLD	NameNotChanged
		public static final enum surge.util.C GRAY	NameNotChanged
		public static final enum surge.util.C GREEN	NameNotChanged
		public static final enum surge.util.C ITALIC	NameNotChanged
		public static final enum surge.util.C LIGHT_PURPLE	NameNotChanged
		public static final enum surge.util.C MAGIC	NameNotChanged
		public static final enum surge.util.C RED	NameNotChanged
		public static final enum surge.util.C RESET	NameNotChanged
		public static final enum surge.util.C STRIKETHROUGH	NameNotChanged
		private static final java.util.regex.Pattern STRIP_COLOR_PATTERN	=>	a
		public static final enum surge.util.C UNDERLINE	NameNotChanged
		public static final enum surge.util.C WHITE	NameNotChanged
		public static final enum surge.util.C YELLOW	NameNotChanged
		public static int a	=>	m
		private static final java.util.Map chatHexMap	=>	i
		private final char code	=>	c
		private static final java.util.Map dyeChatMap	=>	h
		private static final java.util.Map dyeHexMap	=>	j
		private final int intCode	=>	b
		private final boolean isFormat	=>	d
		private final java.lang.String toString	=>	e
	MethodsOf: surge.util.C
		static synthetic int[] $SWITCH_TABLE$surge$util$C() 	=>	a
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
		public org.bukkit.ChatColor chatColor() 	NameNotChanged
		public static org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) 	NameNotChanged
		public static java.lang.String chatToHex(org.bukkit.ChatColor) 	NameNotChanged
		public org.bukkit.DyeColor dye() 	NameNotChanged
		public static surge.util.C dyeToChat(org.bukkit.DyeColor) 	NameNotChanged
		public static java.lang.String dyeToHex(org.bukkit.DyeColor) 	NameNotChanged
		public static surge.util.C fromItemMeta(byte) 	NameNotChanged
		public static java.lang.String generateColorTable() 	NameNotChanged
		public static surge.util.C getByChar(char) 	NameNotChanged
		public static surge.util.C getByChar(java.lang.String) 	NameNotChanged
		public char getChar() 	NameNotChanged
		public byte getItemMeta() 	NameNotChanged
		public static java.lang.String getLastColors(java.lang.String) 	NameNotChanged
		public java.lang.String hex() 	NameNotChanged
		public static org.bukkit.Color hexToColor(java.lang.String) 	NameNotChanged
		public boolean isColor() 	NameNotChanged
		public boolean isFormat() 	NameNotChanged
		public static org.bukkit.Color rgbToColor(java.lang.String) 	NameNotChanged
		public static java.lang.String stripColor(java.lang.String) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public static java.lang.String translateAlternateColorCodes(char, java.lang.String) 	NameNotChanged
		public static surge.util.C valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.C[] values() 	NameNotChanged
	LineNumbersOf: surge.util.C
		1	=>	77 and 78
		17	=>	141
		19	=>	65
		22	=>	115
		30	=>	110
		33	=>	105
		41	=>	106
		44	=>	202
		52	=>	33
		55	=>	179
		63	=>	131
		66	=>	200
		74	=>	55
		77	=>	68
		85	=>	51
		88	=>	101
		96	=>	133
		99	=>	214
		107	=>	181
		110	=>	27
		118	=>	160
		121	=>	144
		129	=>	229
		132	=>	30
		140	=>	222
		143	=>	169
		151	=>	151
		154	=>	89
		162	=>	194
		165	=>	99
		173	=>	166
		176	=>	102
		184	=>	104
		187	=>	161
		195	=>	177
		198	=>	146
		206	=>	21
		209	=>	109
		217	=>	182
		220	=>	152
		228	=>	61
		231	=>	168
		239	=>	60
		242	=>	12
		251	=>	13
		254	=>	74
		268	=>	204
		274	=>	209
		275	=>	48
		276	=>	17
		277	=>	108
		278	=>	19
		282	=>	118
		283	=>	208
		284	=>	35
		285	=>	135
		286	=>	93
		287	=>	81
		288	=>	219
		289	=>	63
		290	=>	57
		291	=>	107
		292	=>	227
		293	=>	142
		294	=>	86
		295	=>	198
		296	=>	132
		297	=>	121
		298	=>	42
		299	=>	41
		300	=>	153
		301	=>	69
		302	=>	7
		303	=>	197
		304	=>	28
		305	=>	137
		306	=>	16
		307	=>	163
		308	=>	149
		309	=>	201
		310	=>	129
		311	=>	138
		312	=>	20
		313	=>	155
		314	=>	97
		315	=>	184
		316	=>	80
		317	=>	50
		318	=>	37
		319	=>	94
		320	=>	43
		321	=>	203
		322	=>	111
		323	=>	82
		324	=>	36
		325	=>	154
		326	=>	8
		327	=>	10
		328	=>	122
		329	=>	191
		332	=>	22
		334	=>	49
		335	=>	223
		337	=>	199 and 224
		339	=>	2
		340	=>	96
		341	=>	70
		342	=>	4
		343	=>	114
		347	=>	148
		357	=>	116
		363	=>	207
		373	=>	213
		378	=>	162
		388	=>	123
		398	=>	172
		413	=>	143
		416	=>	31
		418	=>	170
		434	=>	29
		435	=>	127
		437	=>	85
		440	=>	212
		442	=>	40
		455	=>	178
		457	=>	103
		460	=>	205
		472	=>	211
		474	=>	130
		477	=>	183
		482	=>	150 and 175
		484	=>	139
		486	=>	195
		490	=>	216
		496	=>	9
		498	=>	11
		501	=>	156
		506	=>	217
		508	=>	206
		511	=>	75
		516	=>	18
		518	=>	176
		521	=>	88
		523	=>	158
		526	=>	3
		528	=>	47
		530	=>	186
		532	=>	145 and 228
		534	=>	32
		537	=>	136
		542	=>	165
		543	=>	159
		545	=>	124
		548	=>	134
		550	=>	73 and 189
		552	=>	193
		555	=>	185
		560	=>	91
		562	=>	59
		564	=>	6 and 72
		566	=>	84
		569	=>	128
		570	=>	15
		571	=>	112 and 192
		573	=>	44
		576	=>	90
		578	=>	196
		588	=>	190
		605	=>	53
		606	=>	25 and 120
		608	=>	220
		610	=>	38
		611	=>	45
		614	=>	87
		619	=>	58 and 167
		621	=>	171
		623	=>	39
		627	=>	52
		632	=>	95
		635	=>	210
		637	=>	54
		639	=>	26
		641	=>	140
		643	=>	76
		645	=>	226
		647	=>	83
		649	=>	164
		651	=>	221
		653	=>	92
		655	=>	1
		657	=>	187
		659	=>	14
		661	=>	218
		663	=>	125
		665	=>	66
		667	=>	157
		669	=>	126
		671	=>	173
		673	=>	56
		675	=>	147
		677	=>	62
		679	=>	34
		692	=>	100
		693	=>	119
		696	=>	98 and 215
		698	=>	225
		699	=>	113
		701	=>	64
		702	=>	67
		704	=>	117
		706	=>	174
		709	=>	24
		711	=>	46
		717	=>	71
		722	=>	5 and 188
		724	=>	79
		725	=>	180
		727	=>	23

Class: enum surge.util.C$1	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$1
	MethodsOf: surge.util.C$1
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$1
		1	=>	1
		23	=>	2
		27	=>	3

Class: enum surge.util.C$10	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$10
	MethodsOf: surge.util.C$10
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$10
		1	=>	2
		122	=>	3
		126	=>	1

Class: enum surge.util.C$11	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$11
	MethodsOf: surge.util.C$11
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$11
		1	=>	2
		133	=>	1
		137	=>	3

Class: enum surge.util.C$12	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$12
	MethodsOf: surge.util.C$12
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$12
		1	=>	2
		144	=>	1
		148	=>	3

Class: enum surge.util.C$13	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$13
	MethodsOf: surge.util.C$13
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$13
		1	=>	2
		155	=>	1
		159	=>	3

Class: enum surge.util.C$14	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$14
	MethodsOf: surge.util.C$14
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$14
		1	=>	2
		166	=>	1
		170	=>	3

Class: enum surge.util.C$15	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$15
	MethodsOf: surge.util.C$15
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$15
		1	=>	1
		177	=>	3
		181	=>	2

Class: enum surge.util.C$16	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$16
	MethodsOf: surge.util.C$16
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$16
		1	=>	3
		188	=>	2
		192	=>	1

Class: enum surge.util.C$17	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$17
	MethodsOf: surge.util.C$17
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$17
		1	=>	3
		199	=>	2
		203	=>	1

Class: enum surge.util.C$18	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$18
	MethodsOf: surge.util.C$18
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$18
		1	=>	2
		210	=>	1
		214	=>	3

Class: enum surge.util.C$19	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$19
	MethodsOf: surge.util.C$19
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$19
		1	=>	2
		221	=>	3
		225	=>	1

Class: enum surge.util.C$2	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$2
	MethodsOf: surge.util.C$2
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$2
		1	=>	2
		34	=>	3
		38	=>	1

Class: enum surge.util.C$20	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$20
	MethodsOf: surge.util.C$20
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$20
		1	=>	2
		232	=>	3
		236	=>	1

Class: enum surge.util.C$21	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$21
	MethodsOf: surge.util.C$21
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$21
		1	=>	3
		243	=>	1
		247	=>	2

Class: enum surge.util.C$22	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$22
	MethodsOf: surge.util.C$22
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$22
		1	=>	1
		255	=>	2
		259	=>	3

Class: enum surge.util.C$3	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$3
	MethodsOf: surge.util.C$3
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$3
		1	=>	1
		45	=>	3
		49	=>	2

Class: enum surge.util.C$4	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$4
	MethodsOf: surge.util.C$4
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$4
		1	=>	3
		56	=>	1
		60	=>	2

Class: enum surge.util.C$5	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$5
	MethodsOf: surge.util.C$5
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$5
		1	=>	2
		67	=>	1
		71	=>	3

Class: enum surge.util.C$6	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$6
	MethodsOf: surge.util.C$6
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$6
		1	=>	2
		78	=>	3
		82	=>	1

Class: enum surge.util.C$7	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$7
	MethodsOf: surge.util.C$7
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$7
		1	=>	3
		89	=>	1
		93	=>	2

Class: enum surge.util.C$8	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$8
	MethodsOf: surge.util.C$8
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$8
		1	=>	1
		100	=>	3
		104	=>	2

Class: enum surge.util.C$9	NameNotChanged
	Source: "C.java"
	FieldsOf: surge.util.C$9
	MethodsOf: surge.util.C$9
		public net.md_5.bungee.api.ChatColor asBungee() 	NameNotChanged
	LineNumbersOf: surge.util.C$9
		1	=>	1
		111	=>	3
		115	=>	2

Class: public surge.util.CDou	NameNotChanged
	Source: "CDou.java"
	FieldsOf: surge.util.CDou
		private double max	=>	b
		private double number	=>	a
	MethodsOf: surge.util.CDou
		public surge.util.CDou add(double) 	NameNotChanged
		public void circ() 	NameNotChanged
		public double get() 	NameNotChanged
		public surge.util.CDou set(double) 	NameNotChanged
		public surge.util.CDou sub(double) 	NameNotChanged
	LineNumbersOf: surge.util.CDou
		8	=>	5
		10	=>	17
		11	=>	10
		12	=>	11
		16	=>	4
		17	=>	8
		18	=>	2
		23	=>	15
		24	=>	3
		25	=>	9
		30	=>	12
		31	=>	13
		32	=>	1
		37	=>	14
		42	=>	16
		44	=>	18
		47	=>	6
		48	=>	7

Class: public surge.util.CMD	NameNotChanged
	Source: "CMD.java"
	FieldsOf: surge.util.CMD
		private java.lang.String command	=>	a
		private org.bukkit.command.CommandSender sender	=>	b
		private boolean virtual	=>	c
	MethodsOf: surge.util.CMD
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public void execute() 	NameNotChanged
		public void execute(org.bukkit.command.CommandSender) 	NameNotChanged
		public surge.util.CMD virtual() 	NameNotChanged
	LineNumbersOf: surge.util.CMD
		25	=>	11
		27	=>	3
		28	=>	10
		29	=>	7
		30	=>	13
		39	=>	17
		40	=>	2
		51	=>	1
		52	=>	12
		53	=>	8
		60	=>	14
		62	=>	16
		64	=>	4
		65	=>	6
		69	=>	9
		71	=>	15
		75	=>	18
		77	=>	5

Class: public surge.util.CNum	NameNotChanged
	Source: "CNum.java"
	FieldsOf: surge.util.CNum
		private int max	=>	b
		private int number	=>	a
	MethodsOf: surge.util.CNum
		public surge.util.CNum add(int) 	NameNotChanged
		public void circ() 	NameNotChanged
		public int get() 	NameNotChanged
		public int getMax() 	NameNotChanged
		public surge.util.CNum set(int) 	NameNotChanged
		public void setMax(int) 	NameNotChanged
		public surge.util.CNum sub(int) 	NameNotChanged
	LineNumbersOf: surge.util.CNum
		8	=>	19
		10	=>	1
		11	=>	16
		12	=>	7
		16	=>	4
		17	=>	2
		18	=>	14
		23	=>	5
		24	=>	13
		25	=>	6
		30	=>	18
		31	=>	9
		32	=>	20
		37	=>	8
		42	=>	15
		44	=>	17
		47	=>	22
		48	=>	11
		52	=>	12
		57	=>	21
		58	=>	3
		59	=>	10

Class: public surge.util.Chunks	NameNotChanged
	Source: "Chunks.java"
	FieldsOf: surge.util.Chunks
	MethodsOf: surge.util.Chunks
		public static surge.collection.GList getLoadedChunks() 	NameNotChanged
		public static surge.collection.GList getLoadedChunks(org.bukkit.World) 	NameNotChanged
		public static surge.collection.GList getRadius(org.bukkit.Chunk, int) 	NameNotChanged
		public static boolean isLoaded(java.lang.String, int, int) 	NameNotChanged
		public static boolean isLoaded(org.bukkit.World, int, int) 	NameNotChanged
		public static void load(surge.collection.GList) 	NameNotChanged
		public static boolean unload(org.bukkit.Chunk) 	NameNotChanged
		public static boolean unload(org.bukkit.Chunk, boolean) 	NameNotChanged
		public static boolean unload(org.bukkit.Chunk, boolean, boolean) 	NameNotChanged
		public static int unload(surge.collection.GList) 	NameNotChanged
		public static int unload(surge.collection.GList, boolean) 	NameNotChanged
		public static int unload(surge.collection.GList, boolean, boolean) 	NameNotChanged
	LineNumbersOf: surge.util.Chunks
		13	=>	4
		24	=>	27
		34	=>	21
		36	=>	1 and 6
		38	=>	19
		41	=>	5
		55	=>	8
		73	=>	10
		87	=>	18
		99	=>	26
		115	=>	7
		117	=>	23 and 28
		119	=>	20
		121	=>	12
		125	=>	3
		139	=>	9
		151	=>	16
		167	=>	22
		183	=>	2 and 29
		185	=>	14
		187	=>	17
		191	=>	24
		202	=>	11 and 15
		204	=>	13
		206	=>	25

Class: public surge.util.Cuboid	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: surge.util.Cuboid
		protected final java.lang.String worldName	=>	a
		protected int x1	=>	b
		protected int x2	=>	e
		protected int y1	=>	c
		protected int y2	=>	f
		protected int z1	=>	d
		protected int z2	=>	g
	MethodsOf: surge.util.Cuboid
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public byte averageLightLevel() 	NameNotChanged
		public bridge synthetic java.lang.Object clone() 	NameNotChanged
		public surge.util.Cuboid clone() 	NameNotChanged
		public boolean contains(int, int, int) 	NameNotChanged
		public boolean contains(org.bukkit.Location) 	NameNotChanged
		public boolean contains(org.bukkit.block.Block) 	NameNotChanged
		public boolean containsOnly(org.bukkit.Material) 	NameNotChanged
		public surge.util.Cuboid contract() 	NameNotChanged
		public surge.util.Cuboid contract(surge.util.Cuboid$CuboidDirection) 	NameNotChanged
		public org.bukkit.block.Block[] corners() 	NameNotChanged
		public int depth(surge.util.Axis) 	NameNotChanged
		public boolean equals(java.lang.Object) 	NameNotChanged
		public surge.util.Cuboid expand(surge.util.Cuboid$CuboidDirection, int) 	NameNotChanged
		public void fill(int, byte) 	NameNotChanged
		public surge.util.Cuboid flatten(int) 	NameNotChanged
		public surge.util.Cuboid getBoundingCuboid(surge.util.Cuboid) 	NameNotChanged
		public org.bukkit.Location getCenter() 	NameNotChanged
		public java.util.List getChunks() 	NameNotChanged
		public surge.collection.GList getEntities() 	NameNotChanged
		public surge.util.Cuboid getFace(surge.util.Cuboid$CuboidDirection) 	NameNotChanged
		public org.bukkit.Location getLowerNE() 	NameNotChanged
		public int getLowerX() 	NameNotChanged
		public int getLowerY() 	NameNotChanged
		public int getLowerZ() 	NameNotChanged
		public surge.collection.GList getPlayers() 	NameNotChanged
		public org.bukkit.block.Block getRelativeBlock(int, int, int) 	NameNotChanged
		public org.bukkit.block.Block getRelativeBlock(org.bukkit.World, int, int, int) 	NameNotChanged
		public int getSizeX() 	NameNotChanged
		public int getSizeY() 	NameNotChanged
		public int getSizeZ() 	NameNotChanged
		public org.bukkit.Location getUpperSW() 	NameNotChanged
		public int getUpperX() 	NameNotChanged
		public int getUpperY() 	NameNotChanged
		public int getUpperZ() 	NameNotChanged
		public org.bukkit.World getWorld() 	NameNotChanged
		public boolean hasPlayers() 	NameNotChanged
		public int hashCode() 	NameNotChanged
		public surge.util.Cuboid inset(surge.util.Cuboid$CuboidDirection, int) 	NameNotChanged
		public java.util.Iterator iterator() 	NameNotChanged
		public surge.util.Cuboid outset(surge.util.Cuboid$CuboidDirection, int) 	NameNotChanged
		public java.util.Map serialize() 	NameNotChanged
		public void set(org.bukkit.Location, org.bukkit.Location) 	NameNotChanged
		public surge.util.Cuboid shift(surge.util.Cuboid$CuboidDirection, int) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public int volume() 	NameNotChanged
	LineNumbersOf: surge.util.Cuboid
		27	=>	43
		43	=>	221
		44	=>	155
		46	=>	80
		49	=>	207
		50	=>	100
		51	=>	90
		52	=>	149
		53	=>	197
		54	=>	129
		55	=>	144
		56	=>	217
		60	=>	102
		63	=>	34
		65	=>	200
		67	=>	151
		70	=>	8
		83	=>	165
		84	=>	232
		85	=>	170
		86	=>	154
		87	=>	218
		88	=>	99
		89	=>	31
		93	=>	66
		98	=>	51 and 107
		110	=>	211
		115	=>	147
		119	=>	237
		121	=>	16 and 193
		123	=>	101
		125	=>	244
		128	=>	21
		130	=>	159
		133	=>	19
		135	=>	121
		138	=>	109
		140	=>	6
		143	=>	167
		145	=>	125
		148	=>	30
		150	=>	93
		153	=>	94
		155	=>	22
		158	=>	198
		161	=>	37
		164	=>	214
		166	=>	50
		177	=>	164
		178	=>	72
		188	=>	69
		189	=>	239
		210	=>	180
		211	=>	41
		212	=>	56
		213	=>	12
		214	=>	224
		215	=>	10
		216	=>	161
		217	=>	15
		218	=>	2
		239	=>	65
		240	=>	20
		241	=>	233
		242	=>	91
		243	=>	103
		244	=>	62
		245	=>	223
		246	=>	28
		247	=>	119
		250	=>	150
		251	=>	135
		252	=>	153
		253	=>	231
		254	=>	38
		255	=>	73
		256	=>	194
		257	=>	88
		258	=>	247
		263	=>	177
		264	=>	252
		265	=>	157
		266	=>	4
		267	=>	188
		268	=>	162
		269	=>	137
		270	=>	49
		271	=>	179
		276	=>	206
		287	=>	115
		298	=>	215
		308	=>	241
		309	=>	213
		310	=>	152
		311	=>	123
		323	=>	236
		324	=>	139
		326	=>	220
		328	=>	92
		338	=>	196
		348	=>	235
		358	=>	127
		368	=>	183
		378	=>	245
		388	=>	166
		398	=>	114
		408	=>	23
		418	=>	64
		428	=>	9
		429	=>	186
		430	=>	205
		431	=>	105
		432	=>	44
		433	=>	242
		434	=>	75
		435	=>	98
		436	=>	128
		437	=>	106
		438	=>	68
		454	=>	95
		457	=>	203
		459	=>	97
		461	=>	85
		463	=>	208
		465	=>	36
		467	=>	230
		469	=>	238
		484	=>	229
		500	=>	26
		503	=>	1
		504	=>	83
		506	=>	225
		507	=>	111
		509	=>	46
		510	=>	42
		512	=>	141
		514	=>	104
		530	=>	57
		546	=>	190
		558	=>	54
		570	=>	222
		580	=>	124
		591	=>	25
		592	=>	184
		593	=>	148
		595	=>	189
		597	=>	234
		598	=>	132
		600	=>	133
		601	=>	130
		612	=>	39
		626	=>	11
		627	=>	145
		630	=>	178
		632	=>	55
		634	=>	112
		636	=>	82
		638	=>	210
		640	=>	29
		642	=>	202
		644	=>	250
		646	=>	47
		648	=>	140
		650	=>	228
		652	=>	169
		654	=>	84
		656	=>	246
		658	=>	248
		660	=>	209
		662	=>	160
		664	=>	63
		666	=>	74
		680	=>	81
		683	=>	195
		685	=>	35
		687	=>	87
		689	=>	59
		691	=>	3
		693	=>	249
		695	=>	78
		708	=>	67
		710	=>	76
		712	=>	32
		714	=>	120
		715	=>	118
		727	=>	5
		729	=>	70
		732	=>	53
		733	=>	187
		734	=>	126
		735	=>	27
		736	=>	71
		737	=>	251
		739	=>	110
		755	=>	158
		775	=>	185
		786	=>	204
		788	=>	24
		789	=>	172
		790	=>	89
		791	=>	18
		792	=>	201
		793	=>	116 and 216
		795	=>	136 and 199
		797	=>	142
		800	=>	113
		815	=>	86
		817	=>	45
		818	=>	146
		819	=>	191
		843	=>	192
		854	=>	58
		865	=>	134
		961	=>	17
		962	=>	60
		963	=>	226
		964	=>	77
		965	=>	182
		966	=>	219
		967	=>	173
		968	=>	117
		969	=>	243
		970	=>	163
		976	=>	52
		978	=>	171
		981	=>	7
		983	=>	61
		986	=>	181
		988	=>	13
		991	=>	156
		993	=>	176
		995	=>	96
		997	=>	79
		1001	=>	174
		1003	=>	122
		1006	=>	108
		1008	=>	138
		1011	=>	168
		1013	=>	227
		1016	=>	240
		1018	=>	175
		1021	=>	40
		1023	=>	131
		1026	=>	212
		1028	=>	143
		1031	=>	14
		1033	=>	33
		1036	=>	48

Class: surge.util.Cuboid$1	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: surge.util.Cuboid$1
		final synthetic surge.util.Cuboid this$0	NameNotChanged
	MethodsOf: surge.util.Cuboid$1
		public bridge synthetic java.lang.Object onAdapt(java.lang.Object) 	NameNotChanged
		public org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) 	NameNotChanged
	LineNumbersOf: surge.util.Cuboid$1
		99	=>	1 and 3
		103	=>	2
		105	=>	5
		108	=>	4

Class: synthetic surge.util.Cuboid$2	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: surge.util.Cuboid$2
		static final synthetic int[] $SwitchMap$surge$util$Axis	=>	a
		static final synthetic int[] $SwitchMap$surge$util$Cuboid$CuboidDirection	=>	b
	MethodsOf: surge.util.Cuboid$2
	LineNumbersOf: surge.util.Cuboid$2
		60	=>	1
		454	=>	2

Class: public final enum surge.util.Cuboid$CuboidDirection	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: surge.util.Cuboid$CuboidDirection
		private static final synthetic surge.util.Cuboid$CuboidDirection[] $VALUES	=>	a
		public static final enum surge.util.Cuboid$CuboidDirection Both	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection Down	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection East	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection Horizontal	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection North	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection South	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection Unknown	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection Up	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection Vertical	NameNotChanged
		public static final enum surge.util.Cuboid$CuboidDirection West	NameNotChanged
	MethodsOf: surge.util.Cuboid$CuboidDirection
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public surge.util.Cuboid$CuboidDirection opposite() 	NameNotChanged
		public static surge.util.Cuboid$CuboidDirection valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.Cuboid$CuboidDirection[] values() 	NameNotChanged
	LineNumbersOf: surge.util.Cuboid$CuboidDirection
		916	=>	1, 7, 20 and 25
		919	=>	9
		920	=>	2
		921	=>	4
		922	=>	3
		923	=>	14
		924	=>	13
		925	=>	17
		926	=>	15
		927	=>	6
		928	=>	18
		932	=>	5
		935	=>	24
		937	=>	16
		939	=>	21
		941	=>	11
		943	=>	23
		945	=>	8
		947	=>	22
		949	=>	12
		951	=>	19
		953	=>	10

Class: public surge.util.Cuboid$CuboidIterator	NameNotChanged
	Source: "Cuboid.java"
	FieldsOf: surge.util.Cuboid$CuboidIterator
		private int baseX	=>	b
		private int baseY	=>	c
		private int baseZ	=>	d
		private int sizeX	=>	h
		private int sizeY	=>	i
		private int sizeZ	=>	j
		final synthetic surge.util.Cuboid this$0	NameNotChanged
		private org.bukkit.World w	=>	a
		private int x	=>	e
		private int y	=>	f
		private int z	=>	g
	MethodsOf: surge.util.Cuboid$CuboidIterator
		public boolean hasNext() 	NameNotChanged
		public bridge synthetic java.lang.Object next() 	NameNotChanged
		public org.bukkit.block.Block next() 	NameNotChanged
		public void remove() 	NameNotChanged
	LineNumbersOf: surge.util.Cuboid$CuboidIterator
		868	=>	1
		876	=>	13
		877	=>	20
		878	=>	12
		879	=>	17
		880	=>	2
		881	=>	8
		882	=>	6
		883	=>	7
		884	=>	10
		885	=>	9
		890	=>	5
		896	=>	16
		897	=>	19
		899	=>	4
		900	=>	18
		902	=>	14
		903	=>	11
		906	=>	15
		913	=>	3

Class: public surge.util.CuboidException	NameNotChanged
	Source: "CuboidException.java"
	FieldsOf: surge.util.CuboidException
		private static final long serialVersionUID	NameNotChanged
	MethodsOf: surge.util.CuboidException
	LineNumbersOf: surge.util.CuboidException
		12	=>	1
		13	=>	2

Class: public surge.util.D	NameNotChanged
	Source: "D.java"
	FieldsOf: surge.util.D
		private static surge.collection.GList buffer	=>	a
	MethodsOf: surge.util.D
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static void f(java.lang.Object, java.lang.String) 	NameNotChanged
		public static void f(java.lang.String) 	NameNotChanged
		public static void flush() 	NameNotChanged
		public static void l(java.lang.Object, java.lang.String) 	NameNotChanged
		public static void l(java.lang.String) 	NameNotChanged
		private static void log(java.lang.String, java.lang.String) 	=>	a
		public static void s(java.lang.Object, java.lang.String) 	NameNotChanged
		public static void s(java.lang.String) 	NameNotChanged
		public static void v(java.lang.Object, java.lang.String) 	NameNotChanged
		public static void v(java.lang.String) 	NameNotChanged
		public static void w(java.lang.Object, java.lang.String) 	NameNotChanged
		public static void w(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.util.D
		8	=>	19
		10	=>	20
		14	=>	9 and 10
		16	=>	28
		18	=>	39
		22	=>	11
		24	=>	24
		26	=>	45
		27	=>	38
		31	=>	43
		33	=>	35
		37	=>	17
		38	=>	4
		42	=>	41
		43	=>	25
		47	=>	16
		48	=>	22
		52	=>	12
		53	=>	31
		57	=>	5
		58	=>	40
		62	=>	8
		64	=>	27
		65	=>	14
		68	=>	23
		69	=>	44
		73	=>	34
		75	=>	1
		76	=>	15
		79	=>	13
		80	=>	7
		84	=>	21
		86	=>	47
		87	=>	42
		90	=>	26
		91	=>	3
		95	=>	2
		97	=>	37
		98	=>	30
		101	=>	18
		102	=>	32
		106	=>	36
		108	=>	46
		109	=>	29
		112	=>	33
		113	=>	6

Class: public abstract annotation surge.util.DMSRequire	NameNotChanged
	Source: "DMSRequire.java"
	FieldsOf: surge.util.DMSRequire
	MethodsOf: surge.util.DMSRequire
		public abstract surge.util.DMSRequirement value() 	NameNotChanged
	LineNumbersOf: surge.util.DMSRequire

Class: public final enum surge.util.DMSRequirement	NameNotChanged
	Source: "DMSRequirement.java"
	FieldsOf: surge.util.DMSRequirement
		private static final synthetic surge.util.DMSRequirement[] ENUM$VALUES	=>	a
		public static final enum surge.util.DMSRequirement SQL	NameNotChanged
	MethodsOf: surge.util.DMSRequirement
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static surge.util.DMSRequirement valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.DMSRequirement[] values() 	NameNotChanged
	LineNumbersOf: surge.util.DMSRequirement
		1	=>	2 and 4
		3	=>	1 and 5
		5	=>	3

Class: public final enum surge.util.Depend	NameNotChanged
	Source: "Depend.java"
	FieldsOf: surge.util.Depend
		public static final enum surge.util.Depend CITIZENS	NameNotChanged
		private static final synthetic surge.util.Depend[] ENUM$VALUES	=>	b
		public static final enum surge.util.Depend FAWE	NameNotChanged
		public static final enum surge.util.Depend PROTOLIB	NameNotChanged
		public static final enum surge.util.Depend VAULT	NameNotChanged
		public static final enum surge.util.Depend WORLDEDIT	NameNotChanged
		private java.lang.String name	=>	a
	MethodsOf: surge.util.Depend
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public boolean exists() 	NameNotChanged
		public static surge.util.Depend valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.Depend[] values() 	NameNotChanged
	LineNumbersOf: surge.util.Depend
		1	=>	7 and 8
		5	=>	11
		7	=>	10
		8	=>	5
		9	=>	9
		10	=>	2
		11	=>	12
		15	=>	4
		17	=>	3
		18	=>	6
		22	=>	1

Class: public surge.util.Dimension	NameNotChanged
	Source: "Dimension.java"
	FieldsOf: surge.util.Dimension
		private final int depth	=>	c
		private final int height	=>	b
		private final int width	=>	a
	MethodsOf: surge.util.Dimension
		public int getDepth() 	NameNotChanged
		public int getHeight() 	NameNotChanged
		public surge.util.DimensionFace getPane() 	NameNotChanged
		public int getWidth() 	NameNotChanged
	LineNumbersOf: surge.util.Dimension
		25	=>	12
		26	=>	1
		27	=>	18
		28	=>	15
		29	=>	10
		40	=>	11
		41	=>	14
		42	=>	9
		43	=>	8
		44	=>	19
		53	=>	7
		55	=>	6
		58	=>	20
		60	=>	17
		63	=>	4
		65	=>	5
		68	=>	2
		73	=>	16
		78	=>	3
		83	=>	13

Class: public final enum surge.util.DimensionFace	NameNotChanged
	Source: "DimensionFace.java"
	FieldsOf: surge.util.DimensionFace
		private static final synthetic surge.util.DimensionFace[] $VALUES	=>	a
		public static final enum surge.util.DimensionFace X	NameNotChanged
		public static final enum surge.util.DimensionFace Y	NameNotChanged
		public static final enum surge.util.DimensionFace Z	NameNotChanged
	MethodsOf: surge.util.DimensionFace
		public static surge.util.DimensionFace valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.DimensionFace[] values() 	NameNotChanged
	LineNumbersOf: surge.util.DimensionFace
		8	=>	1, 2, 3 and 6
		13	=>	5
		18	=>	7
		23	=>	4

Class: public final enum surge.util.Direction	NameNotChanged
	Source: "Direction.java"
	FieldsOf: surge.util.Direction
		private static synthetic int[] $SWITCH_TABLE$surge$util$Direction	=>	e
		public static final enum surge.util.Direction D	NameNotChanged
		public static final enum surge.util.Direction E	NameNotChanged
		private static final synthetic surge.util.Direction[] ENUM$VALUES	=>	f
		public static final enum surge.util.Direction N	NameNotChanged
		public static final enum surge.util.Direction S	NameNotChanged
		public static final enum surge.util.Direction U	NameNotChanged
		public static final enum surge.util.Direction W	NameNotChanged
		private surge.util.Cuboid$CuboidDirection f	=>	d
		private int x	=>	a
		private int y	=>	b
		private int z	=>	c
	MethodsOf: surge.util.Direction
		static synthetic int[] $SWITCH_TABLE$surge$util$Direction() 	=>	a
		public byte byteValue() 	NameNotChanged
		public surge.util.Cuboid$CuboidDirection f() 	NameNotChanged
		public static surge.util.Direction facing(org.bukkit.entity.Player) 	NameNotChanged
		public static surge.util.Direction fromByte(byte) 	NameNotChanged
		public static surge.collection.GList news() 	NameNotChanged
		public surge.util.Direction reverse() 	NameNotChanged
		public static surge.collection.GList udnews() 	NameNotChanged
		public static surge.util.Direction valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.Direction[] values() 	NameNotChanged
		public int x() 	NameNotChanged
		public int y() 	NameNotChanged
		public int z() 	NameNotChanged
	LineNumbersOf: surge.util.Direction
		1	=>	15 and 33
		14	=>	4 and 24
		16	=>	27
		17	=>	52
		18	=>	6
		19	=>	25
		20	=>	23
		21	=>	12
		28	=>	21
		30	=>	32
		31	=>	26
		32	=>	57
		33	=>	7
		34	=>	42
		38	=>	37
		41	=>	11
		43	=>	49
		45	=>	46
		47	=>	8
		49	=>	3
		51	=>	18
		56	=>	48
		61	=>	55
		66	=>	50
		71	=>	54
		76	=>	38
		81	=>	19
		86	=>	29
		91	=>	45
		93	=>	13 and 16
		95	=>	41
		97	=>	56
		101	=>	1
		115	=>	30
		117	=>	31
		120	=>	35
		122	=>	43
		125	=>	5
		127	=>	36
		130	=>	47
		132	=>	20
		135	=>	44
		137	=>	2
		140	=>	34
		142	=>	17
		147	=>	39
		158	=>	53
		161	=>	51
		163	=>	22
		165	=>	9
		167	=>	10
		169	=>	40
		171	=>	28
		176	=>	14

Class: public abstract surge.util.Embedded	NameNotChanged
	Source: "Embedded.java"
	FieldsOf: surge.util.Embedded
	MethodsOf: surge.util.Embedded
		public abstract void add(java.lang.Object) 	NameNotChanged
		public abstract surge.collection.GList get() 	NameNotChanged
	LineNumbersOf: surge.util.Embedded

Class: public surge.util.F	NameNotChanged
	Source: "F.java"
	FieldsOf: surge.util.F
		private static java.text.DecimalFormat DF	=>	b
		private static final java.util.NavigableMap MAP	=>	e
		private static final java.lang.String[] NAMES	=>	c
		private static java.text.NumberFormat NF	=>	a
		private static final java.math.BigInteger THOUSAND	=>	d
		public static int a	=>	f
	MethodsOf: surge.util.F
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static java.lang.String b(double) 	NameNotChanged
		public static java.lang.String b(int) 	NameNotChanged
		public static java.lang.String b(java.math.BigInteger) 	NameNotChanged
		public static java.lang.String b(long) 	NameNotChanged
		public static java.lang.String cname(java.lang.String) 	NameNotChanged
		public static java.lang.String color(java.lang.String) 	NameNotChanged
		public static surge.collection.GList color(java.util.List) 	NameNotChanged
		public static java.lang.String f(double) 	NameNotChanged
		public static java.lang.String f(double, int) 	NameNotChanged
		public static java.lang.String f(float) 	NameNotChanged
		public static java.lang.String f(float, int) 	NameNotChanged
		public static java.lang.String f(int) 	NameNotChanged
		public static java.lang.String f(long) 	NameNotChanged
		public static java.lang.String fd(double, int) 	NameNotChanged
		public static java.lang.String fileSize(long) 	NameNotChanged
		public static surge.collection.GList getParameters(java.lang.String, char) 	NameNotChanged
		private static void instantiate() 	=>	a
		public static java.lang.String mem(long) 	NameNotChanged
		public static java.lang.String memSize(long) 	NameNotChanged
		public static java.lang.String memx(long) 	NameNotChanged
		public static java.lang.String msSeconds(long) 	NameNotChanged
		public static java.lang.String msSeconds(long, int) 	NameNotChanged
		public static java.lang.String nsMs(long) 	NameNotChanged
		public static java.lang.String nsMs(long, int) 	NameNotChanged
		public static java.lang.String nsMsd(long, int) 	NameNotChanged
		public static java.lang.String ofSize(long, int) 	NameNotChanged
		public static java.lang.String ofSize(long, int, surge.util.C) 	NameNotChanged
		public static java.lang.String pc(double) 	NameNotChanged
		public static java.lang.String pc(double, int) 	NameNotChanged
		public static java.lang.String pc(float) 	NameNotChanged
		public static java.lang.String pc(float, int) 	NameNotChanged
		public static java.lang.String pc(int, int) 	NameNotChanged
		public static java.lang.String pc(int, int, int) 	NameNotChanged
		public static java.lang.String pc(long, long) 	NameNotChanged
		public static java.lang.String pc(long, long, int) 	NameNotChanged
		public static java.lang.String repeat(java.lang.String, int) 	NameNotChanged
		public static java.lang.String stamp() 	NameNotChanged
		public static java.lang.String stamp(long) 	NameNotChanged
		public static java.lang.String time(double, int) 	NameNotChanged
		public static java.lang.String trim(java.lang.String, int) 	NameNotChanged
		public static surge.collection.GList wrap(java.lang.String) 	NameNotChanged
		public static surge.collection.GList wrap(java.lang.String, int) 	NameNotChanged
	LineNumbersOf: surge.util.F
		19	=>	49
		24	=>	41
		25	=>	77
		30	=>	128
		31	=>	108 and 113
		33	=>	81
		35	=>	87
		39	=>	115
		41	=>	11
		44	=>	123
		46	=>	29
		49	=>	106
		51	=>	58
		54	=>	13
		59	=>	154
		64	=>	50
		69	=>	101
		74	=>	76
		75	=>	4
		77	=>	132
		80	=>	164
		81	=>	37
		82	=>	90
		83	=>	67
		84	=>	84
		86	=>	38
		88	=>	53
		91	=>	161
		96	=>	133
		98	=>	88
		100	=>	47
		111	=>	152
		124	=>	86
		137	=>	44
		150	=>	156
		151	=>	51
		161	=>	39
		177	=>	3
		178	=>	149
		180	=>	138
		182	=>	83
		183	=>	79
		185	=>	114
		187	=>	105
		188	=>	19
		190	=>	28
		192	=>	1
		193	=>	60
		195	=>	23
		197	=>	22
		198	=>	120
		204	=>	43
		209	=>	85
		210	=>	24
		212	=>	99
		214	=>	136
		215	=>	64
		217	=>	54
		219	=>	96
		220	=>	158
		222	=>	165
		224	=>	116
		225	=>	62
		227	=>	150
		229	=>	65
		230	=>	129
		236	=>	74
		248	=>	107
		262	=>	125
		263	=>	148
		265	=>	30 and 100
		267	=>	20
		269	=>	40
		271	=>	15
		274	=>	5
		276	=>	31
		279	=>	143
		293	=>	117
		295	=>	56
		298	=>	71
		311	=>	32
		313	=>	34 and 80
		315	=>	63
		317	=>	94
		318	=>	146
		322	=>	75
		326	=>	70
		328	=>	16
		331	=>	92
		346	=>	97
		347	=>	141
		348	=>	42
		350	=>	69 and 98
		352	=>	9
		354	=>	127
		356	=>	157
		358	=>	144
		360	=>	131
		363	=>	112
		364	=>	121
		368	=>	73
		370	=>	102
		374	=>	89
		376	=>	27
		381	=>	139
		395	=>	147
		397	=>	135
		400	=>	119
		402	=>	21 and 104
		404	=>	162
		407	=>	18
		419	=>	124
		421	=>	48
		426	=>	2
		439	=>	12
		441	=>	137
		446	=>	153
		448	=>	82
		450	=>	140
		455	=>	25
		457	=>	118
		471	=>	8
		472	=>	55
		484	=>	10
		485	=>	45
		499	=>	155
		501	=>	122
		503	=>	111
		506	=>	14
		508	=>	36
		524	=>	134
		526	=>	145
		528	=>	130
		531	=>	78
		533	=>	33
		547	=>	52
		549	=>	7
		551	=>	163
		554	=>	109
		556	=>	68
		567	=>	57
		578	=>	93
		593	=>	103
		608	=>	26
		621	=>	159
		634	=>	17
		650	=>	91
		664	=>	110
		680	=>	160
		694	=>	95
		706	=>	6
		720	=>	35
		732	=>	59
		746	=>	126
		760	=>	61
		772	=>	46
		774	=>	66 and 142
		776	=>	72
		779	=>	151

Class: public surge.util.FU	NameNotChanged
	Source: "FU.java"
	FieldsOf: surge.util.FU
		public static final java.io.File[] EMPTY_FILE_ARRAY	NameNotChanged
		public static final long ONE_GB	NameNotChanged
		public static final long ONE_KB	NameNotChanged
		public static final long ONE_MB	NameNotChanged
	MethodsOf: surge.util.FU
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static java.lang.String byteCountToDisplaySize(long) 	NameNotChanged
		public static void cleanDirectory(java.io.File) 	NameNotChanged
		private static void cleanDirectoryOnExit(java.io.File) 	=>	b
		public static java.io.File[] convertFileCollectionToFileArray(java.util.Collection) 	NameNotChanged
		public static void copyDirectory(java.io.File, java.io.File) 	NameNotChanged
		public static void copyDirectory(java.io.File, java.io.File, boolean) 	NameNotChanged
		public static void copyDirectoryToDirectory(java.io.File, java.io.File) 	NameNotChanged
		public static void copyFile(java.io.File, java.io.File) 	NameNotChanged
		public static void copyFile(java.io.File, java.io.File, boolean) 	NameNotChanged
		public static void copyFileToDirectory(java.io.File, java.io.File) 	NameNotChanged
		public static void copyURLToFile(java.net.URL, java.io.File) 	NameNotChanged
		public static void deleteDirectory(java.io.File) 	NameNotChanged
		private static void deleteDirectoryOnExit(java.io.File) 	=>	a
		private static void doCopyDirectory(java.io.File, java.io.File, boolean) 	=>	b
		private static void doCopyFile(java.io.File, java.io.File, boolean) 	=>	a
		public static void forceDelete(java.io.File) 	NameNotChanged
		public static void forceDeleteOnExit(java.io.File) 	NameNotChanged
		public static void forceMkdir(java.io.File) 	NameNotChanged
		public static boolean isFileNewer(java.io.File, java.io.File) 	NameNotChanged
		public static boolean isFileNewer(java.io.File, java.util.Date) 	NameNotChanged
		public static boolean isFileNewer(java.io.File, long) 	NameNotChanged
		public static byte[] readFileToByteArray(java.io.File) 	NameNotChanged
		public static java.lang.String readFileToString(java.io.File, java.lang.String) 	NameNotChanged
		public static java.util.List readLines(java.io.File, java.lang.String) 	NameNotChanged
		public static long sizeOfDirectory(java.io.File) 	NameNotChanged
		public static java.io.File toFile(java.net.URL) 	NameNotChanged
		public static java.io.File[] toFiles(java.net.URL[]) 	NameNotChanged
		public static java.net.URL[] toURLs(java.io.File[]) 	NameNotChanged
		public static void touch(java.io.File) 	NameNotChanged
		public static boolean waitFor(java.io.File, int) 	NameNotChanged
		public static void writeByteArrayToFile(java.io.File, byte[]) 	NameNotChanged
		public static void writeLines(java.io.File, java.lang.String, java.util.Collection) 	NameNotChanged
		public static void writeLines(java.io.File, java.lang.String, java.util.Collection, java.lang.String) 	NameNotChanged
		public static void writeStringToFile(java.io.File, java.lang.String, java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.util.FU
		74	=>	237
		75	=>	177
		95	=>	292
		110	=>	18
		112	=>	75
		113	=>	77
		115	=>	182
		116	=>	282
		118	=>	195
		119	=>	114
		121	=>	98
		123	=>	71
		139	=>	72
		141	=>	240
		142	=>	236
		144	=>	32
		145	=>	301
		159	=>	186
		179	=>	254
		181	=>	293
		184	=>	260
		185	=>	99
		186	=>	56 and 80
		188	=>	203
		190	=>	243
		191	=>	90
		192	=>	11
		195	=>	73
		222	=>	104
		224	=>	109
		226	=>	36
		227	=>	78 and 102
		229	=>	7
		230	=>	138
		232	=>	185
		234	=>	150
		236	=>	141
		239	=>	318
		256	=>	210
		258	=>	17 and 235
		260	=>	299
		263	=>	199
		290	=>	55
		292	=>	211
		294	=>	205
		296	=>	291
		298	=>	100
		299	=>	62
		324	=>	45
		325	=>	38
		353	=>	16
		355	=>	67
		357	=>	171
		359	=>	270
		361	=>	20
		363	=>	42
		365	=>	258
		367	=>	46
		369	=>	117
		371	=>	26
		373	=>	105
		375	=>	189
		377	=>	278
		380	=>	123
		382	=>	251
		384	=>	25
		385	=>	162
		401	=>	158
		403	=>	33
		406	=>	173
		409	=>	168
		412	=>	300
		413	=>	85
		414	=>	225
		415	=>	110 and 194
		416	=>	257
		417	=>	66
		418	=>	280
		419	=>	1 and 112
		420	=>	139
		422	=>	259
		424	=>	308
		426	=>	239
		428	=>	272
		430	=>	12
		458	=>	58
		460	=>	145
		462	=>	170
		464	=>	190
		466	=>	218
		468	=>	39
		470	=>	64
		472	=>	60
		474	=>	122
		475	=>	95
		503	=>	221
		504	=>	24
		534	=>	107
		536	=>	277
		538	=>	23
		540	=>	153
		542	=>	216
		544	=>	154
		546	=>	156
		548	=>	226
		550	=>	245
		552	=>	13
		554	=>	22
		555	=>	172
		572	=>	271
		574	=>	181
		576	=>	93
		580	=>	8
		582	=>	287
		584	=>	69
		586	=>	115
		589	=>	148
		591	=>	5
		594	=>	285
		595	=>	87
		597	=>	130
		599	=>	44 and 289
		601	=>	149
		602	=>	165
		604	=>	202
		605	=>	164
		607	=>	176
		610	=>	49
		636	=>	79
		638	=>	52
		642	=>	29
		644	=>	213
		645	=>	241
		648	=>	262
		651	=>	230
		654	=>	314
		655	=>	15
		656	=>	118
		657	=>	131 and 144
		658	=>	297
		659	=>	106
		660	=>	222
		661	=>	27 and 281
		662	=>	91
		663	=>	94
		676	=>	288
		678	=>	96
		681	=>	121
		682	=>	215
		684	=>	309
		685	=>	113
		687	=>	214
		699	=>	197
		701	=>	209
		702	=>	304
		705	=>	128
		707	=>	188
		708	=>	129
		711	=>	283
		712	=>	273
		714	=>	88
		717	=>	276
		718	=>	51 and 247
		720	=>	63
		723	=>	274
		724	=>	315
		726	=>	147
		730	=>	294
		732	=>	132
		734	=>	233
		753	=>	256
		754	=>	319
		755	=>	169 and 208
		757	=>	10
		759	=>	135
		760	=>	290
		762	=>	76
		767	=>	53
		768	=>	48
		771	=>	196
		773	=>	92
		776	=>	242
		799	=>	266
		802	=>	227
		803	=>	192 and 207
		805	=>	50
		806	=>	201 and 296
		807	=>	120
		823	=>	250
		826	=>	134
		827	=>	193 and 217
		829	=>	175
		830	=>	140 and 166
		831	=>	279
		855	=>	6
		858	=>	161
		859	=>	2 and 246
		861	=>	312
		862	=>	28 and 317
		863	=>	255
		886	=>	187
		889	=>	136
		890	=>	34
		891	=>	212
		892	=>	127 and 206
		893	=>	84
		894	=>	21
		909	=>	125
		912	=>	223
		913	=>	86
		914	=>	234
		915	=>	174 and 244
		916	=>	316
		917	=>	305
		942	=>	238
		943	=>	81
		970	=>	155
		973	=>	40
		974	=>	219
		975	=>	74
		976	=>	124 and 228
		977	=>	313
		978	=>	307
		1000	=>	224
		1002	=>	68
		1003	=>	263
		1005	=>	59
		1007	=>	268
		1009	=>	54
		1011	=>	160
		1012	=>	286
		1015	=>	303
		1030	=>	47
		1032	=>	265
		1033	=>	261
		1035	=>	180
		1037	=>	142
		1051	=>	159
		1053	=>	220
		1056	=>	264
		1057	=>	231
		1058	=>	119
		1072	=>	101
		1074	=>	108
		1075	=>	31
		1078	=>	163
		1080	=>	198
		1081	=>	4
		1084	=>	37
		1085	=>	249
		1087	=>	116
		1090	=>	30
		1091	=>	229 and 298
		1093	=>	269
		1096	=>	232
		1097	=>	9
		1099	=>	295
		1103	=>	253
		1105	=>	248
		1107	=>	252
		1123	=>	14
		1125	=>	306
		1127	=>	267
		1128	=>	103
		1132	=>	65
		1134	=>	111
		1135	=>	83
		1138	=>	191
		1152	=>	184
		1154	=>	157
		1155	=>	179
		1158	=>	311
		1160	=>	275
		1161	=>	178
		1164	=>	137
		1166	=>	152
		1167	=>	61
		1169	=>	19
		1171	=>	3 and 310
		1173	=>	151
		1175	=>	57
		1177	=>	97
		1178	=>	183
		1180	=>	143
		1184	=>	35
		1207	=>	70
		1209	=>	302
		1211	=>	126
		1213	=>	167
		1215	=>	43
		1236	=>	204
		1238	=>	89
		1240	=>	284
		1260	=>	200
		1262	=>	41
		1264	=>	82
		1266	=>	133
		1268	=>	146

Class: public surge.util.FinalDouble	NameNotChanged
	Source: "FinalDouble.java"
	FieldsOf: surge.util.FinalDouble
		private double i	=>	a
	MethodsOf: surge.util.FinalDouble
		public void add(double) 	NameNotChanged
		public double get() 	NameNotChanged
		public void set(double) 	NameNotChanged
		public void sub(double) 	NameNotChanged
	LineNumbersOf: surge.util.FinalDouble
		18	=>	5
		20	=>	10
		21	=>	2
		30	=>	8
		41	=>	9
		42	=>	1
		52	=>	7
		53	=>	6
		63	=>	3
		64	=>	4

Class: public surge.util.FinalFloat	NameNotChanged
	Source: "FinalFloat.java"
	FieldsOf: surge.util.FinalFloat
		private float i	=>	a
	MethodsOf: surge.util.FinalFloat
		public void add(float) 	NameNotChanged
		public float get() 	NameNotChanged
		public void set(float) 	NameNotChanged
		public void sub(float) 	NameNotChanged
	LineNumbersOf: surge.util.FinalFloat
		18	=>	9
		20	=>	3
		21	=>	2
		30	=>	10
		41	=>	6
		42	=>	5
		52	=>	1
		53	=>	8
		63	=>	7
		64	=>	4

Class: public surge.util.FinalInteger	NameNotChanged
	Source: "FinalInteger.java"
	FieldsOf: surge.util.FinalInteger
		private int i	=>	a
	MethodsOf: surge.util.FinalInteger
		public void add(int) 	NameNotChanged
		public int get() 	NameNotChanged
		public void set(int) 	NameNotChanged
		public void sub(int) 	NameNotChanged
	LineNumbersOf: surge.util.FinalInteger
		18	=>	10
		20	=>	5
		21	=>	2
		30	=>	8
		41	=>	7
		42	=>	9
		52	=>	4
		53	=>	1
		63	=>	3
		64	=>	6

Class: public surge.util.FinalLong	NameNotChanged
	Source: "FinalLong.java"
	FieldsOf: surge.util.FinalLong
		private long i	=>	a
	MethodsOf: surge.util.FinalLong
		public void add(long) 	NameNotChanged
		public long get() 	NameNotChanged
		public void set(long) 	NameNotChanged
		public void sub(long) 	NameNotChanged
	LineNumbersOf: surge.util.FinalLong
		18	=>	2
		20	=>	7
		21	=>	4
		30	=>	3
		41	=>	5
		42	=>	1
		52	=>	10
		53	=>	8
		63	=>	9
		64	=>	6

Class: public surge.util.FinalString	NameNotChanged
	Source: "FinalString.java"
	FieldsOf: surge.util.FinalString
		private java.lang.String string	=>	a
	MethodsOf: surge.util.FinalString
		public java.lang.String get() 	NameNotChanged
		public void set(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.util.FinalString
		18	=>	6
		20	=>	1
		21	=>	3
		30	=>	4
		41	=>	5
		42	=>	2

Class: public surge.util.Fingerprint	NameNotChanged
	Source: "Fingerprint.java"
	FieldsOf: surge.util.Fingerprint
	MethodsOf: surge.util.Fingerprint
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static java.lang.String randomFingerprint(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.util.Fingerprint
		5	=>	4
		9	=>	3
		11	=>	2
		12	=>	1
		14	=>	5

Class: public abstract surge.util.GListAdapter	NameNotChanged
	Source: "GListAdapter.java"
	FieldsOf: surge.util.GListAdapter
	MethodsOf: surge.util.GListAdapter
		public java.util.List adapt(java.util.List) 	NameNotChanged
		public abstract java.lang.Object onAdapt(java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.util.GListAdapter
		16	=>	6
		27	=>	4
		29	=>	3 and 8
		31	=>	5
		33	=>	7
		35	=>	1
		39	=>	2

Class: public surge.util.Health	NameNotChanged
	Source: "Health.java"
	FieldsOf: surge.util.Health
		private double hp	=>	a
	MethodsOf: surge.util.Health
		public int getFlatHalfHearts() 	NameNotChanged
		public int getFlatHearts() 	NameNotChanged
		public double getHalfHearts() 	NameNotChanged
		public double getHearts() 	NameNotChanged
	LineNumbersOf: surge.util.Health
		20	=>	3
		21	=>	2
		22	=>	7
		31	=>	5
		41	=>	4
		51	=>	6
		61	=>	1

Class: public surge.util.IO	NameNotChanged
	Source: "IO.java"
	FieldsOf: surge.util.IO
		public static final char DIR_SEPARATOR	NameNotChanged
		public static final char DIR_SEPARATOR_UNIX	NameNotChanged
		public static final char DIR_SEPARATOR_WINDOWS	NameNotChanged
		public static final java.lang.String LINE_SEPARATOR	NameNotChanged
		public static final java.lang.String LINE_SEPARATOR_UNIX	NameNotChanged
		public static final java.lang.String LINE_SEPARATOR_WINDOWS	NameNotChanged
	MethodsOf: surge.util.IO
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static void closeQuietly(java.io.InputStream) 	NameNotChanged
		public static void closeQuietly(java.io.OutputStream) 	NameNotChanged
		public static void closeQuietly(java.io.Reader) 	NameNotChanged
		public static void closeQuietly(java.io.Writer) 	NameNotChanged
		public static boolean contentEquals(java.io.InputStream, java.io.InputStream) 	NameNotChanged
		public static boolean contentEquals(java.io.Reader, java.io.Reader) 	NameNotChanged
		public static int copy(java.io.InputStream, java.io.OutputStream) 	NameNotChanged
		public static void copy(java.io.InputStream, java.io.Writer) 	NameNotChanged
		public static void copy(java.io.InputStream, java.io.Writer, java.lang.String) 	NameNotChanged
		public static void copy(java.io.Reader, java.io.OutputStream) 	NameNotChanged
		public static void copy(java.io.Reader, java.io.OutputStream, java.lang.String) 	NameNotChanged
		public static int copy(java.io.Reader, java.io.Writer) 	NameNotChanged
		public static long copyLarge(java.io.InputStream, java.io.OutputStream) 	NameNotChanged
		public static long copyLarge(java.io.Reader, java.io.Writer) 	NameNotChanged
		public static java.util.List readLines(java.io.InputStream) 	NameNotChanged
		public static java.util.List readLines(java.io.InputStream, java.lang.String) 	NameNotChanged
		public static java.util.List readLines(java.io.Reader) 	NameNotChanged
		public static byte[] toByteArray(java.io.InputStream) 	NameNotChanged
		public static byte[] toByteArray(java.io.Reader) 	NameNotChanged
		public static byte[] toByteArray(java.io.Reader, java.lang.String) 	NameNotChanged
		public static byte[] toByteArray(java.lang.String) 	NameNotChanged
		public static char[] toCharArray(java.io.InputStream) 	NameNotChanged
		public static char[] toCharArray(java.io.InputStream, java.lang.String) 	NameNotChanged
		public static char[] toCharArray(java.io.Reader) 	NameNotChanged
		public static java.io.InputStream toInputStream(java.lang.String) 	NameNotChanged
		public static java.io.InputStream toInputStream(java.lang.String, java.lang.String) 	NameNotChanged
		public static java.lang.String toString(byte[]) 	NameNotChanged
		public static java.lang.String toString(byte[], java.lang.String) 	NameNotChanged
		public static java.lang.String toString(java.io.InputStream) 	NameNotChanged
		public static java.lang.String toString(java.io.InputStream, java.lang.String) 	NameNotChanged
		public static java.lang.String toString(java.io.Reader) 	NameNotChanged
		public static void write(byte[], java.io.OutputStream) 	NameNotChanged
		public static void write(byte[], java.io.Writer) 	NameNotChanged
		public static void write(byte[], java.io.Writer, java.lang.String) 	NameNotChanged
		public static void write(char[], java.io.OutputStream) 	NameNotChanged
		public static void write(char[], java.io.OutputStream, java.lang.String) 	NameNotChanged
		public static void write(char[], java.io.Writer) 	NameNotChanged
		public static void write(java.lang.String, java.io.OutputStream) 	NameNotChanged
		public static void write(java.lang.String, java.io.OutputStream, java.lang.String) 	NameNotChanged
		public static void write(java.lang.String, java.io.Writer) 	NameNotChanged
		public static void write(java.lang.StringBuffer, java.io.OutputStream) 	NameNotChanged
		public static void write(java.lang.StringBuffer, java.io.OutputStream, java.lang.String) 	NameNotChanged
		public static void write(java.lang.StringBuffer, java.io.Writer) 	NameNotChanged
		public static void writeLines(java.util.Collection, java.lang.String, java.io.OutputStream) 	NameNotChanged
		public static void writeLines(java.util.Collection, java.lang.String, java.io.OutputStream, java.lang.String) 	NameNotChanged
		public static void writeLines(java.util.Collection, java.lang.String, java.io.Writer) 	NameNotChanged
	LineNumbersOf: surge.util.IO
		97	=>	140
		113	=>	83
		114	=>	24
		115	=>	196
		116	=>	115
		122	=>	21
		129	=>	198
		130	=>	188
		146	=>	182
		148	=>	32
		150	=>	35
		154	=>	117
		169	=>	52
		171	=>	197
		173	=>	214
		177	=>	189
		192	=>	105
		194	=>	87
		196	=>	172
		200	=>	104
		215	=>	141
		217	=>	208
		219	=>	216
		223	=>	131
		243	=>	9
		244	=>	59
		245	=>	126
		265	=>	130
		266	=>	193
		267	=>	127
		293	=>	116
		294	=>	47
		295	=>	7
		315	=>	1
		338	=>	203
		339	=>	146
		340	=>	136
		366	=>	85
		367	=>	215
		368	=>	169
		388	=>	64
		389	=>	54
		390	=>	162
		412	=>	91
		413	=>	13
		414	=>	207
		439	=>	95
		440	=>	176
		441	=>	88
		460	=>	122
		461	=>	173
		462	=>	74
		480	=>	223
		503	=>	69
		505	=>	86
		508	=>	26
		532	=>	145
		533	=>	225
		559	=>	23
		561	=>	132
		564	=>	143
		565	=>	66
		587	=>	2
		588	=>	209
		589	=>	100
		590	=>	49 and 112
		592	=>	165
		593	=>	186
		595	=>	71
		610	=>	120
		611	=>	168
		632	=>	42
		633	=>	108
		654	=>	15
		656	=>	25
		658	=>	192
		679	=>	56
		681	=>	34
		683	=>	178
		709	=>	147
		711	=>	201
		713	=>	175
		714	=>	218
		716	=>	29
		719	=>	103
		740	=>	139
		742	=>	144
		744	=>	73
		766	=>	17
		768	=>	111
		770	=>	174
		797	=>	40
		799	=>	160
		801	=>	185
		802	=>	163
		804	=>	166
		807	=>	119
		826	=>	6
		828	=>	159
		830	=>	31
		851	=>	138
		853	=>	81
		855	=>	125
		880	=>	72
		882	=>	16
		884	=>	200
		885	=>	183
		887	=>	154
		890	=>	107
		909	=>	210
		911	=>	80
		913	=>	78
		934	=>	135
		936	=>	191
		938	=>	14
		963	=>	22
		965	=>	48
		967	=>	180
		968	=>	41
		970	=>	5
		973	=>	217
		997	=>	181
		999	=>	133
		1001	=>	161
		1003	=>	195
		1005	=>	63 and 151
		1007	=>	220
		1008	=>	199
		1010	=>	164
		1012	=>	62
		1014	=>	37
		1041	=>	148
		1043	=>	150
		1044	=>	128
		1046	=>	38
		1048	=>	152
		1050	=>	219
		1052	=>	149
		1054	=>	79 and 187
		1056	=>	205
		1057	=>	158
		1059	=>	102
		1061	=>	156
		1064	=>	157
		1084	=>	4
		1086	=>	76
		1088	=>	204
		1090	=>	75
		1092	=>	33 and 67
		1094	=>	44
		1095	=>	179
		1097	=>	70
		1099	=>	228
		1101	=>	60
		1132	=>	82
		1133	=>	61
		1135	=>	53
		1137	=>	118
		1160	=>	18
		1161	=>	110
		1162	=>	27
		1163	=>	222 and 224
		1165	=>	177
		1166	=>	226
		1168	=>	8
		1192	=>	124
		1193	=>	10
		1194	=>	39
		1222	=>	202
		1224	=>	96
		1225	=>	46
		1227	=>	65
		1228	=>	43
		1230	=>	98
		1260	=>	194
		1261	=>	142
		1263	=>	184
		1265	=>	45
		1288	=>	36
		1289	=>	58
		1290	=>	106
		1291	=>	68 and 89
		1293	=>	109
		1294	=>	11
		1296	=>	99
		1324	=>	114
		1325	=>	227
		1327	=>	171
		1328	=>	30
		1360	=>	212
		1362	=>	170
		1363	=>	51
		1365	=>	134
		1366	=>	12
		1368	=>	221
		1370	=>	167
		1394	=>	90
		1396	=>	213
		1398	=>	121
		1400	=>	211
		1403	=>	94
		1404	=>	129 and 190
		1406	=>	206
		1407	=>	57
		1409	=>	92
		1411	=>	101
		1414	=>	19
		1415	=>	97
		1439	=>	3
		1441	=>	55
		1443	=>	155
		1445	=>	93
		1448	=>	77
		1449	=>	50 and 123
		1451	=>	153
		1452	=>	28
		1454	=>	137
		1456	=>	84
		1459	=>	20
		1460	=>	113

Class: public surge.util.Items	NameNotChanged
	Source: "Items.java"
	FieldsOf: surge.util.Items
	MethodsOf: surge.util.Items
		public static void damage(org.bukkit.inventory.ItemStack, int) 	NameNotChanged
		public static short getDurability(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static double getDurabilityPercent(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static short getMaxDurability(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean hasDurability(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean hasEnchantment(org.bukkit.inventory.ItemStack, org.bukkit.enchantments.Enchantment) 	NameNotChanged
		public static boolean hasEnchantment(org.bukkit.inventory.ItemStack, org.bukkit.enchantments.Enchantment, int) 	NameNotChanged
		public static boolean hasEnchantments(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean hasLore(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean hasLore(org.bukkit.inventory.ItemStack, java.util.List) 	NameNotChanged
		public static boolean hasMeta(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean hasName(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean hasName(org.bukkit.inventory.ItemStack, java.lang.String) 	NameNotChanged
		public static boolean is(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean is(org.bukkit.inventory.ItemStack, org.bukkit.Material) 	NameNotChanged
		public static boolean is(org.bukkit.inventory.ItemStack, org.bukkit.Material, byte) 	NameNotChanged
		public static boolean is(org.bukkit.inventory.ItemStack, org.bukkit.Material, int) 	NameNotChanged
		public static boolean is(org.bukkit.inventory.ItemStack, surge.util.MaterialBlock) 	NameNotChanged
		public static boolean isBroken(org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static boolean isMergable(org.bukkit.inventory.ItemStack, org.bukkit.inventory.ItemStack) 	NameNotChanged
		public static void setDurability(org.bukkit.inventory.ItemStack, int) 	NameNotChanged
		public static void setDurability(org.bukkit.inventory.ItemStack, short) 	NameNotChanged
		public static void setDurabilityPercent(org.bukkit.inventory.ItemStack, double) 	NameNotChanged
		public static surge.util.MaterialBlock toMaterialBlock(org.bukkit.inventory.ItemStack) 	NameNotChanged
	LineNumbersOf: surge.util.Items
		16	=>	57
		27	=>	65
		41	=>	68
		56	=>	59
		72	=>	44
		88	=>	36
		100	=>	43
		112	=>	64
		124	=>	54
		138	=>	70
		152	=>	8
		166	=>	3
		182	=>	18
		184	=>	51
		187	=>	1
		199	=>	45
		201	=>	53
		204	=>	42
		217	=>	26
		219	=>	71
		222	=>	20
		234	=>	28
		246	=>	25
		258	=>	66
		260	=>	37
		263	=>	48
		265	=>	62
		268	=>	39
		281	=>	23
		283	=>	60
		286	=>	40
		288	=>	49
		290	=>	63
		293	=>	12
		294	=>	2
		305	=>	55
		307	=>	19
		310	=>	21
		322	=>	10
		324	=>	15
		327	=>	67
		340	=>	4
		342	=>	35
		345	=>	16
		346	=>	11
		358	=>	33
		360	=>	7
		363	=>	27
		364	=>	17
		376	=>	47
		378	=>	56
		381	=>	52
		382	=>	9
		396	=>	5
		398	=>	14
		400	=>	13
		403	=>	46
		405	=>	41
		408	=>	50
		410	=>	22
		413	=>	34
		415	=>	61
		418	=>	31
		420	=>	58
		422	=>	30
		425	=>	6
		427	=>	32
		431	=>	24
		433	=>	29
		436	=>	69
		439	=>	38

Class: public final enum surge.util.MSound	NameNotChanged
	Source: "MSound.java"
	FieldsOf: surge.util.MSound
		public static final enum surge.util.MSound AMBIENCE_CAVE	NameNotChanged
		public static final enum surge.util.MSound AMBIENCE_RAIN	NameNotChanged
		public static final enum surge.util.MSound AMBIENCE_THUNDER	NameNotChanged
		public static final enum surge.util.MSound ANVIL_BREAK	NameNotChanged
		public static final enum surge.util.MSound ANVIL_LAND	NameNotChanged
		public static final enum surge.util.MSound ANVIL_USE	NameNotChanged
		public static final enum surge.util.MSound ARROW_HIT	NameNotChanged
		public static final enum surge.util.MSound BAT_DEATH	NameNotChanged
		public static final enum surge.util.MSound BAT_HURT	NameNotChanged
		public static final enum surge.util.MSound BAT_IDLE	NameNotChanged
		public static final enum surge.util.MSound BAT_LOOP	NameNotChanged
		public static final enum surge.util.MSound BAT_TAKEOFF	NameNotChanged
		public static final enum surge.util.MSound BLAZE_BREATH	NameNotChanged
		public static final enum surge.util.MSound BLAZE_DEATH	NameNotChanged
		public static final enum surge.util.MSound BLAZE_HIT	NameNotChanged
		public static final enum surge.util.MSound BURP	NameNotChanged
		public static final enum surge.util.MSound CAT_HISS	NameNotChanged
		public static final enum surge.util.MSound CAT_HIT	NameNotChanged
		public static final enum surge.util.MSound CAT_MEOW	NameNotChanged
		public static final enum surge.util.MSound CAT_PURR	NameNotChanged
		public static final enum surge.util.MSound CAT_PURREOW	NameNotChanged
		public static final enum surge.util.MSound CHEST_CLOSE	NameNotChanged
		public static final enum surge.util.MSound CHEST_OPEN	NameNotChanged
		public static final enum surge.util.MSound CHICKEN_EGG_POP	NameNotChanged
		public static final enum surge.util.MSound CHICKEN_HURT	NameNotChanged
		public static final enum surge.util.MSound CHICKEN_IDLE	NameNotChanged
		public static final enum surge.util.MSound CHICKEN_WALK	NameNotChanged
		public static final enum surge.util.MSound CLICK	NameNotChanged
		public static final enum surge.util.MSound COW_HURT	NameNotChanged
		public static final enum surge.util.MSound COW_IDLE	NameNotChanged
		public static final enum surge.util.MSound COW_WALK	NameNotChanged
		public static final enum surge.util.MSound CREEPER_DEATH	NameNotChanged
		public static final enum surge.util.MSound CREEPER_HISS	NameNotChanged
		public static final enum surge.util.MSound DIG_GRASS	NameNotChanged
		public static final enum surge.util.MSound DIG_GRAVEL	NameNotChanged
		public static final enum surge.util.MSound DIG_SAND	NameNotChanged
		public static final enum surge.util.MSound DIG_SNOW	NameNotChanged
		public static final enum surge.util.MSound DIG_STONE	NameNotChanged
		public static final enum surge.util.MSound DIG_WOOD	NameNotChanged
		public static final enum surge.util.MSound DIG_WOOL	NameNotChanged
		public static final enum surge.util.MSound DONKEY_ANGRY	NameNotChanged
		public static final enum surge.util.MSound DONKEY_DEATH	NameNotChanged
		public static final enum surge.util.MSound DONKEY_HIT	NameNotChanged
		public static final enum surge.util.MSound DONKEY_IDLE	NameNotChanged
		public static final enum surge.util.MSound DOOR_CLOSE	NameNotChanged
		public static final enum surge.util.MSound DOOR_OPEN	NameNotChanged
		public static final enum surge.util.MSound DRINK	NameNotChanged
		public static final enum surge.util.MSound EAT	NameNotChanged
		public static final enum surge.util.MSound ENDERDRAGON_DEATH	NameNotChanged
		public static final enum surge.util.MSound ENDERDRAGON_GROWL	NameNotChanged
		public static final enum surge.util.MSound ENDERDRAGON_HIT	NameNotChanged
		public static final enum surge.util.MSound ENDERDRAGON_WINGS	NameNotChanged
		public static final enum surge.util.MSound ENDERMAN_DEATH	NameNotChanged
		public static final enum surge.util.MSound ENDERMAN_HIT	NameNotChanged
		public static final enum surge.util.MSound ENDERMAN_IDLE	NameNotChanged
		public static final enum surge.util.MSound ENDERMAN_SCREAM	NameNotChanged
		public static final enum surge.util.MSound ENDERMAN_STARE	NameNotChanged
		public static final enum surge.util.MSound ENDERMAN_TELEPORT	NameNotChanged
		private static final synthetic surge.util.MSound[] ENUM$VALUES	=>	d
		public static final enum surge.util.MSound EXPLODE	NameNotChanged
		public static final enum surge.util.MSound FALL_BIG	NameNotChanged
		public static final enum surge.util.MSound FALL_SMALL	NameNotChanged
		public static final enum surge.util.MSound FIRE	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_BLAST	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_BLAST2	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_LARGE_BLAST	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_LARGE_BLAST2	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_LAUNCH	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_TWINKLE	NameNotChanged
		public static final enum surge.util.MSound FIREWORK_TWINKLE2	NameNotChanged
		public static final enum surge.util.MSound FIRE_IGNITE	NameNotChanged
		public static final enum surge.util.MSound FIZZ	NameNotChanged
		public static final enum surge.util.MSound FUSE	NameNotChanged
		public static final enum surge.util.MSound GHAST_CHARGE	NameNotChanged
		public static final enum surge.util.MSound GHAST_DEATH	NameNotChanged
		public static final enum surge.util.MSound GHAST_FIREBALL	NameNotChanged
		public static final enum surge.util.MSound GHAST_MOAN	NameNotChanged
		public static final enum surge.util.MSound GHAST_SCREAM	NameNotChanged
		public static final enum surge.util.MSound GHAST_SCREAM2	NameNotChanged
		public static final enum surge.util.MSound GLASS	NameNotChanged
		public static final enum surge.util.MSound HORSE_ANGRY	NameNotChanged
		public static final enum surge.util.MSound HORSE_ARMOR	NameNotChanged
		public static final enum surge.util.MSound HORSE_BREATHE	NameNotChanged
		public static final enum surge.util.MSound HORSE_DEATH	NameNotChanged
		public static final enum surge.util.MSound HORSE_GALLOP	NameNotChanged
		public static final enum surge.util.MSound HORSE_HIT	NameNotChanged
		public static final enum surge.util.MSound HORSE_IDLE	NameNotChanged
		public static final enum surge.util.MSound HORSE_JUMP	NameNotChanged
		public static final enum surge.util.MSound HORSE_LAND	NameNotChanged
		public static final enum surge.util.MSound HORSE_SADDLE	NameNotChanged
		public static final enum surge.util.MSound HORSE_SKELETON_DEATH	NameNotChanged
		public static final enum surge.util.MSound HORSE_SKELETON_HIT	NameNotChanged
		public static final enum surge.util.MSound HORSE_SKELETON_IDLE	NameNotChanged
		public static final enum surge.util.MSound HORSE_SOFT	NameNotChanged
		public static final enum surge.util.MSound HORSE_WOOD	NameNotChanged
		public static final enum surge.util.MSound HORSE_ZOMBIE_DEATH	NameNotChanged
		public static final enum surge.util.MSound HORSE_ZOMBIE_HIT	NameNotChanged
		public static final enum surge.util.MSound HORSE_ZOMBIE_IDLE	NameNotChanged
		public static final enum surge.util.MSound HURT_FLESH	NameNotChanged
		public static final enum surge.util.MSound IRONGOLEM_DEATH	NameNotChanged
		public static final enum surge.util.MSound IRONGOLEM_HIT	NameNotChanged
		public static final enum surge.util.MSound IRONGOLEM_THROW	NameNotChanged
		public static final enum surge.util.MSound IRONGOLEM_WALK	NameNotChanged
		public static final enum surge.util.MSound ITEM_BREAK	NameNotChanged
		public static final enum surge.util.MSound ITEM_PICKUP	NameNotChanged
		public static final enum surge.util.MSound LAVA	NameNotChanged
		public static final enum surge.util.MSound LAVA_POP	NameNotChanged
		public static final enum surge.util.MSound LEVEL_UP	NameNotChanged
		public static final enum surge.util.MSound MAGMACUBE_JUMP	NameNotChanged
		public static final enum surge.util.MSound MAGMACUBE_WALK	NameNotChanged
		public static final enum surge.util.MSound MAGMACUBE_WALK2	NameNotChanged
		public static final enum surge.util.MSound MINECART_BASE	NameNotChanged
		public static final enum surge.util.MSound MINECART_INSIDE	NameNotChanged
		public static final enum surge.util.MSound NOTE_BASS	NameNotChanged
		public static final enum surge.util.MSound NOTE_BASS_DRUM	NameNotChanged
		public static final enum surge.util.MSound NOTE_BASS_GUITAR	NameNotChanged
		public static final enum surge.util.MSound NOTE_PIANO	NameNotChanged
		public static final enum surge.util.MSound NOTE_PLING	NameNotChanged
		public static final enum surge.util.MSound NOTE_SNARE_DRUM	NameNotChanged
		public static final enum surge.util.MSound NOTE_STICKS	NameNotChanged
		public static final enum surge.util.MSound ORB_PICKUP	NameNotChanged
		public static final enum surge.util.MSound PIG_DEATH	NameNotChanged
		public static final enum surge.util.MSound PIG_IDLE	NameNotChanged
		public static final enum surge.util.MSound PIG_WALK	NameNotChanged
		public static final enum surge.util.MSound PISTON_EXTEND	NameNotChanged
		public static final enum surge.util.MSound PISTON_RETRACT	NameNotChanged
		public static final enum surge.util.MSound PORTAL	NameNotChanged
		public static final enum surge.util.MSound PORTAL_TRAVEL	NameNotChanged
		public static final enum surge.util.MSound PORTAL_TRIGGER	NameNotChanged
		public static final enum surge.util.MSound SHEEP_IDLE	NameNotChanged
		public static final enum surge.util.MSound SHEEP_SHEAR	NameNotChanged
		public static final enum surge.util.MSound SHEEP_WALK	NameNotChanged
		public static final enum surge.util.MSound SHOOT_ARROW	NameNotChanged
		public static final enum surge.util.MSound SILVERFISH_HIT	NameNotChanged
		public static final enum surge.util.MSound SILVERFISH_IDLE	NameNotChanged
		public static final enum surge.util.MSound SILVERFISH_KILL	NameNotChanged
		public static final enum surge.util.MSound SILVERFISH_WALK	NameNotChanged
		public static final enum surge.util.MSound SKELETON_DEATH	NameNotChanged
		public static final enum surge.util.MSound SKELETON_HURT	NameNotChanged
		public static final enum surge.util.MSound SKELETON_IDLE	NameNotChanged
		public static final enum surge.util.MSound SKELETON_WALK	NameNotChanged
		public static final enum surge.util.MSound SLIME_ATTACK	NameNotChanged
		public static final enum surge.util.MSound SLIME_WALK	NameNotChanged
		public static final enum surge.util.MSound SLIME_WALK2	NameNotChanged
		public static final enum surge.util.MSound SPIDER_DEATH	NameNotChanged
		public static final enum surge.util.MSound SPIDER_IDLE	NameNotChanged
		public static final enum surge.util.MSound SPIDER_WALK	NameNotChanged
		public static final enum surge.util.MSound SPLASH	NameNotChanged
		public static final enum surge.util.MSound SPLASH2	NameNotChanged
		public static final enum surge.util.MSound STEP_GRASS	NameNotChanged
		public static final enum surge.util.MSound STEP_GRAVEL	NameNotChanged
		public static final enum surge.util.MSound STEP_LADDER	NameNotChanged
		public static final enum surge.util.MSound STEP_SAND	NameNotChanged
		public static final enum surge.util.MSound STEP_SNOW	NameNotChanged
		public static final enum surge.util.MSound STEP_STONE	NameNotChanged
		public static final enum surge.util.MSound STEP_WOOD	NameNotChanged
		public static final enum surge.util.MSound STEP_WOOL	NameNotChanged
		public static final enum surge.util.MSound SUCCESSFUL_HIT	NameNotChanged
		public static final enum surge.util.MSound SWIM	NameNotChanged
		public static final enum surge.util.MSound VILLAGER_DEATH	NameNotChanged
		public static final enum surge.util.MSound VILLAGER_HAGGLE	NameNotChanged
		public static final enum surge.util.MSound VILLAGER_HIT	NameNotChanged
		public static final enum surge.util.MSound VILLAGER_IDLE	NameNotChanged
		public static final enum surge.util.MSound VILLAGER_NO	NameNotChanged
		public static final enum surge.util.MSound VILLAGER_YES	NameNotChanged
		public static final enum surge.util.MSound WATER	NameNotChanged
		public static final enum surge.util.MSound WITHER_DEATH	NameNotChanged
		public static final enum surge.util.MSound WITHER_HURT	NameNotChanged
		public static final enum surge.util.MSound WITHER_IDLE	NameNotChanged
		public static final enum surge.util.MSound WITHER_SHOOT	NameNotChanged
		public static final enum surge.util.MSound WITHER_SPAWN	NameNotChanged
		public static final enum surge.util.MSound WOLF_BARK	NameNotChanged
		public static final enum surge.util.MSound WOLF_DEATH	NameNotChanged
		public static final enum surge.util.MSound WOLF_GROWL	NameNotChanged
		public static final enum surge.util.MSound WOLF_HOWL	NameNotChanged
		public static final enum surge.util.MSound WOLF_HURT	NameNotChanged
		public static final enum surge.util.MSound WOLF_PANT	NameNotChanged
		public static final enum surge.util.MSound WOLF_SHAKE	NameNotChanged
		public static final enum surge.util.MSound WOLF_WALK	NameNotChanged
		public static final enum surge.util.MSound WOLF_WHINE	NameNotChanged
		public static final enum surge.util.MSound WOOD_CLICK	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_DEATH	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_HURT	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_IDLE	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_INFECT	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_METAL	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_PIG_ANGRY	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_PIG_DEATH	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_PIG_HURT	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_PIG_IDLE	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_REMEDY	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_UNFECT	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_WALK	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_WOOD	NameNotChanged
		public static final enum surge.util.MSound ZOMBIE_WOODBREAK	NameNotChanged
		private java.lang.String post19sound	=>	b
		private java.lang.String pre19sound	=>	a
		private org.bukkit.Sound resolvedSound	=>	c
	MethodsOf: surge.util.MSound
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public org.bukkit.Sound bukkitSound() 	NameNotChanged
		public static surge.util.MSound valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.MSound[] values() 	NameNotChanged
	LineNumbersOf: surge.util.MSound
		1	=>	21 and 71
		8	=>	84
		10	=>	26
		11	=>	201
		12	=>	130
		13	=>	99
		14	=>	58
		15	=>	179
		16	=>	97
		17	=>	125
		18	=>	136
		19	=>	37
		20	=>	6
		21	=>	107
		22	=>	78
		23	=>	87
		24	=>	157
		25	=>	35
		26	=>	83
		27	=>	75
		28	=>	145
		29	=>	106
		30	=>	164
		31	=>	161
		32	=>	19
		33	=>	184
		34	=>	79
		35	=>	22
		36	=>	25
		37	=>	188
		38	=>	20
		39	=>	40
		40	=>	117
		41	=>	15
		42	=>	1
		43	=>	23
		44	=>	206
		45	=>	47
		46	=>	122
		47	=>	187
		48	=>	10
		49	=>	207
		50	=>	104
		51	=>	51
		52	=>	32
		53	=>	74
		54	=>	165
		55	=>	158
		56	=>	147
		57	=>	197
		58	=>	82
		59	=>	49
		60	=>	162
		61	=>	138
		62	=>	11
		63	=>	139
		64	=>	196
		65	=>	199
		66	=>	36
		67	=>	119
		68	=>	28
		69	=>	90
		70	=>	66
		71	=>	151
		72	=>	126
		73	=>	63
		74	=>	76
		75	=>	182
		76	=>	176
		77	=>	29
		78	=>	62
		79	=>	17
		80	=>	192
		81	=>	108
		82	=>	96
		83	=>	43
		84	=>	113
		85	=>	131
		86	=>	109
		87	=>	14
		88	=>	148
		89	=>	60
		90	=>	116
		91	=>	142
		92	=>	146
		93	=>	194
		94	=>	153
		95	=>	156
		96	=>	50
		97	=>	67
		98	=>	38
		99	=>	189
		100	=>	114
		101	=>	203
		102	=>	127
		103	=>	111
		104	=>	195
		105	=>	163
		106	=>	134
		107	=>	168
		108	=>	56
		109	=>	129
		110	=>	102
		111	=>	98
		112	=>	65
		113	=>	13
		114	=>	80
		115	=>	27
		116	=>	45
		117	=>	202
		118	=>	172
		119	=>	133
		120	=>	92
		121	=>	169
		122	=>	183
		123	=>	166
		124	=>	85
		125	=>	143
		126	=>	69
		127	=>	44
		128	=>	24
		129	=>	118
		130	=>	120
		131	=>	5
		132	=>	18
		133	=>	193
		134	=>	132
		135	=>	115
		136	=>	178
		137	=>	160
		138	=>	174
		139	=>	70
		140	=>	53
		141	=>	150
		142	=>	175
		143	=>	72
		144	=>	144
		145	=>	149
		146	=>	128
		147	=>	73
		148	=>	185
		149	=>	30
		150	=>	31
		151	=>	16
		152	=>	154
		153	=>	64
		154	=>	198
		155	=>	112
		156	=>	124
		157	=>	159
		158	=>	110
		159	=>	55
		160	=>	86
		161	=>	41
		162	=>	12
		163	=>	81
		164	=>	4
		165	=>	88
		166	=>	135
		167	=>	54
		168	=>	152
		169	=>	180
		170	=>	61
		171	=>	95
		172	=>	3
		173	=>	103
		174	=>	89
		175	=>	204
		176	=>	52
		177	=>	200
		178	=>	46
		179	=>	173
		180	=>	155
		181	=>	39
		182	=>	33
		183	=>	91
		184	=>	9
		185	=>	94
		186	=>	191
		187	=>	171
		188	=>	101
		189	=>	48
		190	=>	140
		191	=>	34
		192	=>	205
		193	=>	170
		194	=>	167
		195	=>	100
		196	=>	77
		197	=>	59
		198	=>	177
		199	=>	68
		200	=>	93
		201	=>	137
		202	=>	141
		203	=>	190
		207	=>	121
		209	=>	7
		211	=>	42
		212	=>	57
		213	=>	2
		217	=>	8
		219	=>	181
		224	=>	123
		227	=>	186
		229	=>	105

Class: public surge.util.MaterialBlock	NameNotChanged
	Source: "MaterialBlock.java"
	FieldsOf: surge.util.MaterialBlock
		private java.lang.Byte data	=>	b
		private org.bukkit.Material material	=>	a
	MethodsOf: surge.util.MaterialBlock
		public boolean equals(java.lang.Object) 	NameNotChanged
		public java.lang.Byte getData() 	NameNotChanged
		public org.bukkit.Material getMaterial() 	NameNotChanged
		public int hashCode() 	NameNotChanged
		public void setData(java.lang.Byte) 	NameNotChanged
		public void setMaterial(org.bukkit.Material) 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.util.MaterialBlock
		26	=>	4
		27	=>	35
		28	=>	33
		29	=>	38
		32	=>	32
		33	=>	31
		34	=>	45
		35	=>	40
		38	=>	37
		39	=>	17
		40	=>	9
		41	=>	27
		44	=>	22
		45	=>	11
		46	=>	5
		47	=>	20
		51	=>	21
		56	=>	41
		57	=>	44
		61	=>	26
		66	=>	1
		67	=>	8
		72	=>	43
		74	=>	34
		77	=>	12
		83	=>	36
		84	=>	13
		85	=>	7
		86	=>	14
		87	=>	2
		93	=>	15
		95	=>	39
		97	=>	42
		99	=>	30
		101	=>	18
		103	=>	6
		105	=>	29
		106	=>	24
		108	=>	25
		110	=>	28
		113	=>	10
		115	=>	16
		117	=>	23
		119	=>	3
		121	=>	19

Class: public surge.util.P	NameNotChanged
	Source: "P.java"
	FieldsOf: surge.util.P
	MethodsOf: surge.util.P
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static boolean canFindPlayer(java.lang.String) 	NameNotChanged
		public static void clear(org.bukkit.entity.Player) 	NameNotChanged
		public static void clearEffects(org.bukkit.entity.Player) 	NameNotChanged
		public static void disable(org.bukkit.entity.Player) 	NameNotChanged
		public static void enable(org.bukkit.entity.Player) 	NameNotChanged
		public static org.bukkit.entity.Player findPlayer(java.lang.String) 	NameNotChanged
		public static org.bukkit.entity.Player getAnyPlayer() 	NameNotChanged
		public static org.bukkit.Location getCrotchLocation(org.bukkit.entity.Player) 	NameNotChanged
		public static org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Player, double, double) 	NameNotChanged
		public static org.bukkit.Location getHand(org.bukkit.entity.Player) 	NameNotChanged
		public static org.bukkit.Location getHand(org.bukkit.entity.Player, float, float) 	NameNotChanged
		public static org.bukkit.entity.Player getPlayer(java.lang.String) 	NameNotChanged
		public static surge.util.Shape getShape(org.bukkit.entity.Player) 	NameNotChanged
		public static int getTotalExperience(org.bukkit.entity.Player) 	NameNotChanged
		public static boolean hasInventoryOpen(org.bukkit.entity.Player) 	NameNotChanged
		public static void heal(org.bukkit.entity.Player) 	NameNotChanged
		public static void heal(org.bukkit.entity.Player, double) 	NameNotChanged
		public static surge.collection.GList inArea(org.bukkit.Location, double) 	NameNotChanged
		public static surge.collection.GList inArea(org.bukkit.Location, int) 	NameNotChanged
		public static surge.collection.GList inChunk(org.bukkit.Chunk) 	NameNotChanged
		public static surge.collection.GList inWorld(org.bukkit.World) 	NameNotChanged
		public static boolean isAnyOnline() 	NameNotChanged
		public static boolean isOnline(java.lang.String) 	NameNotChanged
		public static void kill(org.bukkit.entity.Player) 	NameNotChanged
		public static surge.collection.GList onlinePlayers() 	NameNotChanged
		public static void resetHunger(org.bukkit.entity.Player) 	NameNotChanged
		public static void resetMaxHeath(org.bukkit.entity.Player) 	NameNotChanged
		public static void setTotalExperience(org.bukkit.entity.Player, int) 	NameNotChanged
		public static org.bukkit.Location targetBlock(org.bukkit.entity.Player, int) 	NameNotChanged
		public static org.bukkit.entity.Entity targetEntity(org.bukkit.entity.Player, int) 	NameNotChanged
	LineNumbersOf: surge.util.P
		25	=>	40
		36	=>	62
		48	=>	39
		58	=>	35
		68	=>	38
		80	=>	71
		92	=>	36 and 58
		104	=>	33
		118	=>	3
		132	=>	47
		143	=>	31
		144	=>	28
		154	=>	53
		155	=>	44
		168	=>	27
		182	=>	59
		194	=>	29
		195	=>	7
		211	=>	75
		213	=>	15
		216	=>	67
		218	=>	19
		221	=>	1
		222	=>	56
		224	=>	76
		241	=>	25
		243	=>	51
		257	=>	54
		258	=>	20
		261	=>	68
		266	=>	55
		281	=>	69
		282	=>	16
		283	=>	13
		285	=>	61
		289	=>	17
		300	=>	78
		312	=>	26 and 79
		314	=>	24
		316	=>	10
		320	=>	18 and 63
		322	=>	9
		324	=>	23
		328	=>	77
		338	=>	11
		340	=>	48 and 65
		342	=>	49
		345	=>	4
		357	=>	64
		368	=>	22
		369	=>	43
		370	=>	37
		371	=>	21
		381	=>	50 and 52
		383	=>	34
		385	=>	8
		398	=>	41
		399	=>	70
		409	=>	14
		410	=>	73
		421	=>	74
		422	=>	42
		432	=>	2
		433	=>	5
		443	=>	30
		444	=>	66
		455	=>	72
		467	=>	81
		483	=>	60
		484	=>	6
		485	=>	32
		486	=>	46
		488	=>	80
		489	=>	57
		490	=>	12
		492	=>	45

Class: surge.util.P$1	NameNotChanged
	Source: "P.java"
	FieldsOf: surge.util.P$1
	MethodsOf: surge.util.P$1
		public bridge synthetic java.lang.Object onAdapt(java.lang.Object) 	NameNotChanged
		public org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) 	NameNotChanged
	LineNumbersOf: surge.util.P$1
		1	=>	2 and 4
		92	=>	3
		97	=>	6
		99	=>	1
		102	=>	5

Class: surge.util.P$2	NameNotChanged
	Source: "P.java"
	FieldsOf: surge.util.P$2
		private final synthetic java.lang.Double val$doff	NameNotChanged
		private final synthetic org.bukkit.entity.Player val$e	NameNotChanged
		private final synthetic org.bukkit.entity.Entity[] val$result	NameNotChanged
	MethodsOf: surge.util.P$2
		public void onTrace(org.bukkit.Location) 	NameNotChanged
	LineNumbersOf: surge.util.P$2
		1	=>	7
		224	=>	2
		229	=>	6
		231	=>	1 and 10
		233	=>	8
		235	=>	5
		236	=>	3
		237	=>	9
		240	=>	4

Class: public surge.util.PE	NameNotChanged
	Source: "PE.java"
	FieldsOf: surge.util.PE
		public static surge.util.PE ABSORPTION	NameNotChanged
		public static surge.util.PE BLINDNESS	NameNotChanged
		public static surge.util.PE CONFUSION	NameNotChanged
		public static surge.util.PE DAMAGE_RESISTANCE	NameNotChanged
		public static surge.util.PE FAST_DIGGING	NameNotChanged
		public static surge.util.PE FIRE_RESISTANCE	NameNotChanged
		public static surge.util.PE GLOWING	NameNotChanged
		public static surge.util.PE HARM	NameNotChanged
		public static surge.util.PE HEAL	NameNotChanged
		public static surge.util.PE HEALTH_BOOST	NameNotChanged
		public static surge.util.PE HUNGER	NameNotChanged
		public static surge.util.PE INCREASE_DAMAGE	NameNotChanged
		public static surge.util.PE INVISIBILITY	NameNotChanged
		public static surge.util.PE JUMP	NameNotChanged
		public static surge.util.PE LEVITATION	NameNotChanged
		public static surge.util.PE LUCK	NameNotChanged
		public static surge.util.PE NIGHT_VISION	NameNotChanged
		public static surge.util.PE POISON	NameNotChanged
		public static surge.util.PE REGENERATION	NameNotChanged
		public static surge.util.PE SATURATION	NameNotChanged
		public static surge.util.PE SLOW	NameNotChanged
		public static surge.util.PE SLOW_DIGGING	NameNotChanged
		public static surge.util.PE SPEED	NameNotChanged
		public static surge.util.PE UNLUCK	NameNotChanged
		public static surge.util.PE WATER_BREATHING	NameNotChanged
		public static surge.util.PE WEAKNESS	NameNotChanged
		public static surge.util.PE WITHER	NameNotChanged
	MethodsOf: surge.util.PE
		public surge.util.PE a(int) 	NameNotChanged
		public boolean apply(org.bukkit.entity.LivingEntity) 	NameNotChanged
		public org.bukkit.potion.PotionEffect c() 	NameNotChanged
		public void c(org.bukkit.entity.LivingEntity) 	NameNotChanged
		public void crm(org.bukkit.entity.LivingEntity) 	NameNotChanged
		public surge.util.PE d(int) 	NameNotChanged
		public static surge.util.PE defaulted(org.bukkit.potion.PotionEffectType) 	NameNotChanged
		public boolean equals(java.lang.Object) 	NameNotChanged
		public int getAmplifier() 	NameNotChanged
		public int getDuration() 	NameNotChanged
		public org.bukkit.potion.PotionEffectType getType() 	NameNotChanged
		public boolean hasParticles() 	NameNotChanged
		public int hashCode() 	NameNotChanged
		public boolean isAmbient() 	NameNotChanged
		public void rm(org.bukkit.entity.LivingEntity) 	NameNotChanged
		public java.util.Map serialize() 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.util.PE
		50	=>	24
		51	=>	3
		55	=>	46
		56	=>	17
		60	=>	21
		61	=>	1
		65	=>	15
		66	=>	23
		71	=>	47
		77	=>	27
		79	=>	22
		85	=>	34
		91	=>	2
		97	=>	7
		103	=>	19
		109	=>	53
		115	=>	16
		121	=>	43
		127	=>	9
		132	=>	26
		144	=>	4
		156	=>	35
		166	=>	33
		177	=>	38
		178	=>	50
		182	=>	6
		183	=>	40
		187	=>	31
		188	=>	30
		192	=>	32
		193	=>	29
		194	=>	44
		195	=>	39
		196	=>	37
		197	=>	45
		198	=>	20
		199	=>	52
		200	=>	36
		201	=>	5
		202	=>	48
		203	=>	11
		204	=>	14
		205	=>	18
		206	=>	10
		207	=>	49
		208	=>	42
		209	=>	25
		210	=>	8
		211	=>	51
		212	=>	28
		213	=>	12
		214	=>	41
		215	=>	13

Class: public surge.util.Paste	NameNotChanged
	Source: "Paste.java"
	FieldsOf: surge.util.Paste
	MethodsOf: surge.util.Paste
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static java.lang.String paste(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.util.Paste
		15	=>	5
		28	=>	1
		29	=>	4
		30	=>	9
		31	=>	2
		32	=>	7
		33	=>	3
		34	=>	8
		36	=>	6

Class: public abstract annotation surge.util.Persist	NameNotChanged
	Source: "Persist.java"
	FieldsOf: surge.util.Persist
	MethodsOf: surge.util.Persist
	LineNumbersOf: surge.util.Persist

Class: public surge.util.PluginUtil	NameNotChanged
	Source: "PluginUtil.java"
	FieldsOf: surge.util.PluginUtil
	MethodsOf: surge.util.PluginUtil
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static void disable(org.bukkit.plugin.Plugin) 	NameNotChanged
		public static void disableAll() 	NameNotChanged
		public static void enable(org.bukkit.plugin.Plugin) 	NameNotChanged
		public static void enableAll() 	NameNotChanged
		public static java.util.List findByCommand(java.lang.String) 	NameNotChanged
		public static java.lang.String getFormattedName(org.bukkit.plugin.Plugin) 	NameNotChanged
		public static java.lang.String getFormattedName(org.bukkit.plugin.Plugin, boolean) 	NameNotChanged
		public static org.bukkit.plugin.Plugin getPluginByName(java.lang.String) 	NameNotChanged
		public static java.lang.String getPluginFileName(java.lang.String) 	NameNotChanged
		public static java.util.List getPluginNames(boolean) 	NameNotChanged
		public static java.lang.String getPluginVersion(java.lang.String) 	NameNotChanged
		public static java.lang.String getUsages(org.bukkit.plugin.Plugin) 	NameNotChanged
		public static void load(java.lang.String) 	NameNotChanged
		private static void load(org.bukkit.plugin.Plugin) 	=>	a
		public static void reload(org.bukkit.plugin.Plugin) 	NameNotChanged
		public static void reloadAll() 	NameNotChanged
		public static void unload(org.bukkit.plugin.Plugin) 	NameNotChanged
	LineNumbersOf: surge.util.PluginUtil
		61	=>	97
		72	=>	127
		73	=>	173
		74	=>	139
		81	=>	105 and 134
		83	=>	79
		85	=>	2
		95	=>	60
		97	=>	165
		99	=>	47
		106	=>	131 and 144
		108	=>	120
		110	=>	140
		121	=>	71
		135	=>	125
		136	=>	181
		137	=>	155
		139	=>	10
		142	=>	40
		154	=>	78 and 162
		156	=>	177
		157	=>	170
		159	=>	74
		169	=>	56
		170	=>	89 and 154
		171	=>	52
		172	=>	37
		184	=>	22
		185	=>	151
		186	=>	11
		187	=>	24
		200	=>	84
		202	=>	141
		204	=>	1
		206	=>	101
		207	=>	18 and 129
		209	=>	87
		210	=>	85
		212	=>	49
		217	=>	166
		219	=>	132
		222	=>	62
		237	=>	147
		239	=>	64 and 159
		243	=>	172
		245	=>	100
		249	=>	94
		251	=>	69 and 176
		255	=>	95
		258	=>	27
		260	=>	133
		261	=>	142
		266	=>	156
		268	=>	7 and 65
		272	=>	113
		275	=>	46
		278	=>	8
		280	=>	98
		282	=>	19
		284	=>	160
		285	=>	149
		292	=>	43
		295	=>	29 and 83
		297	=>	35
		299	=>	117
		316	=>	123
		337	=>	82
		338	=>	6
		342	=>	180
		344	=>	58 and 184
		346	=>	153
		350	=>	164
		351	=>	80
		353	=>	128
		357	=>	72
		364	=>	93
		377	=>	111
		379	=>	161
		381	=>	53
		383	=>	146
		386	=>	77
		388	=>	185
		390	=>	92 and 145
		392	=>	55
		396	=>	67
		397	=>	118
		399	=>	42
		400	=>	175
		403	=>	33
		405	=>	38
		413	=>	61
		414	=>	108
		415	=>	48
		417	=>	136
		418	=>	75
		420	=>	121
		422	=>	16
		423	=>	88
		426	=>	174
		427	=>	126
		429	=>	76
		441	=>	50
		443	=>	178
		444	=>	109
		446	=>	182
		453	=>	122 and 168
		455	=>	119
		457	=>	135
		469	=>	169
		471	=>	106
		473	=>	112
		475	=>	137
		477	=>	12
		478	=>	81
		479	=>	124
		481	=>	14
		483	=>	25
		486	=>	20
		491	=>	163
		492	=>	115
		493	=>	28
		495	=>	158
		496	=>	31
		497	=>	51
		501	=>	138
		502	=>	183
		503	=>	4
		504	=>	157
		505	=>	26
		507	=>	5
		510	=>	32
		511	=>	30
		512	=>	102
		514	=>	90
		515	=>	45
		516	=>	73
		518	=>	17
		519	=>	63
		521	=>	39
		522	=>	171
		524	=>	179
		526	=>	148
		527	=>	150
		531	=>	103
		533	=>	116
		534	=>	36
		536	=>	23
		537	=>	41
		539	=>	114
		541	=>	13 and 110
		543	=>	70 and 96
		545	=>	57
		546	=>	91
		548	=>	44
		554	=>	99
		556	=>	15 and 34
		558	=>	86
		559	=>	143
		561	=>	107
		562	=>	68
		564	=>	130
		565	=>	167
		574	=>	21
		576	=>	66
		580	=>	59
		581	=>	104
		582	=>	54
		584	=>	3
		593	=>	9
		595	=>	152

Class: public surge.util.PositionalSelector	NameNotChanged
	Source: "PositionalSelector.java"
	FieldsOf: surge.util.PositionalSelector
		private surge.collection.GSet allowedChunks	=>	a
	MethodsOf: surge.util.PositionalSelector
		public void addAllWorlds() 	NameNotChanged
		public void addChunk(org.bukkit.Chunk) 	NameNotChanged
		public void addWorld(org.bukkit.World) 	NameNotChanged
		public surge.collection.GSet getAllowedChunks() 	NameNotChanged
	LineNumbersOf: surge.util.PositionalSelector
		12	=>	6
		14	=>	4
		15	=>	16
		19	=>	12
		20	=>	5
		21	=>	1
		23	=>	7
		25	=>	11
		26	=>	15
		30	=>	3
		31	=>	14
		35	=>	2
		36	=>	13
		40	=>	8
		41	=>	9
		45	=>	10

Class: public final enum surge.util.Protocol	NameNotChanged
	Source: "Protocol.java"
	FieldsOf: surge.util.Protocol
		private static final synthetic surge.util.Protocol[] $VALUES	=>	c
		public static final enum surge.util.Protocol B1_2_4	NameNotChanged
		public static final enum surge.util.Protocol B1_2_5	NameNotChanged
		public static final enum surge.util.Protocol B1_3_1	NameNotChanged
		public static final enum surge.util.Protocol B1_3_2	NameNotChanged
		public static final enum surge.util.Protocol B1_4_2	NameNotChanged
		public static final enum surge.util.Protocol B1_4_4	NameNotChanged
		public static final enum surge.util.Protocol B1_4_5	NameNotChanged
		public static final enum surge.util.Protocol B1_4_6	NameNotChanged
		public static final enum surge.util.Protocol B1_4_7	NameNotChanged
		public static final enum surge.util.Protocol B1_5	NameNotChanged
		public static final enum surge.util.Protocol B1_5_1	NameNotChanged
		public static final enum surge.util.Protocol B1_5_2	NameNotChanged
		public static final enum surge.util.Protocol B1_6_1	NameNotChanged
		public static final enum surge.util.Protocol B1_6_2	NameNotChanged
		public static final enum surge.util.Protocol B1_6_3	NameNotChanged
		public static final enum surge.util.Protocol B1_6_4	NameNotChanged
		public static final enum surge.util.Protocol EARLIEST	NameNotChanged
		public static final enum surge.util.Protocol LATEST	NameNotChanged
		public static final enum surge.util.Protocol R1_10	NameNotChanged
		public static final enum surge.util.Protocol R1_10_1	NameNotChanged
		public static final enum surge.util.Protocol R1_10_2	NameNotChanged
		public static final enum surge.util.Protocol R1_11	NameNotChanged
		public static final enum surge.util.Protocol R1_11_1	NameNotChanged
		public static final enum surge.util.Protocol R1_11_2	NameNotChanged
		public static final enum surge.util.Protocol R1_12	NameNotChanged
		public static final enum surge.util.Protocol R1_12_1	NameNotChanged
		public static final enum surge.util.Protocol R1_12_2	NameNotChanged
		public static final enum surge.util.Protocol R1_12_2_PRE	NameNotChanged
		public static final enum surge.util.Protocol R1_7_1	NameNotChanged
		public static final enum surge.util.Protocol R1_7_10	NameNotChanged
		public static final enum surge.util.Protocol R1_7_2	NameNotChanged
		public static final enum surge.util.Protocol R1_7_3	NameNotChanged
		public static final enum surge.util.Protocol R1_7_4	NameNotChanged
		public static final enum surge.util.Protocol R1_7_5	NameNotChanged
		public static final enum surge.util.Protocol R1_7_6	NameNotChanged
		public static final enum surge.util.Protocol R1_7_7	NameNotChanged
		public static final enum surge.util.Protocol R1_7_8	NameNotChanged
		public static final enum surge.util.Protocol R1_7_9	NameNotChanged
		public static final enum surge.util.Protocol R1_8	NameNotChanged
		public static final enum surge.util.Protocol R1_8_1	NameNotChanged
		public static final enum surge.util.Protocol R1_8_2	NameNotChanged
		public static final enum surge.util.Protocol R1_8_3	NameNotChanged
		public static final enum surge.util.Protocol R1_8_4	NameNotChanged
		public static final enum surge.util.Protocol R1_8_5	NameNotChanged
		public static final enum surge.util.Protocol R1_8_6	NameNotChanged
		public static final enum surge.util.Protocol R1_8_7	NameNotChanged
		public static final enum surge.util.Protocol R1_8_8	NameNotChanged
		public static final enum surge.util.Protocol R1_8_9	NameNotChanged
		public static final enum surge.util.Protocol R1_9	NameNotChanged
		public static final enum surge.util.Protocol R1_9_1	NameNotChanged
		public static final enum surge.util.Protocol R1_9_2	NameNotChanged
		public static final enum surge.util.Protocol R1_9_3	NameNotChanged
		public static final enum surge.util.Protocol R1_9_4	NameNotChanged
		public static final enum surge.util.Protocol UNKNOWN	NameNotChanged
		private java.lang.String search	=>	b
		private int version	=>	a
	MethodsOf: surge.util.Protocol
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public int getMetaVersion() 	NameNotChanged
		public static surge.util.Protocol getProtocolVersion() 	NameNotChanged
		public int getVersion() 	NameNotChanged
		public java.lang.String getVersionString() 	NameNotChanged
		public boolean isActualVersion() 	NameNotChanged
		public boolean isNettySupported() 	NameNotChanged
		public boolean isServerVersion() 	NameNotChanged
		public surge.util.ProtocolRange to(surge.util.Protocol) 	NameNotChanged
		public static surge.util.Protocol valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.Protocol[] values() 	NameNotChanged
	LineNumbersOf: surge.util.Protocol
		5	=>	31, 40 and 45
		7	=>	71
		8	=>	77
		9	=>	39
		10	=>	2
		11	=>	51
		12	=>	36
		13	=>	58
		14	=>	73
		15	=>	17
		16	=>	29
		17	=>	59
		18	=>	54
		19	=>	19
		20	=>	41
		21	=>	46
		22	=>	14
		23	=>	64
		24	=>	27
		25	=>	62
		26	=>	21
		27	=>	9
		28	=>	5
		29	=>	65
		30	=>	25
		31	=>	4
		32	=>	60
		33	=>	13
		34	=>	68
		35	=>	1
		36	=>	12
		37	=>	43
		38	=>	11
		39	=>	74
		40	=>	32
		41	=>	50
		42	=>	48
		43	=>	3
		44	=>	61
		45	=>	16
		46	=>	67
		47	=>	30
		48	=>	37
		49	=>	44
		50	=>	66
		51	=>	53
		52	=>	20
		53	=>	24
		54	=>	18
		55	=>	38
		56	=>	6
		57	=>	72
		58	=>	15
		59	=>	10
		60	=>	55
		66	=>	69
		67	=>	23
		68	=>	33
		70	=>	26
		72	=>	56
		74	=>	49
		78	=>	8 and 47
		80	=>	34
		82	=>	70
		86	=>	75
		91	=>	52
		96	=>	22
		101	=>	35
		106	=>	76
		111	=>	57
		116	=>	63
		118	=>	42
		121	=>	28
		126	=>	7

Class: public surge.util.ProtocolRange	NameNotChanged
	Source: "ProtocolRange.java"
	FieldsOf: surge.util.ProtocolRange
		private surge.util.Protocol from	=>	a
		private surge.util.Protocol to	=>	b
	MethodsOf: surge.util.ProtocolRange
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public boolean contains(surge.util.Protocol) 	NameNotChanged
		public surge.util.Protocol getFrom() 	NameNotChanged
		public surge.util.Protocol getTo() 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
	LineNumbersOf: surge.util.ProtocolRange
		9	=>	4
		10	=>	8
		11	=>	2
		12	=>	3
		16	=>	6
		21	=>	7
		26	=>	5
		32	=>	1

Class: public surge.util.Range	NameNotChanged
	Source: "Range.java"
	FieldsOf: surge.util.Range
		private double max	=>	b
		private double min	=>	a
	MethodsOf: surge.util.Range
		public double getMax() 	NameNotChanged
		public double getMin() 	NameNotChanged
		public boolean isWithin(double) 	NameNotChanged
		public boolean isWithin(int) 	NameNotChanged
		public boolean isWithin(long) 	NameNotChanged
		public double randomNext() 	NameNotChanged
		public int randomNextInt() 	NameNotChanged
		public long randomNextLong() 	NameNotChanged
		public void setMax(double) 	NameNotChanged
		public void setMin(double) 	NameNotChanged
	LineNumbersOf: surge.util.Range
		21	=>	17
		23	=>	1
		24	=>	12
		25	=>	6
		37	=>	18
		38	=>	9
		50	=>	7
		51	=>	10
		60	=>	5
		70	=>	19
		80	=>	13
		92	=>	15
		104	=>	3
		116	=>	11
		121	=>	20
		126	=>	8
		127	=>	14
		131	=>	4
		136	=>	16
		137	=>	2

Class: public surge.util.RayTrace	NameNotChanged
	Source: "RayTrace.java"
	FieldsOf: surge.util.RayTrace
		private org.bukkit.util.Vector direction	=>	b
		private java.lang.Double distanceCovered	=>	d
		private java.lang.Double maxDistance	=>	c
		private org.bukkit.Location start	=>	a
		private java.lang.Double step	=>	e
		private java.lang.Boolean stop	=>	f
	MethodsOf: surge.util.RayTrace
		public org.bukkit.util.Vector getDirection() 	NameNotChanged
		public java.lang.Double getDistanceCovered() 	NameNotChanged
		public java.lang.Double getMaxDistance() 	NameNotChanged
		public org.bukkit.Location getStart() 	NameNotChanged
		public java.lang.Double getStep() 	NameNotChanged
		public void onTrace(org.bukkit.Location) 	NameNotChanged
		public void setDirection(org.bukkit.util.Vector) 	NameNotChanged
		public void setDistanceCovered(java.lang.Double) 	NameNotChanged
		public void setMaxDistance(java.lang.Double) 	NameNotChanged
		public void setStart(org.bukkit.Location) 	NameNotChanged
		public void setStep(java.lang.Double) 	NameNotChanged
		public void stop() 	NameNotChanged
		public void trace() 	NameNotChanged
	LineNumbersOf: surge.util.RayTrace
		37	=>	29
		38	=>	31
		39	=>	18
		40	=>	11
		41	=>	12
		42	=>	17
		43	=>	28
		44	=>	13
		51	=>	20
		53	=>	34
		55	=>	7
		56	=>	27
		57	=>	35
		58	=>	9
		60	=>	32
		62	=>	26
		64	=>	33
		65	=>	6
		73	=>	5
		74	=>	21
		85	=>	1
		89	=>	4
		94	=>	25
		95	=>	36
		99	=>	16
		104	=>	8
		105	=>	3
		109	=>	24
		114	=>	19
		115	=>	10
		119	=>	23
		124	=>	2
		125	=>	22
		129	=>	30
		134	=>	15
		135	=>	14

Class: public final surge.util.ReflectionUtils	NameNotChanged
	Source: "ReflectionUtils.java"
	FieldsOf: surge.util.ReflectionUtils
	MethodsOf: surge.util.ReflectionUtils
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static java.lang.reflect.Constructor getConstructor(java.lang.Class, java.lang.Class[]) 	NameNotChanged
		public static java.lang.reflect.Constructor getConstructor(java.lang.String, surge.util.ReflectionUtils$PackageType, java.lang.Class[]) 	NameNotChanged
		public static java.lang.reflect.Field getField(java.lang.Class, boolean, java.lang.String) 	NameNotChanged
		public static java.lang.reflect.Field getField(java.lang.String, surge.util.ReflectionUtils$PackageType, boolean, java.lang.String) 	NameNotChanged
		public static java.lang.reflect.Method getMethod(java.lang.Class, java.lang.String, java.lang.Class[]) 	NameNotChanged
		public static java.lang.reflect.Method getMethod(java.lang.String, surge.util.ReflectionUtils$PackageType, java.lang.String, java.lang.Class[]) 	NameNotChanged
		public static java.lang.Object getValue(java.lang.Object, boolean, java.lang.String) 	NameNotChanged
		public static java.lang.Object getValue(java.lang.Object, java.lang.Class, boolean, java.lang.String) 	NameNotChanged
		public static java.lang.Object getValue(java.lang.Object, java.lang.String, surge.util.ReflectionUtils$PackageType, boolean, java.lang.String) 	NameNotChanged
		public static java.lang.Object instantiateObject(java.lang.Class, java.lang.Object[]) 	NameNotChanged
		public static java.lang.Object instantiateObject(java.lang.String, surge.util.ReflectionUtils$PackageType, java.lang.Object[]) 	NameNotChanged
		public static java.lang.Object invokeMethod(java.lang.Object, java.lang.Class, java.lang.String, java.lang.Object[]) 	NameNotChanged
		public static java.lang.Object invokeMethod(java.lang.Object, java.lang.String, java.lang.Object[]) 	NameNotChanged
		public static java.lang.Object invokeMethod(java.lang.Object, java.lang.String, surge.util.ReflectionUtils$PackageType, java.lang.String, java.lang.Object[]) 	NameNotChanged
		public static void setValue(java.lang.Object, boolean, java.lang.String, java.lang.Object) 	NameNotChanged
		public static void setValue(java.lang.Object, java.lang.Class, boolean, java.lang.String, java.lang.Object) 	NameNotChanged
		public static void setValue(java.lang.Object, java.lang.String, surge.util.ReflectionUtils$PackageType, boolean, java.lang.String, java.lang.Object) 	NameNotChanged
	LineNumbersOf: surge.util.ReflectionUtils
		33	=>	20
		36	=>	24
		56	=>	13
		57	=>	9 and 33
		59	=>	36
		61	=>	2
		63	=>	12
		65	=>	35
		89	=>	28
		119	=>	4
		156	=>	23
		178	=>	18
		179	=>	27 and 34
		181	=>	26
		183	=>	10
		185	=>	19
		187	=>	29
		213	=>	22
		243	=>	6
		276	=>	16
		312	=>	25
		332	=>	31
		333	=>	30
		334	=>	3
		360	=>	14
		387	=>	7
		419	=>	17
		446	=>	32
		475	=>	8
		476	=>	21
		509	=>	11
		510	=>	15
		536	=>	5
		537	=>	1

Class: public final enum surge.util.ReflectionUtils$DataType	NameNotChanged
	Source: "ReflectionUtils.java"
	FieldsOf: surge.util.ReflectionUtils$DataType
		public static final enum surge.util.ReflectionUtils$DataType BOOLEAN	NameNotChanged
		public static final enum surge.util.ReflectionUtils$DataType BYTE	NameNotChanged
		public static final enum surge.util.ReflectionUtils$DataType CHARACTER	NameNotChanged
		private static final java.util.Map CLASS_MAP	=>	a
		public static final enum surge.util.ReflectionUtils$DataType DOUBLE	NameNotChanged
		private static final synthetic surge.util.ReflectionUtils$DataType[] ENUM$VALUES	=>	d
		public static final enum surge.util.ReflectionUtils$DataType FLOAT	NameNotChanged
		public static final enum surge.util.ReflectionUtils$DataType INTEGER	NameNotChanged
		public static final enum surge.util.ReflectionUtils$DataType LONG	NameNotChanged
		public static final enum surge.util.ReflectionUtils$DataType SHORT	NameNotChanged
		private final java.lang.Class primitive	=>	b
		private final java.lang.Class reference	=>	c
	MethodsOf: surge.util.ReflectionUtils$DataType
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static boolean compare(java.lang.Class[], java.lang.Class[]) 	NameNotChanged
		public static surge.util.ReflectionUtils$DataType fromClass(java.lang.Class) 	NameNotChanged
		public java.lang.Class getPrimitive() 	NameNotChanged
		public static java.lang.Class getPrimitive(java.lang.Class) 	NameNotChanged
		public static java.lang.Class[] getPrimitive(java.lang.Class[]) 	NameNotChanged
		public static java.lang.Class[] getPrimitive(java.lang.Object[]) 	NameNotChanged
		public java.lang.Class getReference() 	NameNotChanged
		public static java.lang.Class getReference(java.lang.Class) 	NameNotChanged
		public static java.lang.Class[] getReference(java.lang.Class[]) 	NameNotChanged
		public static java.lang.Class[] getReference(java.lang.Object[]) 	NameNotChanged
		public static surge.util.ReflectionUtils$DataType valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.ReflectionUtils$DataType[] values() 	NameNotChanged
	LineNumbersOf: surge.util.ReflectionUtils$DataType
		1	=>	43 and 45
		632	=>	33
		634	=>	23
		641	=>	41 and 53
		643	=>	1
		644	=>	2
		646	=>	28
		656	=>	25
		658	=>	42
		659	=>	15
		660	=>	21
		669	=>	47
		679	=>	27
		691	=>	5
		704	=>	29
		705	=>	26
		718	=>	6
		719	=>	24
		731	=>	52
		732	=>	8
		733	=>	38 and 54
		735	=>	20
		737	=>	44
		749	=>	13
		750	=>	48
		751	=>	3 and 37
		753	=>	12
		755	=>	11
		767	=>	34
		768	=>	16
		769	=>	30 and 49
		771	=>	9
		773	=>	32
		785	=>	39
		786	=>	31
		787	=>	4 and 10
		789	=>	18
		791	=>	36
		805	=>	50
		807	=>	51
		809	=>	7 and 19
		811	=>	17
		812	=>	40
		813	=>	22
		815	=>	14
		817	=>	35
		819	=>	46

Class: public final enum surge.util.ReflectionUtils$PackageType	NameNotChanged
	Source: "ReflectionUtils.java"
	FieldsOf: surge.util.ReflectionUtils$PackageType
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_BLOCK	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CHUNKIO	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_COMMAND	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CONVERSATIONS	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENCHANTMENS	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENTITY	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_EVENT	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_GENERATOR	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_HELP	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_INVENTORY	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_MAP	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_METADATA	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_POTION	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_PROJECTILES	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCHEDULER	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCOREBOARD	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UPDATER	NameNotChanged
		public static final enum surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UTIL	NameNotChanged
		private static final synthetic surge.util.ReflectionUtils$PackageType[] ENUM$VALUES	=>	b
		public static final enum surge.util.ReflectionUtils$PackageType MINECRAFT_SERVER	NameNotChanged
		private final java.lang.String path	=>	a
	MethodsOf: surge.util.ReflectionUtils$PackageType
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public java.lang.Class getClass(java.lang.String) 	NameNotChanged
		public java.lang.String getPath() 	NameNotChanged
		public static java.lang.String getServerVersion() 	NameNotChanged
		public java.lang.String toString() 	NameNotChanged
		public static surge.util.ReflectionUtils$PackageType valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.ReflectionUtils$PackageType[] values() 	NameNotChanged
	LineNumbersOf: surge.util.ReflectionUtils$PackageType
		1	=>	3 and 7
		548	=>	6
		550	=>	9
		560	=>	4
		562	=>	11
		563	=>	8
		575	=>	1
		576	=>	5
		585	=>	13
		600	=>	10
		607	=>	2
		617	=>	12

Class: public abstract surge.util.Refreshable	NameNotChanged
	Source: "Refreshable.java"
	FieldsOf: surge.util.Refreshable
	MethodsOf: surge.util.Refreshable
		public abstract void refresh() 	NameNotChanged
	LineNumbersOf: surge.util.Refreshable

Class: public final enum surge.util.SQLOperation	NameNotChanged
	Source: "SQLOperation.java"
	FieldsOf: surge.util.SQLOperation
		private static final synthetic surge.util.SQLOperation[] ENUM$VALUES	=>	a
		public static final enum surge.util.SQLOperation LOAD	NameNotChanged
		public static final enum surge.util.SQLOperation SAVE	NameNotChanged
	MethodsOf: surge.util.SQLOperation
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static surge.util.SQLOperation valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.SQLOperation[] values() 	NameNotChanged
	LineNumbersOf: surge.util.SQLOperation
		1	=>	2 and 3
		3	=>	4 and 5
		5	=>	1

Class: public final enum surge.util.ServerState	NameNotChanged
	Source: "ServerState.java"
	FieldsOf: surge.util.ServerState
		public static final enum surge.util.ServerState DISABLE	NameNotChanged
		public static final enum surge.util.ServerState ENABLE	NameNotChanged
		private static final synthetic surge.util.ServerState[] ENUM$VALUES	=>	a
		public static final enum surge.util.ServerState RUNNING	NameNotChanged
		public static final enum surge.util.ServerState START	NameNotChanged
		public static final enum surge.util.ServerState STOP	NameNotChanged
	MethodsOf: surge.util.ServerState
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static surge.util.ServerState valueOf(java.lang.String) 	NameNotChanged
		public static surge.util.ServerState[] values() 	NameNotChanged
	LineNumbersOf: surge.util.ServerState
		1	=>	2 and 13
		3	=>	3 and 6
		5	=>	1
		10	=>	10
		12	=>	9
		17	=>	14
		19	=>	11
		24	=>	8
		26	=>	7
		31	=>	4
		33	=>	5
		37	=>	12

Class: public surge.util.Shape	NameNotChanged
	Source: "Shape.java"
	FieldsOf: surge.util.Shape
		private org.bukkit.Location location	=>	a
		private org.bukkit.util.Vector offset	=>	b
		private org.bukkit.util.Vector size	=>	c
	MethodsOf: surge.util.Shape
		public org.bukkit.Location getCenter() 	NameNotChanged
		public org.bukkit.Location getLocation() 	NameNotChanged
		public org.bukkit.util.Vector getOffset() 	NameNotChanged
		public org.bukkit.util.Vector getSize() 	NameNotChanged
		public boolean isWithinShape(org.bukkit.Location) 	NameNotChanged
		public org.bukkit.Location randomLocation() 	NameNotChanged
		public org.bukkit.Location randomSurface() 	NameNotChanged
	LineNumbersOf: surge.util.Shape
		27	=>	2
		29	=>	23
		30	=>	18
		31	=>	8
		32	=>	6
		44	=>	24
		45	=>	20
		55	=>	5
		56	=>	17
		67	=>	12
		69	=>	16
		71	=>	4
		73	=>	1
		75	=>	21
		80	=>	14
		90	=>	10
		91	=>	3
		92	=>	11
		94	=>	15
		104	=>	19
		114	=>	7
		119	=>	22
		124	=>	13
		129	=>	9

Class: public surge.util.SnowLevel	NameNotChanged
	Source: "SnowLevel.java"
	FieldsOf: surge.util.SnowLevel
		private byte level	=>	a
	MethodsOf: surge.util.SnowLevel
		public byte getLevel() 	NameNotChanged
		public void setLevel(byte) 	NameNotChanged
	LineNumbersOf: surge.util.SnowLevel
		18	=>	7
		20	=>	8
		21	=>	1
		30	=>	9
		32	=>	10
		35	=>	3
		37	=>	2
		40	=>	6
		51	=>	5
		52	=>	4

Class: public abstract surge.util.T	NameNotChanged
	Source: "T.java"
	FieldsOf: surge.util.T
	MethodsOf: surge.util.T
		public abstract void onStop(long, double) 	NameNotChanged
		public void stop() 	NameNotChanged
	LineNumbersOf: surge.util.T
		15	=>	3
		16	=>	1
		17	=>	6
		32	=>	4
		34	=>	5
		35	=>	2

Class: public surge.util.TXT	NameNotChanged
	Source: "TXT.java"
	FieldsOf: surge.util.TXT
	MethodsOf: surge.util.TXT
		private static java.lang.String a(char[]) 	NameNotChanged
		private static char[] a(java.lang.String) 	NameNotChanged
		public static java.lang.String getLine(surge.util.C, int, double, java.lang.String, java.lang.String, java.lang.String) 	NameNotChanged
		public static java.lang.String line(surge.util.C, int) 	NameNotChanged
		public static java.lang.String makeTag(surge.util.C, surge.util.C, surge.util.C, java.lang.String) 	NameNotChanged
		public static java.lang.String makeTag(surge.util.C, surge.util.C, surge.util.C, surge.util.C, java.lang.String) 	NameNotChanged
		public static java.lang.String repeat(java.lang.String, int) 	NameNotChanged
		public static java.lang.String underline(surge.util.C, int) 	NameNotChanged
		public static surge.collection.GList wrap(java.lang.String, int) 	NameNotChanged
	LineNumbersOf: surge.util.TXT
		12	=>	4
		25	=>	6
		39	=>	1
		40	=>	9
		42	=>	3 and 18
		44	=>	8
		47	=>	13
		67	=>	12
		85	=>	10
		99	=>	2
		113	=>	5
		135	=>	17
		136	=>	11
		137	=>	15
		138	=>	16
		139	=>	7
		140	=>	14

Class: public abstract annotation surge.util.Tag	NameNotChanged
	Source: "Tag.java"
	FieldsOf: surge.util.Tag
	MethodsOf: surge.util.Tag
		public abstract java.lang.String value() 	NameNotChanged
	LineNumbersOf: surge.util.Tag

Class: public surge.util.Timer	NameNotChanged
	Source: "Timer.java"
	FieldsOf: surge.util.Timer
		private long cns	=>	b
		private long tns	=>	a
	MethodsOf: surge.util.Timer
		public long getLastRun() 	NameNotChanged
		public long getTime() 	NameNotChanged
		public void start() 	NameNotChanged
		public void stop() 	NameNotChanged
	LineNumbersOf: surge.util.Timer
		19	=>	7
		21	=>	3
		22	=>	5
		23	=>	11
		30	=>	4
		31	=>	1
		38	=>	6
		39	=>	8
		40	=>	2
		49	=>	9
		59	=>	10

Class: public surge.util.VectorMath	NameNotChanged
	Source: "VectorMath.java"
	FieldsOf: surge.util.VectorMath
		private static synthetic int[] $SWITCH_TABLE$org$bukkit$block$BlockFace	=>	b
		private static synthetic int[] $SWITCH_TABLE$surge$util$Axis	=>	a
	MethodsOf: surge.util.VectorMath
		static synthetic int[] $SWITCH_TABLE$org$bukkit$block$BlockFace() 	=>	b
		static synthetic int[] $SWITCH_TABLE$surge$util$Axis() 	=>	a
		public static org.bukkit.util.Vector angleDown(org.bukkit.util.Vector, float) 	NameNotChanged
		public static org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector, float) 	NameNotChanged
		public static org.bukkit.util.Vector angleRight(org.bukkit.util.Vector, float) 	NameNotChanged
		public static org.bukkit.util.Vector angleUp(org.bukkit.util.Vector, float) 	NameNotChanged
		public static org.bukkit.util.Vector clip(org.bukkit.util.Vector, int) 	NameNotChanged
		public static org.bukkit.util.Vector direction(org.bukkit.Location, org.bukkit.Location) 	NameNotChanged
		public static org.bukkit.util.Vector directionNoNormal(org.bukkit.Location, org.bukkit.Location) 	NameNotChanged
		public static org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) 	NameNotChanged
		public static double getSpeed(org.bukkit.util.Vector) 	NameNotChanged
		public static void impulse(org.bukkit.entity.Entity, org.bukkit.util.Vector) 	NameNotChanged
		public static void impulse(org.bukkit.entity.Entity, org.bukkit.util.Vector, double) 	NameNotChanged
		public static boolean isLookingNear(org.bukkit.Location, org.bukkit.Location, double) 	NameNotChanged
		public static org.bukkit.util.Vector reverse(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) 	NameNotChanged
		public static org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector, org.bukkit.util.Vector, double) 	NameNotChanged
		private static double round(double, int) 	=>	a
		public static org.bukkit.util.Vector scaleStatic(surge.util.Axis, org.bukkit.util.Vector, double) 	NameNotChanged
		public static org.bukkit.util.Vector scaleX(org.bukkit.util.Vector, double) 	NameNotChanged
		public static org.bukkit.util.Vector scaleY(org.bukkit.util.Vector, double) 	NameNotChanged
		public static org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector, double) 	NameNotChanged
		public static surge.collection.GList shift(org.bukkit.util.Vector, surge.collection.GList) 	NameNotChanged
		public static surge.collection.GList split(org.bukkit.block.BlockFace) 	NameNotChanged
		public static org.bukkit.util.Vector toVector(float, float) 	NameNotChanged
		public static org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) 	NameNotChanged
	LineNumbersOf: surge.util.VectorMath
		16	=>	33, 43 and 114
		20	=>	87
		23	=>	81
		25	=>	179
		27	=>	108
		30	=>	161
		35	=>	102
		36	=>	85
		37	=>	83
		38	=>	149
		40	=>	184
		45	=>	132
		46	=>	191
		47	=>	19
		48	=>	136
		50	=>	215
		55	=>	99
		56	=>	159
		57	=>	115
		58	=>	17
		60	=>	77
		65	=>	207
		66	=>	21
		67	=>	34
		72	=>	128
		73	=>	178
		75	=>	156
		80	=>	100
		85	=>	168
		90	=>	61
		95	=>	196
		100	=>	12
		105	=>	199
		110	=>	66
		115	=>	131
		116	=>	118
		117	=>	182
		118	=>	32
		123	=>	86
		126	=>	59
		127	=>	175
		128	=>	162
		129	=>	121
		130	=>	148
		131	=>	58
		132	=>	141
		133	=>	190
		134	=>	112
		136	=>	24
		149	=>	123
		151	=>	111
		154	=>	213
		155	=>	27
		157	=>	120
		158	=>	137
		160	=>	206
		161	=>	193
		162	=>	164
		163	=>	40
		165	=>	64
		166	=>	143
		167	=>	197
		168	=>	23
		170	=>	13
		171	=>	195
		173	=>	67
		174	=>	98
		175	=>	119
		177	=>	157
		178	=>	209
		179	=>	4
		180	=>	153
		182	=>	130
		183	=>	101
		184	=>	69
		185	=>	8
		187	=>	41
		188	=>	88
		189	=>	187
		191	=>	133
		192	=>	185
		194	=>	80
		195	=>	65
		197	=>	25
		198	=>	30
		199	=>	54
		201	=>	50
		202	=>	171
		203	=>	3
		204	=>	48
		206	=>	16
		207	=>	155
		208	=>	142
		209	=>	145
		211	=>	125
		212	=>	91
		213	=>	7
		215	=>	220
		216	=>	173
		218	=>	135
		219	=>	177
		221	=>	20
		222	=>	216
		223	=>	38
		224	=>	90
		226	=>	1
		227	=>	165
		228	=>	42
		229	=>	203
		234	=>	104
		248	=>	198
		253	=>	2
		267	=>	71
		280	=>	44
		281	=>	107
		295	=>	163
		296	=>	109
		297	=>	152
		298	=>	210
		309	=>	183
		311	=>	129
		314	=>	74
		316	=>	124
		319	=>	94
		321	=>	39
		324	=>	147
		336	=>	95
		337	=>	181
		339	=>	217
		353	=>	14 and 158
		360	=>	150
		372	=>	60
		374	=>	9 and 200
		376	=>	31
		378	=>	218
		382	=>	47 and 110
		384	=>	55
		386	=>	166
		390	=>	169 and 211
		392	=>	208
		394	=>	139
		398	=>	52 and 76
		400	=>	53
		402	=>	89
		406	=>	160 and 180
		408	=>	18
		410	=>	113
		414	=>	202
		428	=>	10
		429	=>	49
		430	=>	103
		431	=>	189
		432	=>	205
		433	=>	73
		434	=>	117
		435	=>	70
		436	=>	140
		437	=>	174
		438	=>	45
		440	=>	219
		454	=>	72
		455	=>	62
		456	=>	222
		457	=>	146
		458	=>	186
		459	=>	11
		460	=>	5
		461	=>	26
		462	=>	170
		463	=>	35
		464	=>	68
		466	=>	84
		480	=>	127
		481	=>	97
		482	=>	22
		483	=>	154
		484	=>	78
		485	=>	63
		486	=>	82
		487	=>	192
		489	=>	214
		503	=>	92
		504	=>	93
		505	=>	204
		506	=>	96
		507	=>	106
		508	=>	221
		509	=>	167
		510	=>	6
		512	=>	188
		525	=>	212
		526	=>	138
		528	=>	29
		530	=>	194
		531	=>	75
		533	=>	176
		535	=>	36
		536	=>	28
		540	=>	201
		543	=>	122
		545	=>	79
		546	=>	57
		548	=>	46
		550	=>	105
		551	=>	15
		555	=>	37
		558	=>	151
		560	=>	144
		561	=>	134
		563	=>	116
		565	=>	56
		566	=>	172
		570	=>	51
		573	=>	126

Class: surge.util.VectorMath$1	NameNotChanged
	Source: "VectorMath.java"
	FieldsOf: surge.util.VectorMath$1
		private final synthetic org.bukkit.util.Vector val$vector	NameNotChanged
	MethodsOf: surge.util.VectorMath$1
		public bridge synthetic java.lang.Object onAdapt(java.lang.Object) 	NameNotChanged
		public org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) 	NameNotChanged
	LineNumbersOf: surge.util.VectorMath$1
		1	=>	1 and 2
		353	=>	3
		358	=>	4

Class: public surge.util.W	NameNotChanged
	Source: "W.java"
	FieldsOf: surge.util.W
	MethodsOf: surge.util.W
		public static surge.collection.GList blockFaces(org.bukkit.block.Block) 	NameNotChanged
		public static surge.collection.GList blockRadius(org.bukkit.block.Block, int) 	NameNotChanged
		public static surge.collection.GList chunkFaces(org.bukkit.Chunk) 	NameNotChanged
		public static surge.collection.GList chunkRadius(org.bukkit.Chunk, int) 	NameNotChanged
		public static void colorArmor(org.bukkit.inventory.ItemStack, org.bukkit.Color) 	NameNotChanged
		public static int count(org.bukkit.entity.Player, surge.util.MaterialBlock) 	NameNotChanged
		public static double differenceOfVectors(org.bukkit.util.Vector, org.bukkit.util.Vector) 	NameNotChanged
		public static void dropXp(org.bukkit.Location, int) 	NameNotChanged
		public static surge.collection.GList getBlocks(org.bukkit.Chunk) 	NameNotChanged
		public static int getChunkX(org.bukkit.block.Block) 	NameNotChanged
		public static int getChunkY(org.bukkit.block.Block) 	NameNotChanged
		public static int getChunkZ(org.bukkit.block.Block) 	NameNotChanged
		public static org.bukkit.entity.Entity getEntity(int) 	NameNotChanged
		public static org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Entity, double, double) 	NameNotChanged
		public static int getHighestPotionLevel(org.bukkit.potion.PotionEffectType, java.util.Collection) 	NameNotChanged
		public static int getManhattanDistance(org.bukkit.Location, org.bukkit.Location, boolean) 	NameNotChanged
		public static int getManhattanDistance(org.bukkit.block.Block, org.bukkit.block.Block, boolean) 	NameNotChanged
		public static surge.util.MaterialBlock getMaterialBlock(java.lang.String) 	NameNotChanged
		public static org.bukkit.block.Block[] getRelative(org.bukkit.block.Block, org.bukkit.block.BlockFace[]) 	NameNotChanged
		public static org.bukkit.World getSyncWorld(org.bukkit.World) 	NameNotChanged
		public static boolean has(org.bukkit.entity.Player, surge.util.MaterialBlock, int) 	NameNotChanged
		public static boolean isLookingAt(org.bukkit.entity.Entity, org.bukkit.entity.Entity, double, double) 	NameNotChanged
		public static surge.collection.GList news(org.bukkit.Location) 	NameNotChanged
		public static void setData(org.bukkit.block.Block, org.bukkit.material.MaterialData) 	NameNotChanged
		public static void setData(org.bukkit.block.Block, org.bukkit.material.MaterialData, boolean) 	NameNotChanged
		public static void setTypeAndData(org.bukkit.block.Block, org.bukkit.Material, org.bukkit.material.MaterialData) 	NameNotChanged
		public static void setTypeAndData(org.bukkit.block.Block, org.bukkit.Material, org.bukkit.material.MaterialData, boolean) 	NameNotChanged
		public static void setTypeAndRawData(org.bukkit.block.Block, org.bukkit.Material, int) 	NameNotChanged
		public static void setTypeAndRawData(org.bukkit.block.Block, org.bukkit.Material, int, boolean) 	NameNotChanged
		public static org.bukkit.Location simulateFall(org.bukkit.Location) 	NameNotChanged
		public static void take(org.bukkit.entity.Player, surge.util.MaterialBlock, int) 	NameNotChanged
		public static org.bukkit.Chunk toSync(org.bukkit.Chunk) 	NameNotChanged
		public static org.bukkit.Location toSync(org.bukkit.Location) 	NameNotChanged
		public static org.bukkit.World toSync(org.bukkit.World) 	NameNotChanged
		public static org.bukkit.block.Block toSync(org.bukkit.block.Block) 	NameNotChanged
		public static boolean visible(org.bukkit.block.Block) 	NameNotChanged
	LineNumbersOf: surge.util.W
		30	=>	111
		41	=>	136
		43	=>	88
		45	=>	123
		47	=>	126
		49	=>	74
		62	=>	89
		63	=>	105
		64	=>	113
		65	=>	121
		76	=>	83
		78	=>	147
		80	=>	12
		82	=>	122
		84	=>	158
		85	=>	91
		87	=>	143
		102	=>	65
		104	=>	36 and 107
		106	=>	81
		108	=>	97
		110	=>	77
		115	=>	16
		132	=>	9
		144	=>	29
		156	=>	157
		169	=>	24
		170	=>	153
		181	=>	94
		197	=>	118
		199	=>	64 and 103
		201	=>	1
		204	=>	150
		220	=>	148
		221	=>	109
		223	=>	41
		225	=>	114
		228	=>	141
		233	=>	63
		235	=>	40
		236	=>	70
		237	=>	124
		238	=>	125
		240	=>	134
		257	=>	69
		258	=>	54
		260	=>	82
		262	=>	115
		265	=>	160
		277	=>	34
		289	=>	25
		301	=>	46
		313	=>	151
		325	=>	84
		337	=>	80
		353	=>	127
		354	=>	96
		355	=>	68
		356	=>	72
		358	=>	33
		360	=>	4
		361	=>	154
		366	=>	76
		371	=>	71
		373	=>	146
		377	=>	156
		379	=>	17
		381	=>	162
		385	=>	100
		387	=>	20
		388	=>	60
		392	=>	144
		396	=>	8
		398	=>	39
		400	=>	23
		404	=>	117
		406	=>	30
		407	=>	11
		408	=>	145
		412	=>	28
		415	=>	119
		417	=>	38
		418	=>	99
		420	=>	21
		434	=>	90
		436	=>	10
		439	=>	138
		441	=>	15 and 128
		443	=>	55
		446	=>	49
		461	=>	87
		462	=>	149
		479	=>	14
		480	=>	86
		494	=>	116
		495	=>	22
		512	=>	101
		513	=>	32
		526	=>	2
		527	=>	57
		542	=>	37
		543	=>	93
		559	=>	13
		561	=>	5
		563	=>	110
		565	=>	52
		567	=>	131
		569	=>	42
		581	=>	120
		583	=>	44
		584	=>	130
		585	=>	78
		586	=>	163
		588	=>	135
		600	=>	31
		602	=>	79
		603	=>	3
		604	=>	18
		605	=>	7
		606	=>	61
		607	=>	66
		609	=>	75
		621	=>	159
		623	=>	73 and 85
		625	=>	43
		627	=>	137
		629	=>	56
		631	=>	133
		635	=>	50
		649	=>	108
		651	=>	59 and 132
		653	=>	112 and 129
		655	=>	35
		659	=>	62
		661	=>	26
		675	=>	95
		677	=>	27 and 98
		679	=>	19 and 102
		681	=>	106
		685	=>	104
		687	=>	53
		709	=>	47
		711	=>	161
		714	=>	140
		716	=>	6
		719	=>	142
		720	=>	152
		722	=>	45
		739	=>	51
		741	=>	48
		759	=>	67
		761	=>	155
		763	=>	92
		766	=>	58
		780	=>	139

Class: final surge.util.W$1	NameNotChanged
	Source: "W.java"
	FieldsOf: surge.util.W$1
		final synthetic java.lang.Double val$doff	NameNotChanged
		final synthetic org.bukkit.entity.Entity val$e	NameNotChanged
		final synthetic org.bukkit.entity.Entity[] val$result	NameNotChanged
	MethodsOf: surge.util.W$1
		public void onTrace(org.bukkit.Location) 	NameNotChanged
	LineNumbersOf: surge.util.W$1
		723	=>	1
		727	=>	3
		729	=>	2 and 7
		731	=>	6
		733	=>	5
		734	=>	9
		735	=>	4
		738	=>	8

Class: public surge.util.Worlds	NameNotChanged
	Source: "Worlds.java"
	FieldsOf: surge.util.Worlds
	MethodsOf: surge.util.Worlds
		public static org.bukkit.World getWorld(java.lang.String) 	NameNotChanged
		public static surge.collection.GList getWorlds() 	NameNotChanged
		public static boolean hasWorld(java.lang.String) 	NameNotChanged
	LineNumbersOf: surge.util.Worlds
		13	=>	3
		22	=>	1
		34	=>	2
		46	=>	4

Class: abstract synthetic surge.util.package-info	NameNotChanged
	Source: "package-info.java"
	FieldsOf: surge.util.package-info
	MethodsOf: surge.util.package-info
	LineNumbersOf: surge.util.package-info


AutoReflectionClass: surge.util.a


TraceBackClass: surge.util.C	Data: 21298 m
ForwardClass: react.Info Package: react	Data: 21111 g
ForwardClass: react.action.ActionPurgeEntities Package: react.action	Data: 13358 k
ForwardClass: react.api.Sampler Package: react.api	Data: 11800 n
ForwardClass: react.command.CommandMonitor Package: react.command	Data: 22944 h
ForwardClass: react.controller.SampleController Package: react.controller	Data: 23524 c
ForwardClass: react.sampler.SampleTicksPerSecond Package: react.sampler	Data: 23537 z
ForwardClass: surge.Surge Package: surge	Data: 21256 y
ForwardClass: surge.cluster.Cluster Package: surge.cluster	Data: 12293 g
ForwardClass: surge.collection.GList Package: surge.collection	Data: 22336 d
ForwardClass: surge.control.Controller Package: surge.control	Data: 12614 w
ForwardClass: surge.hotload.HotloadManager Package: surge.hotload	Data: 22946 u
ForwardClass: surge.json.JSONObject Package: surge.json	Data: 22140 e
ForwardClass: surge.math.M Package: surge.math	Data: 21288 n
ForwardClass: surge.nms.NMSX Package: surge.nms	Data: 11445 i
ForwardClass: surge.pool.Execution Package: surge.pool	Data: 22175 w
ForwardClass: surge.sched.TICK Package: surge.sched	Data: 11603 x
ForwardClass: surge.server.SuperSampler Package: surge.server	Data: 12699 d
ForwardClass: surge.text.ProgressSpinner Package: surge.text	Data: 12826 c
ForwardClass: surge.util.F Package: surge.util	Data: 21301 x
MemberClass: react.Base	Data: 954 L
MemberClass: react.Info	Data: 971
MemberClass: react.React	Data: 1070
MemberClass: react.action.ActionPurgeEntities	Data: 3219 Gw
MemberClass: react.action.ActionPurgeEntities$1	Data: 3304
MemberClass: react.api.Action	Data: 1544 p
MemberClass: react.api.ActionHandle	Data: 2132
MemberClass: react.api.ActionState	Data: 2057
MemberClass: react.api.ActionTargetType	Data: 2577
MemberClass: react.api.CommandSenderActionSource	Data: 3481
MemberClass: react.api.Gate	Data: 1323
MemberClass: react.api.IAction	Data: 1617
MemberClass: react.api.IActionSource	Data: 2242
MemberClass: react.api.ICommand	Data: 1714
MemberClass: react.api.ISampler	Data: 1735
MemberClass: react.api.ISelector	Data: 1844
MemberClass: react.api.Lang	Data: 1324
MemberClass: react.api.MSampler	Data: 1739
MemberClass: react.api.MonitorHeading	Data: 2370
MemberClass: react.api.Permissable	Data: 2081
MemberClass: react.api.ReactActionSource	Data: 2664
MemberClass: react.api.ReactCommand	Data: 2136
MemberClass: react.api.ReactPlayer	Data: 2054 V
MemberClass: react.api.SampledType	Data: 2066
MemberClass: react.api.Sampler	Data: 1662
MemberClass: react.api.SelectionMode	Data: 2261
MemberClass: react.api.Selector	Data: 1771
MemberClass: react.api.SelectorEntityType	Data: 2826
MemberClass: react.api.SelectorPosition	Data: 2624
MemberClass: react.api.Side	Data: 1327
MemberClass: react.api.SideGate	Data: 1712
MemberClass: react.api.SideGate$1	Data: 1797
MemberClass: react.api.TitleMonitor	Data: 2196
MemberClass: react.command.CommandFreeze	Data: 2672
MemberClass: react.command.CommandHelp	Data: 2456 i
MemberClass: react.command.CommandMonitor	Data: 2807 Y
MemberClass: react.controller.ActionController	Data: 3384
MemberClass: react.controller.CommandController	Data: 3481
MemberClass: react.controller.MonitorController	Data: 3522 Af
MemberClass: react.controller.PlayerController	Data: 3399
MemberClass: react.controller.SampleController	Data: 3388
MemberClass: react.sampler.SampleChunksLoaded	Data: 3198
MemberClass: react.sampler.SampleChunksLoadedPerSecond	Data: 4097 T
MemberClass: react.sampler.SampleEntitiesDrops	Data: 3350
MemberClass: react.sampler.SampleEntitiesLiving	Data: 3447
MemberClass: react.sampler.SampleEntitiesTiles	Data: 3343 w
MemberClass: react.sampler.SampleEntitiesTotal	Data: 3346
MemberClass: react.sampler.SampleMemoryAllocated	Data: 3531
MemberClass: react.sampler.SampleMemoryAllocationPerSecond	Data: 4555
MemberClass: react.sampler.SampleMemoryFree	Data: 3012
MemberClass: react.sampler.SampleMemoryMax	Data: 2920
MemberClass: react.sampler.SampleMemoryUse	Data: 2927
MemberClass: react.sampler.SampleTickTime	Data: 2787
MemberClass: react.sampler.SampleTickUtilization	Data: 3568
MemberClass: react.sampler.SampleTicksPerSecond	Data: 3402
MemberClass: surge.Main	Data: 993
MemberClass: surge.PluginAmp	Data: 1513 Q
MemberClass: surge.PluginAmp$1	Data: 1598
MemberClass: surge.PluginAmp$2	Data: 1599
MemberClass: surge.Surge	Data: 1122 r
MemberClass: surge.cluster.Cluster	Data: 2162
MemberClass: surge.cluster.ClusterBoolean	Data: 2866
MemberClass: surge.cluster.ClusterDouble	Data: 2765
MemberClass: surge.cluster.ClusterInt	Data: 2461
MemberClass: surge.cluster.ClusterLong	Data: 2562
MemberClass: surge.cluster.ClusterString	Data: 2793
MemberClass: surge.cluster.ClusterStringList	Data: 3205
MemberClass: surge.cluster.ClusterType	Data: 2580
MemberClass: surge.cluster.ConfigurationDataInput	Data: 3698 O
MemberClass: surge.cluster.ConfigurationDataOutput	Data: 3827 g
MemberClass: surge.cluster.DataCluster	Data: 2540
MemberClass: surge.cluster.ICluster	Data: 2235
MemberClass: surge.cluster.IConfigurable	Data: 2730
MemberClass: surge.cluster.IDataInput	Data: 2403
MemberClass: surge.cluster.IDataOutput	Data: 2532
MemberClass: surge.cluster.Key	Data: 1721
MemberClass: surge.cluster.KeyPointer	Data: 2458
MemberClass: surge.cluster.KeyStore	Data: 2246
MemberClass: surge.cluster.ReflectedConfigurationException	Data: 4645
MemberClass: surge.cluster.YamlDataInput	Data: 2733
MemberClass: surge.cluster.YamlDataOutput	Data: 2862
MemberClass: surge.collection.GBiset	Data: 2297
MemberClass: surge.collection.GList	Data: 2206 Nq
MemberClass: surge.collection.GList$1	Data: 2291
MemberClass: surge.collection.GMap	Data: 2080
MemberClass: surge.collection.GQuadraset	Data: 2732
MemberClass: surge.collection.GSet	Data: 2094
MemberClass: surge.collection.GSound	Data: 2315
MemberClass: surge.collection.GTriset	Data: 2429
MemberClass: surge.collection.Snippet	Data: 2462
MemberClass: surge.control.AmpedPlugin	Data: 2535 Wz
MemberClass: surge.control.Control	Data: 2162
MemberClass: surge.control.Controller	Data: 2485
MemberClass: surge.control.Disable	Data: 2117
MemberClass: surge.control.Enable	Data: 2008
MemberClass: surge.control.IController	Data: 2558
MemberClass: surge.control.Instance	Data: 2246
MemberClass: surge.control.Plugin	Data: 2048
MemberClass: surge.control.SurgePlugin	Data: 2566
MemberClass: surge.hotload.HotloadManager	Data: 2818 Oh
MemberClass: surge.json.HTTP	Data: 1420 T
MemberClass: surge.json.HTTPTokener	Data: 2148
MemberClass: surge.json.JSONArray	Data: 1925
MemberClass: surge.json.JSONException	Data: 2357
MemberClass: surge.json.JSONML	Data: 1567 z
MemberClass: surge.json.JSONObject	Data: 2013
MemberClass: surge.json.JSONObject$Null	Data: 2460
MemberClass: surge.json.JSONString	Data: 2045
MemberClass: surge.json.JSONStringer	Data: 2260
MemberClass: surge.json.JSONTokener	Data: 2142
MemberClass: surge.json.JSONWriter	Data: 2051
MemberClass: surge.json.XML	Data: 1341
MemberClass: surge.json.XMLTokener	Data: 2069
MemberClass: surge.math.ArrayUtils	Data: 2125
MemberClass: surge.math.Average	Data: 1784
MemberClass: surge.math.M	Data: 1162 Pf
MemberClass: surge.math.Profiler	Data: 1920
MemberClass: surge.nms.NMSClass	Data: 1734
MemberClass: surge.nms.NMSX	Data: 1320
MemberClass: surge.nms.NMSX$1	Data: 1405
MemberClass: surge.nms.NMSX$2	Data: 1406
MemberClass: surge.nms.PacketUtil	Data: 2008
MemberClass: surge.nms.PacketUtil$V	Data: 2130
MemberClass: surge.nms.Title	Data: 1508 Fj
MemberClass: surge.nms.VersionBukkit	Data: 2354
MemberClass: surge.pool.A	Data: 1168
MemberClass: surge.pool.A$1	Data: 1253
MemberClass: surge.pool.Execution	Data: 2051
MemberClass: surge.pool.ParallelPoolManager	Data: 3025 F
MemberClass: surge.pool.ParallelPoolManager$1	Data: 3110
MemberClass: surge.pool.ParallelThread	Data: 2516 c
MemberClass: surge.pool.QueueMode	Data: 2009
MemberClass: surge.pool.S	Data: 1186
MemberClass: surge.pool.S$1	Data: 1271
MemberClass: surge.pool.ThreadInformation	Data: 2861
MemberClass: surge.sched.IBursterator	Data: 2437
MemberClass: surge.sched.ICancellable	Data: 2350
MemberClass: surge.sched.IMasterTickComponent	Data: 3218
MemberClass: surge.sched.ITask	Data: 1659
MemberClass: surge.sched.TICK	Data: 1482
MemberClass: surge.sched.Task	Data: 1586
MemberClass: surge.sched.Task$1	Data: 1671
MemberClass: surge.sched.Task$2	Data: 1672 y
MemberClass: surge.sched.Task$3	Data: 1673 H
MemberClass: surge.sched.TaskManager	Data: 2285
MemberClass: surge.sched.TaskProfile	Data: 2307
MemberClass: surge.server.AsyncTick	Data: 2233
MemberClass: surge.server.CoreTickThread	Data: 2716
MemberClass: surge.server.MemoryMonitor	Data: 2705
MemberClass: surge.server.SuperSampler	Data: 2579 D
MemberClass: surge.server.SuperSampler$1	Data: 2664
MemberClass: surge.server.SuperSampler$2	Data: 2665 o
MemberClass: surge.server.SuperSampler$3	Data: 2666
MemberClass: surge.server.TPSMonitor	Data: 2319
MemberClass: surge.server.WorldMonitor	Data: 2592
MemberClass: surge.text.PhantomSpinner	Data: 2581 P
MemberClass: surge.text.ProgressSpinner	Data: 2707 i
MemberClass: surge.util.Adapter	Data: 1818
MemberClass: surge.util.Anchor	Data: 1716
MemberClass: surge.util.Area	Data: 1490
MemberClass: surge.util.Axis	Data: 1518
MemberClass: surge.util.BlastResistance	Data: 2656
MemberClass: surge.util.Blocks	Data: 1719
MemberClass: surge.util.C	Data: 1180
MemberClass: surge.util.C$1	Data: 1265
MemberClass: surge.util.C$10	Data: 1313
MemberClass: surge.util.C$11	Data: 1314
MemberClass: surge.util.C$12	Data: 1315
MemberClass: surge.util.C$13	Data: 1316
MemberClass: surge.util.C$14	Data: 1317
MemberClass: surge.util.C$15	Data: 1318
MemberClass: surge.util.C$16	Data: 1319
MemberClass: surge.util.C$17	Data: 1320
MemberClass: surge.util.C$18	Data: 1321
MemberClass: surge.util.C$19	Data: 1322
MemberClass: surge.util.C$2	Data: 1266
MemberClass: surge.util.C$20	Data: 1314
MemberClass: surge.util.C$21	Data: 1315
MemberClass: surge.util.C$22	Data: 1316
MemberClass: surge.util.C$3	Data: 1267
MemberClass: surge.util.C$4	Data: 1268
MemberClass: surge.util.C$5	Data: 1269
MemberClass: surge.util.C$6	Data: 1270
MemberClass: surge.util.C$7	Data: 1271
MemberClass: surge.util.C$8	Data: 1272
MemberClass: surge.util.C$9	Data: 1273
MemberClass: surge.util.CDou	Data: 1476
MemberClass: surge.util.CMD	Data: 1325
MemberClass: surge.util.CNum	Data: 1484
MemberClass: surge.util.Chunks	Data: 1733
MemberClass: surge.util.Cuboid	Data: 1711 h
MemberClass: surge.util.Cuboid$1	Data: 1796
MemberClass: surge.util.Cuboid$2	Data: 1797
MemberClass: surge.util.Cuboid$CuboidDirection	Data: 3274
MemberClass: surge.util.Cuboid$CuboidIterator	Data: 3187
MemberClass: surge.util.CuboidException	Data: 2654
MemberClass: surge.util.D	Data: 1181
MemberClass: surge.util.DMSRequire	Data: 2074
MemberClass: surge.util.DMSRequirement	Data: 2510
MemberClass: surge.util.Depend	Data: 1705
MemberClass: surge.util.Dimension	Data: 2047
MemberClass: surge.util.DimensionFace	Data: 2414
MemberClass: surge.util.Direction	Data: 2042
MemberClass: surge.util.Embedded	Data: 1891
MemberClass: surge.util.F	Data: 1183
MemberClass: surge.util.FU	Data: 1268
MemberClass: surge.util.FinalDouble	Data: 2206
MemberClass: surge.util.FinalFloat	Data: 2105
MemberClass: surge.util.FinalInteger	Data: 2321
MemberClass: surge.util.FinalLong	Data: 2003
MemberClass: surge.util.FinalString	Data: 2234
MemberClass: surge.util.Fingerprint	Data: 2273
MemberClass: surge.util.GListAdapter	Data: 2301
MemberClass: surge.util.Health	Data: 1711
MemberClass: surge.util.IO	Data: 1265
MemberClass: surge.util.Items	Data: 1627
MemberClass: surge.util.MSound	Data: 1711
MemberClass: surge.util.MaterialBlock	Data: 2419
MemberClass: surge.util.P	Data: 1193
MemberClass: surge.util.P$1	Data: 1278
MemberClass: surge.util.P$2	Data: 1279
MemberClass: surge.util.PE	Data: 1262
MemberClass: surge.util.Paste	Data: 1622
MemberClass: surge.util.Persist	Data: 1859
MemberClass: surge.util.PluginUtil	Data: 2150
MemberClass: surge.util.PositionalSelector	Data: 3004
MemberClass: surge.util.Protocol	Data: 1963
MemberClass: surge.util.ProtocolRange	Data: 2456
MemberClass: surge.util.Range	Data: 1606
MemberClass: surge.util.RayTrace	Data: 1908
MemberClass: surge.util.ReflectionUtils	Data: 2677
MemberClass: surge.util.ReflectionUtils$DataType	Data: 3509
MemberClass: surge.util.ReflectionUtils$PackageType	Data: 3815
MemberClass: surge.util.Refreshable	Data: 2236
MemberClass: surge.util.SQLOperation	Data: 2298
MemberClass: surge.util.ServerState	Data: 2257
MemberClass: surge.util.Shape	Data: 1610
MemberClass: surge.util.SnowLevel	Data: 2040
MemberClass: surge.util.T	Data: 1197
MemberClass: surge.util.TXT	Data: 1369
MemberClass: surge.util.Tag	Data: 1397
MemberClass: surge.util.Timer	Data: 1626
MemberClass: surge.util.VectorMath	Data: 2134 T
MemberClass: surge.util.VectorMath$1	Data: 2219
MemberClass: surge.util.W	Data: 1200
MemberClass: surge.util.W$1	Data: 1285
MemberClass: surge.util.Worlds	Data: 1748
MemberClass: surge.util.package-info	Data: 2302
