react.Base -> xymG:
    8:8:void <init>() -> <init>
    12:13:void msg(org.bukkit.command.CommandSender,java.lang.String) -> xymG
react.Info -> ofaa:
    java.lang.String CORE_REACT_DOT -> xymG
    java.lang.String CORE_NAME -> ofaa
    java.lang.String CORE_CACHE -> IOCc
    java.lang.String CORE_DOTYML -> ieQI
    java.lang.String COMMAND_HELP -> OHCj
    java.lang.String COMMAND_HELP_ALIAS_1 -> PAuG
    java.lang.String COMMAND_HELP_ALIAS_2 -> FpMi
    java.lang.String COMMAND_HELP_USAGE -> ogCH
    java.lang.String COMMAND_HELP_DESCRIPTION -> jhTS
    java.lang.String COMMAND_MONITOR -> tCMW
    java.lang.String COMMAND_MONITOR_ALIAS_1 -> PmJX
    java.lang.String COMMAND_MONITOR_ALIAS_2 -> iSnb
    java.lang.String COMMAND_MONITOR_USAGE -> CntX
    java.lang.String COMMAND_MONITOR_DESCRIPTION -> PJgD
    java.lang.String COMMAND_REACT -> eque
    java.lang.String MSG_PERMISSION -> Wyni
    java.lang.String MSG_MONITORING_STARTED -> equd
    java.lang.String MSG_MONITORING_STOPPED -> gMge
    java.lang.String NAME_TICK -> vtGL
    java.lang.String NAME_MEMORY -> TOBx
    java.lang.String NAME_CHUNKS -> Mtav
    java.lang.String NAME_ENTITIES -> VfKM
    java.lang.String STATE_MONITORING_TAB -> hQLN
    java.lang.String STATE_MONITORING_ENABLED -> SCOW
    java.lang.String STATE_MAPPING_ENABLED -> bNwx
    java.lang.String STATE_SOUND_PLAYS -> gNGq
    java.lang.String STATE_MONITORING_POSTED -> afHr
    java.lang.String STATE_MONITORING_LASTTAB -> ugpo
    java.lang.String STATE_MONITORING_SWITCHNOTIFICATION -> aviY
    java.lang.String STATE_PLAYER_HOTBAR -> ssMi
    java.lang.String STATE_PLAYER_SHIFT -> wnWg
    java.lang.String STATE_PLAYER_SCROLL -> VThC
    java.lang.String STATE_PLAYER_HEIGHT_CURRENT -> OrWK
    java.lang.String STATE_PLAYER_HEIGHT_CHANGING -> jhQx
    java.lang.String PERM_ACCESS -> KvkW
    java.lang.String PERM_MONITOR -> weff
    java.lang.String PERM_MONITOR_TITLE -> wmwN
    java.lang.String PERM_MONITOR_MAP -> IhUT
    java.lang.String PERM_MONITOR_ENVIRONMENT -> CLqJ
    java.lang.String PERM_ACT -> RbMx
    java.lang.String PERM_RELOAD -> lUFj
    java.lang.String SAMPLER_TPS -> OOsM
    java.lang.String SAMPLER_TICK -> RbPf
    java.lang.String SAMPLER_TIU -> YwfQ
    java.lang.String SAMPLER_MEM -> prWh
    java.lang.String SAMPLER_FREEMEM -> nuCV
    java.lang.String SAMPLER_MAXMEM -> lfLO
    java.lang.String SAMPLER_ALLOCMEM -> eHFB
    java.lang.String SAMPLER_MAHS -> wwKr
    java.lang.String SAMPLER_CHK -> Gapf
    java.lang.String SAMPLER_CHKS -> DYHg
    java.lang.String SAMPLER_ENT -> GQOy
    java.lang.String SAMPLER_ENTLIV -> ytaT
    java.lang.String SAMPLER_ENTDROP -> wvjk
    java.lang.String SAMPLER_ENTTILE -> SnEi
    3:3:void <init>() -> <init>
    5:65:void <clinit>() -> <clinit>
react.React -> IOCc:
    react.React instance -> mXML
    react.controller.SampleController sampleController -> TVtk
    react.controller.PlayerController playerController -> AGOG
    react.controller.MonitorController monitorController -> avkb
    react.controller.CommandController commandController -> owdR
    16:16:void <init>() -> <init>
    37:37:void enable() -> enable
    43:43:void disable() -> disable
react.api.Action -> ieQI:
    java.lang.String name -> name
    java.lang.String description -> description
    java.lang.String status -> qBTy
    react.api.ActionHandle handle -> pPSj
    react.api.ActionState state -> JRHA
    double progress -> vHrr
    13:20:void <init>(java.lang.String,java.lang.String,react.api.ActionHandle) -> <init>
    25:25:java.lang.String getName() -> getName
    31:31:java.lang.String getDescription() -> getDescription
    37:37:react.api.ActionHandle getHandleType() -> xymG
    43:43:react.api.ActionState getState() -> ofaa
    49:49:java.lang.String getStatus() -> getStatus
    55:56:void setStatus(java.lang.String) -> xymG
    61:61:double getProgress() -> getProgress
    67:68:void setProgress(double) -> setProgress
react.api.ActionHandle -> OHCj:
    react.api.ActionHandle AUTOMATIC -> IVsj
    react.api.ActionHandle MANUAL -> JbhT
    react.api.ActionHandle MUTEX -> vADW
    react.api.ActionHandle[] $VALUES -> equl
    3:3:react.api.ActionHandle[] values() -> values
    3:3:react.api.ActionHandle valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:7:void <clinit>() -> <clinit>
react.api.ActionState -> PAuG:
    react.api.ActionState IDLE -> DOuW
    react.api.ActionState QUEUED -> IWTx
    react.api.ActionState RUNNING -> tCMb
    react.api.ActionState[] $VALUES -> NUbp
    3:3:react.api.ActionState[] values() -> values
    3:3:react.api.ActionState valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:7:void <clinit>() -> <clinit>
react.api.ActionTargetType -> FpMi:
    react.api.ActionTargetType POSITIONAL -> kHsX
    react.api.ActionTargetType SYSTEM -> uFPa
    react.api.ActionTargetType[] $VALUES -> mFhv
    3:3:react.api.ActionTargetType[] values() -> values
    3:3:react.api.ActionTargetType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
react.api.CommandSenderActionSource -> ogCH:
    org.bukkit.command.CommandSender sender -> sender
    10:12:void <init>(org.bukkit.command.CommandSender) -> <init>
    16:16:org.bukkit.command.CommandSender getSender() -> getSender
react.api.IAction -> jhTS:
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    react.api.ActionHandle getHandleType() -> xymG
    void act(react.api.IActionSource,surge.util.PositionalSelector) -> xymG
    react.api.ActionState getState() -> ofaa
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> xymG
    double getProgress() -> getProgress
    void setProgress(double) -> setProgress
react.api.IActionSource -> tCMW:
react.api.ICommand -> PmJX:
    java.lang.String getCommand() -> getCommand
    java.lang.String[] getAliases() -> IOCc
    java.lang.String[] getPermissions() -> ieQI
    java.lang.String getUsage() -> getUsage
    java.lang.String getDescription() -> getDescription
    react.api.SideGate getSideGate() -> OHCj
    void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> xymG
react.api.ISampler -> iSnb:
    java.lang.String getID() -> getID
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    void setID(java.lang.String) -> setID
    void setName(java.lang.String) -> setName
    void setDescription(java.lang.String) -> setDescription
    surge.util.C getColor() -> PAuG
    surge.util.C getAltColor() -> FpMi
    void setColor(surge.util.C,surge.util.C) -> xymG
    int getInterval() -> getInterval
    void setInterval(int) -> xymG
    void sample() -> ogCH
    java.lang.String get() -> get
    void construct() -> jhTS
    void setValue(double) -> setValue
    double getValue() -> getValue
react.api.MSampler -> CntX:
    6:6:void <init>() -> <init>
    10:10:surge.server.SuperSampler ss() -> tCMW
react.api.MonitorHeading -> PJgD:
    react.api.ISampler head -> wKuc
    surge.collection.GList children -> SnDY
    java.lang.String name -> name
    13:17:void <init>(java.lang.String,react.api.ISampler) -> <init>
    21:22:void addSampler(react.api.ISampler) -> xymG
    26:26:react.api.ISampler getHead() -> PmJX
    31:32:void setHead(react.api.ISampler) -> ofaa
    36:36:surge.collection.GList getChildren() -> iSnb
    41:41:java.lang.String getHeadText() -> CntX
    46:59:java.lang.String getChildText() -> PJgD
    64:64:java.lang.String getName() -> getName
    69:70:void setName(java.lang.String) -> setName
    74:75:void setChildren(surge.collection.GList) -> xymG
react.api.Permissable -> eque:
    react.api.Permissable ACCESS -> miLy
    react.api.Permissable MONITOR -> upct
    react.api.Permissable MONITOR_TITLE -> IWUc
    react.api.Permissable MONITOR_MAP -> cJNX
    react.api.Permissable MONITOR_ENVIRONMENT -> YDaL
    react.api.Permissable ACT -> XktL
    react.api.Permissable RELOAD -> ckrt
    java.lang.String node -> ssSC
    react.api.Permissable[] $VALUES -> vbiM
    7:7:react.api.Permissable[] values() -> values
    7:7:react.api.Permissable valueOf(java.lang.String) -> valueOf
    20:30:void <init>(java.lang.String,int,java.lang.String) -> <init>
    34:34:boolean has(org.bukkit.command.CommandSender) -> xymG
    39:39:java.lang.String getNode() -> eque
    7:15:void <clinit>() -> <clinit>
react.api.ReactActionSource -> Wyni:
    3:3:void <init>() -> <init>
react.api.ReactCommand -> equd:
    java.lang.String command -> command
    java.lang.String[] aliases -> aliases
    java.lang.String[] permissions -> eqyU
    java.lang.String usage -> biQP
    java.lang.String description -> description
    react.api.SideGate sideGate -> VwOo
    13:15:void <init>() -> <init>
    20:20:java.lang.String getCommand() -> getCommand
    26:26:java.lang.String[] getAliases() -> IOCc
    32:32:java.lang.String[] getPermissions() -> ieQI
    38:38:java.lang.String getUsage() -> getUsage
    44:44:java.lang.String getDescription() -> getDescription
    50:50:react.api.SideGate getSideGate() -> OHCj
react.api.ReactPlayer -> gMge:
    surge.collection.GMap keystore -> TqJX
    boolean monitoring -> monitoring
    boolean mapping -> biQL
    int monitorSelection -> QNMx
    int plays -> NUes
    boolean monitorPosted -> uqGo
    int monitorLastSelection -> xGLa
    int switchNotification -> bFnB
    int hotbarSlot -> JblH
    boolean shift -> VwPn
    int scroll -> CxJn
    double lastHeight -> uxxA
    boolean heightMovement -> VTlb
    org.bukkit.entity.Player p -> fKJV
    38:80:void <init>(org.bukkit.entity.Player) -> <init>
    86:93:void save() -> save
    99:106:void load() -> load
    110:110:boolean isMonitoring() -> Wyni
    115:115:boolean isMapping() -> equd
    120:120:org.bukkit.entity.Player getP() -> gMge
    125:126:void setMonitoring(boolean) -> xymG
    130:131:void setMapping(boolean) -> ofaa
    135:135:int getMonitorSelection() -> vtGL
    140:141:void setMonitorSelection(int) -> ofaa
    145:145:int getHotbarSlot() -> TOBx
    150:151:void setHotbarSlot(int) -> IOCc
    155:155:boolean isShifting() -> Mtav
    160:161:void setShifting(boolean) -> IOCc
    165:165:boolean isShift() -> VfKM
    170:171:void setShift(boolean) -> ieQI
    175:175:int getScroll() -> hQLN
    180:181:void setScroll(int) -> ieQI
    185:185:int getMonitorLastSelection() -> SCOW
    190:191:void setMonitorLastSelection(int) -> OHCj
    195:196:void setP(org.bukkit.entity.Player) -> xymG
    200:200:double getLastHeight() -> bNwx
    205:206:void setLastHeight(double) -> xymG
    210:210:boolean isHeightMovement() -> gNGq
    215:216:void setHeightMovement(boolean) -> OHCj
    220:220:int getSwitchNotification() -> afHr
    225:226:void setSwitchNotification(int) -> PAuG
    230:230:boolean getMonitorPosted() -> ugpo
    235:236:void setMonitorPosted(boolean) -> PAuG
    240:240:int getPlays() -> aviY
    245:246:void setPlays(int) -> FpMi
    23:36:void <clinit>() -> <clinit>
react.api.SampledType -> vtGL:
    react.api.SampledType TPS -> mFmA
    react.api.SampledType TICK -> KCko
    react.api.SampledType TIU -> oUcM
    react.api.SampledType MEM -> afLp
    react.api.SampledType FREEMEM -> lLYs
    react.api.SampledType MAXMEM -> CLvC
    react.api.SampledType ALLOCMEM -> YECW
    react.api.SampledType MAHS -> mWnB
    react.api.SampledType CHK -> nlSS
    react.api.SampledType CHKS -> mrAX
    react.api.SampledType ENT -> Hdte
    react.api.SampledType ENTLIV -> pjGq
    react.api.SampledType ENTDROP -> jpgF
    react.api.SampledType ENTTILE -> AiST
    java.lang.String node -> ssSC
    react.api.SampledType[] $VALUES -> FyBf
    5:5:react.api.SampledType[] values() -> values
    5:5:react.api.SampledType valueOf(java.lang.String) -> valueOf
    25:35:void <init>(java.lang.String,int,java.lang.String) -> <init>
    39:39:java.lang.String getNode() -> eque
    5:20:void <clinit>() -> <clinit>
react.api.Sampler -> TOBx:
    double value -> value
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String description -> description
    surge.util.C color -> NMUS
    surge.util.C altColor -> DPYF
    int interval -> CxJN
    17:19:void <init>() -> <init>
    24:24:java.lang.String getID() -> getID
    30:30:java.lang.String getName() -> getName
    36:36:java.lang.String getDescription() -> getDescription
    42:42:surge.util.C getColor() -> PAuG
    48:48:surge.util.C getAltColor() -> FpMi
    54:54:int getInterval() -> getInterval
    void sample() -> ogCH
    void construct() -> jhTS
    java.lang.String get() -> get
    69:70:void setValue(double) -> setValue
    75:75:double getValue() -> getValue
    81:82:void setID(java.lang.String) -> setID
    87:88:void setName(java.lang.String) -> setName
    93:94:void setDescription(java.lang.String) -> setDescription
    99:101:void setColor(surge.util.C,surge.util.C) -> xymG
    106:107:void setInterval(int) -> xymG
react.api.Side -> Mtav:
    react.api.Side PLAYERS -> QMmM
    react.api.Side CONSOLE -> OOwU
    java.lang.String ss -> qJgW
    react.api.Side[] $VALUES -> ctdF
    6:6:react.api.Side[] values() -> values
    6:6:react.api.Side valueOf(java.lang.String) -> valueOf
    14:16:void <init>(java.lang.String,int,java.lang.String) -> <init>
    20:20:java.lang.String ss() -> ssMi
    25:30:react.api.Side get(org.bukkit.command.CommandSender) -> ofaa
    6:9:void <clinit>() -> <clinit>
react.api.SideGate -> VfKM:
    react.api.SideGate PLAYERS_ONLY -> vbge
    react.api.SideGate CONSOLES_ONLY -> gNKr
    react.api.SideGate ANYTHING -> teRj
    react.api.SideGate[] $VALUES -> oUbh
    3:3:react.api.SideGate[] values() -> values
    3:3:react.api.SideGate valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    11:34:boolean supports(react.api.Side) -> xymG
    3:7:void <clinit>() -> <clinit>
react.api.SideGate$1 -> VfKM$1:
    int[] $SwitchMap$react$api$SideGate -> yIpx
    13:13:void <clinit>() -> <clinit>
react.api.TitleMonitor -> hQLN:
    surge.collection.GList headings -> yuGJ
    12:14:void <init>() -> <init>
    18:19:void addHeading(react.api.MonitorHeading) -> xymG
    23:23:int getMaxSelection() -> wnWg
    28:36:int left(int) -> ogCH
    41:49:int right(int) -> jhTS
    54:54:react.api.MonitorHeading getHeadFor(int) -> tCMW
    59:77:java.lang.String getHotbarHeadFor(int,boolean,react.controller.MonitorController,react.api.ReactPlayer,int) -> xymG
    82:99:java.lang.String getHotbarFor(int,boolean) -> xymG
react.command.CommandHelp -> SCOW:
    15:22:void <init>() -> <init>
    27:28:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> xymG
react.command.CommandMonitor -> bNwx:
    17:24:void <init>() -> <init>
    29:31:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> xymG
react.controller.ActionController -> gNGq:
    5:5:void <init>() -> <init>
    11:11:void start() -> start
    17:17:void stop() -> stop
    23:23:void tick() -> tick
react.controller.CommandController -> afHr:
    surge.collection.GList commands -> XdGI
    boolean k -> HCVC
    25:25:void <init>() -> <init>
    33:34:void start() -> start
    39:40:void stop() -> stop
    44:88:void begin() -> begin
    93:97:void tick() -> tick
    101:102:void msg(org.bukkit.command.CommandSender,java.lang.String) -> xymG
    106:107:void f(org.bukkit.command.CommandSender,java.lang.String) -> ofaa
    112:198:boolean onCommand(org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String,java.lang.String[]) -> onCommand
react.controller.MonitorController -> ugpo:
    int maxCooldown -> xaAj
    react.api.TitleMonitor titleMonitor -> BdFv
    surge.collection.GMap posts -> ndEl
    33:36:void <init>() -> <init>
    41:51:void start() -> start
    55:71:void toggleMonitoring(org.bukkit.entity.Player) -> ofaa
    76:77:void stop() -> stop
    81:100:void constructMonitor() -> VThC
    104:109:float calcVolume(react.api.ReactPlayer) -> xymG
    114:114:boolean canMonitor(org.bukkit.entity.Player) -> IOCc
    119:124:boolean isMonitoring(org.bukkit.entity.Player) -> ieQI
    129:133:void startMonitoring(org.bukkit.entity.Player) -> OHCj
    137:148:void stopMonitoring(org.bukkit.entity.Player) -> PAuG
    153:164:void tick() -> tick
    168:171:void changePost(react.api.ReactPlayer) -> ofaa
    175:184:void processPlayer(react.api.ReactPlayer) -> IOCc
    188:212:void handleTriggers(react.api.ReactPlayer) -> ieQI
    216:255:void handleScrolling(react.api.ReactPlayer) -> OHCj
    259:287:void handleShifting(react.api.ReactPlayer) -> PAuG
    291:313:void handlePosting(react.api.ReactPlayer) -> FpMi
    317:335:java.lang.String prefixFor(react.api.ReactPlayer,int,int) -> xymG
    340:354:java.lang.String prefixForSub(react.api.ReactPlayer,surge.util.C,int) -> xymG
    359:366:void tickMonitor(react.api.ReactPlayer) -> ogCH
    370:370:react.api.TitleMonitor getTitleMonitor() -> OrWK
    376:380:void on(org.bukkit.event.player.PlayerJoinEvent) -> xymG
    385:394:void on(org.bukkit.event.player.PlayerToggleSneakEvent) -> xymG
    28:28:void <clinit>() -> <clinit>
react.controller.PlayerController -> aviY:
    surge.collection.GList players -> GbUh
    12:12:void <init>() -> <init>
    19:21:void start() -> start
    26:27:void stop() -> stop
    33:33:void tick() -> tick
    37:45:boolean has(org.bukkit.entity.Player) -> FpMi
    50:61:react.api.ReactPlayer getPlayer(org.bukkit.entity.Player) -> ogCH
    66:66:surge.collection.GList getPlayers() -> jhQx
    72:77:void on(org.bukkit.event.player.PlayerQuitEvent) -> xymG
react.controller.SampleController -> ssMi:
    surge.collection.GMap samplers -> brDU
    surge.server.SuperSampler ss -> XdGT
    31:35:void <init>() -> <init>
    39:40:void registerSampler(react.api.ISampler) -> IOCc
    44:44:react.api.ISampler getSampler(java.lang.String) -> ofaa
    49:69:void constructSamplers() -> KvkW
    74:76:void start() -> start
    81:83:void stop() -> stop
    88:104:void tick() -> tick
    108:108:surge.server.SuperSampler getSuperSampler() -> weff
react.sampler.SampleChunksLoaded -> wnWg:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
react.sampler.SampleChunksLoadedPerSecond -> VThC:
    surge.math.Average a -> lenX
    9:11:void <init>() -> <init>
    16:22:void construct() -> jhTS
    27:29:void sample() -> ogCH
    34:34:java.lang.String get() -> get
react.sampler.SampleEntitiesDrops -> OrWK:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
react.sampler.SampleEntitiesLiving -> jhQx:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
react.sampler.SampleEntitiesTiles -> KvkW:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
react.sampler.SampleEntitiesTotal -> weff:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
react.sampler.SampleMemoryAllocated -> wmwN:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
react.sampler.SampleMemoryAllocationPerSecond -> IhUT:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
react.sampler.SampleMemoryFree -> CLqJ:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
react.sampler.SampleMemoryMax -> RbMx:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
react.sampler.SampleMemoryUse -> lUFj:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
react.sampler.SampleTickTime -> OOsM:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
react.sampler.SampleTickUtilization -> RbPf:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
react.sampler.SampleTicksPerSecond -> YwfQ:
    8:8:void <init>() -> <init>
    13:19:void construct() -> jhTS
    24:25:void sample() -> ogCH
    30:30:java.lang.String get() -> get
surge.Main -> prWh:
    surge.collection.GList plugins -> JcNg
    surge.collection.GMap pluginInstances -> HdxM
    surge.collection.GList controllerSet -> ugxK
    surge.collection.GMap anchors -> BlWW
    28:28:void <init>() -> <init>
    39:39:void onControllerRegistry() -> wmwN
    46:92:void onStart(surge.util.Protocol) -> xymG
    99:116:void onStop() -> IhUT
    122:122:void onPostInit() -> CLqJ
    128:128:void onPreInit() -> RbMx
    132:143:void shutDownAmps() -> lUFj
    147:351:void initializeAmps() -> OOsM
    355:393:void scanForAmps() -> RbPf
    398:407:void onTick() -> YwfQ
surge.PluginAmp -> nuCV:
    surge.control.AmpedPlugin plugin -> BAbl
    boolean connected -> connected
    int masterTask -> ePYf
    18:21:void <init>(surge.control.AmpedPlugin) -> <init>
    25:25:surge.control.AmpedPlugin getPluginInstance() -> prWh
    30:30:boolean isConnected() -> isConnected
    35:55:void connect() -> connect
    59:71:void masterTick() -> nuCV
    75:79:void disconnect() -> disconnect
    83:93:int startTask(int,java.lang.Runnable) -> xymG
    98:108:int startRepeatingTask(int,int,java.lang.Runnable) -> xymG
    113:114:void stopTask(int) -> PmJX
    11:11:void access$000(surge.PluginAmp) -> xymG
surge.PluginAmp$1 -> nuCV$1:
    surge.PluginAmp this$0 -> pYJP
    38:38:void <init>(surge.PluginAmp) -> <init>
    42:44:void run() -> run
surge.PluginAmp$2 -> nuCV$2:
    surge.PluginAmp this$0 -> pYJP
    48:48:void <init>(surge.PluginAmp) -> <init>
    52:53:void run() -> run
surge.Surge -> lfLO:
    surge.PluginAmp amp -> jNfn
    surge.collection.GList tickComponents -> GPtJ
    surge.sched.TaskManager taskmgr -> INjB
    surge.hotload.HotloadManager hotloadmgr -> lDLG
    java.lang.Thread mainThread -> HLEd
    18:120:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    26:27:void register(org.bukkit.event.Listener) -> xymG
    31:32:void unregister(org.bukkit.event.Listener) -> unregister
    36:36:java.io.File folder(java.lang.String) -> IOCc
    41:41:java.io.File folder() -> lfLO
    46:48:java.io.File getPluginJarFile() -> eHFB
    53:55:void startup() -> startup
    59:59:java.lang.Thread getServerThread() -> wwKr
    64:64:surge.collection.GList getTickComponents() -> Gapf
    69:70:void registerTicked(surge.sched.IMasterTickComponent) -> xymG
    74:75:void unregisterTicked(surge.sched.IMasterTickComponent) -> ofaa
    79:84:surge.PluginAmp createAmp(surge.control.AmpedPlugin) -> xymG
    89:89:boolean isMainThread() -> isMainThread
    94:95:void stopAmp() -> DYHg
    99:99:boolean hasAmp() -> GQOy
    104:104:surge.PluginAmp getAmp() -> ytaT
    109:109:surge.sched.TaskManager getTaskManager() -> wvjk
    114:114:surge.hotload.HotloadManager getHotloadManager() -> SnEi
surge.cluster.Cluster -> eHFB:
    surge.cluster.ClusterType type -> sbRS
    java.lang.Object t -> mrBq
    9:12:void <init>(surge.cluster.ClusterType,java.lang.Object) -> <init>
    17:17:surge.cluster.ClusterType getType() -> mXML
    23:24:void set(java.lang.Object) -> set
    29:29:java.lang.Object get() -> get
surge.cluster.ClusterBoolean -> wwKr:
    7:8:void <init>(java.lang.Boolean) -> <init>
surge.cluster.ClusterDouble -> Gapf:
    7:8:void <init>(java.lang.Double) -> <init>
surge.cluster.ClusterInt -> DYHg:
    7:8:void <init>(java.lang.Integer) -> <init>
surge.cluster.ClusterLong -> GQOy:
    7:8:void <init>(java.lang.Long) -> <init>
surge.cluster.ClusterString -> ytaT:
    7:8:void <init>(java.lang.String) -> <init>
surge.cluster.ClusterStringList -> wvjk:
    9:10:void <init>(java.util.List) -> <init>
surge.cluster.ClusterType -> SnEi:
    surge.cluster.ClusterType INT -> jFTy
    surge.cluster.ClusterType BOOLEAN -> RbTX
    surge.cluster.ClusterType STRING -> CUiC
    surge.cluster.ClusterType STRING_LIST -> tmdp
    surge.cluster.ClusterType DOUBLE -> Bkvy
    surge.cluster.ClusterType LONG -> cteo
    surge.cluster.ClusterType[] $VALUES -> BBDn
    3:3:surge.cluster.ClusterType[] values() -> values
    3:3:surge.cluster.ClusterType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
surge.cluster.ConfigurationDataInput -> mXML:
    int[] $SWITCH_TABLE$surge$cluster$ClusterType -> XBCI
    11:11:void <init>() -> <init>
    16:126:void read(surge.cluster.IConfigurable,java.io.File) -> xymG
    131:256:surge.cluster.DataCluster fillDefaults(surge.cluster.IConfigurable) -> xymG
    11:11:int[] $SWITCH_TABLE$surge$cluster$ClusterType() -> TVtk
surge.cluster.ConfigurationDataOutput -> TVtk:
    11:11:void <init>() -> <init>
    16:142:void write(surge.cluster.IConfigurable,java.io.File) -> ofaa
surge.cluster.DataCluster -> AGOG:
    surge.collection.GMap clusters -> EmQA
    17:20:void <init>() -> <init>
    24:24:surge.collection.GList keys() -> AGOG
    29:33:void fromJson(surge.json.JSONObject) -> xymG
    37:44:surge.json.JSONObject toJson() -> avkb
    49:56:org.bukkit.configuration.file.FileConfiguration toFileConfiguration() -> owdR
    61:100:void fromFileConfiguration(org.bukkit.configuration.file.FileConfiguration) -> xymG
    104:104:boolean contains(java.lang.String) -> contains
    109:109:surge.cluster.ClusterType getType(java.lang.String) -> ieQI
    114:114:int getInt(java.lang.String) -> getInt
    119:119:java.lang.Object get(java.lang.String) -> get
    124:124:long getLong(java.lang.String) -> getLong
    129:129:java.lang.String getString(java.lang.String) -> getString
    134:134:double getDouble(java.lang.String) -> getDouble
    139:139:boolean getBoolean(java.lang.String) -> getBoolean
    145:145:java.util.List getStringList(java.lang.String) -> getStringList
    151:182:void trySet(java.lang.String,java.lang.Object) -> xymG
    186:187:void set(java.lang.String,int) -> xymG
    191:192:void set(java.lang.String,boolean) -> xymG
    196:197:void set(java.lang.String,double) -> xymG
    201:202:void set(java.lang.String,long) -> xymG
    206:207:void set(java.lang.String,java.lang.String) -> set
    211:212:void set(java.lang.String,java.util.List) -> xymG
surge.cluster.ICluster -> avkb:
    surge.cluster.ClusterType getType() -> mXML
    void set(java.lang.Object) -> set
    java.lang.Object get() -> get
surge.cluster.IConfigurable -> owdR:
surge.cluster.IDataInput -> qBTy:
    surge.cluster.DataCluster read(java.io.File) -> xymG
surge.cluster.IDataOutput -> pPSj:
    void write(surge.cluster.DataCluster,java.io.File) -> xymG
surge.cluster.Key -> JRHA:
    java.lang.String value() -> value
surge.cluster.KeyPointer -> vHrr:
    int value() -> value
surge.cluster.KeyStore -> IVsj:
surge.cluster.ReflectedConfigurationException -> JbhT:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
surge.cluster.YamlDataInput -> vADW:
    8:8:void <init>() -> <init>
    13:27:surge.cluster.DataCluster read(java.io.File) -> xymG
surge.cluster.YamlDataOutput -> equl:
    6:6:void <init>() -> <init>
    13:20:void write(surge.cluster.DataCluster,java.io.File) -> xymG
surge.collection.GBiset -> DOuW:
    java.lang.Object a -> sPoa
    java.lang.Object b -> YEFM
    8:12:void <init>(java.lang.Object,java.lang.Object) -> <init>
    16:16:java.lang.Object getA() -> qBTy
    21:22:void setA(java.lang.Object) -> xymG
    26:26:java.lang.Object getB() -> pPSj
    31:32:void setB(java.lang.Object) -> ofaa
surge.collection.GList -> IWTx:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>() -> <init>
    24:26:void <init>(java.lang.Object[]) -> <init>
    30:36:void <init>(java.util.Iterator) -> <init>
    40:48:void <init>(java.util.List) -> <init>
    52:79:java.lang.Object mostCommon() -> JRHA
    84:88:void remove(surge.collection.GList) -> ofaa
    92:94:surge.collection.GList shuffle() -> vHrr
    100:126:surge.collection.GList split() -> IVsj
    131:131:boolean hasIndex(int) -> iSnb
    136:137:java.lang.Object pickRandom() -> JbhT
    142:148:void <init>(java.util.Set) -> <init>
    152:158:void <init>(java.util.Collection) -> <init>
    163:169:void <init>(surge.collection.GList) -> <init>
    173:180:surge.collection.GList stringList() -> vADW
    185:189:surge.collection.GList removeDuplicates() -> equl
    194:194:boolean hasDuplicates() -> DOuW
    199:207:void sort() -> sort
    211:217:void push(java.lang.Object,int) -> xymG
    221:222:void addFirst(java.lang.Object) -> addFirst
    227:231:void add(java.lang.Object[]) -> add
    235:236:surge.collection.GList qadd(java.lang.Object) -> IOCc
    241:245:void add(java.util.List) -> xymG
    249:261:java.lang.String toString(java.lang.String) -> toString
    266:268:surge.collection.GList reverse() -> IWTx
    274:274:java.lang.String toString() -> toString
    279:286:surge.collection.GList copy() -> tCMb
    291:292:surge.collection.GList qdel(java.lang.Object) -> ieQI
    297:304:java.lang.Object pop() -> pop
surge.collection.GList$1 -> IWTx$1:
    surge.collection.GList this$0 -> AXTB
    200:200:void <init>(surge.collection.GList) -> <init>
    204:204:int compare(java.lang.Object,java.lang.Object) -> compare
surge.collection.GMap -> tCMb:
    long serialVersionUID -> serialVersionUID
    5:5:void <init>() -> <init>
    11:18:surge.collection.GMap copy() -> NUbp
    23:31:java.lang.Object findKey(java.lang.Object) -> OHCj
    36:37:surge.collection.GMap qput(java.lang.Object,java.lang.Object) -> xymG
    42:59:surge.collection.GMap flip() -> kHsX
    65:72:java.lang.String toString() -> toString
    77:82:surge.collection.GMap append(surge.collection.GMap) -> xymG
    87:87:surge.collection.GList k() -> uFPa
    92:92:surge.collection.GList v() -> mFhv
    97:101:void putNVD(java.lang.Object,java.lang.Object) -> ofaa
    105:115:surge.collection.GList get(surge.collection.GList) -> IOCc
    120:130:surge.collection.GMap removeDuplicateKeys() -> wKuc
    135:145:surge.collection.GMap removeDuplicateValues() -> SnDY
    150:159:void put(surge.collection.GList,surge.collection.GList) -> xymG
    163:164:void put(surge.collection.GMap) -> ofaa
surge.collection.GQuadraset -> NUbp:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> sPoa
    java.lang.Object b -> YEFM
    java.lang.Object c -> KfPr
    java.lang.Object d -> MAbi
    14:20:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    24:24:java.lang.Object getA() -> qBTy
    29:30:void setA(java.lang.Object) -> xymG
    34:34:java.lang.Object getB() -> pPSj
    39:40:void setB(java.lang.Object) -> ofaa
    44:44:java.lang.Object getC() -> miLy
    49:50:void setC(java.lang.Object) -> PAuG
    54:54:java.lang.Object getD() -> upct
    59:60:void setD(java.lang.Object) -> FpMi
surge.collection.GSet -> kHsX:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>() -> <init>
    17:18:void <init>(java.util.Collection) -> <init>
    22:23:void <init>(int,float) -> <init>
    27:28:void <init>(int) -> <init>
surge.collection.GSound -> uFPa:
    java.lang.String sound -> xqde
    org.bukkit.Sound iSound -> PmQv
    java.lang.Float volume -> RPsu
    java.lang.Float pitch -> rxdP
    16:21:void <init>(java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    23:28:void <init>(java.lang.String) -> <init>
    30:35:void <init>(org.bukkit.Sound,java.lang.Float,java.lang.Float) -> <init>
    37:42:void <init>(org.bukkit.Sound) -> <init>
    46:57:void play(org.bukkit.entity.Player) -> jhTS
    61:72:void play(org.bukkit.Location) -> xymG
    76:89:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> xymG
    93:93:java.lang.String getSound() -> IWUc
    98:99:void setSound(java.lang.String) -> OHCj
    103:103:org.bukkit.Sound getiSound() -> cJNX
    108:109:void setiSound(org.bukkit.Sound) -> xymG
    113:113:java.lang.Float getVolume() -> YDaL
    118:119:void setVolume(java.lang.Float) -> xymG
    123:123:java.lang.Float getPitch() -> XktL
    128:129:void setPitch(java.lang.Float) -> ofaa
surge.collection.GTriset -> mFhv:
    java.lang.Object a -> sPoa
    java.lang.Object b -> YEFM
    java.lang.Object c -> KfPr
    11:15:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    19:19:java.lang.Object getA() -> qBTy
    24:25:void setA(java.lang.Object) -> xymG
    29:29:java.lang.Object getB() -> pPSj
    34:35:void setB(java.lang.Object) -> ofaa
    39:39:java.lang.Object getC() -> miLy
    44:45:void setC(java.lang.Object) -> PAuG
surge.collection.Snippet -> wKuc:
    3:3:void <init>() -> <init>
surge.control.AmpedPlugin -> SnDY:
    surge.collection.GList controllers -> tmhn
    surge.pool.ParallelPoolManager pp -> RIDy
    18:23:void <init>() -> <init>
    28:30:void onLoad() -> onLoad
    35:44:void onEnable() -> onEnable
    49:58:void onDisable() -> onDisable
    63:63:surge.collection.GList getControllers() -> ckrt
    69:70:void registerController(surge.control.IController) -> xymG
    75:86:void onTick() -> YwfQ
    91:91:java.lang.String getTickName() -> ssSC
    97:97:surge.pool.ParallelPoolManager getThreadPool() -> vbiM
    void onControllerRegistry() -> wmwN
    void onStart(surge.util.Protocol) -> xymG
    void onStop() -> IhUT
    void onPostInit() -> CLqJ
    void onPreInit() -> RbMx
surge.control.Control -> miLy:
surge.control.Controller -> upct:
    7:10:void <init>() -> <init>
surge.control.Disable -> IWUc:
surge.control.Enable -> cJNX:
surge.control.IController -> YDaL:
    void start() -> start
    void stop() -> stop
    void tick() -> tick
surge.control.Instance -> XktL:
surge.control.Plugin -> ckrt:
surge.control.SurgePlugin -> ssSC:
    void onStart(surge.util.Protocol) -> xymG
    void onStop() -> IhUT
    void onPostInit() -> CLqJ
    void onPreInit() -> RbMx
    void onControllerRegistry() -> wmwN
    void registerController(surge.control.IController) -> xymG
    surge.collection.GList getControllers() -> ckrt
    surge.pool.ParallelPoolManager getThreadPool() -> vbiM
surge.hotload.HotloadManager -> vbiM:
    surge.collection.GMap filemods -> fJll
    surge.collection.GMap filesizes -> xXSO
    surge.collection.GMap fileacts -> tBta
    15:20:void <init>() -> <init>
    24:28:void track(java.io.File,java.lang.Runnable) -> xymG
    32:35:void untrack(java.io.File) -> ofaa
    39:42:void untrackall() -> eqyU
    47:71:void onTick() -> YwfQ
    76:76:java.lang.String getTickName() -> ssSC
surge.json.HTTP -> eqyU:
    java.lang.String CRLF -> iuyN
    35:35:void <init>() -> <init>
    93:127:surge.json.JSONObject toJSONObject(java.lang.String) -> PAuG
    162:198:java.lang.String toString(surge.json.JSONObject) -> ofaa
surge.json.HTTPTokener -> biQP:
    45:46:void <init>(java.lang.String) -> <init>
    58:87:java.lang.String nextToken() -> nextToken
surge.json.JSONArray -> VwOo:
    java.util.ArrayList myArrayList -> hrun
    93:96:void <init>() -> <init>
    108:143:void <init>(surge.json.JSONTokener) -> <init>
    157:158:void <init>(java.lang.String) -> <init>
    166:177:void <init>(java.util.Collection) -> <init>
    187:199:void <init>(java.lang.Object) -> <init>
    204:204:java.util.Iterator iterator() -> iterator
    218:223:java.lang.Object get(int) -> get
    239:247:boolean getBoolean(int) -> getBoolean
    262:268:double getDouble(int) -> getDouble
    286:294:java.lang.Enum getEnum(java.lang.Class,int) -> xymG
    309:315:java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    331:337:java.math.BigInteger getBigInteger(int) -> CntX
    352:358:int getInt(int) -> getInt
    374:379:surge.json.JSONArray getJSONArray(int) -> PJgD
    394:399:surge.json.JSONObject getJSONObject(int) -> eque
    414:420:long getLong(int) -> getLong
    435:440:java.lang.String getString(int) -> getString
    452:452:boolean isNull(int) -> isNull
    468:479:java.lang.String join(java.lang.String) -> FpMi
    489:489:int length() -> length
    501:501:java.lang.Object opt(int) -> Wyni
    515:515:boolean optBoolean(int) -> equd
    533:536:boolean optBoolean(int,boolean) -> ofaa
    551:551:double optDouble(int) -> gMge
    569:572:double optDouble(int,double) -> xymG
    587:587:int optInt(int) -> vtGL
    605:608:int optInt(int,int) -> xymG
    623:623:java.lang.Enum optEnum(java.lang.Class,int) -> ofaa
    642:664:java.lang.Enum optEnum(java.lang.Class,int,java.lang.Enum) -> xymG
    683:686:java.math.BigInteger optBigInteger(int,java.math.BigInteger) -> xymG
    705:708:java.math.BigDecimal optBigDecimal(int,java.math.BigDecimal) -> xymG
    722:723:surge.json.JSONArray optJSONArray(int) -> TOBx
    737:738:surge.json.JSONObject optJSONObject(int) -> Mtav
    752:752:long optLong(int) -> VfKM
    770:773:long optLong(int,long) -> xymG
    788:788:java.lang.String optString(int) -> hQLN
    803:804:java.lang.String optString(int,java.lang.String) -> xymG
    816:817:surge.json.JSONArray put(boolean) -> FpMi
    830:831:surge.json.JSONArray put(java.util.Collection) -> xymG
    845:848:surge.json.JSONArray put(double) -> ofaa
    860:861:surge.json.JSONArray put(int) -> SCOW
    873:874:surge.json.JSONArray put(long) -> xymG
    887:888:surge.json.JSONArray put(java.util.Map) -> xymG
    902:903:surge.json.JSONArray put(java.lang.Object) -> ogCH
    921:922:surge.json.JSONArray put(int,boolean) -> IOCc
    939:940:surge.json.JSONArray put(int,java.util.Collection) -> xymG
    958:959:surge.json.JSONArray put(int,double) -> ofaa
    977:978:surge.json.JSONArray put(int,int) -> ofaa
    996:997:surge.json.JSONArray put(int,long) -> ofaa
    1015:1016:surge.json.JSONArray put(int,java.util.Map) -> xymG
    1037:1053:surge.json.JSONArray put(int,java.lang.Object) -> xymG
    1066:1066:java.lang.Object remove(int) -> remove
    1079:1109:boolean similar(java.lang.Object) -> jhTS
    1126:1135:surge.json.JSONObject toJSONObject(surge.json.JSONArray) -> xymG
    1153:1156:java.lang.String toString() -> toString
    1174:1177:java.lang.String toString(int) -> toString
    1192:1192:java.io.Writer write(java.io.Writer) -> xymG
    1212:1247:java.io.Writer write(java.io.Writer,int,int) -> xymG
surge.json.JSONException -> TqJX:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> VUQm
    22:23:void <init>(java.lang.String) -> <init>
    33:35:void <init>(java.lang.Throwable) -> <init>
    47:47:java.lang.Throwable getCause() -> getCause
surge.json.JSONML -> biQL:
    37:37:void <init>() -> <init>
    57:279:java.lang.Object parse(surge.json.XMLTokener,boolean,surge.json.JSONArray) -> xymG
    301:301:surge.json.JSONArray toJSONArray(java.lang.String) -> ogCH
    320:320:surge.json.JSONArray toJSONArray(surge.json.XMLTokener) -> xymG
    340:340:surge.json.JSONObject toJSONObject(surge.json.XMLTokener) -> ofaa
    360:360:surge.json.JSONObject toJSONObject(java.lang.String) -> PAuG
    379:456:java.lang.String toString(surge.json.JSONArray) -> ofaa
    472:552:java.lang.String toString(surge.json.JSONObject) -> ofaa
surge.json.JSONObject -> QNMx:
    java.util.Map map -> map
    java.lang.Object NULL -> BBEq
    153:153:void <clinit>() -> <clinit>
    158:161:void <init>() -> <init>
    179:189:void <init>(surge.json.JSONObject,java.lang.String[]) -> <init>
    202:248:void <init>(surge.json.JSONTokener) -> <init>
    261:277:void <init>(java.util.Map) -> <init>
    302:304:void <init>(java.lang.Object) -> <init>
    322:334:void <init>(java.lang.Object,java.lang.String[]) -> <init>
    350:351:void <init>(java.lang.String) -> <init>
    365:400:void <init>(java.lang.String,java.util.Locale) -> <init>
    423:435:surge.json.JSONObject accumulate(java.lang.String,java.lang.Object) -> ofaa
    455:467:surge.json.JSONObject append(java.lang.String,java.lang.Object) -> IOCc
    480:499:java.lang.String doubleToString(double) -> IOCc
    513:522:java.lang.Object get(java.lang.String) -> get
    539:547:java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    562:570:boolean getBoolean(java.lang.String) -> getBoolean
    585:591:java.math.BigInteger getBigInteger(java.lang.String) -> jhTS
    607:613:java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    629:635:double getDouble(java.lang.String) -> getDouble
    651:657:int getInt(java.lang.String) -> getInt
    672:677:surge.json.JSONArray getJSONArray(java.lang.String) -> tCMW
    691:696:surge.json.JSONObject getJSONObject(java.lang.String) -> PmJX
    711:717:long getLong(java.lang.String) -> getLong
    728:741:java.lang.String[] getNames(surge.json.JSONObject) -> IOCc
    751:767:java.lang.String[] getNames(java.lang.Object) -> tCMW
    781:786:java.lang.String getString(java.lang.String) -> getString
    798:798:boolean has(java.lang.String) -> has
    815:841:surge.json.JSONObject increment(java.lang.String) -> iSnb
    855:855:boolean isNull(java.lang.String) -> CntX
    865:865:java.util.Iterator keys() -> keys
    875:875:java.util.Set keySet() -> keySet
    885:885:int length() -> length
    897:903:surge.json.JSONArray names() -> biQP
    917:937:java.lang.String numberToString(java.lang.Number) -> xymG
    949:949:java.lang.Object opt(java.lang.String) -> PJgD
    963:963:java.lang.Enum optEnum(java.lang.Class,java.lang.String) -> xymG
    982:1004:java.lang.Enum optEnum(java.lang.Class,java.lang.String,java.lang.Enum) -> xymG
    1018:1018:boolean optBoolean(java.lang.String) -> eque
    1036:1039:boolean optBoolean(java.lang.String,boolean) -> ofaa
    1054:1054:double optDouble(java.lang.String) -> Wyni
    1072:1075:java.math.BigInteger optBigInteger(java.lang.String,java.math.BigInteger) -> xymG
    1094:1097:java.math.BigDecimal optBigDecimal(java.lang.String,java.math.BigDecimal) -> xymG
    1116:1119:double optDouble(java.lang.String,double) -> ofaa
    1134:1134:int optInt(java.lang.String) -> equd
    1152:1155:int optInt(java.lang.String,int) -> ofaa
    1169:1170:surge.json.JSONArray optJSONArray(java.lang.String) -> gMge
    1183:1184:surge.json.JSONObject optJSONObject(java.lang.String) -> vtGL
    1198:1198:long optLong(java.lang.String) -> TOBx
    1216:1219:long optLong(java.lang.String,long) -> ofaa
    1234:1234:java.lang.String optString(java.lang.String) -> Mtav
    1249:1250:java.lang.String optString(java.lang.String,java.lang.String) -> xymG
    1255:1305:void populateMap(java.lang.Object) -> PmJX
    1320:1321:surge.json.JSONObject put(java.lang.String,boolean) -> IOCc
    1337:1338:surge.json.JSONObject put(java.lang.String,java.util.Collection) -> xymG
    1354:1355:surge.json.JSONObject put(java.lang.String,double) -> IOCc
    1371:1372:surge.json.JSONObject put(java.lang.String,int) -> IOCc
    1388:1389:surge.json.JSONObject put(java.lang.String,long) -> IOCc
    1405:1406:surge.json.JSONObject put(java.lang.String,java.util.Map) -> xymG
    1425:1437:surge.json.JSONObject put(java.lang.String,java.lang.Object) -> ieQI
    1455:1463:surge.json.JSONObject putOnce(java.lang.String,java.lang.Object) -> OHCj
    1482:1486:surge.json.JSONObject putOpt(java.lang.String,java.lang.Object) -> PAuG
    1501:1510:java.lang.String quote(java.lang.String) -> quote
    1517:1577:java.io.Writer quote(java.lang.String,java.io.Writer) -> xymG
    1590:1590:java.lang.Object remove(java.lang.String) -> VfKM
    1605:1640:boolean similar(java.lang.Object) -> jhTS
    1655:1707:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    1720:1736:void testValidity(java.lang.Object) -> iSnb
    1751:1760:surge.json.JSONArray toJSONArray(surge.json.JSONArray) -> IOCc
    1779:1782:java.lang.String toString() -> toString
    1802:1805:java.lang.String toString(int) -> toString
    1835:1879:java.lang.String valueToString(java.lang.Object) -> valueToString
    1898:1932:java.lang.Object wrap(java.lang.Object) -> wrap
    1947:1947:java.io.Writer write(java.io.Writer) -> xymG
    1952:1995:java.io.Writer writeValue(java.io.Writer,java.lang.Object,int,int) -> xymG
    2000:2004:void indent(java.io.Writer,int) -> xymG
    2019:2068:java.io.Writer write(java.io.Writer,int,int) -> xymG
surge.json.JSONObject$Null -> QNMx$xymG:
    102:102:void <init>() -> <init>
    114:114:java.lang.Object clone() -> clone
    128:128:boolean equals(java.lang.Object) -> equals
    138:138:java.lang.String toString() -> toString
    102:102:void <init>(surge.json.JSONObject$Null) -> <init>
surge.json.JSONString -> NUes:
    java.lang.String toJSONString() -> toJSONString
surge.json.JSONStringer -> uqGo:
    69:70:void <init>() -> <init>
    83:83:java.lang.String toString() -> toString
surge.json.JSONTokener -> xGLa:
    long character -> BuJb
    boolean eof -> eof
    long index -> dxMS
    long line -> ETAj
    char previous -> hbUg
    java.io.Reader reader -> reader
    boolean usePrevious -> eYMK
    60:68:void <init>(java.io.Reader) -> <init>
    78:79:void <init>(java.io.InputStream) -> <init>
    89:90:void <init>(java.lang.String) -> <init>
    99:107:void back() -> VwOo
    119:131:int dehexchar(char) -> xymG
    136:136:boolean end() -> TqJX
    147:153:boolean more() -> biQL
    164:198:char next() -> next
    213:218:char next(char) -> ofaa
    233:250:java.lang.String next(int) -> bNwx
    263:268:char nextClean() -> QNMx
    287:334:java.lang.String nextString(char) -> IOCc
    349:362:java.lang.String nextTo(char) -> ieQI
    376:388:java.lang.String nextTo(java.lang.String) -> hQLN
    403:441:java.lang.Object nextValue() -> NUes
    458:479:char skipTo(char) -> OHCj
    491:491:surge.json.JSONException syntaxError(java.lang.String) -> SCOW
    501:501:java.lang.String toString() -> toString
surge.json.JSONWriter -> bFnB:
    int maxdepth -> GYfp
    boolean comma -> QouO
    char mode -> cuJI
    surge.json.JSONObject[] stack -> SKgh
    int top -> top
    java.io.Writer writer -> writer
    97:104:void <init>(java.io.Writer) -> <init>
    117:141:surge.json.JSONWriter append(java.lang.String) -> bNwx
    157:164:surge.json.JSONWriter array() -> uqGo
    180:193:surge.json.JSONWriter end(char,char) -> xymG
    206:206:surge.json.JSONWriter endArray() -> xGLa
    219:219:surge.json.JSONWriter endObject() -> bFnB
    235:258:surge.json.JSONWriter key(java.lang.String) -> gNGq
    274:285:surge.json.JSONWriter object() -> JblH
    299:310:void pop(char) -> PAuG
    322:329:void push(surge.json.JSONObject) -> ieQI
    342:342:surge.json.JSONWriter value(boolean) -> ogCH
    356:356:surge.json.JSONWriter value(double) -> ieQI
    369:369:surge.json.JSONWriter value(long) -> ofaa
    385:385:surge.json.JSONWriter value(java.lang.Object) -> CntX
surge.json.XML -> JblH:
    java.lang.Character AMP -> GYeT
    java.lang.Character APOS -> brEa
    java.lang.Character BANG -> RbUi
    java.lang.Character EQ -> VDOK
    java.lang.Character GT -> LWsO
    java.lang.Character LT -> bOaX
    java.lang.Character QUEST -> MdGx
    java.lang.Character QUOT -> CwmE
    java.lang.Character SLASH -> clWl
    40:64:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    82:107:java.lang.String escape(java.lang.String) -> escape
    120:132:void noSpace(java.lang.String) -> afHr
    150:339:boolean parse(surge.json.XMLTokener,surge.json.JSONObject,java.lang.String) -> xymG
    358:399:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    420:426:surge.json.JSONObject toJSONObject(java.lang.String) -> PAuG
    439:439:java.lang.String toString(java.lang.Object) -> toString
    454:579:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
surge.json.XMLTokener -> VwPn:
    java.util.HashMap entity -> WWsP
    45:51:void <clinit>() -> <clinit>
    61:62:void <init>(java.lang.String) -> <init>
    75:88:java.lang.String nextCDATA() -> VwPn
    108:133:java.lang.Object nextContent() -> CxJn
    149:166:java.lang.Object nextEntity(char) -> FpMi
    186:239:java.lang.Object nextMeta() -> uxxA
    261:334:java.lang.Object nextToken() -> VTlb
    354:420:boolean skipPast(java.lang.String) -> ugpo
surge.math.ArrayUtils -> CxJn:
    3:3:void <init>() -> <init>
    7:13:void shiftRight(double[],double) -> xymG
    17:19:void wrapRight(double[]) -> xymG
    23:27:void fill(double[],double) -> fill
surge.math.Average -> uxxA:
    double[] values -> aCnF
    double average -> AFrq
    boolean dirty -> rWAE
    10:15:void <init>(int) -> <init>
    19:21:void put(double) -> OHCj
    25:31:double getAverage() -> getAverage
    36:45:void calculateAverage() -> fKJV
surge.math.M -> VTlb:
    double[] fastsqrt -> kANJ
    int precision -> ownA
    int modulus -> fdcD
    float[] sin -> Yfly
    26:630:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    39:42:double evaluate(java.lang.String) -> aviY
    54:59:boolean r(java.lang.Double) -> xymG
    81:91:double evaluate(java.lang.String,java.lang.Double[]) -> xymG
    96:119:org.bukkit.block.Block highestBlock(org.bukkit.Location,int,int) -> xymG
    134:134:double tps(long,int) -> xymG
    146:146:double ticksFromNS(long) -> IOCc
    158:184:java.lang.String toRoman(int) -> gNGq
    198:210:java.lang.String repeat(java.lang.String,int) -> repeat
    215:215:int rand(int,int) -> IOCc
    227:299:int fromRoman(java.lang.String) -> ssMi
    309:309:long ns() -> mFmA
    319:319:long ms() -> KCko
    331:338:double avg(surge.collection.GList) -> ieQI
    351:355:void lim(surge.collection.GList,int) -> xymG
    368:368:double distance(org.bukkit.Location,org.bukkit.Location) -> xymG
    385:385:boolean within(org.bukkit.Location,org.bukkit.Location,java.lang.Double) -> xymG
    397:397:float sin(float) -> sin
    409:409:float cos(float) -> cos
    421:431:int max(int[]) -> max
    443:453:int min(int[]) -> min
    469:469:boolean within(int,int,int) -> xymG
    482:482:float sinLookup(int) -> afHr
    487:497:double fsqrt(double) -> PAuG
    502:502:double maxSafeRadius(org.bukkit.Location) -> ofaa
    507:507:double clip(double,double,double) -> xymG
    512:529:double maxSafeRadius(org.bukkit.Location,double,double) -> xymG
    534:542:boolean isLoaded(org.bukkit.Location,double) -> xymG
    547:561:surge.collection.GList cradShift(org.bukkit.Location,double) -> ofaa
    566:566:int chunkShift(int) -> ugpo
    571:579:boolean isLoaded(org.bukkit.World,int,int) -> xymG
    584:592:boolean isLoaded(org.bukkit.Location) -> IOCc
    597:602:double dof(double,double) -> xymG
    607:619:surge.collection.GList getChunks(org.bukkit.Chunk,int) -> xymG
surge.math.Profiler -> fKJV:
    long nanos -> sjfv
    long startNano -> OsCR
    long millis -> oLyG
    long startMillis -> wnbx
    double time -> jOLQ
    boolean profiling -> nuJk
    14:18:void <init>() -> <init>
    22:25:void begin() -> begin
    29:39:void end() -> end
    43:49:void reset() -> reset
    53:73:java.lang.String getTime(int) -> aviY
    78:78:double getTicks() -> oUcM
    83:83:double getSeconds() -> getSeconds
    88:88:double getMinutes() -> afLp
    93:93:double getHours() -> lLYs
    98:98:double getMilliseconds() -> CLvC
    103:103:long getNanoseconds() -> YECW
    108:108:long getNanos() -> mWnB
    113:113:long getStartNano() -> nlSS
    118:118:long getMillis() -> getMillis
    123:123:long getStartMillis() -> mrAX
    128:128:double getTime() -> Hdte
    133:133:boolean isProfiling() -> pjGq
surge.nms.NMSClass -> mFmA:
    boolean init -> ykxK
    int version -> version
    java.lang.Class PacketPlayOutPlayerListHeaderFooter -> GIFd
    java.lang.Class IChatBaseComponent -> uqMf
    java.lang.Class ChatSerializer -> HmlL
    java.lang.Class PacketPlayOutPlayerInfo -> YgMA
    java.lang.Class PlayerInfoData -> QVcm
    java.lang.Class EnumPlayerInfoAction -> cItq
    java.lang.Class GameProfile -> HmlX
    java.lang.Class EnumGamemode -> UQoD
    java.lang.Class TileEntitySkull -> PJpH
    java.lang.Class LoadingCache -> aTqS
    6:131:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
surge.nms.NMSX -> KCko:
    surge.nms.NMSX bountifulAPI -> CVNA
    boolean useOldMethods -> lerA
    java.lang.String nmsver -> lvrq
    java.lang.Object eTimes -> tdwt
    java.lang.Object eTitle -> xqeP
    java.lang.Object eSubtitle -> BBHj
    20:459:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    26:28:java.lang.String getVersion() -> getVersion
    35:45:void setAi(org.bukkit.entity.LivingEntity,boolean) -> xymG
    56:70:java.lang.Class getCBNMSClass(java.lang.String) -> wnWg
    75:89:java.lang.Class getCBClass(java.lang.String) -> VThC
    96:104:java.lang.Object serializeChat(java.lang.String) -> OrWK
    109:114:java.lang.reflect.Field setAccessible(java.lang.reflect.Field) -> xymG
    119:121:java.lang.reflect.Method setAccessible(java.lang.reflect.Method) -> xymG
    131:131:java.lang.String getBukkitVersion() -> getBukkitVersion
    141:141:java.lang.String nmsPackage() -> jpgF
    151:151:java.lang.String craftPackage() -> AiST
    166:178:void showPickup(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> xymG
    184:193:void sendPacket(org.bukkit.entity.Player,java.lang.Object) -> xymG
    197:207:java.lang.Class getNMSClass(java.lang.String) -> jhQx
    217:275:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> xymG
    279:280:void clearTitle(org.bukkit.entity.Player) -> tCMW
    284:316:void sendTabTitle(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> xymG
    320:375:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> xymG
    379:405:void sendActionBar(org.bukkit.entity.Player,java.lang.String,int) -> xymG
    409:410:void sendActionBarToAllPlayers(java.lang.String) -> KvkW
    414:418:void sendActionBarToAllPlayers(java.lang.String,int) -> ieQI
    422:427:java.lang.String getEntityName(org.bukkit.entity.Entity) -> xymG
    434:447:int ping(org.bukkit.entity.Player) -> PmJX
surge.nms.NMSX$1 -> KCko$1:
    org.bukkit.entity.Player val$player -> HKjF
    1:382:void <init>(org.bukkit.entity.Player) -> <init>
    387:388:void run() -> run
surge.nms.NMSX$2 -> KCko$2:
    org.bukkit.entity.Player val$player -> HKjF
    java.lang.String val$message -> sPvn
    1:395:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    401:402:void run() -> run
surge.nms.PacketUtil -> oUcM:
    6:6:void <init>() -> <init>
    20:45:surge.nms.PacketUtil$V getVersion() -> FyBf
    50:64:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> xymG
    68:82:void clearTitle(org.bukkit.entity.Player) -> tCMW
    86:100:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> xymG
surge.nms.PacketUtil$V -> oUcM$xymG:
    surge.nms.PacketUtil$V R17 -> gWFf
    surge.nms.PacketUtil$V R18 -> MuNj
    surge.nms.PacketUtil$V R19 -> FEeh
    surge.nms.PacketUtil$V R111 -> bqig
    surge.nms.PacketUtil$V R110 -> sIGb
    surge.nms.PacketUtil$V R112 -> BSLU
    surge.nms.PacketUtil$V[] ENUM$VALUES -> maIK
    8:15:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    1:1:surge.nms.PacketUtil$V[] values() -> values
    1:1:surge.nms.PacketUtil$V valueOf(java.lang.String) -> valueOf
surge.nms.Title -> afLp:
    java.lang.String title -> title
    java.lang.String subTitle -> lwXA
    java.lang.String action -> action
    java.lang.Integer fadeIn -> skJd
    java.lang.Integer fadeOut -> cJXq
    java.lang.Integer stayTime -> hjil
    14:19:void <init>() -> <init>
    21:29:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    31:38:void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    40:46:void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    52:60:void send(org.bukkit.entity.Player) -> iSnb
    64:64:java.lang.String getTitle() -> getTitle
    69:70:void setTitle(java.lang.String) -> setTitle
    74:74:java.lang.String getSubTitle() -> NMUS
    79:80:void setSubTitle(java.lang.String) -> weff
    84:84:java.lang.String getAction() -> getAction
    89:90:void setAction(java.lang.String) -> setAction
    94:94:java.lang.Integer getFadeIn() -> DPYF
    99:100:void setFadeIn(java.lang.Integer) -> xymG
    104:104:java.lang.Integer getFadeOut() -> CxJN
    109:110:void setFadeOut(java.lang.Integer) -> ofaa
    114:114:java.lang.Integer getStayTime() -> QMmM
    119:120:void setStayTime(java.lang.Integer) -> IOCc
surge.nms.VersionBukkit -> lLYs:
    surge.nms.VersionBukkit VU -> sPux
    surge.nms.VersionBukkit V7 -> nRhj
    surge.nms.VersionBukkit V8 -> WOhB
    surge.nms.VersionBukkit V9 -> rgfY
    surge.nms.VersionBukkit V11 -> Kevy
    surge.nms.VersionBukkit V111 -> UJBe
    surge.nms.VersionBukkit V112 -> dxPG
    surge.nms.VersionBukkit[] ENUM$VALUES -> NUmG
    5:13:void <clinit>() -> <clinit>
    5:5:void <init>(java.lang.String,int) -> <init>
    17:22:boolean tc() -> OOwU
    27:32:boolean uc() -> qJgW
    37:67:surge.nms.VersionBukkit get() -> ctdF
    1:1:surge.nms.VersionBukkit[] values() -> values
    1:1:surge.nms.VersionBukkit valueOf(java.lang.String) -> valueOf
surge.pool.A -> CLvC:
    8:17:void <init>() -> <init>
surge.pool.A$1 -> CLvC$1:
    surge.pool.A this$0 -> qlrj
    10:10:void <init>(surge.pool.A) -> <init>
    14:15:void run() -> run
surge.pool.Execution -> YECW:
    3:3:void <init>() -> <init>
surge.pool.ParallelPoolManager -> mWnB:
    surge.pool.QueueMode mode -> BuPT
    surge.collection.GList threads -> ogMq
    int next -> JtTt
    int threadCount -> JIaM
    java.util.Queue squeue -> cdKO
    java.lang.String key -> key
    surge.pool.ThreadInformation info -> Veth
    22:23:void syncQueue(surge.pool.Execution) -> xymG
    27:31:void tickSyncQueue() -> vbge
    35:38:void <init>(java.lang.String,int,surge.pool.QueueMode) -> <init>
    41:58:void <init>(int,surge.pool.QueueMode) -> <init>
    62:77:long lock() -> gNKr
    82:83:void start() -> start
    87:91:void shutdown() -> shutdown
    95:96:void <init>(int) -> <init>
    100:101:void queue(surge.pool.Execution) -> ofaa
    105:105:int getSize() -> getSize
    110:117:int getQueueSize() -> teRj
    122:122:surge.pool.ParallelThread[] getThreads() -> oUbh
    129:156:void updateThreadInformation() -> yIpx
    160:192:surge.pool.ParallelThread nextThread() -> yuGJ
    197:203:void createThreads(int) -> ssMi
    207:207:surge.pool.QueueMode getMode() -> XdGI
    212:212:int getNext() -> HCVC
    217:217:int getThreadCount() -> getThreadCount
    222:222:java.util.Queue getSqueue() -> xaAj
    227:227:java.lang.String getKey() -> getKey
    232:232:surge.pool.ThreadInformation getAverageInfo() -> BdFv
surge.pool.ParallelPoolManager$1 -> mWnB$1:
    int[] $SwitchMap$surge$pool$QueueMode -> VoGT
    169:169:void <clinit>() -> <clinit>
surge.pool.ParallelThread -> nlSS:
    java.util.Queue queue -> OsDU
    surge.pool.ThreadInformation info -> Veth
    14:19:void <init>(java.lang.String,int) -> <init>
    24:56:void run() -> run
    60:64:void conditionallySleep(double) -> FpMi
    70:77:void execute(surge.pool.Execution) -> IOCc
    81:91:void execute() -> execute
    95:96:void queue(surge.pool.Execution) -> ofaa
    100:100:java.util.Queue getQueue() -> ndEl
    105:105:surge.pool.ThreadInformation getInfo() -> GbUh
surge.pool.QueueMode -> mrAX:
    surge.pool.QueueMode ROUND_ROBIN -> gMrq
    surge.pool.QueueMode SMALLEST -> HnOc
    surge.pool.QueueMode[] $VALUES -> hIGU
    3:3:surge.pool.QueueMode[] values() -> values
    3:3:surge.pool.QueueMode valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
surge.pool.S -> Hdte:
    7:17:void <init>() -> <init>
surge.pool.S$1 -> Hdte$1:
    surge.pool.S this$0 -> ytiu
    1:9:void <init>(surge.pool.S) -> <init>
    14:15:void run() -> run
surge.pool.ThreadInformation -> pjGq:
    double ticksPerSecond -> Kvyo
    int queuedSize -> wLdc
    boolean processing -> kQra
    double utilization -> EKUu
    surge.math.Average ticksPerSecondAverage -> JlHP
    long tick -> KMHP
    int id -> id
    17:25:void <init>(int) -> <init>
    29:29:double getTicksPerSecond() -> brDU
    34:36:void setTicksPerSecond(double) -> ogCH
    40:40:int getQueuedSize() -> XdGT
    45:46:void setQueuedSize(int) -> wnWg
    50:50:boolean isProcessing() -> lenX
    55:56:void setProcessing(boolean) -> jhTS
    60:60:double getUtilization() -> JcNg
    65:66:void setUtilization(double) -> jhTS
    70:70:double getTicksPerSecondAverage() -> HdxM
    75:75:long getTick() -> getTick
    80:81:void setTick(long) -> setTick
    85:85:long getTickLag() -> ugxK
    90:90:int getId() -> getId
surge.sched.IBursterator -> jpgF:
    void burst(java.lang.Object) -> PJgD
    void setTimeLock(double) -> tCMW
    double getEstimatedTimeUse() -> BlWW
    int flush() -> BAbl
    int flush(surge.math.Profiler) -> xymG
    void queue(java.lang.Object) -> eque
    void queue(java.util.List) -> ofaa
    void queue(java.lang.Object[]) -> xymG
surge.sched.ICancellable -> AiST:
    void cancel() -> cancel
surge.sched.IMasterTickComponent -> FyBf:
    void onTick() -> YwfQ
    java.lang.String getTickName() -> ssSC
surge.sched.ITask -> NMUS:
    int getId() -> getId
    void run() -> run
    boolean isRepeating() -> ePYf
    java.lang.String getName() -> getName
    double getComputeTime() -> pYJP
    double getTotalComputeTime() -> jNfn
    double getActiveTime() -> GPtJ
    boolean hasCompleted() -> INjB
surge.sched.TICK -> DPYF:
    long tick -> KMHP
    5:5:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
surge.sched.Task -> CxJN:
    int id -> id
    java.lang.String name -> name
    boolean repeating -> qJsX
    double computeTime -> XAkF
    double totalComputeTime -> FMyA
    double activeTime -> KTwi
    boolean completed -> completed
    surge.math.Profiler profiler -> XcnT
    surge.math.Profiler activeProfiler -> yckb
    int ticks -> bOiM
    19:41:void <init>(java.lang.String) -> <init>
    43:66:void <init>(java.lang.String,int) -> <init>
    68:96:void <init>(java.lang.String,int,int) -> <init>
    100:109:void setup(java.lang.String,boolean) -> ieQI
    114:120:void cancel() -> cancel
    125:125:int getId() -> getId
    131:131:boolean isRepeating() -> ePYf
    137:137:java.lang.String getName() -> getName
    143:143:double getComputeTime() -> pYJP
    149:149:boolean hasCompleted() -> INjB
    155:155:double getTotalComputeTime() -> jNfn
    161:161:double getActiveTime() -> GPtJ
    16:16:surge.math.Profiler access$0(surge.sched.Task) -> xymG
    14:14:void access$1(surge.sched.Task,boolean) -> xymG
    15:15:surge.math.Profiler access$2(surge.sched.Task) -> ofaa
    13:13:void access$3(surge.sched.Task,double) -> xymG
    11:11:void access$4(surge.sched.Task,double) -> ofaa
    13:13:double access$5(surge.sched.Task) -> IOCc
    12:12:void access$6(surge.sched.Task,double) -> IOCc
    17:17:int access$7(surge.sched.Task) -> ieQI
    17:17:void access$8(surge.sched.Task,int) -> xymG
    12:12:double access$9(surge.sched.Task) -> OHCj
    11:11:double access$10(surge.sched.Task) -> PAuG
surge.sched.Task$1 -> CxJN$1:
    surge.sched.Task this$0 -> fufg
    1:24:void <init>(surge.sched.Task) -> <init>
    29:39:void run() -> run
surge.sched.Task$2 -> CxJN$2:
    surge.sched.Task this$0 -> fufg
    1:48:void <init>(surge.sched.Task) -> <init>
    53:64:void run() -> run
surge.sched.Task$3 -> CxJN$3:
    surge.sched.Task this$0 -> fufg
    int val$total -> hPxa
    1:73:void <init>(surge.sched.Task,int) -> <init>
    78:94:void run() -> run
surge.sched.TaskManager -> QMmM:
    surge.collection.GList tasks -> YDli
    surge.collection.GMap taskProfiles -> mGVo
    11:15:void <init>() -> <init>
    20:30:void onTick() -> YwfQ
    34:35:void putFinishingTask(surge.sched.ITask) -> xymG
    39:48:void putTask(surge.sched.ITask) -> ofaa
    53:53:java.lang.String getTickName() -> ssSC
surge.sched.TaskProfile -> OOwU:
    double activeTime -> KTwi
    double computeTickTime -> xqjN
    double computeTime -> XAkF
    10:14:void <init>() -> <init>
    18:18:double getActiveTime() -> GPtJ
    23:24:void setActiveTime(double) -> PmJX
    28:28:double getComputeTickTime() -> lDLG
    33:34:void setComputeTickTime(double) -> iSnb
    38:38:double getComputeTime() -> pYJP
    43:44:void setComputeTime(double) -> CntX
surge.server.MemoryMonitor -> qJgW:
    long memoryFree -> TiBn
    long memoryUsed -> lUVA
    long memoryMax -> sHgn
    long lastMemoryUsed -> fTDq
    long memoryUsedAfterGC -> fltr
    long allocated -> OQBp
    long collected -> QWHs
    long collections -> qTCm
    long sms -> Hmpc
    long memoryAllocatedPerTick -> mXXV
    long memoryCollectedPerTick -> mrKN
    long memoryFullyAllocatedPerTick -> bqkN
    long mah -> Seav
    long mahs -> gVim
    23:39:void <init>() -> <init>
    void onAllocationSet() -> HLEd
    46:83:void run() -> run
    87:87:long getMemoryFree() -> sbRS
    92:92:long getMemoryUsed() -> getMemoryUsed
    97:97:long getMemoryMax() -> mrBq
    102:102:long getLastMemoryUsed() -> jFTy
    107:107:long getMemoryUsedAfterGC() -> RbTX
    112:112:long getAllocated() -> getAllocated
    117:117:long getCollected() -> CUiC
    122:122:long getCollections() -> tmdp
    127:127:long getSms() -> Bkvy
    132:132:long getMemoryAllocatedPerTick() -> cteo
    137:137:long getMemoryCollectedPerTick() -> BBDn
    142:142:long getMemoryFullyAllocatedPerTick() -> XBCI
    147:147:long getMah() -> EmQA
    152:152:long getMahs() -> sPoa
surge.server.SuperSampler -> ctdF:
    surge.math.Average ticksPerSecondL -> JtYs
    surge.math.Average tickTimeL -> lMIB
    surge.math.Average mahL -> FyOg
    double ticksPerSecond -> Kvyo
    double ticksPerSecondRaw -> FEiu
    double tickTime -> ejVS
    double tickTimeRaw -> mPLE
    boolean running -> running
    double tickUtilizationRaw -> ctqA
    double tickUtilization -> paeO
    double leftoverTickTime -> BtrO
    long memoryUse -> SfCa
    long memoryAllocated -> jpsv
    long memoryCollected -> imqU
    long mahs -> gVim
    int totalChunks -> Qglr
    int totalEntities -> YNBb
    int totalDrops -> oUpX
    int totalTiles -> qdgD
    int totalLiving -> Puie
    int chunksLoaded -> RtAN
    int chunksUnloaded -> Bcqf
    surge.server.WorldMonitor worldMonitor -> gyLt
    surge.server.TPSMonitor tpsMonitor -> TNrA
    surge.server.MemoryMonitor memoryMonitor -> KoKt
    31:106:void <init>() -> <init>
    110:115:void start() -> start
    119:124:void stop() -> stop
    129:133:void onTick() -> YwfQ
    138:138:java.lang.String getTickName() -> ssSC
    143:143:surge.math.Average getTicksPerSecondL() -> YEFM
    148:148:double getTicksPerSecond() -> brDU
    153:153:double getTicksPerSecondRaw() -> AXTB
    158:158:boolean isRunning() -> isRunning
    163:163:surge.server.TPSMonitor getTpsMonitor() -> KfPr
    168:168:surge.math.Average getTickTimeL() -> MAbi
    173:173:double getTickTime() -> xqde
    178:178:double getTickTimeRaw() -> PmQv
    183:183:double getTickUtilizationRaw() -> RPsu
    188:188:double getTickUtilization() -> rxdP
    193:193:double getLeftoverTickTime() -> tmhn
    198:198:surge.server.MemoryMonitor getMemoryMonitor() -> RIDy
    203:203:long getMemoryUse() -> fJll
    208:208:long getMemoryAllocated() -> xXSO
    213:213:long getMemoryCollected() -> tBta
    218:218:surge.math.Average getMahL() -> iuyN
    223:223:long getMahs() -> sPoa
    228:228:int getTotalChunks() -> hrun
    233:233:int getTotalEntities() -> VUQm
    238:238:int getTotalDrops() -> BBEq
    243:243:int getTotalTiles() -> BuJb
    248:248:int getTotalLiving() -> dxMS
    253:253:surge.server.WorldMonitor getWorldMonitor() -> ETAj
    258:258:int getChunksLoaded() -> hbUg
    263:263:int getChunksUnloaded() -> eYMK
    268:269:void setTicksPerSecondL(surge.math.Average) -> xymG
    273:274:void setTickTimeL(surge.math.Average) -> ofaa
    278:279:void setMahL(surge.math.Average) -> IOCc
    283:284:void setTicksPerSecond(double) -> ogCH
    288:289:void setTicksPerSecondRaw(double) -> PJgD
    293:294:void setTickTime(double) -> eque
    298:299:void setTickTimeRaw(double) -> Wyni
    303:304:void setRunning(boolean) -> tCMW
    308:309:void setTickUtilizationRaw(double) -> equd
    313:314:void setTickUtilization(double) -> gMge
    318:319:void setLeftoverTickTime(double) -> vtGL
    323:324:void setMemoryUse(long) -> ieQI
    328:329:void setMemoryAllocated(long) -> OHCj
    333:334:void setMemoryCollected(long) -> PAuG
    338:339:void setMahs(long) -> FpMi
    343:344:void setTotalChunks(int) -> VThC
    348:349:void setTotalEntities(int) -> OrWK
    353:354:void setTotalDrops(int) -> jhQx
    358:359:void setTotalTiles(int) -> KvkW
    363:364:void setTotalLiving(int) -> weff
    368:369:void setChunksLoaded(int) -> wmwN
    373:374:void setChunksUnloaded(int) -> IhUT
    378:379:void setWorldMonitor(surge.server.WorldMonitor) -> xymG
    383:384:void setTpsMonitor(surge.server.TPSMonitor) -> xymG
    388:389:void setMemoryMonitor(surge.server.MemoryMonitor) -> xymG
    26:26:void access$0(surge.server.SuperSampler,int) -> xymG
    28:28:void access$1(surge.server.SuperSampler,int) -> ofaa
    29:29:void access$2(surge.server.SuperSampler,int) -> IOCc
    27:27:void access$3(surge.server.SuperSampler,int) -> ieQI
    30:30:void access$4(surge.server.SuperSampler,int) -> OHCj
    31:31:void access$5(surge.server.SuperSampler,int) -> PAuG
    32:32:void access$6(surge.server.SuperSampler,int) -> FpMi
    15:15:void access$7(surge.server.SuperSampler,double) -> xymG
    17:17:void access$8(surge.server.SuperSampler,double) -> ofaa
    11:11:surge.math.Average access$9(surge.server.SuperSampler) -> xymG
    15:15:double access$10(surge.server.SuperSampler) -> ofaa
    12:12:surge.math.Average access$11(surge.server.SuperSampler) -> IOCc
    17:17:double access$12(surge.server.SuperSampler) -> ieQI
    14:14:void access$13(surge.server.SuperSampler,double) -> IOCc
    16:16:void access$14(surge.server.SuperSampler,double) -> ieQI
    19:19:void access$15(surge.server.SuperSampler,double) -> OHCj
    16:16:double access$16(surge.server.SuperSampler) -> OHCj
    20:20:void access$17(surge.server.SuperSampler,double) -> PAuG
    14:14:double access$18(surge.server.SuperSampler) -> PAuG
    20:20:double access$19(surge.server.SuperSampler) -> FpMi
    21:21:void access$20(surge.server.SuperSampler,double) -> FpMi
    22:22:void access$21(surge.server.SuperSampler,long) -> xymG
    23:23:void access$22(surge.server.SuperSampler,long) -> ofaa
    24:24:void access$23(surge.server.SuperSampler,long) -> IOCc
    13:13:surge.math.Average access$24(surge.server.SuperSampler) -> ogCH
    25:25:void access$25(surge.server.SuperSampler,long) -> ieQI
surge.server.SuperSampler$1 -> ctdF$1:
    surge.server.SuperSampler this$0 -> YpEI
    1:61:void <init>(surge.server.SuperSampler) -> <init>
    66:73:void updated(int,int,int,int,int,int,int) -> xymG
surge.server.SuperSampler$2 -> ctdF$2:
    surge.server.SuperSampler this$0 -> YpEI
    1:76:void <init>(surge.server.SuperSampler) -> <init>
    81:91:void onTicked() -> GYfp
surge.server.SuperSampler$3 -> ctdF$3:
    surge.server.SuperSampler this$0 -> YpEI
    1:94:void <init>(surge.server.SuperSampler) -> <init>
    99:104:void onAllocationSet() -> HLEd
surge.server.TPSMonitor -> vbge:
    double tickTimeMS -> sHhy
    double rawTicksPerSecond -> oUno
    surge.math.Profiler tickProfiler -> Hvcl
    surge.math.Profiler tickTimeProfiler -> lfXe
    boolean ticked -> DYUw
    java.lang.Thread$State lastState -> mPIq
    double actualTickTimeMS -> YgSU
    double ltt -> ycld
    19:31:void <init>() -> <init>
    void onTicked() -> GYfp
    38:64:void run() -> run
    68:97:void processState(java.lang.Thread$State) -> xymG
    101:101:double getTickTimeMS() -> QouO
    106:106:double getRawTicksPerSecond() -> cuJI
    111:111:surge.math.Profiler getTickProfiler() -> SKgh
    116:116:boolean isTicked() -> GYeT
    121:122:void markTick() -> brEa
    126:126:surge.math.Profiler getTickTimeProfiler() -> RbUi
    131:131:java.lang.Thread$State getLastState() -> VDOK
    136:136:double getActualTickTimeMS() -> LWsO
surge.server.WorldMonitor -> gNKr:
    boolean chunksChanged -> DbGe
    boolean dropChanged -> ySKu
    boolean tileChanged -> eXrr
    boolean livingChanged -> Oiut
    boolean totalChanged -> HDAA
    boolean updated -> aTvs
    int totalChunks -> Qglr
    int totalDrops -> oUpX
    int totalTiles -> qdgD
    int totalLiving -> Puie
    int totalEntities -> YNBb
    int chunksLoaded -> RtAN
    int chunksUnloaded -> Bcqf
    long ms -> yAjH
    25:44:void <init>() -> <init>
    49:64:void run() -> run
    void updated(int,int,int,int,int,int,int) -> xymG
    71:76:void on(org.bukkit.event.world.ChunkLoadEvent) -> xymG
    81:86:void on(org.bukkit.event.world.ChunkUnloadEvent) -> xymG
    91:92:void on(org.bukkit.event.entity.EntitySpawnEvent) -> xymG
    97:98:void on(org.bukkit.event.entity.EntityDeathEvent) -> xymG
    103:104:void on(org.bukkit.event.player.PlayerDropItemEvent) -> xymG
    109:110:void on(org.bukkit.event.player.PlayerPickupItemEvent) -> xymG
    115:116:void on(org.bukkit.event.entity.EntityPickupItemEvent) -> xymG
    121:122:void on(org.bukkit.event.block.BlockPlaceEvent) -> xymG
    127:128:void on(org.bukkit.event.block.BlockBreakEvent) -> xymG
    132:133:void doUpdate() -> bOaX
    137:188:void sample() -> ogCH
    192:198:void sampleTotalCount() -> MdGx
    202:208:void sampleLivingCount() -> CwmE
    212:221:void sampleTileCount() -> clWl
    225:231:void sampleDropCount() -> WWsP
    235:241:void sampleChunkCount() -> aCnF
surge.text.PhantomSpinner -> teRj:
    surge.text.ProgressSpinner s -> ggix
    surge.text.ProgressSpinner c -> dVQP
    15:19:void <init>(surge.util.C,surge.util.C,surge.util.C) -> <init>
    24:24:java.lang.String toString() -> toString
surge.text.ProgressSpinner -> oUbh:
    java.lang.String[] chars -> vcYB
    int index -> index
    surge.text.ProgressSpinner DEFAULT -> oodt
    surge.text.ProgressSpinner NETWORK -> MRqL
    surge.text.ProgressSpinner CIRCLES -> sHmJ
    surge.text.ProgressSpinner RANDOMS -> rglo
    surge.text.ProgressSpinner MERGERS -> inTm
    70:75:void <clinit>() -> <clinit>
    25:29:void <init>(java.lang.String[]) -> <init>
    36:37:void <init>() -> <init>
    45:55:java.lang.String toString() -> toString
    60:60:java.lang.String[] getChars() -> AFrq
    65:65:int getIndex() -> getIndex
surge.util.Adapter -> yIpx:
    java.lang.Object adapt(java.lang.Object) -> Wyni
    java.lang.Object onAdapt(java.lang.Object) -> equd
surge.util.Anchor -> yuGJ:
    int value() -> value
surge.util.Area -> XdGI:
    org.bukkit.Location location -> nuTI
    java.lang.Double radius -> BRqN
    26:26:boolean within(org.bukkit.Location,org.bukkit.Location,double) -> xymG
    39:42:void <init>(org.bukkit.Location,java.lang.Double) -> <init>
    46:46:surge.util.Cuboid toCuboid() -> rWAE
    59:62:void <init>(org.bukkit.Location,java.lang.Integer) -> <init>
    76:84:java.lang.Double distance(org.bukkit.Location) -> ieQI
    98:98:java.lang.Double slowDistance(org.bukkit.Location) -> OHCj
    110:110:boolean isWithin(org.bukkit.Location) -> PAuG
    120:120:boolean hasEntities() -> hasEntities
    132:142:org.bukkit.entity.Entity[] getNearbyEntities(org.bukkit.entity.EntityType) -> xymG
    154:164:org.bukkit.entity.Entity[] getNearbyEntities(java.lang.Class) -> xymG
    177:201:org.bukkit.entity.Entity[] getNearbyEntities() -> kANJ
    212:222:org.bukkit.entity.Player[] getNearbyPlayers() -> ownA
    232:232:org.bukkit.Location getLocation() -> getLocation
    243:244:void setLocation(org.bukkit.Location) -> FpMi
    253:253:java.lang.Double getRadius() -> fdcD
    264:265:void setRadius(java.lang.Double) -> ofaa
    274:279:org.bukkit.Location random() -> Yfly
surge.util.Axis -> HCVC:
    surge.util.Axis X -> ogTc
    surge.util.Axis Y -> oUqr
    surge.util.Axis Z -> iKoq
    int x -> x
    int y -> y
    int z -> z
    surge.util.Axis[] $VALUES -> QEkj
    5:5:surge.util.Axis[] values() -> values
    5:5:surge.util.Axis valueOf(java.lang.String) -> valueOf
    16:20:void <init>(java.lang.String,int,int,int,int) -> <init>
    24:24:org.bukkit.util.Vector positive() -> sjfv
    29:29:org.bukkit.util.Vector negative() -> OsCR
    5:9:void <clinit>() -> <clinit>
surge.util.BlastResistance -> xaAj:
    surge.util.BlastResistance BARRIER -> MuVJ
    surge.util.BlastResistance BEDROCK -> ySOV
    surge.util.BlastResistance COMMAND -> Bcqv
    surge.util.BlastResistance ENDER_PORTAL -> pafc
    surge.util.BlastResistance ENDER_PORTAL_FRAME -> FpaQ
    surge.util.BlastResistance ANVIL -> GcDB
    surge.util.BlastResistance ENCHANTMENT_TABLE -> Mttg
    surge.util.BlastResistance OBSIDIAN -> ncpN
    surge.util.BlastResistance ENDER_CHEST -> PJxC
    surge.util.BlastResistance WATER -> oMaT
    surge.util.BlastResistance LAVA -> XBNn
    surge.util.BlastResistance STATIONARY_WATER -> nBMi
    surge.util.BlastResistance DRAGON_EGG -> dpEe
    surge.util.BlastResistance ENDER_STONE -> fCFu
    surge.util.BlastResistance COAL_BLOCK -> HKqV
    surge.util.BlastResistance DIAMOND_BLOCK -> ArRv
    surge.util.BlastResistance EMERALD_BLOCK -> skOu
    surge.util.BlastResistance GOLD_BLOCK -> NgUd
    surge.util.BlastResistance IRON_BLOCK -> DYWo
    surge.util.BlastResistance REDSTONE_BLOCK -> iebe
    surge.util.BlastResistance BRICK -> dDpP
    surge.util.BlastResistance BRICK_STAIRS -> Qxno
    surge.util.BlastResistance HARD_CLAY -> QVlP
    surge.util.BlastResistance STONE -> OjXg
    surge.util.BlastResistance SMOOTH_BRICK -> ejWp
    surge.util.BlastResistance SMOOTH_STAIRS -> HTcK
    surge.util.BlastResistance DOUBLE_STONE_SLAB2 -> ECIb
    surge.util.BlastResistance STONE_SLAB2 -> FVly
    surge.util.BlastResistance IRON_DOOR -> cSRq
    surge.util.BlastResistance IRON_DOOR_BLOCK -> YUvE
    surge.util.BlastResistance IRON_TRAPDOOR -> eQHf
    surge.util.BlastResistance MOB_SPAWNER -> FEnU
    surge.util.BlastResistance WEB -> qdku
    surge.util.BlastResistance DISPENSER -> MmFt
    surge.util.BlastResistance DROPPER -> IXJD
    surge.util.BlastResistance FURNACE -> xOnS
    surge.util.BlastResistance BURNING_FURNACE -> dgVs
    surge.util.BlastResistance BEACON -> KoRD
    surge.util.BlastResistance COAL_ORE -> ivgA
    surge.util.BlastResistance COCOA -> YDth
    surge.util.BlastResistance DIAMOND_ORE -> FhSG
    surge.util.BlastResistance EMERALD_ORE -> DGxm
    surge.util.BlastResistance FENCE -> vJID
    surge.util.BlastResistance FENCE_GATE -> HLUl
    surge.util.BlastResistance ACACIA_FENCE_GATE -> qSjW
    surge.util.BlastResistance BIRCH_FENCE_GATE -> BdUU
    surge.util.BlastResistance DARK_OAK_FENCE_GATE -> OXyh
    surge.util.BlastResistance SPRUCE_FENCE_GATE -> BBRR
    surge.util.BlastResistance JUNGLE_FENCE_GATE -> Orlc
    surge.util.BlastResistance ACACIA_FENCE -> BdWT
    surge.util.BlastResistance BIRCH_FENCE -> PSkM
    surge.util.BlastResistance DARK_OAK_FENCE -> jpwa
    surge.util.BlastResistance SPRUCE_FENCE -> skQm
    surge.util.BlastResistance JUNGLE_FENCE -> nlcV
    surge.util.BlastResistance ACACIA_WOOD_STAIRS -> gWNT
    surge.util.BlastResistance BIRCH_WOOD_STAIRS -> ylbm
    surge.util.BlastResistance DARK_OAK_WOOD_STAIRS -> LPOp
    surge.util.BlastResistance SPRUCE_WOOD_STAIRS -> opGY
    surge.util.BlastResistance JUNGLE_WOOD_STAIRS -> ryPM
    surge.util.BlastResistance QUARTZ_STAIRS -> ggmo
    surge.util.BlastResistance COBBLESTONE_STAIRS -> YpIJ
    surge.util.BlastResistance SANDSTONE_STAIRS -> TOWL
    surge.util.BlastResistance NETHER_BRICK_STAIRS -> HKsm
    surge.util.BlastResistance WOOD_STAIRS -> NDve
    surge.util.BlastResistance RED_SANDSTONE_STAIRS -> ColF
    surge.util.BlastResistance ACACIA_DOOR -> uWhV
    surge.util.BlastResistance BIRCH_DOOR -> Yfxw
    surge.util.BlastResistance DARK_OAK_DOOR -> NEWm
    surge.util.BlastResistance SPRUCE_DOOR -> psMi
    surge.util.BlastResistance JUNGLE_DOOR -> KVAc
    surge.util.BlastResistance GOLD_ORE -> ThlO
    surge.util.BlastResistance HOPPER -> ObNR
    surge.util.BlastResistance IRON_ORE -> twIF
    surge.util.BlastResistance LAPIS_BLOCK -> iDEP
    surge.util.BlastResistance LAPIS_ORE -> bjDt
    surge.util.BlastResistance QUARTZ_ORE -> SCef
    surge.util.BlastResistance REDSTONE_ORE -> YokR
    surge.util.BlastResistance TRAP_DOOR -> MKFe
    surge.util.BlastResistance WOOD -> ECOK
    surge.util.BlastResistance CHEST -> Ihlf
    surge.util.BlastResistance TRAPPED_CHEST -> HLXP
    surge.util.BlastResistance WORKBENCH -> NolE
    surge.util.BlastResistance CAULDRON -> jhiy
    surge.util.BlastResistance LOG -> rWPU
    surge.util.BlastResistance LOG_2 -> hbcY
    surge.util.BlastResistance BOOKSHELF -> VxBj
    surge.util.BlastResistance BANNER -> eQJK
    surge.util.BlastResistance STANDING_BANNER -> BAtm
    surge.util.BlastResistance WALL_BANNER -> gySX
    surge.util.BlastResistance JACK_O_LANTERN -> iTds
    surge.util.BlastResistance MELON_BLOCK -> hcEE
    surge.util.BlastResistance SKULL -> gFNR
    surge.util.BlastResistance PUMPKIN -> xqrM
    surge.util.BlastResistance SIGN -> QpcM
    surge.util.BlastResistance SIGN_POST -> Btxv
    surge.util.BlastResistance WALL_SIGN -> Nfxu
    surge.util.BlastResistance QUARTZ_BLOCK -> gqAx
    surge.util.BlastResistance NOTE_BLOCK -> rgoa
    surge.util.BlastResistance RED_SANDSTONE -> nKCF
    surge.util.BlastResistance SANDSTONE -> FxtT
    surge.util.BlastResistance WOOL -> BJef
    surge.util.BlastResistance MONSTER_EGG -> jFfP
    surge.util.BlastResistance RAILS -> psKt
    surge.util.BlastResistance ACTIVATOR_RAIL -> stES
    surge.util.BlastResistance DETECTOR_RAIL -> SKuY
    surge.util.BlastResistance POWERED_RAIL -> LXbn
    surge.util.BlastResistance CLAY -> bPQS
    surge.util.BlastResistance DIRT -> sjrf
    surge.util.BlastResistance GRASS -> dMfN
    surge.util.BlastResistance GRAVEL -> nmFS
    surge.util.BlastResistance SPONGE -> QVsT
    surge.util.BlastResistance BREWING_STAND -> aoSq
    surge.util.BlastResistance STONE_BUTTON -> eroP
    surge.util.BlastResistance WOOD_BUTTON -> KoTp
    surge.util.BlastResistance CAKE_BLOCK -> uFhl
    surge.util.BlastResistance ICE -> lMQG
    surge.util.BlastResistance PACKED_ICE -> EBnw
    surge.util.BlastResistance LEVER -> BljY
    surge.util.BlastResistance MYCEL -> xHBp
    surge.util.BlastResistance PISTON_BASE -> fSne
    surge.util.BlastResistance PISTON_EXTENSION -> IXNH
    surge.util.BlastResistance PISTON_MOVING_PIECE -> sYsr
    surge.util.BlastResistance PISTON_STICKY_BASE -> gVrC
    surge.util.BlastResistance GOLD_PLATE -> yBTT
    surge.util.BlastResistance IRON_PLATE -> qdpB
    surge.util.BlastResistance STONE_PLATE -> ifJP
    surge.util.BlastResistance WOOD_PLATE -> QhUs
    surge.util.BlastResistance SAND -> nKEh
    surge.util.BlastResistance SOUL_SAND -> clhw
    surge.util.BlastResistance CACTUS -> qTNn
    surge.util.BlastResistance LADDER -> KEBc
    surge.util.BlastResistance NETHERRACK -> hQeE
    surge.util.BlastResistance GLASS -> ssgS
    surge.util.BlastResistance THIN_GLASS -> rOAm
    surge.util.BlastResistance STAINED_GLASS -> ssfq
    surge.util.BlastResistance STAINED_GLASS_PANE -> wgAg
    surge.util.BlastResistance GLOWSTONE -> uFhK
    surge.util.BlastResistance REDSTONE_LAMP_OFF -> QVqp
    surge.util.BlastResistance REDSTONE_LAMP_ON -> IiNT
    surge.util.BlastResistance SEA_LANTERN -> yuXL
    surge.util.BlastResistance BED_BLOCK -> XcwL
    surge.util.BlastResistance DAYLIGHT_DETECTOR -> UtaE
    surge.util.BlastResistance DAYLIGHT_DETECTOR_INVERTED -> scEn
    surge.util.BlastResistance HUGE_MUSHROOM_1 -> nuXn
    surge.util.BlastResistance HUGE_MUSHROOM_2 -> LjGS
    surge.util.BlastResistance LEAVES -> klNp
    surge.util.BlastResistance LEAVES_2 -> gFPm
    surge.util.BlastResistance SNOW -> KMRG
    int br -> lgAk
    surge.util.BlastResistance[] $VALUES -> fTNp
    10:10:surge.util.BlastResistance[] values() -> values
    10:10:surge.util.BlastResistance valueOf(java.lang.String) -> valueOf
    164:166:void <init>(java.lang.String,int,int) -> <init>
    170:170:int getBlastResistance() -> oLyG
    175:190:int get(org.bukkit.Material) -> xymG
    10:159:void <clinit>() -> <clinit>
surge.util.Blocks -> BdFv:
    11:11:void <init>() -> <init>
    22:22:org.bukkit.Location getCenter(org.bukkit.block.Block) -> xymG
surge.util.C -> ndEl:
    surge.util.C BLACK -> JJPq
    surge.util.C DARK_BLUE -> XJiC
    surge.util.C DARK_GREEN -> mOtl
    surge.util.C DARK_AQUA -> UuDe
    surge.util.C DARK_RED -> LHFs
    surge.util.C DARK_PURPLE -> VfeX
    surge.util.C GOLD -> mYGT
    surge.util.C GRAY -> fnDx
    surge.util.C DARK_GRAY -> OjbO
    surge.util.C BLUE -> uiOT
    surge.util.C GREEN -> LGev
    surge.util.C AQUA -> RYxh
    surge.util.C RED -> FVux
    surge.util.C LIGHT_PURPLE -> pQNN
    surge.util.C YELLOW -> IiRJ
    surge.util.C WHITE -> WOuo
    surge.util.C MAGIC -> CNLe
    surge.util.C BOLD -> RslF
    surge.util.C STRIKETHROUGH -> rxuw
    surge.util.C UNDERLINE -> vlRF
    surge.util.C ITALIC -> mYGG
    surge.util.C RESET -> vlQd
    char COLOR_CHAR -> COLOR_CHAR
    java.util.regex.Pattern STRIP_COLOR_PATTERN -> STRIP_COLOR_PATTERN
    int intCode -> cBXJ
    char code -> NMjq
    boolean isFormat -> gVsW
    java.lang.String toString -> panM
    java.util.Map BY_ID -> bqvp
    java.util.Map BY_CHAR -> Svlx
    java.util.Map dyeChatMap -> TXMr
    java.util.Map chatHexMap -> WPVD
    java.util.Map dyeHexMap -> KVEM
    int[] $SWITCH_TABLE$surge$util$C -> uXLP
    surge.util.C[] ENUM$VALUES -> uWkP
    19:727:void <clinit>() -> <clinit>
    334:335:void <init>(java.lang.String,int,char,int) -> <init>
    337:343:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    347:347:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
    357:357:char getChar() -> getChar
    363:363:java.lang.String toString() -> toString
    373:373:org.bukkit.DyeColor dye() -> wnbx
    378:378:java.lang.String hex() -> jOLQ
    388:388:boolean isFormat() -> isFormat
    398:398:boolean isColor() -> isColor
    413:418:surge.util.C getByChar(char) -> ogCH
    434:442:surge.util.C getByChar(java.lang.String) -> wmwN
    455:460:java.lang.String stripColor(java.lang.String) -> stripColor
    472:477:surge.util.C dyeToChat(org.bukkit.DyeColor) -> xymG
    482:490:org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) -> xymG
    496:501:java.lang.String chatToHex(org.bukkit.ChatColor) -> ofaa
    506:511:java.lang.String dyeToHex(org.bukkit.DyeColor) -> ofaa
    516:537:org.bukkit.Color hexToColor(java.lang.String) -> IhUT
    542:555:org.bukkit.Color rgbToColor(java.lang.String) -> CLqJ
    560:578:java.lang.String generateColorTable() -> nuJk
    588:588:org.bukkit.ChatColor chatColor() -> ykxK
    605:614:java.lang.String translateAlternateColorCodes(char,java.lang.String) -> translateAlternateColorCodes
    619:627:surge.util.C fromItemMeta(byte) -> xymG
    632:679:byte getItemMeta() -> GIFd
    692:717:java.lang.String getLastColors(java.lang.String) -> getLastColors
    1:1:surge.util.C[] values() -> values
    1:1:surge.util.C valueOf(java.lang.String) -> valueOf
    332:332:void <init>(java.lang.String,int,char,int,surge.util.C) -> <init>
    337:337:void <init>(java.lang.String,int,char,int,boolean,surge.util.C) -> <init>
    17:17:int[] $SWITCH_TABLE$surge$util$C() -> uqMf
surge.util.C$1 -> ndEl$1:
    1:23:void <init>(java.lang.String,int,char,int) -> <init>
    27:27:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$10 -> ndEl$2:
    1:122:void <init>(java.lang.String,int,char,int) -> <init>
    126:126:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$11 -> ndEl$3:
    1:133:void <init>(java.lang.String,int,char,int) -> <init>
    137:137:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$12 -> ndEl$4:
    1:144:void <init>(java.lang.String,int,char,int) -> <init>
    148:148:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$13 -> ndEl$5:
    1:155:void <init>(java.lang.String,int,char,int) -> <init>
    159:159:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$14 -> ndEl$6:
    1:166:void <init>(java.lang.String,int,char,int) -> <init>
    170:170:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$15 -> ndEl$7:
    1:177:void <init>(java.lang.String,int,char,int) -> <init>
    181:181:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$16 -> ndEl$8:
    1:188:void <init>(java.lang.String,int,char,int) -> <init>
    192:192:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$17 -> ndEl$9:
    1:199:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    203:203:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$18 -> ndEl$10:
    1:210:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    214:214:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$19 -> ndEl$11:
    1:221:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    225:225:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$2 -> ndEl$12:
    1:34:void <init>(java.lang.String,int,char,int) -> <init>
    38:38:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$20 -> ndEl$13:
    1:232:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    236:236:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$21 -> ndEl$14:
    1:243:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    247:247:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$22 -> ndEl$15:
    1:255:void <init>(java.lang.String,int,char,int) -> <init>
    259:259:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$3 -> ndEl$16:
    1:45:void <init>(java.lang.String,int,char,int) -> <init>
    49:49:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$4 -> ndEl$17:
    1:56:void <init>(java.lang.String,int,char,int) -> <init>
    60:60:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$5 -> ndEl$18:
    1:67:void <init>(java.lang.String,int,char,int) -> <init>
    71:71:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$6 -> ndEl$19:
    1:78:void <init>(java.lang.String,int,char,int) -> <init>
    82:82:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$7 -> ndEl$20:
    1:89:void <init>(java.lang.String,int,char,int) -> <init>
    93:93:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$8 -> ndEl$21:
    1:100:void <init>(java.lang.String,int,char,int) -> <init>
    104:104:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$9 -> ndEl$22:
    1:111:void <init>(java.lang.String,int,char,int) -> <init>
    115:115:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.CDou -> GbUh:
    double number -> ghTt
    double max -> max
    8:12:void <init>(double) -> <init>
    16:18:surge.util.CDou set(double) -> TOBx
    23:25:surge.util.CDou add(double) -> Mtav
    30:32:surge.util.CDou sub(double) -> VfKM
    37:37:double get() -> get
    42:48:void circ() -> HmlL
surge.util.CMD -> brDU:
    java.lang.String command -> command
    org.bukkit.command.CommandSender sender -> sender
    boolean virtual -> Rbhl
    25:30:void <init>(java.lang.String) -> <init>
    39:40:surge.util.CMD virtual() -> YgMA
    51:53:void execute(org.bukkit.command.CommandSender) -> IOCc
    60:77:void execute() -> execute
surge.util.CNum -> XdGT:
    int number -> number
    int max -> max
    8:12:void <init>(int) -> <init>
    16:18:surge.util.CNum set(int) -> CLqJ
    23:25:surge.util.CNum add(int) -> RbMx
    30:32:surge.util.CNum sub(int) -> lUFj
    37:37:int get() -> get
    42:48:void circ() -> HmlL
    52:52:int getMax() -> getMax
    57:59:void setMax(int) -> OOsM
surge.util.Chunks -> lenX:
    13:13:void <init>() -> <init>
    24:24:surge.collection.GList getLoadedChunks(org.bukkit.World) -> xymG
    34:41:surge.collection.GList getLoadedChunks() -> QVcm
    55:55:surge.collection.GList getRadius(org.bukkit.Chunk,int) -> ofaa
    73:73:boolean unload(org.bukkit.Chunk,boolean,boolean) -> xymG
    87:87:boolean unload(org.bukkit.Chunk,boolean) -> xymG
    99:99:boolean unload(org.bukkit.Chunk) -> xymG
    115:125:int unload(surge.collection.GList,boolean,boolean) -> xymG
    139:139:int unload(surge.collection.GList,boolean) -> xymG
    151:151:int unload(surge.collection.GList) -> OHCj
    167:167:boolean isLoaded(java.lang.String,int,int) -> xymG
    183:191:boolean isLoaded(org.bukkit.World,int,int) -> xymG
    202:206:void load(surge.collection.GList) -> PAuG
surge.util.Cuboid -> JcNg:
    java.lang.String worldName -> lMQQ
    int x1 -> fvSg
    int y1 -> Ihog
    int z1 -> WaWi
    int x2 -> jWlE
    int y2 -> sHtA
    int z2 -> KgGF
    43:56:void <init>(org.bukkit.Location,org.bukkit.Location) -> <init>
    60:70:int depth(surge.util.Axis) -> xymG
    83:89:void set(org.bukkit.Location,org.bukkit.Location) -> ofaa
    93:93:boolean hasPlayers() -> cItq
    98:110:surge.collection.GList getPlayers() -> jhQx
    115:166:surge.collection.GList getEntities() -> HmlX
    177:178:void <init>(org.bukkit.Location) -> <init>
    188:189:void <init>(surge.util.Cuboid) -> <init>
    210:218:void <init>(org.bukkit.World,int,int,int,int,int,int) -> <init>
    239:247:void <init>(java.lang.String,int,int,int,int,int,int) -> <init>
    250:258:void <init>(java.util.Map) -> <init>
    263:271:java.util.Map serialize() -> serialize
    276:276:surge.util.Cuboid flatten(int) -> RbPf
    287:287:org.bukkit.Location getLowerNE() -> UQoD
    298:298:org.bukkit.Location getUpperSW() -> PJpH
    308:311:org.bukkit.Location getCenter() -> getCenter
    323:328:org.bukkit.World getWorld() -> getWorld
    338:338:int getSizeX() -> aTqS
    348:348:int getSizeY() -> CVNA
    358:358:int getSizeZ() -> lerA
    368:368:int getLowerX() -> lvrq
    378:378:int getLowerY() -> tdwt
    388:388:int getLowerZ() -> xqeP
    398:398:int getUpperX() -> BBHj
    408:408:int getUpperY() -> HKjF
    418:418:int getUpperZ() -> sPvn
    428:438:org.bukkit.block.Block[] corners() -> gWFf
    454:469:surge.util.Cuboid expand(surge.util.Cuboid$CuboidDirection,int) -> xymG
    484:484:surge.util.Cuboid shift(surge.util.Cuboid$CuboidDirection,int) -> ofaa
    500:514:surge.util.Cuboid outset(surge.util.Cuboid$CuboidDirection,int) -> IOCc
    530:530:surge.util.Cuboid inset(surge.util.Cuboid$CuboidDirection,int) -> ieQI
    546:546:boolean contains(int,int,int) -> ofaa
    558:558:boolean contains(org.bukkit.block.Block) -> ofaa
    570:570:boolean contains(org.bukkit.Location) -> ogCH
    580:580:int volume() -> MuNj
    591:601:byte averageLightLevel() -> FEeh
    612:612:surge.util.Cuboid contract() -> bqig
    626:666:surge.util.Cuboid contract(surge.util.Cuboid$CuboidDirection) -> xymG
    680:695:surge.util.Cuboid getFace(surge.util.Cuboid$CuboidDirection) -> ofaa
    708:715:boolean containsOnly(org.bukkit.Material) -> ofaa
    727:739:surge.util.Cuboid getBoundingCuboid(surge.util.Cuboid) -> xymG
    755:755:org.bukkit.block.Block getRelativeBlock(int,int,int) -> IOCc
    775:775:org.bukkit.block.Block getRelativeBlock(org.bukkit.World,int,int,int) -> xymG
    786:800:java.util.List getChunks() -> sIGb
    815:819:void fill(int,byte) -> xymG
    843:843:java.util.Iterator iterator() -> iterator
    854:854:surge.util.Cuboid clone() -> BSLU
    865:865:java.lang.String toString() -> toString
    961:970:int hashCode() -> hashCode
    976:1036:boolean equals(java.lang.Object) -> equals
    27:27:java.lang.Object clone() -> clone
surge.util.Cuboid$1 -> JcNg$1:
    surge.util.Cuboid this$0 -> cmJw
    99:99:void <init>(surge.util.Cuboid) -> <init>
    103:108:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> ofaa
    99:99:java.lang.Object onAdapt(java.lang.Object) -> equd
surge.util.Cuboid$2 -> JcNg$2:
    int[] $SwitchMap$surge$util$Axis -> YpNg
    int[] $SwitchMap$surge$util$Cuboid$CuboidDirection -> CyBI
    60:454:void <clinit>() -> <clinit>
surge.util.Cuboid$CuboidDirection -> JcNg$xymG:
    surge.util.Cuboid$CuboidDirection North -> FEtS
    surge.util.Cuboid$CuboidDirection East -> cmNQ
    surge.util.Cuboid$CuboidDirection South -> Pdud
    surge.util.Cuboid$CuboidDirection West -> QFWE
    surge.util.Cuboid$CuboidDirection Up -> LOyA
    surge.util.Cuboid$CuboidDirection Down -> aLtM
    surge.util.Cuboid$CuboidDirection Horizontal -> QOHV
    surge.util.Cuboid$CuboidDirection Vertical -> quvP
    surge.util.Cuboid$CuboidDirection Both -> ThrH
    surge.util.Cuboid$CuboidDirection Unknown -> AGhU
    surge.util.Cuboid$CuboidDirection[] $VALUES -> PBrk
    916:916:surge.util.Cuboid$CuboidDirection[] values() -> values
    916:916:surge.util.Cuboid$CuboidDirection valueOf(java.lang.String) -> valueOf
    916:916:void <init>(java.lang.String,int) -> <init>
    932:953:surge.util.Cuboid$CuboidDirection opposite() -> maIK
    916:928:void <clinit>() -> <clinit>
surge.util.Cuboid$CuboidIterator -> JcNg$ofaa:
    org.bukkit.World w -> nBYE
    int baseX -> LOxt
    int baseY -> Oaqd
    int baseZ -> nBWt
    int x -> x
    int y -> y
    int z -> z
    int sizeX -> lnvD
    int sizeY -> tKyX
    int sizeZ -> GIXx
    surge.util.Cuboid this$0 -> cmJw
    876:885:void <init>(surge.util.Cuboid,org.bukkit.World,int,int,int,int,int,int) -> <init>
    890:890:boolean hasNext() -> hasNext
    896:906:org.bukkit.block.Block next() -> next
    913:913:void remove() -> remove
    868:868:java.lang.Object next() -> next
surge.util.CuboidException -> HdxM:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>(java.lang.String) -> <init>
surge.util.D -> ugxK:
    surge.collection.GList buffer -> FEty
    10:10:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    14:18:void flush() -> flush
    22:33:void log(java.lang.String,java.lang.String) -> ofaa
    37:38:void l(java.lang.Object,java.lang.String) -> xymG
    42:43:void s(java.lang.Object,java.lang.String) -> ofaa
    47:48:void v(java.lang.Object,java.lang.String) -> IOCc
    52:53:void w(java.lang.Object,java.lang.String) -> ieQI
    57:58:void f(java.lang.Object,java.lang.String) -> OHCj
    62:69:void l(java.lang.String) -> RbMx
    73:80:void s(java.lang.String) -> lUFj
    84:91:void v(java.lang.String) -> OOsM
    95:102:void w(java.lang.String) -> RbPf
    106:113:void f(java.lang.String) -> YwfQ
surge.util.DMSRequire -> BlWW:
    surge.util.DMSRequirement value() -> lwXA
surge.util.DMSRequirement -> BAbl:
    surge.util.DMSRequirement SQL -> rVta
    surge.util.DMSRequirement[] ENUM$VALUES -> kdCa
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:surge.util.DMSRequirement[] values() -> values
    1:1:surge.util.DMSRequirement valueOf(java.lang.String) -> valueOf
surge.util.Depend -> ePYf:
    surge.util.Depend VAULT -> Wiie
    surge.util.Depend FAWE -> ySYO
    surge.util.Depend WORLDEDIT -> sYwo
    surge.util.Depend PROTOLIB -> LXhi
    surge.util.Depend CITIZENS -> VxJC
    java.lang.String name -> name
    surge.util.Depend[] ENUM$VALUES -> rFTC
    5:11:void <clinit>() -> <clinit>
    15:18:void <init>(java.lang.String,int,java.lang.String) -> <init>
    22:22:boolean exists() -> exists
    1:1:surge.util.Depend[] values() -> values
    1:1:surge.util.Depend valueOf(java.lang.String) -> valueOf
surge.util.Dimension -> pYJP:
    int width -> width
    int height -> height
    int depth -> depth
    25:29:void <init>(int,int,int) -> <init>
    40:44:void <init>(int,int) -> <init>
    53:68:surge.util.DimensionFace getPane() -> skJd
    73:73:int getWidth() -> getWidth
    78:78:int getHeight() -> getHeight
    83:83:int getDepth() -> getDepth
surge.util.DimensionFace -> jNfn:
    surge.util.DimensionFace X -> gyXn
    surge.util.DimensionFace Y -> skYm
    surge.util.DimensionFace Z -> dxaB
    surge.util.DimensionFace[] $VALUES -> DjdX
    8:8:surge.util.DimensionFace[] values() -> values
    8:8:surge.util.DimensionFace valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    8:23:void <clinit>() -> <clinit>
surge.util.Direction -> GPtJ:
    surge.util.Direction U -> RQjE
    surge.util.Direction D -> Nxao
    surge.util.Direction N -> wwem
    surge.util.Direction S -> hbmE
    surge.util.Direction E -> hsnU
    surge.util.Direction W -> nvAP
    int x -> x
    int y -> y
    int z -> z
    surge.util.Cuboid$CuboidDirection f -> JdGs
    int[] $SWITCH_TABLE$surge$util$Direction -> uaBf
    surge.util.Direction[] ENUM$VALUES -> lgJJ
    14:21:void <clinit>() -> <clinit>
    28:34:void <init>(java.lang.String,int,int,int,int,surge.util.Cuboid$CuboidDirection) -> <init>
    38:56:surge.util.Direction reverse() -> cJXq
    61:61:int x() -> hjil
    66:66:int y() -> sPux
    71:71:int z() -> z
    76:76:surge.util.Cuboid$CuboidDirection f() -> nRhj
    81:81:surge.collection.GList news() -> WOhB
    86:86:surge.collection.GList udnews() -> rgfY
    91:101:surge.util.Direction facing(org.bukkit.entity.Player) -> CntX
    115:147:surge.util.Direction fromByte(byte) -> ofaa
    158:176:byte byteValue() -> byteValue
    1:1:surge.util.Direction[] values() -> values
    1:1:surge.util.Direction valueOf(java.lang.String) -> valueOf
    14:14:int[] $SWITCH_TABLE$surge$util$Direction() -> Kevy
surge.util.Embedded -> INjB:
    surge.collection.GList get() -> UJBe
    void add(java.lang.Object) -> add
surge.util.F -> lDLG:
    java.text.NumberFormat NF -> VDex
    java.text.DecimalFormat DF -> wwjH
    java.lang.String[] NAMES -> ymON
    java.math.BigInteger THOUSAND -> wwid
    java.util.NavigableMap MAP -> SDOR
    24:35:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    39:54:java.lang.String time(double,int) -> xymG
    59:59:java.lang.String b(int) -> b
    64:64:java.lang.String b(long) -> ogCH
    69:69:java.lang.String b(double) -> hQLN
    74:91:java.lang.String b(java.math.BigInteger) -> xymG
    96:100:void instantiate() -> dxPG
    111:111:java.lang.String color(java.lang.String) -> prWh
    124:124:java.lang.String fileSize(long) -> jhTS
    137:137:java.lang.String memSize(long) -> tCMW
    150:151:java.lang.String stamp(long) -> PmJX
    161:161:java.lang.String stamp() -> NUmG
    177:204:java.lang.String ofSize(long,int) -> ofaa
    209:236:java.lang.String ofSize(long,int,surge.util.C) -> xymG
    248:248:surge.collection.GList wrap(java.lang.String) -> nuCV
    262:279:surge.collection.GList wrap(java.lang.String,int) -> OHCj
    293:298:java.lang.String trim(java.lang.String,int) -> PAuG
    311:331:java.lang.String cname(java.lang.String) -> lfLO
    346:381:surge.collection.GList getParameters(java.lang.String,char) -> xymG
    395:407:java.lang.String repeat(java.lang.String,int) -> repeat
    419:426:java.lang.String mem(long) -> iSnb
    439:457:java.lang.String memx(long) -> CntX
    471:472:java.lang.String f(long) -> PJgD
    484:485:java.lang.String f(int) -> YwfQ
    499:508:java.lang.String f(double,int) -> ofaa
    524:533:java.lang.String fd(double,int) -> IOCc
    547:556:java.lang.String f(float,int) -> xymG
    567:567:java.lang.String f(double) -> SCOW
    578:578:java.lang.String f(float) -> xymG
    593:593:java.lang.String pc(double,int) -> ieQI
    608:608:java.lang.String pc(float,int) -> ofaa
    621:621:java.lang.String pc(double) -> bNwx
    634:634:java.lang.String pc(float) -> ofaa
    650:650:java.lang.String pc(int,int,int) -> ieQI
    664:664:java.lang.String pc(int,int) -> ieQI
    680:680:java.lang.String pc(long,long,int) -> xymG
    694:694:java.lang.String pc(long,long) -> xymG
    706:706:java.lang.String msSeconds(long) -> eque
    720:720:java.lang.String msSeconds(long,int) -> IOCc
    732:732:java.lang.String nsMs(long) -> Wyni
    746:746:java.lang.String nsMs(long,int) -> ieQI
    760:760:java.lang.String nsMsd(long,int) -> OHCj
    772:779:surge.collection.GList color(java.util.List) -> IOCc
surge.util.FU -> HLEd:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long ONE_GB -> ONE_GB
    java.io.File[] EMPTY_FILE_ARRAY -> EMPTY_FILE_ARRAY
    95:95:void <clinit>() -> <clinit>
    74:75:void <init>() -> <init>
    110:123:java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    139:145:void touch(java.io.File) -> touch
    159:159:java.io.File[] convertFileCollectionToFileArray(java.util.Collection) -> convertFileCollectionToFileArray
    179:195:java.io.File toFile(java.net.URL) -> toFile
    222:239:java.io.File[] toFiles(java.net.URL[]) -> toFiles
    256:263:java.net.URL[] toURLs(java.io.File[]) -> toURLs
    290:299:void copyFileToDirectory(java.io.File,java.io.File) -> copyFileToDirectory
    324:325:void copyFile(java.io.File,java.io.File) -> copyFile
    353:385:void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    401:430:void doCopyFile(java.io.File,java.io.File,boolean) -> xymG
    458:475:void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    503:504:void copyDirectory(java.io.File,java.io.File) -> copyDirectory
    534:555:void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    572:610:void doCopyDirectory(java.io.File,java.io.File,boolean) -> ofaa
    636:663:void copyURLToFile(java.net.URL,java.io.File) -> copyURLToFile
    676:687:void deleteDirectory(java.io.File) -> deleteDirectory
    699:734:void cleanDirectory(java.io.File) -> cleanDirectory
    753:776:boolean waitFor(java.io.File,int) -> waitFor
    799:807:java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    823:831:byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    855:863:java.util.List readLines(java.io.File,java.lang.String) -> readLines
    886:894:void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    909:917:void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    942:943:void writeLines(java.io.File,java.lang.String,java.util.Collection) -> writeLines
    970:978:void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String) -> writeLines
    1000:1015:void forceDelete(java.io.File) -> forceDelete
    1030:1037:void forceDeleteOnExit(java.io.File) -> forceDeleteOnExit
    1051:1058:void deleteDirectoryOnExit(java.io.File) -> IOCc
    1072:1107:void cleanDirectoryOnExit(java.io.File) -> ieQI
    1123:1138:void forceMkdir(java.io.File) -> forceMkdir
    1152:1184:long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    1207:1215:boolean isFileNewer(java.io.File,java.io.File) -> isFileNewer
    1236:1240:boolean isFileNewer(java.io.File,java.util.Date) -> isFileNewer
    1260:1268:boolean isFileNewer(java.io.File,long) -> isFileNewer
surge.util.FinalDouble -> sbRS:
    double i -> Bloo
    18:21:void <init>(double) -> <init>
    30:30:double get() -> get
    41:42:void set(double) -> set
    52:53:void add(double) -> add
    63:64:void sub(double) -> gNGq
surge.util.FinalFloat -> mrBq:
    float i -> i
    18:21:void <init>(float) -> <init>
    30:30:float get() -> get
    41:42:void set(float) -> set
    52:53:void add(float) -> add
    63:64:void sub(float) -> IOCc
surge.util.FinalInteger -> jFTy:
    int i -> i
    18:21:void <init>(int) -> <init>
    30:30:int get() -> get
    41:42:void set(int) -> set
    52:53:void add(int) -> add
    63:64:void sub(int) -> prWh
surge.util.FinalLong -> RbTX:
    long i -> ELGu
    18:21:void <init>(long) -> <init>
    30:30:long get() -> get
    41:42:void set(long) -> set
    52:53:void add(long) -> add
    63:64:void sub(long) -> equd
surge.util.FinalString -> CUiC:
    java.lang.String string -> string
    18:21:void <init>(java.lang.String) -> <init>
    30:30:java.lang.String get() -> get
    41:42:void set(java.lang.String) -> set
surge.util.Fingerprint -> tmdp:
    5:5:void <init>() -> <init>
    9:14:java.lang.String randomFingerprint(java.lang.String) -> eHFB
surge.util.GListAdapter -> Bkvy:
    16:16:void <init>() -> <init>
    27:39:java.util.List adapt(java.util.List) -> ieQI
    java.lang.Object onAdapt(java.lang.Object) -> equd
surge.util.Health -> cteo:
    double hp -> lgIR
    20:22:void <init>(double) -> <init>
    31:31:int getFlatHearts() -> qlrj
    41:41:double getHearts() -> BuPT
    51:51:double getHalfHearts() -> ogMq
    61:61:int getFlatHalfHearts() -> JtTt
surge.util.IO -> BBDn:
    char DIR_SEPARATOR_UNIX -> DIR_SEPARATOR_UNIX
    char DIR_SEPARATOR_WINDOWS -> DIR_SEPARATOR_WINDOWS
    char DIR_SEPARATOR -> DIR_SEPARATOR
    java.lang.String LINE_SEPARATOR_UNIX -> LINE_SEPARATOR_UNIX
    java.lang.String LINE_SEPARATOR_WINDOWS -> LINE_SEPARATOR_WINDOWS
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    97:122:void <clinit>() -> <clinit>
    129:130:void <init>() -> <init>
    146:154:void closeQuietly(java.io.Reader) -> closeQuietly
    169:177:void closeQuietly(java.io.Writer) -> closeQuietly
    192:200:void closeQuietly(java.io.InputStream) -> closeQuietly
    215:223:void closeQuietly(java.io.OutputStream) -> closeQuietly
    243:245:byte[] toByteArray(java.io.InputStream) -> toByteArray
    265:267:byte[] toByteArray(java.io.Reader) -> toByteArray
    293:295:byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    315:315:byte[] toByteArray(java.lang.String) -> toByteArray
    338:340:char[] toCharArray(java.io.InputStream) -> toCharArray
    366:368:char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    388:390:char[] toCharArray(java.io.Reader) -> toCharArray
    412:414:java.lang.String toString(java.io.InputStream) -> toString
    439:441:java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    460:462:java.lang.String toString(java.io.Reader) -> toString
    480:480:java.lang.String toString(byte[]) -> toString
    503:508:java.lang.String toString(byte[],java.lang.String) -> toString
    532:533:java.util.List readLines(java.io.InputStream) -> readLines
    559:565:java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    587:595:java.util.List readLines(java.io.Reader) -> readLines
    610:611:java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    632:633:java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    654:658:void write(byte[],java.io.OutputStream) -> write
    679:683:void write(byte[],java.io.Writer) -> write
    709:719:void write(byte[],java.io.Writer,java.lang.String) -> write
    740:744:void write(char[],java.io.Writer) -> write
    766:770:void write(char[],java.io.OutputStream) -> write
    797:807:void write(char[],java.io.OutputStream,java.lang.String) -> write
    826:830:void write(java.lang.String,java.io.Writer) -> write
    851:855:void write(java.lang.String,java.io.OutputStream) -> write
    880:890:void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    909:913:void write(java.lang.StringBuffer,java.io.Writer) -> write
    934:938:void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    963:973:void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    997:1014:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream) -> writeLines
    1041:1064:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String) -> writeLines
    1084:1101:void writeLines(java.util.Collection,java.lang.String,java.io.Writer) -> writeLines
    1132:1137:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    1160:1168:long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    1192:1194:void copy(java.io.InputStream,java.io.Writer) -> copy
    1222:1230:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    1260:1265:int copy(java.io.Reader,java.io.Writer) -> copy
    1288:1296:long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    1324:1328:void copy(java.io.Reader,java.io.OutputStream) -> copy
    1360:1370:void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    1394:1415:boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    1439:1460:boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
surge.util.Items -> XBCI:
    16:16:void <init>() -> <init>
    27:27:boolean is(org.bukkit.inventory.ItemStack) -> xymG
    41:41:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material) -> xymG
    56:56:boolean is(org.bukkit.inventory.ItemStack,surge.util.MaterialBlock) -> xymG
    72:72:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,byte) -> xymG
    88:88:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,int) -> xymG
    100:100:boolean hasMeta(org.bukkit.inventory.ItemStack) -> ofaa
    112:112:boolean hasName(org.bukkit.inventory.ItemStack) -> IOCc
    124:124:boolean hasLore(org.bukkit.inventory.ItemStack) -> ieQI
    138:138:boolean hasName(org.bukkit.inventory.ItemStack,java.lang.String) -> xymG
    152:152:boolean hasLore(org.bukkit.inventory.ItemStack,java.util.List) -> xymG
    166:166:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment) -> xymG
    182:187:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment,int) -> xymG
    199:204:boolean hasEnchantments(org.bukkit.inventory.ItemStack) -> OHCj
    217:222:surge.util.MaterialBlock toMaterialBlock(org.bukkit.inventory.ItemStack) -> PAuG
    234:234:boolean isBroken(org.bukkit.inventory.ItemStack) -> FpMi
    246:246:boolean hasDurability(org.bukkit.inventory.ItemStack) -> ogCH
    258:268:double getDurabilityPercent(org.bukkit.inventory.ItemStack) -> jhTS
    281:294:void setDurabilityPercent(org.bukkit.inventory.ItemStack,double) -> xymG
    305:310:short getMaxDurability(org.bukkit.inventory.ItemStack) -> tCMW
    322:327:short getDurability(org.bukkit.inventory.ItemStack) -> PmJX
    340:346:void setDurability(org.bukkit.inventory.ItemStack,short) -> xymG
    358:364:void setDurability(org.bukkit.inventory.ItemStack,int) -> xymG
    376:382:void damage(org.bukkit.inventory.ItemStack,int) -> ofaa
    396:439:boolean isMergable(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack) -> xymG
surge.util.MSound -> EmQA:
    surge.util.MSound AMBIENCE_CAVE -> woYB
    surge.util.MSound AMBIENCE_RAIN -> cvAb
    surge.util.MSound AMBIENCE_THUNDER -> SCmw
    surge.util.MSound ANVIL_BREAK -> WYLa
    surge.util.MSound ANVIL_LAND -> XJlC
    surge.util.MSound ANVIL_USE -> tUND
    surge.util.MSound ARROW_HIT -> URcj
    surge.util.MSound BURP -> jGOd
    surge.util.MSound CHEST_CLOSE -> Seol
    surge.util.MSound CHEST_OPEN -> ghYr
    surge.util.MSound CLICK -> hcLn
    surge.util.MSound DOOR_CLOSE -> mikM
    surge.util.MSound DOOR_OPEN -> jXRC
    surge.util.MSound DRINK -> AHLU
    surge.util.MSound EAT -> RAKE
    surge.util.MSound EXPLODE -> iCkS
    surge.util.MSound FALL_BIG -> PSvJ
    surge.util.MSound FALL_SMALL -> LOym
    surge.util.MSound FIRE -> WjMV
    surge.util.MSound FIRE_IGNITE -> xjIw
    surge.util.MSound FIZZ -> OPsO
    surge.util.MSound FUSE -> TPBd
    surge.util.MSound GLASS -> uXOy
    surge.util.MSound HURT_FLESH -> oxaa
    surge.util.MSound ITEM_BREAK -> qBtw
    surge.util.MSound ITEM_PICKUP -> EnMG
    surge.util.MSound LAVA -> YMrH
    surge.util.MSound LAVA_POP -> aLwq
    surge.util.MSound LEVEL_UP -> vBDw
    surge.util.MSound MINECART_BASE -> ymPm
    surge.util.MSound MINECART_INSIDE -> xYMH
    surge.util.MSound NOTE_BASS -> ceBB
    surge.util.MSound NOTE_PIANO -> kAdO
    surge.util.MSound NOTE_BASS_DRUM -> pbVJ
    surge.util.MSound NOTE_STICKS -> sbnB
    surge.util.MSound NOTE_BASS_GUITAR -> qeYM
    surge.util.MSound NOTE_SNARE_DRUM -> jrGN
    surge.util.MSound NOTE_PLING -> eQUY
    surge.util.MSound ORB_PICKUP -> rqMC
    surge.util.MSound PISTON_EXTEND -> ifRE
    surge.util.MSound PISTON_RETRACT -> jGQd
    surge.util.MSound PORTAL -> pIBy
    surge.util.MSound PORTAL_TRAVEL -> nlpI
    surge.util.MSound PORTAL_TRIGGER -> YpTl
    surge.util.MSound SHOOT_ARROW -> jrEs
    surge.util.MSound SPLASH -> hbmn
    surge.util.MSound SPLASH2 -> wwin
    surge.util.MSound STEP_GRASS -> fnIe
    surge.util.MSound STEP_GRAVEL -> DbWn
    surge.util.MSound STEP_LADDER -> WXli
    surge.util.MSound STEP_SAND -> YotN
    surge.util.MSound STEP_SNOW -> pasq
    surge.util.MSound STEP_STONE -> sbmG
    surge.util.MSound STEP_WOOD -> iepc
    surge.util.MSound STEP_WOOL -> WjNr
    surge.util.MSound SWIM -> HCos
    surge.util.MSound WATER -> MKQw
    surge.util.MSound WOOD_CLICK -> vJWS
    surge.util.MSound BAT_DEATH -> GQpn
    surge.util.MSound BAT_HURT -> kIwV
    surge.util.MSound BAT_IDLE -> LYQR
    surge.util.MSound BAT_LOOP -> mYPC
    surge.util.MSound BAT_TAKEOFF -> SDRi
    surge.util.MSound BLAZE_BREATH -> VVLs
    surge.util.MSound BLAZE_DEATH -> AQAB
    surge.util.MSound BLAZE_HIT -> KVNT
    surge.util.MSound CAT_HISS -> RstC
    surge.util.MSound CAT_HIT -> TFvC
    surge.util.MSound CAT_MEOW -> SoHH
    surge.util.MSound CAT_PURR -> pawU
    surge.util.MSound CAT_PURREOW -> gpns
    surge.util.MSound CHICKEN_IDLE -> jiWK
    surge.util.MSound CHICKEN_HURT -> ioEQ
    surge.util.MSound CHICKEN_EGG_POP -> CggG
    surge.util.MSound CHICKEN_WALK -> YEcD
    surge.util.MSound COW_IDLE -> ylpy
    surge.util.MSound COW_HURT -> SURr
    surge.util.MSound COW_WALK -> XvES
    surge.util.MSound CREEPER_HISS -> vIvB
    surge.util.MSound CREEPER_DEATH -> BmWA
    surge.util.MSound ENDERDRAGON_DEATH -> opVT
    surge.util.MSound ENDERDRAGON_GROWL -> oMrS
    surge.util.MSound ENDERDRAGON_HIT -> ivtc
    surge.util.MSound ENDERDRAGON_WINGS -> tvsi
    surge.util.MSound ENDERMAN_DEATH -> mjOo
    surge.util.MSound ENDERMAN_HIT -> qSxQ
    surge.util.MSound ENDERMAN_IDLE -> KDjc
    surge.util.MSound ENDERMAN_TELEPORT -> MSbS
    surge.util.MSound ENDERMAN_SCREAM -> VgMx
    surge.util.MSound ENDERMAN_STARE -> eQWC
    surge.util.MSound GHAST_SCREAM -> IiXs
    surge.util.MSound GHAST_SCREAM2 -> kchY
    surge.util.MSound GHAST_CHARGE -> Xlrp
    surge.util.MSound GHAST_DEATH -> vuIu
    surge.util.MSound GHAST_FIREBALL -> URhd
    surge.util.MSound GHAST_MOAN -> Yxiu
    surge.util.MSound IRONGOLEM_DEATH -> mHOe
    surge.util.MSound IRONGOLEM_HIT -> oNUf
    surge.util.MSound IRONGOLEM_THROW -> YWHW
    surge.util.MSound IRONGOLEM_WALK -> vuNA
    surge.util.MSound MAGMACUBE_WALK -> WisF
    surge.util.MSound MAGMACUBE_WALK2 -> dWFs
    surge.util.MSound MAGMACUBE_JUMP -> Gker
    surge.util.MSound PIG_IDLE -> iUUK
    surge.util.MSound PIG_DEATH -> MJsf
    surge.util.MSound PIG_WALK -> wgOB
    surge.util.MSound SHEEP_IDLE -> clug
    surge.util.MSound SHEEP_SHEAR -> ePyG
    surge.util.MSound SHEEP_WALK -> Voaf
    surge.util.MSound SILVERFISH_HIT -> xGnM
    surge.util.MSound SILVERFISH_KILL -> VDmR
    surge.util.MSound SILVERFISH_IDLE -> MJso
    surge.util.MSound SILVERFISH_WALK -> XvHa
    surge.util.MSound SKELETON_IDLE -> vuMW
    surge.util.MSound SKELETON_DEATH -> uGTy
    surge.util.MSound SKELETON_HURT -> TGWI
    surge.util.MSound SKELETON_WALK -> LabT
    surge.util.MSound SLIME_ATTACK -> IrKh
    surge.util.MSound SLIME_WALK -> uOfJ
    surge.util.MSound SLIME_WALK2 -> xipT
    surge.util.MSound SPIDER_IDLE -> xjPf
    surge.util.MSound SPIDER_DEATH -> uOdo
    surge.util.MSound SPIDER_WALK -> PwAO
    surge.util.MSound WITHER_DEATH -> hRQM
    surge.util.MSound WITHER_HURT -> Qpqb
    surge.util.MSound WITHER_IDLE -> Hevq
    surge.util.MSound WITHER_SHOOT -> vdKJ
    surge.util.MSound WITHER_SPAWN -> JAjK
    surge.util.MSound WOLF_BARK -> KENL
    surge.util.MSound WOLF_DEATH -> EUAS
    surge.util.MSound WOLF_GROWL -> ndgA
    surge.util.MSound WOLF_HOWL -> wxRd
    surge.util.MSound WOLF_HURT -> FpuO
    surge.util.MSound WOLF_PANT -> GkhH
    surge.util.MSound WOLF_SHAKE -> ymWa
    surge.util.MSound WOLF_WALK -> nKUR
    surge.util.MSound WOLF_WHINE -> oEgI
    surge.util.MSound ZOMBIE_METAL -> oEgP
    surge.util.MSound ZOMBIE_WOOD -> madM
    surge.util.MSound ZOMBIE_WOODBREAK -> VEPH
    surge.util.MSound ZOMBIE_IDLE -> Bdgu
    surge.util.MSound ZOMBIE_DEATH -> xrdS
    surge.util.MSound ZOMBIE_HURT -> XBdu
    surge.util.MSound ZOMBIE_INFECT -> Aitv
    surge.util.MSound ZOMBIE_UNFECT -> jWyR
    surge.util.MSound ZOMBIE_REMEDY -> clwd
    surge.util.MSound ZOMBIE_WALK -> Wadm
    surge.util.MSound ZOMBIE_PIG_IDLE -> bXsS
    surge.util.MSound ZOMBIE_PIG_ANGRY -> QFbE
    surge.util.MSound ZOMBIE_PIG_DEATH -> QqVN
    surge.util.MSound ZOMBIE_PIG_HURT -> SCuK
    surge.util.MSound DIG_WOOL -> riBa
    surge.util.MSound DIG_GRASS -> Hexd
    surge.util.MSound DIG_GRAVEL -> misO
    surge.util.MSound DIG_SAND -> TOhw
    surge.util.MSound DIG_SNOW -> gNof
    surge.util.MSound DIG_STONE -> TaLV
    surge.util.MSound DIG_WOOD -> HoJu
    surge.util.MSound FIREWORK_BLAST -> xjSJ
    surge.util.MSound FIREWORK_BLAST2 -> XvJD
    surge.util.MSound FIREWORK_LARGE_BLAST -> fLMe
    surge.util.MSound FIREWORK_LARGE_BLAST2 -> APeC
    surge.util.MSound FIREWORK_TWINKLE -> pkKp
    surge.util.MSound FIREWORK_TWINKLE2 -> Cxlk
    surge.util.MSound FIREWORK_LAUNCH -> WQBx
    surge.util.MSound SUCCESSFUL_HIT -> FWbl
    surge.util.MSound HORSE_ANGRY -> kcon
    surge.util.MSound HORSE_ARMOR -> NEjU
    surge.util.MSound HORSE_BREATHE -> DYpC
    surge.util.MSound HORSE_DEATH -> cmYv
    surge.util.MSound HORSE_GALLOP -> ylwx
    surge.util.MSound HORSE_HIT -> hQuk
    surge.util.MSound HORSE_IDLE -> VxVm
    surge.util.MSound HORSE_JUMP -> KERi
    surge.util.MSound HORSE_LAND -> Muky
    surge.util.MSound HORSE_SADDLE -> mXtJ
    surge.util.MSound HORSE_SOFT -> nSgI
    surge.util.MSound HORSE_WOOD -> BeKP
    surge.util.MSound DONKEY_ANGRY -> iDWe
    surge.util.MSound DONKEY_DEATH -> USPo
    surge.util.MSound DONKEY_HIT -> YWMD
    surge.util.MSound DONKEY_IDLE -> XTIa
    surge.util.MSound HORSE_SKELETON_DEATH -> FXGQ
    surge.util.MSound HORSE_SKELETON_HIT -> MeLN
    surge.util.MSound HORSE_SKELETON_IDLE -> fwDa
    surge.util.MSound HORSE_ZOMBIE_DEATH -> mjVe
    surge.util.MSound HORSE_ZOMBIE_HIT -> PUBw
    surge.util.MSound HORSE_ZOMBIE_IDLE -> riDb
    surge.util.MSound VILLAGER_DEATH -> wxTI
    surge.util.MSound VILLAGER_HAGGLE -> Emrm
    surge.util.MSound VILLAGER_HIT -> mjUh
    surge.util.MSound VILLAGER_IDLE -> dVid
    surge.util.MSound VILLAGER_NO -> ekNs
    surge.util.MSound VILLAGER_YES -> cKUt
    java.lang.String pre19sound -> nmYS
    java.lang.String post19sound -> RAUS
    org.bukkit.Sound resolvedSound -> jGYv
    surge.util.MSound[] ENUM$VALUES -> iUXi
    8:203:void <clinit>() -> <clinit>
    207:213:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    217:229:org.bukkit.Sound bukkitSound() -> JIaM
    1:1:surge.util.MSound[] values() -> values
    1:1:surge.util.MSound valueOf(java.lang.String) -> valueOf
surge.util.MaterialBlock -> sPoa:
    org.bukkit.Material material -> UcpG
    java.lang.Byte data -> FiFq
    26:29:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    32:35:void <init>(org.bukkit.Material) -> <init>
    38:41:void <init>(org.bukkit.Location) -> <init>
    44:47:void <init>() -> <init>
    51:51:org.bukkit.Material getMaterial() -> getMaterial
    56:57:void setMaterial(org.bukkit.Material) -> setMaterial
    61:61:java.lang.Byte getData() -> cdKO
    66:67:void setData(java.lang.Byte) -> xymG
    72:77:java.lang.String toString() -> toString
    83:87:int hashCode() -> hashCode
    93:121:boolean equals(java.lang.Object) -> equals
surge.util.P -> YEFM:
    25:25:void <init>() -> <init>
    36:36:boolean isOnline(java.lang.String) -> wwKr
    48:48:org.bukkit.entity.Player getPlayer(java.lang.String) -> getPlayer
    58:58:org.bukkit.entity.Player getAnyPlayer() -> Veth
    68:68:boolean isAnyOnline() -> VoGT
    80:80:surge.collection.GList inWorld(org.bukkit.World) -> ofaa
    92:104:surge.collection.GList inChunk(org.bukkit.Chunk) -> ofaa
    118:118:surge.collection.GList inArea(org.bukkit.Location,double) -> IOCc
    132:132:surge.collection.GList inArea(org.bukkit.Location,int) -> xymG
    143:144:void disable(org.bukkit.entity.Player) -> PJgD
    154:155:void enable(org.bukkit.entity.Player) -> eque
    168:168:org.bukkit.Location targetBlock(org.bukkit.entity.Player,int) -> xymG
    182:182:org.bukkit.entity.Entity targetEntity(org.bukkit.entity.Player,int) -> ofaa
    194:195:boolean hasInventoryOpen(org.bukkit.entity.Player) -> Wyni
    211:243:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Player,double,double) -> xymG
    257:266:int getTotalExperience(org.bukkit.entity.Player) -> equd
    281:289:void setTotalExperience(org.bukkit.entity.Player,int) -> IOCc
    300:300:boolean canFindPlayer(java.lang.String) -> Gapf
    312:328:org.bukkit.entity.Player findPlayer(java.lang.String) -> DYHg
    338:345:surge.collection.GList onlinePlayers() -> OsDU
    357:357:org.bukkit.Location getCrotchLocation(org.bukkit.entity.Player) -> gMge
    368:371:void clear(org.bukkit.entity.Player) -> vtGL
    381:385:void clearEffects(org.bukkit.entity.Player) -> TOBx
    398:399:void heal(org.bukkit.entity.Player,double) -> xymG
    409:410:void heal(org.bukkit.entity.Player) -> Mtav
    421:422:void resetMaxHeath(org.bukkit.entity.Player) -> VfKM
    432:433:void resetHunger(org.bukkit.entity.Player) -> hQLN
    443:444:void kill(org.bukkit.entity.Player) -> SCOW
    455:455:surge.util.Shape getShape(org.bukkit.entity.Player) -> bNwx
    467:467:org.bukkit.Location getHand(org.bukkit.entity.Player) -> gNGq
    483:492:org.bukkit.Location getHand(org.bukkit.entity.Player,float,float) -> xymG
surge.util.P$1 -> YEFM$1:
    1:92:void <init>() -> <init>
    97:102:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> ofaa
    1:1:java.lang.Object onAdapt(java.lang.Object) -> equd
surge.util.P$2 -> YEFM$2:
    java.lang.Double val$doff -> fnRi
    org.bukkit.entity.Player val$e -> MukV
    org.bukkit.entity.Entity[] val$result -> AahP
    1:224:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Player,org.bukkit.entity.Entity[]) -> <init>
    229:240:void onTrace(org.bukkit.Location) -> jhTS
surge.util.PE -> AXTB:
    surge.util.PE ABSORPTION -> xPbX
    surge.util.PE BLINDNESS -> kmAG
    surge.util.PE CONFUSION -> LbGj
    surge.util.PE DAMAGE_RESISTANCE -> yuhR
    surge.util.PE FAST_DIGGING -> FiHC
    surge.util.PE FIRE_RESISTANCE -> qTar
    surge.util.PE GLOWING -> yBgV
    surge.util.PE HARM -> vSQF
    surge.util.PE HEAL -> kcqo
    surge.util.PE HEALTH_BOOST -> mahI
    surge.util.PE HUNGER -> OtEL
    surge.util.PE INCREASE_DAMAGE -> cCIK
    surge.util.PE INVISIBILITY -> yCGq
    surge.util.PE JUMP -> DQbA
    surge.util.PE LEVITATION -> aVUB
    surge.util.PE LUCK -> pkQc
    surge.util.PE NIGHT_VISION -> rNsf
    surge.util.PE POISON -> skhy
    surge.util.PE REGENERATION -> kmDP
    surge.util.PE SATURATION -> nukr
    surge.util.PE SLOW -> bbHW
    surge.util.PE SLOW_DIGGING -> qebd
    surge.util.PE SPEED -> WbII
    surge.util.PE UNLUCK -> rqVm
    surge.util.PE WATER_BREATHING -> KwwQ
    surge.util.PE WEAKNESS -> xrhL
    surge.util.PE WITHER -> Lagu
    192:215:void <clinit>() -> <clinit>
    50:51:void <init>(java.util.Map) -> <init>
    55:56:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> <init>
    60:61:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean) -> <init>
    65:66:void <init>(org.bukkit.potion.PotionEffectType,int,int) -> <init>
    71:71:java.util.Map serialize() -> serialize
    77:79:boolean apply(org.bukkit.entity.LivingEntity) -> apply
    85:85:boolean equals(java.lang.Object) -> equals
    91:91:int getAmplifier() -> getAmplifier
    97:97:int getDuration() -> getDuration
    103:103:org.bukkit.potion.PotionEffectType getType() -> getType
    109:109:boolean isAmbient() -> isAmbient
    115:115:boolean hasParticles() -> hasParticles
    121:121:int hashCode() -> hashCode
    127:127:java.lang.String toString() -> toString
    132:132:surge.util.PE defaulted(org.bukkit.potion.PotionEffectType) -> xymG
    144:144:surge.util.PE d(int) -> nuCV
    156:156:surge.util.PE a(int) -> lfLO
    166:166:org.bukkit.potion.PotionEffect c() -> gMrq
    177:178:void c(org.bukkit.entity.LivingEntity) -> xymG
    182:183:void crm(org.bukkit.entity.LivingEntity) -> ofaa
    187:188:void rm(org.bukkit.entity.LivingEntity) -> IOCc
surge.util.Paste -> KfPr:
    15:15:void <init>() -> <init>
    28:36:java.lang.String paste(java.lang.String) -> GQOy
surge.util.Persist -> MAbi:
surge.util.PluginUtil -> xqde:
    61:61:void <init>() -> <init>
    72:74:void enable(org.bukkit.plugin.Plugin) -> xymG
    81:85:void enableAll() -> HnOc
    95:99:void disable(org.bukkit.plugin.Plugin) -> ofaa
    106:110:void disableAll() -> hIGU
    121:121:java.lang.String getFormattedName(org.bukkit.plugin.Plugin) -> IOCc
    135:142:java.lang.String getFormattedName(org.bukkit.plugin.Plugin,boolean) -> xymG
    154:159:org.bukkit.plugin.Plugin getPluginByName(java.lang.String) -> ytaT
    169:172:java.util.List getPluginNames(boolean) -> PmJX
    184:187:java.lang.String getPluginVersion(java.lang.String) -> wvjk
    200:222:java.lang.String getUsages(org.bukkit.plugin.Plugin) -> ieQI
    237:316:java.util.List findByCommand(java.lang.String) -> SnEi
    337:338:void load(org.bukkit.plugin.Plugin) -> OHCj
    342:364:java.lang.String getPluginFileName(java.lang.String) -> mXML
    377:429:void load(java.lang.String) -> load
    441:446:void reload(org.bukkit.plugin.Plugin) -> PAuG
    453:457:void reloadAll() -> ytiu
    469:595:void unload(org.bukkit.plugin.Plugin) -> FpMi
surge.util.PositionalSelector -> PmQv:
    surge.collection.GSet allowedChunks -> ELST
    12:15:void <init>() -> <init>
    19:21:void <init>(org.bukkit.Chunk) -> <init>
    23:26:void <init>(org.bukkit.World) -> <init>
    30:31:void addWorld(org.bukkit.World) -> addWorld
    35:36:void addAllWorlds() -> Kvyo
    40:41:void addChunk(org.bukkit.Chunk) -> IOCc
    45:45:surge.collection.GSet getAllowedChunks() -> wLdc
surge.util.Protocol -> RPsu:
    surge.util.Protocol LATEST -> xafN
    surge.util.Protocol R1_12_2 -> NqAJ
    surge.util.Protocol R1_12_2_PRE -> fKpQ
    surge.util.Protocol R1_12_1 -> tUYt
    surge.util.Protocol R1_12 -> RcYu
    surge.util.Protocol R1_11_2 -> dgll
    surge.util.Protocol R1_11_1 -> JKAn
    surge.util.Protocol R1_11 -> lwuM
    surge.util.Protocol R1_10_2 -> eINh
    surge.util.Protocol R1_10_1 -> Arkh
    surge.util.Protocol R1_10 -> ohLy
    surge.util.Protocol R1_9_4 -> cBhF
    surge.util.Protocol R1_9_3 -> vcoe
    surge.util.Protocol R1_9_2 -> QWfR
    surge.util.Protocol R1_9_1 -> JmDw
    surge.util.Protocol R1_9 -> lERC
    surge.util.Protocol R1_8_9 -> Obaj
    surge.util.Protocol R1_8_8 -> MBhr
    surge.util.Protocol R1_8_7 -> Ucqv
    surge.util.Protocol R1_8_6 -> ssxb
    surge.util.Protocol R1_8_5 -> mPeQ
    surge.util.Protocol R1_8_4 -> gher
    surge.util.Protocol R1_8_3 -> IXbU
    surge.util.Protocol R1_8_2 -> AbLf
    surge.util.Protocol R1_8_1 -> oyQx
    surge.util.Protocol R1_8 -> qTcr
    surge.util.Protocol R1_7_10 -> dVne
    surge.util.Protocol R1_7_9 -> jXaI
    surge.util.Protocol R1_7_8 -> IHBM
    surge.util.Protocol R1_7_7 -> LbLb
    surge.util.Protocol R1_7_6 -> Osem
    surge.util.Protocol R1_7_5 -> QWiO
    surge.util.Protocol R1_7_4 -> sIiQ
    surge.util.Protocol R1_7_3 -> Osei
    surge.util.Protocol R1_7_2 -> OISD
    surge.util.Protocol R1_7_1 -> qDCj
    surge.util.Protocol B1_6_4 -> numh
    surge.util.Protocol B1_6_3 -> FFgy
    surge.util.Protocol B1_6_2 -> jibE
    surge.util.Protocol B1_6_1 -> WsMn
    surge.util.Protocol B1_5_2 -> wUtX
    surge.util.Protocol B1_5_1 -> PehC
    surge.util.Protocol B1_5 -> cTMR
    surge.util.Protocol B1_4_7 -> FXJq
    surge.util.Protocol B1_4_6 -> CFOP
    surge.util.Protocol B1_4_5 -> QykJ
    surge.util.Protocol B1_4_4 -> vRqL
    surge.util.Protocol B1_4_2 -> ioNx
    surge.util.Protocol B1_3_2 -> gWfh
    surge.util.Protocol B1_3_1 -> rXFq
    surge.util.Protocol B1_2_5 -> RIiR
    surge.util.Protocol B1_2_4 -> KwyR
    surge.util.Protocol EARLIEST -> gXHN
    surge.util.Protocol UNKNOWN -> sIgo
    int version -> version
    java.lang.String search -> pHoR
    surge.util.Protocol[] $VALUES -> LGxP
    5:5:surge.util.Protocol[] values() -> values
    5:5:surge.util.Protocol valueOf(java.lang.String) -> valueOf
    66:74:void <init>(java.lang.String,int,int) -> <init>
    78:86:surge.util.Protocol getProtocolVersion() -> kQra
    91:91:surge.util.ProtocolRange to(surge.util.Protocol) -> ofaa
    96:96:boolean isServerVersion() -> EKUu
    101:101:java.lang.String getVersionString() -> getVersionString
    106:106:boolean isNettySupported() -> JlHP
    111:111:boolean isActualVersion() -> KMHP
    116:121:int getVersion() -> getVersion
    126:126:int getMetaVersion() -> qJsX
    5:60:void <clinit>() -> <clinit>
surge.util.ProtocolRange -> rxdP:
    surge.util.Protocol from -> giIH
    surge.util.Protocol to -> vAoH
    9:12:void <init>(surge.util.Protocol,surge.util.Protocol) -> <init>
    16:16:surge.util.Protocol getFrom() -> XAkF
    21:21:surge.util.Protocol getTo() -> FMyA
    26:26:boolean contains(surge.util.Protocol) -> IOCc
    32:32:java.lang.String toString() -> toString
surge.util.Range -> tmhn:
    double min -> min
    double max -> max
    21:25:void <init>(double,double) -> <init>
    37:38:void <init>(int,int) -> <init>
    50:51:void <init>(long,long) -> <init>
    60:60:double randomNext() -> KTwi
    70:70:int randomNextInt() -> XcnT
    80:80:long randomNextLong() -> yckb
    92:92:boolean isWithin(double) -> afHr
    104:104:boolean isWithin(int) -> eHFB
    116:116:boolean isWithin(long) -> gMge
    121:121:double getMin() -> getMin
    126:127:void setMin(double) -> ugpo
    131:131:double getMax() -> getMax
    136:137:void setMax(double) -> aviY
surge.util.RayTrace -> RIDy:
    org.bukkit.Location start -> pYpN
    org.bukkit.util.Vector direction -> JSTa
    java.lang.Double maxDistance -> wESF
    java.lang.Double distanceCovered -> bbJb
    java.lang.Double step -> QhjD
    java.lang.Boolean stop -> qTbk
    37:44:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double) -> <init>
    51:65:void trace() -> bOiM
    73:74:void stop() -> stop
    85:85:void onTrace(org.bukkit.Location) -> jhTS
    89:89:org.bukkit.Location getStart() -> fufg
    94:95:void setStart(org.bukkit.Location) -> tCMW
    99:99:org.bukkit.util.Vector getDirection() -> getDirection
    104:105:void setDirection(org.bukkit.util.Vector) -> setDirection
    109:109:java.lang.Double getMaxDistance() -> hPxa
    114:115:void setMaxDistance(java.lang.Double) -> IOCc
    119:119:java.lang.Double getDistanceCovered() -> YDli
    124:125:void setDistanceCovered(java.lang.Double) -> ieQI
    129:129:java.lang.Double getStep() -> mGVo
    134:135:void setStep(java.lang.Double) -> OHCj
surge.util.ReflectionUtils -> fJll:
    33:36:void <init>() -> <init>
    56:65:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    89:89:java.lang.reflect.Constructor getConstructor(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.Class[]) -> xymG
    119:119:java.lang.Object instantiateObject(java.lang.Class,java.lang.Object[]) -> xymG
    156:156:java.lang.Object instantiateObject(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.Object[]) -> xymG
    178:187:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    213:213:java.lang.reflect.Method getMethod(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Class[]) -> xymG
    243:243:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    276:276:java.lang.Object invokeMethod(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Object[]) -> xymG
    312:312:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Object[]) -> xymG
    332:334:java.lang.reflect.Field getField(java.lang.Class,boolean,java.lang.String) -> xymG
    360:360:java.lang.reflect.Field getField(java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> xymG
    387:387:java.lang.Object getValue(java.lang.Object,java.lang.Class,boolean,java.lang.String) -> xymG
    419:419:java.lang.Object getValue(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> xymG
    446:446:java.lang.Object getValue(java.lang.Object,boolean,java.lang.String) -> xymG
    475:476:void setValue(java.lang.Object,java.lang.Class,boolean,java.lang.String,java.lang.Object) -> xymG
    509:510:void setValue(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String,java.lang.Object) -> xymG
    536:537:void setValue(java.lang.Object,boolean,java.lang.String,java.lang.Object) -> xymG
surge.util.ReflectionUtils$DataType -> fJll$xymG:
    surge.util.ReflectionUtils$DataType BYTE -> lwwT
    surge.util.ReflectionUtils$DataType SHORT -> DIRh
    surge.util.ReflectionUtils$DataType INTEGER -> AGyU
    surge.util.ReflectionUtils$DataType LONG -> NhQo
    surge.util.ReflectionUtils$DataType CHARACTER -> BBlN
    surge.util.ReflectionUtils$DataType FLOAT -> qfEY
    surge.util.ReflectionUtils$DataType DOUBLE -> YVqa
    surge.util.ReflectionUtils$DataType BOOLEAN -> pkUr
    java.util.Map CLASS_MAP -> VNIX
    java.lang.Class primitive -> iLmj
    java.lang.Class reference -> aDwR
    surge.util.ReflectionUtils$DataType[] ENUM$VALUES -> PCgJ
    632:646:void <clinit>() -> <clinit>
    656:660:void <init>(java.lang.String,int,java.lang.Class,java.lang.Class) -> <init>
    669:669:java.lang.Class getPrimitive() -> xqjN
    679:679:java.lang.Class getReference() -> TiBn
    691:691:surge.util.ReflectionUtils$DataType fromClass(java.lang.Class) -> ofaa
    704:705:java.lang.Class getPrimitive(java.lang.Class) -> IOCc
    718:719:java.lang.Class getReference(java.lang.Class) -> ieQI
    731:737:java.lang.Class[] getPrimitive(java.lang.Class[]) -> xymG
    749:755:java.lang.Class[] getReference(java.lang.Class[]) -> ofaa
    767:773:java.lang.Class[] getPrimitive(java.lang.Object[]) -> ofaa
    785:791:java.lang.Class[] getReference(java.lang.Object[]) -> IOCc
    805:819:boolean compare(java.lang.Class[],java.lang.Class[]) -> xymG
    1:1:surge.util.ReflectionUtils$DataType[] values() -> values
    1:1:surge.util.ReflectionUtils$DataType valueOf(java.lang.String) -> valueOf
surge.util.ReflectionUtils$PackageType -> fJll$ofaa:
    surge.util.ReflectionUtils$PackageType MINECRAFT_SERVER -> bbMh
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT -> tLmU
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_BLOCK -> Wama
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CHUNKIO -> CpfP
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_COMMAND -> TrWX
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CONVERSATIONS -> HoUG
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENCHANTMENS -> oySq
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENTITY -> nCMF
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_EVENT -> KMic
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_GENERATOR -> EfIh
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_HELP -> ioRC
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_INVENTORY -> cTMd
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_MAP -> UBTG
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_METADATA -> XeOc
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_POTION -> riKQ
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_PROJECTILES -> EDGS
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCHEDULER -> DYtj
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCOREBOARD -> HwdC
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UPDATER -> vRrq
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UTIL -> kRsM
    java.lang.String path -> path
    surge.util.ReflectionUtils$PackageType[] ENUM$VALUES -> Swbr
    548:550:void <clinit>() -> <clinit>
    560:563:void <init>(java.lang.String,int,java.lang.String) -> <init>
    575:576:void <init>(java.lang.String,int,surge.util.ReflectionUtils$PackageType,java.lang.String) -> <init>
    585:585:java.lang.String getPath() -> getPath
    600:600:java.lang.Class getClass(java.lang.String) -> getClass
    607:607:java.lang.String toString() -> toString
    617:617:java.lang.String getServerVersion() -> getServerVersion
    1:1:surge.util.ReflectionUtils$PackageType[] values() -> values
    1:1:surge.util.ReflectionUtils$PackageType valueOf(java.lang.String) -> valueOf
surge.util.Refreshable -> xXSO:
    void refresh() -> refresh
surge.util.SQLOperation -> tBta:
    surge.util.SQLOperation LOAD -> USUh
    surge.util.SQLOperation SAVE -> bQJu
    surge.util.SQLOperation[] ENUM$VALUES -> jqsW
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:surge.util.SQLOperation[] values() -> values
    1:1:surge.util.SQLOperation valueOf(java.lang.String) -> valueOf
surge.util.ServerState -> iuyN:
    surge.util.ServerState START -> MmbA
    surge.util.ServerState ENABLE -> lEUj
    surge.util.ServerState DISABLE -> opaj
    surge.util.ServerState STOP -> SfbG
    surge.util.ServerState RUNNING -> kKDR
    surge.util.ServerState[] ENUM$VALUES -> fKwa
    3:37:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:surge.util.ServerState[] values() -> values
    1:1:surge.util.ServerState valueOf(java.lang.String) -> valueOf
surge.util.Shape -> hrun:
    org.bukkit.Location location -> nuTI
    org.bukkit.util.Vector offset -> HVDX
    org.bukkit.util.Vector size -> psgv
    27:32:void <init>(org.bukkit.Location,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    44:45:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    55:56:void <init>(org.bukkit.Location) -> <init>
    67:80:boolean isWithinShape(org.bukkit.Location) -> PmJX
    90:94:org.bukkit.Location randomLocation() -> lUVA
    104:104:org.bukkit.Location randomSurface() -> sHgn
    114:114:org.bukkit.Location getCenter() -> getCenter
    119:119:org.bukkit.Location getLocation() -> getLocation
    124:124:org.bukkit.util.Vector getOffset() -> fTDq
    129:129:org.bukkit.util.Vector getSize() -> fltr
surge.util.SnowLevel -> VUQm:
    byte level -> HoUr
    18:21:void <init>(byte) -> <init>
    30:40:byte getLevel() -> OQBp
    51:52:void setLevel(byte) -> IOCc
surge.util.T -> BBEq:
    15:17:void <init>() -> <init>
    void onStop(long,double) -> xymG
    32:35:void stop() -> stop
surge.util.TXT -> BuJb:
    12:12:void <init>() -> <init>
    25:25:java.lang.String repeat(java.lang.String,int) -> repeat
    39:47:surge.collection.GList wrap(java.lang.String,int) -> OHCj
    67:67:java.lang.String makeTag(surge.util.C,surge.util.C,surge.util.C,surge.util.C,java.lang.String) -> xymG
    85:85:java.lang.String makeTag(surge.util.C,surge.util.C,surge.util.C,java.lang.String) -> xymG
    99:99:java.lang.String line(surge.util.C,int) -> xymG
    113:113:java.lang.String underline(surge.util.C,int) -> ofaa
    135:140:java.lang.String getLine(surge.util.C,int,double,java.lang.String,java.lang.String,java.lang.String) -> xymG
surge.util.Tag -> dxMS:
    java.lang.String value() -> value
surge.util.Timer -> ETAj:
    long tns -> Fhnr
    long cns -> NpgR
    19:23:void <init>() -> <init>
    30:31:void start() -> start
    38:40:void stop() -> stop
    49:49:long getTime() -> getTime
    59:59:long getLastRun() -> QWHs
surge.util.VectorMath -> hbUg:
    int[] $SWITCH_TABLE$surge$util$Axis -> ohTy
    int[] $SWITCH_TABLE$org$bukkit$block$BlockFace -> THFI
    16:16:void <init>() -> <init>
    20:30:org.bukkit.util.Vector scaleStatic(surge.util.Axis,org.bukkit.util.Vector,double) -> xymG
    35:40:org.bukkit.util.Vector scaleX(org.bukkit.util.Vector,double) -> xymG
    45:50:org.bukkit.util.Vector scaleY(org.bukkit.util.Vector,double) -> ofaa
    55:60:org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector,double) -> IOCc
    65:67:org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) -> xymG
    72:75:boolean isLookingNear(org.bukkit.Location,org.bukkit.Location,double) -> ofaa
    80:80:org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) -> ofaa
    85:85:org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) -> IOCc
    90:90:org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) -> ieQI
    95:95:org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) -> OHCj
    100:100:org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) -> PAuG
    105:105:org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) -> FpMi
    110:110:double round(double,int) -> OHCj
    115:118:org.bukkit.util.Vector clip(org.bukkit.util.Vector,int) -> xymG
    123:136:org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector,org.bukkit.util.Vector,double) -> xymG
    149:234:surge.collection.GList split(org.bukkit.block.BlockFace) -> xymG
    248:248:org.bukkit.util.Vector direction(org.bukkit.Location,org.bukkit.Location) -> IOCc
    253:253:org.bukkit.util.Vector directionNoNormal(org.bukkit.Location,org.bukkit.Location) -> ieQI
    267:267:org.bukkit.util.Vector toVector(float,float) -> xymG
    280:281:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> xymG
    295:298:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector,double) -> xymG
    309:324:org.bukkit.util.Vector reverse(org.bukkit.util.Vector) -> ogCH
    336:339:double getSpeed(org.bukkit.util.Vector) -> jhTS
    353:360:surge.collection.GList shift(org.bukkit.util.Vector,surge.collection.GList) -> xymG
    372:414:org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) -> tCMW
    428:440:org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector,float) -> xymG
    454:466:org.bukkit.util.Vector angleRight(org.bukkit.util.Vector,float) -> ofaa
    480:489:org.bukkit.util.Vector angleUp(org.bukkit.util.Vector,float) -> IOCc
    503:512:org.bukkit.util.Vector angleDown(org.bukkit.util.Vector,float) -> ieQI
    525:573:org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) -> PmJX
    16:16:int[] $SWITCH_TABLE$surge$util$Axis() -> qTCm
    16:16:int[] $SWITCH_TABLE$org$bukkit$block$BlockFace() -> Hmpc
surge.util.VectorMath$1 -> hbUg$1:
    org.bukkit.util.Vector val$vector -> ixDv
    1:353:void <init>(org.bukkit.util.Vector) -> <init>
    358:358:org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) -> iSnb
    1:1:java.lang.Object onAdapt(java.lang.Object) -> equd
surge.util.W -> eYMK:
    30:30:void <init>() -> <init>
    41:49:boolean visible(org.bukkit.block.Block) -> IOCc
    62:65:void colorArmor(org.bukkit.inventory.ItemStack,org.bukkit.Color) -> xymG
    76:87:org.bukkit.entity.Entity getEntity(int) -> wwKr
    102:115:int count(org.bukkit.entity.Player,surge.util.MaterialBlock) -> xymG
    132:132:boolean has(org.bukkit.entity.Player,surge.util.MaterialBlock,int) -> xymG
    144:144:int getChunkX(org.bukkit.block.Block) -> ieQI
    156:156:int getChunkY(org.bukkit.block.Block) -> OHCj
    169:170:void dropXp(org.bukkit.Location,int) -> ofaa
    181:181:int getChunkZ(org.bukkit.block.Block) -> PAuG
    197:204:void take(org.bukkit.entity.Player,surge.util.MaterialBlock,int) -> ofaa
    220:228:int getManhattanDistance(org.bukkit.Location,org.bukkit.Location,boolean) -> xymG
    233:240:surge.collection.GList news(org.bukkit.Location) -> iSnb
    257:265:int getManhattanDistance(org.bukkit.block.Block,org.bukkit.block.Block,boolean) -> xymG
    277:277:surge.collection.GList getBlocks(org.bukkit.Chunk) -> ieQI
    289:289:org.bukkit.World getSyncWorld(org.bukkit.World) -> IOCc
    301:301:org.bukkit.World toSync(org.bukkit.World) -> ieQI
    313:313:org.bukkit.block.Block toSync(org.bukkit.block.Block) -> FpMi
    325:325:org.bukkit.Location toSync(org.bukkit.Location) -> CntX
    337:337:org.bukkit.Chunk toSync(org.bukkit.Chunk) -> OHCj
    353:420:surge.util.MaterialBlock getMaterialBlock(java.lang.String) -> TVtk
    434:446:org.bukkit.block.Block[] getRelative(org.bukkit.block.Block,org.bukkit.block.BlockFace[]) -> xymG
    461:462:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData) -> xymG
    479:480:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData,boolean) -> xymG
    494:495:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int) -> xymG
    512:513:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int,boolean) -> xymG
    526:527:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData) -> xymG
    542:543:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData,boolean) -> xymG
    559:569:int getHighestPotionLevel(org.bukkit.potion.PotionEffectType,java.util.Collection) -> xymG
    581:588:surge.collection.GList chunkFaces(org.bukkit.Chunk) -> PAuG
    600:609:surge.collection.GList blockFaces(org.bukkit.block.Block) -> ogCH
    621:635:org.bukkit.Location simulateFall(org.bukkit.Location) -> PJgD
    649:661:surge.collection.GList chunkRadius(org.bukkit.Chunk,int) -> IOCc
    675:687:surge.collection.GList blockRadius(org.bukkit.block.Block,int) -> xymG
    709:741:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Entity,double,double) -> xymG
    759:766:boolean isLookingAt(org.bukkit.entity.Entity,org.bukkit.entity.Entity,double,double) -> xymG
    780:780:double differenceOfVectors(org.bukkit.util.Vector,org.bukkit.util.Vector) -> xymG
surge.util.W$1 -> eYMK$1:
    java.lang.Double val$doff -> fnRi
    org.bukkit.entity.Entity val$e -> rWjl
    org.bukkit.entity.Entity[] val$result -> AahP
    723:723:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Entity,org.bukkit.entity.Entity[]) -> <init>
    727:738:void onTrace(org.bukkit.Location) -> jhTS
surge.util.Worlds -> GYfp:
    13:13:void <init>() -> <init>
    22:22:surge.collection.GList getWorlds() -> mXXV
    34:34:boolean hasWorld(java.lang.String) -> AGOG
    46:46:org.bukkit.World getWorld(java.lang.String) -> getWorld
surge.util.package-info -> QouO:
