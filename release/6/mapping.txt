react.Base -> CweS:
    1:1:void <init>() -> <init>
    2:3:void msg(org.bukkit.command.CommandSender,java.lang.String) -> CweS
react.Info -> NxEh:
    java.lang.String CORE_REACT_DOT -> CweS
    java.lang.String CORE_NAME -> NxEh
    java.lang.String CORE_CACHE -> MdAW
    java.lang.String CORE_DOTYML -> jqEV
    java.lang.String COMMAND_HELP -> xGHv
    java.lang.String COMMAND_HELP_ALIAS_1 -> GkAI
    java.lang.String COMMAND_HELP_ALIAS_2 -> ftyJ
    java.lang.String COMMAND_HELP_USAGE -> BlQU
    java.lang.String COMMAND_HELP_DESCRIPTION -> IqFu
    java.lang.String COMMAND_MONITOR -> sQKP
    java.lang.String COMMAND_MONITOR_ALIAS_1 -> fuXt
    java.lang.String COMMAND_MONITOR_ALIAS_2 -> PSXO
    java.lang.String COMMAND_MONITOR_USAGE -> ThSf
    java.lang.String COMMAND_MONITOR_DESCRIPTION -> PuXs
    java.lang.String COMMAND_REACT -> xGHI
    java.lang.String MSG_PERMISSION -> fKEH
    java.lang.String MSG_MONITORING_STARTED -> FpMI
    java.lang.String MSG_MONITORING_STOPPED -> nlNk
    java.lang.String NAME_TICK -> PAtR
    java.lang.String NAME_MEMORY -> tnAB
    java.lang.String NAME_CHUNKS -> ieOT
    java.lang.String NAME_ENTITIES -> ugqC
    java.lang.String STATE_MONITORING_TAB -> Qokb
    java.lang.String STATE_MONITORING_ENABLED -> TgsT
    java.lang.String STATE_MAPPING_ENABLED -> picM
    java.lang.String STATE_SOUND_PLAYS -> SdpW
    java.lang.String STATE_MONITORING_POSTED -> WFiQ
    java.lang.String STATE_MONITORING_LASTTAB -> UAFa
    java.lang.String STATE_MONITORING_SWITCHNOTIFICATION -> UjyO
    java.lang.String STATE_PLAYER_HOTBAR -> biOS
    java.lang.String STATE_PLAYER_SHIFT -> JIXC
    java.lang.String STATE_PLAYER_SCROLL -> GjbJ
    java.lang.String STATE_PLAYER_HEIGHT_CURRENT -> eHDe
    java.lang.String STATE_PLAYER_HEIGHT_CHANGING -> DPWW
    java.lang.String PERM_ACCESS -> UtKQ
    java.lang.String PERM_MONITOR -> UQgU
    java.lang.String PERM_MONITOR_TITLE -> avlt
    java.lang.String PERM_MONITOR_MAP -> XdCS
    java.lang.String PERM_MONITOR_ENVIRONMENT -> eqxF
    java.lang.String PERM_ACT -> ogDM
    java.lang.String PERM_RELOAD -> pGcN
    java.lang.String SAMPLER_TPS -> jpee
    java.lang.String SAMPLER_TICK -> eYGI
    java.lang.String SAMPLER_TIU -> CLrO
    java.lang.String SAMPLER_MEM -> vbfg
    java.lang.String SAMPLER_FREEMEM -> kQfJ
    java.lang.String SAMPLER_MAXMEM -> kbgY
    java.lang.String SAMPLER_ALLOCMEM -> KTic
    java.lang.String SAMPLER_MAHS -> EmLK
    java.lang.String SAMPLER_CHK -> biMo
    java.lang.String SAMPLER_CHKS -> ooSo
    java.lang.String SAMPLER_ENT -> NwfL
    java.lang.String SAMPLER_ENTLIV -> JtJs
    java.lang.String SAMPLER_ENTDROP -> aChE
    java.lang.String SAMPLER_ENTTILE -> FpNy
    java.lang.String ACTION_PURGE_ENTITIES_NAME -> DXff
    java.lang.String ACTION_PURGE_ENTITIES_DESCRIPTION -> CwgL
    int b -> b
    9:9:void <init>() -> <init>
    1:58:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.React -> MdAW:
    react.React instance -> QMjh
    react.controller.SampleController sampleController -> MBAr
    react.controller.PlayerController playerController -> kYyA
    react.controller.MonitorController monitorController -> YMUM
    react.controller.CommandController commandController -> INfh
    2:2:void <init>() -> <init>
    1:1:void enable() -> enable
    3:3:void disable() -> disable
react.action.ActionPurgeEntities -> jqEV:
    boolean g -> g
    java.lang.String h -> mFmI
    7:12:void <init>() -> <init>
    1:17:void act(react.api.IActionSource,react.api.ISelector[]) -> CweS
    3:19:void purge(org.bukkit.Chunk,react.api.IActionSource,react.api.ISelector[]) -> CweS
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.action.ActionPurgeEntities$1 -> jqEV$1:
    org.bukkit.entity.Entity val$i -> Gjco
    react.action.ActionPurgeEntities this$0 -> ktKd
    2:2:void <init>(react.action.ActionPurgeEntities,org.bukkit.entity.Entity) -> <init>
    1:3:void run() -> run
react.api.Action -> xGHv:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    react.api.ActionHandle d -> xrAO
    react.api.ActionState e -> wDIb
    double f -> f
    1:14:void <init>(java.lang.String,java.lang.String,react.api.ActionHandle) -> <init>
    18:18:java.lang.String getName() -> getName
    16:16:java.lang.String getDescription() -> getDescription
    9:9:react.api.ActionHandle getHandleType() -> CweS
    13:13:react.api.ActionState getState() -> NxEh
    10:10:java.lang.String getStatus() -> getStatus
    7:11:void setStatus(java.lang.String) -> NxEh
    15:15:double getProgress() -> getProgress
    5:17:void setProgress(double) -> setProgress
react.api.ActionHandle -> GkAI:
    react.api.ActionHandle AUTOMATIC -> rDym
    react.api.ActionHandle MANUAL -> WaBS
    react.api.ActionHandle MUTEX -> QMnG
    react.api.ActionHandle[] a -> srqT
    6:6:react.api.ActionHandle[] values() -> values
    7:7:react.api.ActionHandle valueOf(java.lang.String) -> valueOf
    5:5:void <init>(java.lang.String,int) -> <init>
    1:4:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.api.ActionState -> ftyJ:
    react.api.ActionState IDLE -> TgxW
    react.api.ActionState QUEUED -> vRGn
    react.api.ActionState RUNNING -> yuCu
    react.api.ActionState[] a -> yJPN
    4:4:react.api.ActionState[] values() -> values
    7:7:react.api.ActionState valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    1:5:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.api.ActionTargetType -> BlQU:
    react.api.ActionTargetType POSITIONAL -> clTd
    react.api.ActionTargetType SYSTEM -> jgve
    react.api.ActionTargetType[] a -> imdo
    2:2:react.api.ActionTargetType[] values() -> values
    5:5:react.api.ActionTargetType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    1:6:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.api.CommandSenderActionSource -> IqFu:
    org.bukkit.command.CommandSender a -> YMTv
    2:4:void <init>(org.bukkit.command.CommandSender) -> <init>
    1:1:org.bukkit.command.CommandSender getSender() -> getSender
react.api.Gate -> sQKP:
    1:1:void <init>() -> <init>
    2:3:void removeEntity(org.bukkit.entity.Entity) -> CweS
react.api.IAction -> fuXt:
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    react.api.ActionHandle getHandleType() -> CweS
    void act(react.api.IActionSource,react.api.ISelector[]) -> CweS
    react.api.ActionState getState() -> NxEh
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> NxEh
    double getProgress() -> getProgress
    void setProgress(double) -> setProgress
react.api.IActionSource -> PSXO:
react.api.ICommand -> ThSf:
    java.lang.String getCommand() -> getCommand
    java.lang.String[] getAliases() -> MdAW
    java.lang.String[] getPermissions() -> jqEV
    java.lang.String getUsage() -> getUsage
    java.lang.String getDescription() -> getDescription
    react.api.SideGate getSideGate() -> xGHv
    void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> CweS
react.api.ISampler -> PuXs:
    java.lang.String getID() -> getID
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    void setID(java.lang.String) -> setID
    void setName(java.lang.String) -> setName
    void setDescription(java.lang.String) -> setDescription
    surge.util.C getColor() -> GkAI
    surge.util.C getAltColor() -> ftyJ
    void setColor(surge.util.C,surge.util.C) -> CweS
    int getInterval() -> getInterval
    void setInterval(int) -> CweS
    void sample() -> BlQU
    java.lang.String get() -> get
    void construct() -> IqFu
    void setValue(double) -> setValue
    double getValue() -> getValue
react.api.ISelector -> xGHI:
    react.api.SelectionMode getMode() -> sQKP
    java.lang.Class getType() -> getType
    boolean can(java.lang.Object) -> CweS
    surge.collection.GSet getList() -> fuXt
    surge.collection.GSet getPossibilities() -> PSXO
react.api.Lang -> fKEH:
    java.lang.String value() -> value
react.api.MSampler -> FpMI:
    1:1:void <init>() -> <init>
    2:2:surge.server.SuperSampler a() -> ThSf
react.api.MonitorHeading -> nlNk:
    react.api.ISampler a -> eGeQ
    surge.collection.GList b -> RPnr
    java.lang.String c -> c
    5:15:void <init>(java.lang.String,react.api.ISampler) -> <init>
    8:21:void addSampler(react.api.ISampler) -> CweS
    19:19:react.api.ISampler getHead() -> PuXs
    3:24:void setHead(react.api.ISampler) -> NxEh
    6:6:surge.collection.GList getChildren() -> xGHI
    12:12:java.lang.String getHeadText() -> fKEH
    1:25:java.lang.String getChildText() -> FpMI
    16:16:java.lang.String getName() -> getName
    2:17:void setName(java.lang.String) -> setName
    10:11:void setChildren(surge.collection.GList) -> CweS
react.api.Permissable -> PAtR:
    react.api.Permissable ACCESS -> UtKy
    react.api.Permissable MONITOR -> FpQK
    react.api.Permissable MONITOR_TITLE -> RQPQ
    react.api.Permissable MONITOR_MAP -> ndBa
    react.api.Permissable MONITOR_ENVIRONMENT -> Ahra
    react.api.Permissable ACT -> TyXx
    react.api.Permissable RELOAD -> WGMc
    java.lang.String a -> a
    react.api.Permissable[] b -> mrAY
    2:2:react.api.Permissable[] values() -> values
    9:9:react.api.Permissable valueOf(java.lang.String) -> valueOf
    1:17:void <init>(java.lang.String,int,java.lang.String) -> <init>
    8:8:boolean has(org.bukkit.command.CommandSender) -> CweS
    14:14:java.lang.String getNode() -> nlNk
    4:16:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.api.ReactActionSource -> tnAB:
    1:1:void <init>() -> <init>
react.api.ReactCommand -> ieOT:
    java.lang.String a -> a
    java.lang.String[] b -> oDbJ
    java.lang.String[] c -> lwMd
    java.lang.String d -> d
    java.lang.String e -> e
    react.api.SideGate f -> rolt
    2:7:void <init>() -> <init>
    5:5:java.lang.String getCommand() -> getCommand
    6:6:java.lang.String[] getAliases() -> MdAW
    3:3:java.lang.String[] getPermissions() -> jqEV
    1:1:java.lang.String getUsage() -> getUsage
    4:4:java.lang.String getDescription() -> getDescription
    8:8:react.api.SideGate getSideGate() -> xGHv
react.api.ReactPlayer -> ugqC:
    surge.collection.GMap keystore -> BBBq
    boolean monitoring -> monitoring
    boolean mapping -> uVsW
    int monitorSelection -> hkAc
    int plays -> mFkY
    boolean monitorPosted -> XSCF
    int monitorLastSelection -> GkDV
    int switchNotification -> RsTQ
    int hotbarSlot -> Ixyd
    boolean shift -> Plll
    int scroll -> GQRD
    double lastHeight -> jErc
    boolean heightMovement -> VfQJ
    org.bukkit.entity.Player a -> VDNJ
    6:79:void <init>(org.bukkit.entity.Player) -> <init>
    15:78:void save() -> save
    22:69:void load() -> load
    2:2:boolean isMonitoring() -> PAtR
    5:5:boolean isMapping() -> tnAB
    53:53:org.bukkit.entity.Player getP() -> ieOT
    39:42:void setMonitoring(boolean) -> CweS
    7:72:void setMapping(boolean) -> NxEh
    14:14:int getMonitorSelection() -> ugqC
    37:80:void setMonitorSelection(int) -> NxEh
    46:46:int getHotbarSlot() -> Qokb
    32:75:void setHotbarSlot(int) -> MdAW
    10:10:boolean isShifting() -> TgsT
    24:50:void setShifting(boolean) -> MdAW
    74:74:boolean isShift() -> picM
    49:76:void setShift(boolean) -> jqEV
    4:4:int getScroll() -> SdpW
    20:41:void setScroll(int) -> jqEV
    51:51:int getMonitorLastSelection() -> WFiQ
    30:34:void setMonitorLastSelection(int) -> xGHv
    25:27:void setP(org.bukkit.entity.Player) -> CweS
    23:23:double getLastHeight() -> UAFa
    3:59:void setLastHeight(double) -> CweS
    57:57:boolean isHeightMovement() -> UjyO
    55:81:void setHeightMovement(boolean) -> xGHv
    44:44:int getSwitchNotification() -> biOS
    11:71:void setSwitchNotification(int) -> GkAI
    17:17:boolean getMonitorPosted() -> JIXC
    8:82:void setMonitorPosted(boolean) -> GkAI
    54:54:int getPlays() -> GjbJ
    18:35:void setPlays(int) -> ftyJ
    1:73:void <clinit>() -> <clinit>
react.api.SampledType -> Qokb:
    react.api.SampledType TPS -> skEC
    react.api.SampledType TICK -> EeAF
    react.api.SampledType TIU -> iSta
    react.api.SampledType MEM -> kQjc
    react.api.SampledType FREEMEM -> FFAR
    react.api.SampledType MAXMEM -> jOHG
    react.api.SampledType ALLOCMEM -> NMXK
    react.api.SampledType MAHS -> GbUr
    react.api.SampledType CHK -> BJSo
    react.api.SampledType CHKS -> lUMs
    react.api.SampledType ENT -> kRJo
    react.api.SampledType ENTLIV -> gopw
    react.api.SampledType ENTDROP -> HTUl
    react.api.SampledType ENTTILE -> Lhqx
    java.lang.String a -> a
    react.api.SampledType[] b -> NUgC
    9:9:react.api.SampledType[] values() -> values
    23:23:react.api.SampledType valueOf(java.lang.String) -> valueOf
    1:19:void <init>(java.lang.String,int,java.lang.String) -> <init>
    14:14:java.lang.String getNode() -> nlNk
    3:22:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.api.Sampler -> TgsT:
    double a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    surge.util.C e -> nJRQ
    surge.util.C f -> LqdK
    int g -> g
    boolean h -> h
    15:21:void <init>() -> <init>
    20:20:java.lang.String getID() -> getID
    11:11:java.lang.String getName() -> getName
    3:3:java.lang.String getDescription() -> getDescription
    2:2:surge.util.C getColor() -> GkAI
    4:4:surge.util.C getAltColor() -> ftyJ
    8:8:int getInterval() -> getInterval
    void sample() -> BlQU
    void construct() -> IqFu
    java.lang.String get() -> get
    7:9:void setValue(double) -> setValue
    19:19:double getValue() -> getValue
    6:18:void setID(java.lang.String) -> setID
    10:12:void setName(java.lang.String) -> setName
    5:22:void setDescription(java.lang.String) -> setDescription
    1:17:void setColor(surge.util.C,surge.util.C) -> CweS
    13:23:void setInterval(int) -> CweS
react.api.SelectionMode -> picM:
    react.api.SelectionMode WHITELIST -> yIop
    react.api.SelectionMode BLACKLIST -> eaYc
    react.api.SelectionMode[] a -> wDJw
    6:6:react.api.SelectionMode[] values() -> values
    4:4:react.api.SelectionMode valueOf(java.lang.String) -> valueOf
    1:1:void <init>(java.lang.String,int) -> <init>
    2:5:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.api.Selector -> SdpW:
    java.lang.Class a -> a
    react.api.SelectionMode b -> GbUH
    surge.collection.GSet c -> DjLx
    surge.collection.GSet d -> byrx
    4:10:void <init>(java.lang.Class,react.api.SelectionMode) -> <init>
    3:3:react.api.SelectionMode getMode() -> sQKP
    2:2:java.lang.Class getType() -> getType
    5:5:boolean can(java.lang.Object) -> CweS
    11:11:surge.collection.GSet getList() -> fuXt
    1:1:surge.collection.GSet getPossibilities() -> PSXO
react.api.SelectorEntityType -> WFiQ:
    3:7:void <init>(react.api.SelectionMode) -> <init>
    1:2:void add(org.bukkit.entity.EntityType) -> CweS
react.api.SelectorPosition -> UAFa:
    5:13:void <init>() -> <init>
    1:8:void add(org.bukkit.Chunk) -> CweS
    4:11:void add(org.bukkit.Chunk,int) -> CweS
    2:14:void add(org.bukkit.World) -> CweS
    7:12:void addAll() -> eHDe
react.api.Side -> UjyO:
    react.api.Side PLAYERS -> CDgP
    react.api.Side CONSOLE -> tLCN
    java.lang.String a -> a
    react.api.Side[] b -> vIXF
    4:4:react.api.Side[] values() -> values
    7:7:react.api.Side valueOf(java.lang.String) -> valueOf
    3:9:void <init>(java.lang.String,int,java.lang.String) -> <init>
    2:2:java.lang.String ss() -> DPWW
    1:12:react.api.Side get(org.bukkit.command.CommandSender) -> NxEh
    6:11:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.api.SideGate -> biOS:
    react.api.SideGate PLAYERS_ONLY -> vIWr
    react.api.SideGate CONSOLES_ONLY -> GrvD
    react.api.SideGate ANYTHING -> XIuL
    react.api.SideGate[] a -> XtiW
    17:17:react.api.SideGate[] values() -> values
    14:14:react.api.SideGate valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    1:16:boolean supports(react.api.Side) -> CweS
    5:15:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.api.SideGate$1 -> biOS$1:
    int[] a -> a
    1:1:void <clinit>() -> <clinit>
react.api.TitleMonitor -> JIXC:
    surge.collection.GList a -> Xkwp
    10:31:void <init>() -> <init>
    18:22:void addHeading(react.api.MonitorHeading) -> CweS
    36:36:int getMaxSelection() -> UtKQ
    13:35:int left(int) -> BlQU
    19:39:int right(int) -> IqFu
    24:24:react.api.MonitorHeading getHeadFor(int) -> sQKP
    1:30:java.lang.String getHotbarHeadFor(int,boolean,react.controller.MonitorController,react.api.ReactPlayer,int) -> CweS
    3:38:java.lang.String getHotbarFor(int,boolean) -> CweS
react.command.CommandFreeze -> GjbJ:
    java.lang.String[] g -> hsWg
    1:14:void <init>() -> <init>
    2:12:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> CweS
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.command.CommandHelp -> eHDe:
    java.lang.String g -> cuHx
    1:10:void <init>() -> <init>
    4:6:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> CweS
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.command.CommandMonitor -> DPWW:
    int g -> g
    3:11:void <init>() -> <init>
    1:6:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> CweS
react.controller.ActionController -> UtKQ:
    4:4:void <init>() -> <init>
    2:2:void start() -> start
    3:3:void stop() -> stop
    1:1:void tick() -> tick
react.controller.CommandController -> UQgU:
    surge.collection.GList a -> Xkwp
    boolean c -> c
    java.lang.String[] d -> mqfA
    36:36:void <init>() -> <init>
    1:33:void start() -> start
    56:66:void stop() -> stop
    2:72:void begin() -> begin
    25:80:void tick() -> tick
    67:81:void msg(org.bukkit.command.CommandSender,java.lang.String) -> CweS
    12:46:void f(org.bukkit.command.CommandSender,java.lang.String) -> NxEh
    3:82:boolean onCommand(org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String,java.lang.String[]) -> onCommand
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.controller.MonitorController -> avlt:
    int maxCooldown -> kcOS
    react.api.TitleMonitor a -> QVbe
    surge.collection.GMap c -> nItU
    java.lang.String[] d -> mqfA
    7:163:void <init>() -> <init>
    15:169:void start() -> start
    30:133:void toggleMonitoring(org.bukkit.entity.Player) -> NxEh
    94:141:void stop() -> stop
    2:170:void constructMonitor() -> UQgU
    4:154:float calcVolume(react.api.ReactPlayer) -> CweS
    39:39:boolean canMonitor(org.bukkit.entity.Player) -> MdAW
    3:76:boolean isMonitoring(org.bukkit.entity.Player) -> jqEV
    36:144:void startMonitoring(org.bukkit.entity.Player) -> xGHv
    6:160:void stopMonitoring(org.bukkit.entity.Player) -> GkAI
    106:106:void tick() -> tick
    44:132:void a(react.api.ReactPlayer) -> NxEh
    13:151:void b(react.api.ReactPlayer) -> MdAW
    33:173:void c(react.api.ReactPlayer) -> jqEV
    21:172:void d(react.api.ReactPlayer) -> xGHv
    23:165:void e(react.api.ReactPlayer) -> GkAI
    29:166:void f(react.api.ReactPlayer) -> ftyJ
    51:155:java.lang.String prefixFor(react.api.ReactPlayer,int,int) -> CweS
    22:149:java.lang.String prefixForSub(react.api.ReactPlayer,surge.util.C,int) -> CweS
    1:157:void tickMonitor(react.api.ReactPlayer) -> BlQU
    110:110:react.api.TitleMonitor getTitleMonitor() -> avlt
    19:161:void on(org.bukkit.event.player.PlayerJoinEvent) -> CweS
    10:168:void on(org.bukkit.event.player.PlayerToggleSneakEvent) -> CweS
    26:95:void onTick() -> XdCS
    162:162:java.lang.String getTickName() -> eqxF
    91:91:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.controller.PlayerController -> XdCS:
    surge.collection.GList a -> Xkwp
    3:3:void <init>() -> <init>
    14:23:void start() -> start
    7:9:void stop() -> stop
    5:5:void tick() -> tick
    4:24:boolean has(org.bukkit.entity.Player) -> ftyJ
    1:21:react.api.ReactPlayer getPlayer(org.bukkit.entity.Player) -> BlQU
    13:13:surge.collection.GList getPlayers() -> ogDM
    10:22:void on(org.bukkit.event.player.PlayerQuitEvent) -> CweS
react.controller.SampleController -> eqxF:
    surge.collection.GMap a -> VUPx
    surge.server.SuperSampler c -> PeBd
    int d -> d
    java.lang.String[] e -> woAl
    1:38:void <init>() -> <init>
    31:32:void registerSampler(react.api.ISampler) -> MdAW
    46:46:react.api.ISampler getSampler(java.lang.String) -> MdAW
    6:43:void a() -> a
    12:47:void start() -> start
    15:44:void stop() -> stop
    3:3:void tick() -> tick
    24:24:surge.server.SuperSampler getSuperSampler() -> pGcN
    2:42:void onTick() -> XdCS
    33:33:java.lang.String getTickName() -> eqxF
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleChunksLoaded -> ogDM:
    java.lang.String[] i -> PvDN
    1:1:void <init>() -> <init>
    2:10:void construct() -> IqFu
    4:11:void sample() -> BlQU
    7:7:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleChunksLoadedPerSecond -> pGcN:
    surge.math.Average i -> ieXb
    java.lang.String[] j -> sPsC
    5:8:void <init>() -> <init>
    1:13:void construct() -> IqFu
    7:11:void sample() -> BlQU
    12:12:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleEntitiesDrops -> jpee:
    java.lang.String[] i -> PvDN
    1:1:void <init>() -> <init>
    2:11:void construct() -> IqFu
    5:6:void sample() -> BlQU
    7:7:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleEntitiesLiving -> eYGI:
    java.lang.String[] i -> PvDN
    11:11:void <init>() -> <init>
    1:9:void construct() -> IqFu
    2:8:void sample() -> BlQU
    10:10:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleEntitiesTiles -> CLrO:
    java.lang.String[] i -> PvDN
    4:4:void <init>() -> <init>
    1:10:void construct() -> IqFu
    5:11:void sample() -> BlQU
    2:2:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleEntitiesTotal -> vbfg:
    java.lang.String[] i -> PvDN
    9:9:void <init>() -> <init>
    1:8:void construct() -> IqFu
    10:11:void sample() -> BlQU
    7:7:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleMemoryAllocated -> kQfJ:
    java.lang.String i -> nuHl
    4:4:void <init>() -> <init>
    2:11:void construct() -> IqFu
    1:8:void sample() -> BlQU
    10:10:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleMemoryAllocationPerSecond -> kbgY:
    java.lang.String[] i -> PvDN
    11:11:void <init>() -> <init>
    1:10:void construct() -> IqFu
    5:9:void sample() -> BlQU
    3:3:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleMemoryFree -> KTic:
    java.lang.String[] i -> PvDN
    6:6:void <init>() -> <init>
    1:11:void construct() -> IqFu
    2:3:void sample() -> BlQU
    8:8:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleMemoryMax -> EmLK:
    java.lang.String[] i -> PvDN
    11:11:void <init>() -> <init>
    1:9:void construct() -> IqFu
    2:10:void sample() -> BlQU
    3:3:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleMemoryUse -> biMo:
    java.lang.String[] i -> PvDN
    7:7:void <init>() -> <init>
    1:11:void construct() -> IqFu
    2:5:void sample() -> BlQU
    8:8:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleTickTime -> ooSo:
    java.lang.String[] i -> PvDN
    11:11:void <init>() -> <init>
    1:9:void construct() -> IqFu
    6:10:void sample() -> BlQU
    5:5:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleTickUtilization -> NwfL:
    java.lang.String[] i -> PvDN
    9:9:void <init>() -> <init>
    1:11:void construct() -> IqFu
    2:3:void sample() -> BlQU
    4:4:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
react.sampler.SampleTicksPerSecond -> JtJs:
    int i -> i
    java.lang.String[] j -> sPsC
    2:2:void <init>() -> <init>
    1:10:void construct() -> IqFu
    3:12:void sample() -> BlQU
    9:13:java.lang.String get() -> get
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.Main -> aChE:
    surge.collection.GList d -> ykud
    surge.collection.GMap e -> rpTD
    surge.collection.GList f -> DXnX
    surge.collection.GMap anchors -> McgR
    java.lang.String[] g -> hsWg
    166:166:void <init>() -> <init>
    136:136:void onControllerRegistry() -> jpee
    4:175:void onStart(surge.util.Protocol) -> CweS
    1:156:void onStop() -> eYGI
    116:116:void onPostInit() -> CLrO
    170:170:void onPreInit() -> vbfg
    31:155:void a() -> a
    2:179:void b() -> b
    15:176:void c() -> c
    46:174:void onTick() -> XdCS
    void <clinit>() -> <clinit>
    char[] b(java.lang.String) -> jqEV
    java.lang.String b(char[]) -> NxEh
surge.PluginAmp -> FpNy:
    surge.control.AmpedPlugin a -> VCnO
    boolean b -> b
    int c -> c
    java.lang.String[] d -> mqfA
    5:22:void <init>(surge.control.AmpedPlugin) -> <init>
    33:33:surge.control.AmpedPlugin getPluginInstance() -> kQfJ
    2:2:boolean isConnected() -> isConnected
    4:31:void connect() -> connect
    8:35:void a() -> a
    3:34:void disconnect() -> disconnect
    1:21:int startTask(int,java.lang.Runnable) -> CweS
    6:30:int startRepeatingTask(int,int,java.lang.Runnable) -> CweS
    10:16:void stopTask(int) -> fuXt
    11:11:void access$000(surge.PluginAmp) -> CweS
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.PluginAmp$1 -> FpNy$1:
    surge.PluginAmp this$0 -> NgKT
    java.lang.String a -> a
    2:2:void <init>(surge.PluginAmp) -> <init>
    1:4:void run() -> run
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.PluginAmp$2 -> FpNy$2:
    surge.PluginAmp this$0 -> NgKT
    3:3:void <init>(surge.PluginAmp) -> <init>
    1:2:void run() -> run
surge.Surge -> DXff:
    surge.PluginAmp a -> XBEI
    surge.collection.GList b -> RPnr
    surge.collection.GList c -> WqeL
    surge.sched.TaskManager d -> miSr
    surge.hotload.HotloadManager e -> QVak
    java.lang.Thread f -> Ynye
    int g -> g
    3:36:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    34:37:void register(org.bukkit.event.Listener) -> CweS
    20:33:void unregister(org.bukkit.event.Listener) -> unregister
    35:35:java.io.File folder(java.lang.String) -> xGHv
    16:16:java.io.File folder() -> kbgY
    7:39:java.io.File getPluginJarFile() -> KTic
    13:29:void a() -> a
    32:32:java.lang.Thread getServerThread() -> EmLK
    26:26:surge.collection.GList getTickComponents() -> biMo
    4:4:surge.collection.GList getAsyncTickComponents() -> ooSo
    11:41:void registerTicked(surge.sched.IMasterTickComponent) -> CweS
    5:38:void unregisterTicked(surge.sched.IMasterTickComponent) -> NxEh
    19:40:surge.PluginAmp createAmp(surge.control.AmpedPlugin) -> CweS
    17:17:boolean isMainThread() -> isMainThread
    25:30:void b() -> b
    8:8:boolean hasAmp() -> NwfL
    2:2:surge.PluginAmp getAmp() -> JtJs
    1:1:surge.sched.TaskManager getTaskManager() -> aChE
    15:15:surge.hotload.HotloadManager getHotloadManager() -> FpNy
surge.cluster.Cluster -> CwgL:
    surge.cluster.ClusterType a -> iSvI
    java.lang.Object b -> Fosv
    boolean c -> c
    1:6:void <init>(surge.cluster.ClusterType,java.lang.Object) -> <init>
    5:5:surge.cluster.ClusterType getType() -> DXff
    2:7:void set(java.lang.Object) -> set
    8:8:java.lang.Object get() -> get
surge.cluster.ClusterBoolean -> QMjh:
    1:2:void <init>(java.lang.Boolean) -> <init>
surge.cluster.ClusterDouble -> MBAr:
    1:2:void <init>(java.lang.Double) -> <init>
surge.cluster.ClusterInt -> kYyA:
    1:2:void <init>(java.lang.Integer) -> <init>
surge.cluster.ClusterLong -> YMUM:
    1:2:void <init>(java.lang.Long) -> <init>
surge.cluster.ClusterString -> INfh:
    1:2:void <init>(java.lang.String) -> <init>
surge.cluster.ClusterStringList -> mFmI:
    1:2:void <init>(java.util.List) -> <init>
surge.cluster.ClusterType -> Gjco:
    surge.cluster.ClusterType INT -> uWYO
    surge.cluster.ClusterType BOOLEAN -> fmPg
    surge.cluster.ClusterType STRING -> tnHg
    surge.cluster.ClusterType STRING_LIST -> Bchu
    surge.cluster.ClusterType DOUBLE -> xhrL
    surge.cluster.ClusterType LONG -> Mkwo
    surge.cluster.ClusterType[] a -> BJVy
    5:5:surge.cluster.ClusterType[] values() -> values
    2:2:surge.cluster.ClusterType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    1:4:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.cluster.ConfigurationDataInput -> ktKd:
    int[] a -> a
    java.lang.String[] b -> oDbJ
    19:19:void <init>() -> <init>
    1:130:void read(surge.cluster.IConfigurable,java.io.File) -> CweS
    2:131:surge.cluster.DataCluster fillDefaults(surge.cluster.IConfigurable) -> CweS
    111:111:int[] a() -> CwgL
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.cluster.ConfigurationDataOutput -> xrAO:
    java.lang.String[] a -> a
    20:20:void <init>() -> <init>
    1:71:void write(surge.cluster.IConfigurable,java.io.File) -> NxEh
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.cluster.DataCluster -> wDIb:
    surge.collection.GMap a -> VUPx
    java.lang.String b -> b
    21:75:void <init>() -> <init>
    72:72:surge.collection.GList keys() -> QMjh
    14:35:void fromJson(surge.json.JSONObject) -> CweS
    4:71:surge.json.JSONObject toJson() -> MBAr
    1:67:org.bukkit.configuration.file.FileConfiguration toFileConfiguration() -> kYyA
    2:69:void fromFileConfiguration(org.bukkit.configuration.file.FileConfiguration) -> CweS
    70:70:boolean contains(java.lang.String) -> contains
    49:49:surge.cluster.ClusterType getType(java.lang.String) -> GkAI
    65:65:int getInt(java.lang.String) -> getInt
    50:50:java.lang.Object get(java.lang.String) -> get
    11:11:long getLong(java.lang.String) -> getLong
    23:23:java.lang.String getString(java.lang.String) -> getString
    57:57:double getDouble(java.lang.String) -> getDouble
    46:46:boolean getBoolean(java.lang.String) -> getBoolean
    24:24:java.util.List getStringList(java.lang.String) -> getStringList
    5:73:void trySet(java.lang.String,java.lang.Object) -> CweS
    10:33:void set(java.lang.String,int) -> CweS
    47:76:void set(java.lang.String,boolean) -> CweS
    61:74:void set(java.lang.String,double) -> CweS
    6:16:void set(java.lang.String,long) -> CweS
    45:58:void set(java.lang.String,java.lang.String) -> set
    63:68:void set(java.lang.String,java.util.List) -> CweS
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.cluster.ICluster -> rDym:
    surge.cluster.ClusterType getType() -> DXff
    void set(java.lang.Object) -> set
    java.lang.Object get() -> get
surge.cluster.IConfigurable -> WaBS:
surge.cluster.IDataInput -> QMnG:
    surge.cluster.DataCluster read(java.io.File) -> CweS
surge.cluster.IDataOutput -> srqT:
    void write(surge.cluster.DataCluster,java.io.File) -> CweS
surge.cluster.Key -> TgxW:
    java.lang.String value() -> value
surge.cluster.KeyPointer -> vRGn:
    int value() -> value
surge.cluster.KeyStore -> yuCu:
surge.cluster.ReflectedConfigurationException -> yJPN:
    long serialVersionUID -> serialVersionUID
    1:1:void <init>() -> <init>
surge.cluster.YamlDataInput -> clTd:
    2:2:void <init>() -> <init>
    1:9:surge.cluster.DataCluster read(java.io.File) -> CweS
surge.cluster.YamlDataOutput -> jgve:
    6:6:void <init>() -> <init>
    1:5:void write(surge.cluster.DataCluster,java.io.File) -> CweS
surge.collection.GBiset -> imdo:
    java.lang.Object b -> Fosv
    java.lang.Object c -> anan
    1:9:void <init>(java.lang.Object,java.lang.Object) -> <init>
    4:4:java.lang.Object getA() -> YMUM
    2:7:void setA(java.lang.Object) -> NxEh
    6:6:java.lang.Object getB() -> INfh
    3:10:void setB(java.lang.Object) -> MdAW
surge.collection.GList -> YMTv:
    long serialVersionUID -> serialVersionUID
    int b -> b
    java.lang.String a -> a
    96:115:void <init>() -> <init>
    45:95:void <init>(java.lang.Object[]) -> <init>
    50:118:void <init>(java.util.Iterator) -> <init>
    3:120:void <init>(java.util.List) -> <init>
    9:109:java.lang.Object mostCommon() -> mFmI
    48:94:void remove(surge.collection.GList) -> NxEh
    6:14:surge.collection.GList shuffle() -> Gjco
    1:119:surge.collection.GList split() -> ktKd
    51:51:boolean hasIndex(int) -> PSXO
    73:100:java.lang.Object pickRandom() -> xrAO
    32:111:void <init>(java.util.Set) -> <init>
    38:121:void <init>(java.util.Collection) -> <init>
    5:117:void <init>(surge.collection.GList) -> <init>
    13:90:surge.collection.GList stringList() -> wDIb
    18:110:surge.collection.GList removeDuplicates() -> rDym
    61:61:boolean hasDuplicates() -> WaBS
    35:72:void sort() -> sort
    15:79:void push(java.lang.Object,int) -> CweS
    68:116:void addFirst(java.lang.Object) -> addFirst
    71:92:void add(java.lang.Object[]) -> add
    24:59:surge.collection.GList qadd(java.lang.Object) -> jqEV
    47:99:void add(java.util.List) -> CweS
    4:114:java.lang.String toString(java.lang.String) -> toString
    31:78:surge.collection.GList reverse() -> QMnG
    2:2:java.lang.String toString() -> toString
    52:107:surge.collection.GList copy() -> srqT
    67:101:surge.collection.GList qdel(java.lang.Object) -> xGHv
    17:102:java.lang.Object pop() -> pop
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.collection.GList$1 -> YMTv$1:
    surge.collection.GList this$0 -> yIrB
    2:2:void <init>(surge.collection.GList) -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
surge.collection.GMap -> eGeQ:
    long serialVersionUID -> serialVersionUID
    java.lang.String a -> a
    1:1:void <init>() -> <init>
    10:59:surge.collection.GMap copy() -> TgxW
    7:57:java.lang.Object findKey(java.lang.Object) -> GkAI
    5:49:surge.collection.GMap qput(java.lang.Object,java.lang.Object) -> CweS
    4:61:surge.collection.GMap flip() -> vRGn
    8:60:java.lang.String toString() -> toString
    16:63:surge.collection.GMap append(surge.collection.GMap) -> CweS
    25:25:surge.collection.GList k() -> yuCu
    30:30:surge.collection.GList v() -> yJPN
    50:62:void putNVD(java.lang.Object,java.lang.Object) -> NxEh
    11:48:surge.collection.GList get(surge.collection.GList) -> MdAW
    13:54:surge.collection.GMap removeDuplicateKeys() -> clTd
    2:64:surge.collection.GMap removeDuplicateValues() -> jgve
    6:55:void put(surge.collection.GList,surge.collection.GList) -> CweS
    33:43:void put(surge.collection.GMap) -> NxEh
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.collection.GQuadraset -> RPnr:
    long serialVersionUID -> serialVersionUID
    java.lang.Object b -> Fosv
    java.lang.Object c -> anan
    java.lang.Object d -> SCWC
    java.lang.Object e -> Ubmt
    1:16:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    8:8:java.lang.Object getA() -> YMUM
    15:17:void setA(java.lang.Object) -> NxEh
    12:12:java.lang.Object getB() -> INfh
    4:9:void setB(java.lang.Object) -> MdAW
    3:3:java.lang.Object getC() -> imdo
    2:18:void setC(java.lang.Object) -> ftyJ
    11:11:java.lang.Object getD() -> YMTv
    6:14:void setD(java.lang.Object) -> BlQU
surge.collection.GSet -> UtKy:
    long serialVersionUID -> serialVersionUID
    1:5:void <init>() -> <init>
    2:4:void <init>(java.util.Collection) -> <init>
    3:8:void <init>(int,float) -> <init>
    6:7:void <init>(int) -> <init>
surge.collection.GSound -> FpQK:
    java.lang.String a -> a
    org.bukkit.Sound b -> pXij
    java.lang.Float c -> VDOX
    java.lang.Float d -> vAMX
    java.lang.String[] e -> woAl
    3:41:void <init>(java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    7:50:void <init>(java.lang.String) -> <init>
    19:47:void <init>(org.bukkit.Sound,java.lang.Float,java.lang.Float) -> <init>
    6:26:void <init>(org.bukkit.Sound) -> <init>
    1:48:void play(org.bukkit.entity.Player) -> IqFu
    9:49:void play(org.bukkit.Location) -> CweS
    17:51:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> CweS
    8:8:java.lang.String getSound() -> eGeQ
    13:46:void setSound(java.lang.String) -> ftyJ
    14:14:org.bukkit.Sound getiSound() -> RPnr
    2:21:void setiSound(org.bukkit.Sound) -> CweS
    38:38:java.lang.Float getVolume() -> UtKy
    31:43:void setVolume(java.lang.Float) -> CweS
    11:11:java.lang.Float getPitch() -> FpQK
    15:34:void setPitch(java.lang.Float) -> NxEh
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.collection.GTriset -> RQPQ:
    java.lang.Object b -> Fosv
    java.lang.Object c -> anan
    java.lang.Object d -> SCWC
    4:14:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    6:6:java.lang.Object getA() -> YMUM
    3:12:void setA(java.lang.Object) -> NxEh
    7:7:java.lang.Object getB() -> INfh
    2:8:void setB(java.lang.Object) -> MdAW
    9:9:java.lang.Object getC() -> imdo
    1:13:void setC(java.lang.Object) -> ftyJ
surge.collection.Snippet -> ndBa:
    1:1:void <init>() -> <init>
surge.control.AmpedPlugin -> Ahra:
    surge.collection.GList a -> Xkwp
    surge.pool.ParallelPoolManager b -> ogLd
    surge.server.CoreTickThread c -> Rawi
    java.lang.String[] d -> mqfA
    1:27:void <init>() -> <init>
    7:38:void onLoad() -> onLoad
    6:37:void onEnable() -> onEnable
    2:29:void onDisable() -> onDisable
    32:32:surge.collection.GList getControllers() -> RQPQ
    9:33:void registerController(surge.control.IController) -> CweS
    10:34:void onTick() -> XdCS
    12:12:java.lang.String getTickName() -> eqxF
    31:31:surge.pool.ParallelPoolManager getThreadPool() -> ndBa
    void onControllerRegistry() -> jpee
    void onStart(surge.util.Protocol) -> CweS
    void onStop() -> eYGI
    void onPostInit() -> CLrO
    void onPreInit() -> vbfg
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.control.Control -> TyXx:
surge.control.Controller -> WGMc:
    boolean b -> b
    1:2:void <init>() -> <init>
surge.control.Disable -> mrAY:
surge.control.Enable -> oDbJ:
surge.control.IController -> lwMd:
    void start() -> start
    void stop() -> stop
    void tick() -> tick
surge.control.Instance -> rolt:
surge.control.Plugin -> BBBq:
surge.control.SurgePlugin -> uVsW:
    void onStart(surge.util.Protocol) -> CweS
    void onStop() -> eYGI
    void onPostInit() -> CLrO
    void onPreInit() -> vbfg
    void onControllerRegistry() -> jpee
    void registerController(surge.control.IController) -> CweS
    surge.collection.GList getControllers() -> RQPQ
    surge.pool.ParallelPoolManager getThreadPool() -> ndBa
surge.hotload.HotloadManager -> hkAc:
    surge.collection.GMap a -> VUPx
    surge.collection.GMap b -> fdbI
    surge.collection.GMap c -> nItU
    int d -> d
    java.lang.String[] e -> woAl
    2:29:void <init>() -> <init>
    1:31:void track(java.io.File,java.lang.Runnable) -> CweS
    6:27:void untrack(java.io.File) -> NxEh
    8:28:void untrackall() -> Ahra
    3:32:void onTick() -> XdCS
    7:7:java.lang.String getTickName() -> eqxF
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.json.HTTP -> mFkY:
    java.lang.String CRLF -> vkaG
    java.lang.String[] a -> a
    45:45:void <init>() -> <init>
    5:49:surge.json.JSONObject toJSONObject(java.lang.String) -> BlQU
    1:47:java.lang.String toString(surge.json.JSONObject) -> NxEh
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.json.HTTPTokener -> XSCF:
    java.lang.String i -> nuHl
    2:11:void <init>(java.lang.String) -> <init>
    1:17:java.lang.String nextToken() -> nextToken
    void <clinit>() -> <clinit>
    char[] b(java.lang.String) -> jqEV
    java.lang.String b(char[]) -> NxEh
surge.json.JSONArray -> GkDV:
    java.util.ArrayList a -> biWQ
    java.lang.String[] b -> oDbJ
    96:175:void <init>() -> <init>
    18:214:void <init>(surge.json.JSONTokener) -> <init>
    152:230:void <init>(java.lang.String) -> <init>
    21:202:void <init>(java.util.Collection) -> <init>
    10:181:void <init>(java.lang.Object) -> <init>
    95:95:java.util.Iterator iterator() -> iterator
    62:205:java.lang.Object get(int) -> get
    15:233:boolean getBoolean(int) -> getBoolean
    84:225:double getDouble(int) -> getDouble
    48:99:java.lang.Enum getEnum(java.lang.Class,int) -> CweS
    39:146:java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    116:184:java.math.BigInteger getBigInteger(int) -> ThSf
    20:136:int getInt(int) -> getInt
    32:203:surge.json.JSONArray getJSONArray(int) -> PuXs
    85:229:surge.json.JSONObject getJSONObject(int) -> xGHI
    34:168:long getLong(int) -> getLong
    16:158:java.lang.String getString(int) -> getString
    8:8:boolean isNull(int) -> isNull
    11:215:java.lang.String join(java.lang.String) -> IqFu
    234:234:int length() -> length
    30:30:java.lang.Object opt(int) -> fKEH
    153:153:boolean optBoolean(int) -> FpMI
    127:235:boolean optBoolean(int,boolean) -> NxEh
    188:188:double optDouble(int) -> nlNk
    14:180:double optDouble(int,double) -> CweS
    209:209:int optInt(int) -> PAtR
    22:89:int optInt(int,int) -> CweS
    37:37:java.lang.Enum optEnum(java.lang.Class,int) -> NxEh
    6:217:java.lang.Enum optEnum(java.lang.Class,int,java.lang.Enum) -> CweS
    43:165:java.math.BigInteger optBigInteger(int,java.math.BigInteger) -> CweS
    24:221:java.math.BigDecimal optBigDecimal(int,java.math.BigDecimal) -> CweS
    140:204:surge.json.JSONArray optJSONArray(int) -> tnAB
    118:173:surge.json.JSONObject optJSONObject(int) -> ieOT
    36:36:long optLong(int) -> ugqC
    134:226:long optLong(int,long) -> CweS
    220:220:java.lang.String optString(int) -> Qokb
    112:178:java.lang.String optString(int,java.lang.String) -> CweS
    75:201:surge.json.JSONArray put(boolean) -> ftyJ
    27:58:surge.json.JSONArray put(java.util.Collection) -> CweS
    64:162:surge.json.JSONArray put(double) -> NxEh
    94:124:surge.json.JSONArray put(int) -> TgsT
    74:120:surge.json.JSONArray put(long) -> CweS
    65:119:surge.json.JSONArray put(java.util.Map) -> CweS
    185:189:surge.json.JSONArray put(java.lang.Object) -> IqFu
    2:219:surge.json.JSONArray put(int,boolean) -> MdAW
    4:5:surge.json.JSONArray put(int,java.util.Collection) -> CweS
    13:90:surge.json.JSONArray put(int,double) -> NxEh
    113:143:surge.json.JSONArray put(int,int) -> NxEh
    132:213:surge.json.JSONArray put(int,long) -> NxEh
    207:231:surge.json.JSONArray put(int,java.util.Map) -> CweS
    33:224:surge.json.JSONArray put(int,java.lang.Object) -> CweS
    218:218:java.lang.Object remove(int) -> remove
    1:228:boolean similar(java.lang.Object) -> sQKP
    9:208:surge.json.JSONObject toJSONObject(surge.json.JSONArray) -> CweS
    19:176:java.lang.String toString() -> toString
    38:216:java.lang.String toString(int) -> toString
    190:190:java.io.Writer write(java.io.Writer) -> CweS
    23:212:java.io.Writer a(java.io.Writer,int,int) -> CweS
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.json.JSONException -> RsTQ:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable a -> APFc
    1:3:void <init>(java.lang.String) -> <init>
    4:6:void <init>(java.lang.Throwable) -> <init>
    2:2:java.lang.Throwable getCause() -> getCause
surge.json.JSONML -> Ixyd:
    java.lang.String[] a -> a
    141:141:void <init>() -> <init>
    2:202:java.lang.Object a(surge.json.XMLTokener,boolean,surge.json.JSONArray) -> CweS
    170:170:surge.json.JSONArray toJSONArray(java.lang.String) -> sQKP
    67:67:surge.json.JSONArray toJSONArray(surge.json.XMLTokener) -> CweS
    147:147:surge.json.JSONObject toJSONObject(surge.json.XMLTokener) -> NxEh
    145:145:surge.json.JSONObject toJSONObject(java.lang.String) -> BlQU
    4:203:java.lang.String toString(surge.json.JSONArray) -> NxEh
    1:197:java.lang.String toString(surge.json.JSONObject) -> NxEh
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.json.JSONObject -> Plll:
    java.util.Map a -> a
    java.lang.Object NULL -> LaHo
    int b -> b
    java.lang.String[] c -> lwMd
    82:82:void <clinit>() -> <clinit>
    123:425:void <init>() -> <init>
    32:365:void <init>(surge.json.JSONObject,java.lang.String[]) -> <init>
    58:508:void <init>(surge.json.JSONTokener) -> <init>
    40:491:void <init>(java.util.Map) -> <init>
    441:521:void <init>(java.lang.Object) -> <init>
    175:473:void <init>(java.lang.Object,java.lang.String[]) -> <init>
    449:488:void <init>(java.lang.String) -> <init>
    7:516:void <init>(java.lang.String,java.util.Locale) -> <init>
    84:367:surge.json.JSONObject accumulate(java.lang.String,java.lang.Object) -> NxEh
    1:475:surge.json.JSONObject append(java.lang.String,java.lang.Object) -> MdAW
    23:397:java.lang.String doubleToString(double) -> MdAW
    17:463:java.lang.Object get(java.lang.String) -> get
    80:413:java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    98:442:boolean getBoolean(java.lang.String) -> getBoolean
    56:235:java.math.BigInteger getBigInteger(java.lang.String) -> fuXt
    53:309:java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    64:480:double getDouble(java.lang.String) -> getDouble
    42:296:int getInt(java.lang.String) -> getInt
    103:487:surge.json.JSONArray getJSONArray(java.lang.String) -> PSXO
    65:387:surge.json.JSONObject getJSONObject(java.lang.String) -> ThSf
    60:512:long getLong(java.lang.String) -> getLong
    19:404:java.lang.String[] getNames(surge.json.JSONObject) -> MdAW
    25:510:java.lang.String[] getNames(java.lang.Object) -> fuXt
    136:520:java.lang.String getString(java.lang.String) -> getString
    482:482:boolean has(java.lang.String) -> has
    6:524:surge.json.JSONObject increment(java.lang.String) -> PuXs
    27:27:boolean isNull(java.lang.String) -> xGHI
    462:462:java.util.Iterator keys() -> keys
    344:344:java.util.Set keySet() -> keySet
    219:219:int length() -> length
    20:517:surge.json.JSONArray names() -> TyXx
    21:515:java.lang.String numberToString(java.lang.Number) -> CweS
    283:283:java.lang.Object opt(java.lang.String) -> fKEH
    485:485:java.lang.Enum optEnum(java.lang.Class,java.lang.String) -> CweS
    76:502:java.lang.Enum optEnum(java.lang.Class,java.lang.String,java.lang.Enum) -> CweS
    184:184:boolean optBoolean(java.lang.String) -> FpMI
    172:209:boolean optBoolean(java.lang.String,boolean) -> NxEh
    290:290:double optDouble(java.lang.String) -> nlNk
    125:279:java.math.BigInteger optBigInteger(java.lang.String,java.math.BigInteger) -> CweS
    245:493:java.math.BigDecimal optBigDecimal(java.lang.String,java.math.BigDecimal) -> CweS
    222:350:double optDouble(java.lang.String,double) -> NxEh
    63:63:int optInt(java.lang.String) -> PAtR
    36:297:int optInt(java.lang.String,int) -> NxEh
    316:409:surge.json.JSONArray optJSONArray(java.lang.String) -> tnAB
    141:390:surge.json.JSONObject optJSONObject(java.lang.String) -> ieOT
    356:356:long optLong(java.lang.String) -> ugqC
    166:400:long optLong(java.lang.String,long) -> NxEh
    474:474:java.lang.String optString(java.lang.String) -> Qokb
    343:379:java.lang.String optString(java.lang.String,java.lang.String) -> CweS
    38:506:void a(java.lang.Object) -> a
    170:439:surge.json.JSONObject put(java.lang.String,boolean) -> MdAW
    216:471:surge.json.JSONObject put(java.lang.String,java.util.Collection) -> CweS
    132:354:surge.json.JSONObject put(java.lang.String,double) -> MdAW
    73:230:surge.json.JSONObject put(java.lang.String,int) -> MdAW
    111:254:surge.json.JSONObject put(java.lang.String,long) -> MdAW
    106:331:surge.json.JSONObject put(java.lang.String,java.util.Map) -> CweS
    66:479:surge.json.JSONObject put(java.lang.String,java.lang.Object) -> jqEV
    126:383:surge.json.JSONObject putOnce(java.lang.String,java.lang.Object) -> xGHv
    39:410:surge.json.JSONObject putOpt(java.lang.String,java.lang.Object) -> GkAI
    28:505:java.lang.String quote(java.lang.String) -> quote
    5:499:java.io.Writer quote(java.lang.String,java.io.Writer) -> CweS
    466:466:java.lang.Object remove(java.lang.String) -> TgsT
    11:523:boolean similar(java.lang.Object) -> sQKP
    18:519:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    167:507:void testValidity(java.lang.Object) -> PSXO
    26:384:surge.json.JSONArray toJSONArray(surge.json.JSONArray) -> MdAW
    182:486:java.lang.String toString() -> toString
    119:444:java.lang.String toString(int) -> toString
    3:522:java.lang.String valueToString(java.lang.Object) -> valueToString
    2:513:java.lang.Object wrap(java.lang.Object) -> wrap
    69:69:java.io.Writer write(java.io.Writer) -> CweS
    165:501:java.io.Writer a(java.io.Writer,java.lang.Object,int,int) -> CweS
    112:239:void a(java.io.Writer,int) -> CweS
    9:498:java.io.Writer a(java.io.Writer,int,int) -> CweS
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.json.JSONObject$Null -> Plll$CweS:
    java.lang.String a -> a
    4:4:void <init>() -> <init>
    1:1:java.lang.Object clone() -> clone
    5:5:boolean equals(java.lang.Object) -> equals
    3:3:java.lang.String toString() -> toString
    2:2:void <init>(surge.json.JSONObject$Null) -> <init>
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.json.JSONString -> GQRD:
    java.lang.String toJSONString() -> toJSONString
surge.json.JSONStringer -> jErc:
    1:2:void <init>() -> <init>
    3:3:java.lang.String toString() -> toString
surge.json.JSONTokener -> VfQJ:
    long a -> a
    boolean b -> b
    long c -> wnbu
    long d -> d
    char e -> UtSk
    java.io.Reader f -> VoET
    boolean g -> g
    java.lang.String[] h -> ofjd
    3:135:void <init>(java.io.Reader) -> <init>
    77:125:void <init>(java.io.InputStream) -> <init>
    65:121:void <init>(java.lang.String) -> <init>
    23:124:void back() -> WGMc
    39:117:int dehexchar(char) -> CweS
    143:143:boolean end() -> mrAY
    51:102:boolean more() -> oDbJ
    6:145:char next() -> next
    13:137:char next(char) -> NxEh
    19:96:java.lang.String next(int) -> picM
    20:80:char nextClean() -> lwMd
    8:136:java.lang.String nextString(char) -> MdAW
    15:133:java.lang.String nextTo(char) -> jqEV
    2:116:java.lang.String nextTo(java.lang.String) -> picM
    1:140:java.lang.Object nextValue() -> rolt
    4:144:char skipTo(char) -> xGHv
    7:7:surge.json.JSONException syntaxError(java.lang.String) -> SdpW
    57:57:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.json.JSONWriter -> VDNJ:
    boolean a -> a
    char b -> PJnw
    surge.json.JSONObject[] c -> BuMr
    int d -> d
    java.io.Writer e -> maFM
    java.lang.String[] f -> VfSd
    12:70:void <init>(java.io.Writer) -> <init>
    2:76:surge.json.JSONWriter a(java.lang.String) -> WFiQ
    1:67:surge.json.JSONWriter array() -> BBBq
    13:73:surge.json.JSONWriter a(char,char) -> CweS
    24:24:surge.json.JSONWriter endArray() -> uVsW
    47:47:surge.json.JSONWriter endObject() -> hkAc
    4:71:surge.json.JSONWriter key(java.lang.String) -> UAFa
    17:69:surge.json.JSONWriter object() -> mFkY
    5:75:void a(char) -> GkAI
    11:72:void a(surge.json.JSONObject) -> jqEV
    62:62:surge.json.JSONWriter value(boolean) -> BlQU
    6:6:surge.json.JSONWriter value(double) -> jqEV
    55:55:surge.json.JSONWriter value(long) -> NxEh
    20:20:surge.json.JSONWriter value(java.lang.Object) -> ThSf
    void <clinit>() -> <clinit>
    char[] b(java.lang.String) -> jqEV
    java.lang.String a(char[]) -> CweS
surge.json.XML -> skEC:
    java.lang.Character AMP -> rhDm
    java.lang.Character APOS -> LPFJ
    java.lang.Character BANG -> PKQD
    java.lang.Character EQ -> wUPm
    java.lang.Character GT -> jqOD
    java.lang.Character LT -> KURu
    java.lang.Character QUEST -> uqMW
    java.lang.Character QUOT -> nRec
    java.lang.Character SLASH -> ycgG
    java.lang.String[] a -> a
    8:209:void <clinit>() -> <clinit>
    172:172:void <init>() -> <init>
    17:204:java.lang.String escape(java.lang.String) -> escape
    12:190:void noSpace(java.lang.String) -> UjyO
    2:207:boolean a(surge.json.XMLTokener,surge.json.JSONObject,java.lang.String) -> CweS
    20:199:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    9:169:surge.json.JSONObject toJSONObject(java.lang.String) -> BlQU
    70:70:java.lang.String toString(java.lang.Object) -> toString
    1:210:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.json.XMLTokener -> EeAF:
    java.util.HashMap entity -> oEGq
    java.lang.String[] i -> PvDN
    20:129:void <clinit>() -> <clinit>
    23:96:void <init>(java.lang.String) -> <init>
    4:119:java.lang.String nextCDATA() -> XSCF
    6:121:java.lang.Object nextContent() -> GkDV
    14:124:java.lang.Object nextEntity(char) -> ftyJ
    2:111:java.lang.Object nextMeta() -> RsTQ
    1:128:java.lang.Object nextToken() -> Ixyd
    3:127:boolean skipPast(java.lang.String) -> biOS
    char[] b(java.lang.String) -> jqEV
    java.lang.String b(char[]) -> NxEh
surge.math.ArrayUtils -> iSta:
    8:8:void <init>() -> <init>
    1:10:void shiftRight(double[],double) -> CweS
    2:13:void wrapRight(double[]) -> CweS
    4:12:void fill(double[],double) -> fill
surge.math.Average -> kQjc:
    double[] a -> a
    double b -> b
    boolean c -> c
    1:20:void <init>(int) -> <init>
    6:10:void put(double) -> xGHv
    3:13:double getAverage() -> getAverage
    2:19:void a() -> a
surge.math.M -> FFAR:
    double[] a -> a
    float[] b -> clYh
    int c -> c
    java.lang.String[] d -> mqfA
    7:172:void <clinit>() -> <clinit>
    139:139:void <init>() -> <init>
    80:131:double evaluate(java.lang.String) -> JIXC
    120:170:boolean r(java.lang.Double) -> CweS
    4:159:double evaluate(java.lang.String,java.lang.Double[]) -> CweS
    22:169:org.bukkit.block.Block highestBlock(org.bukkit.Location,int,int) -> CweS
    106:106:double tps(long,int) -> CweS
    49:49:double ticksFromNS(long) -> MdAW
    3:176:java.lang.String toRoman(int) -> SdpW
    47:155:java.lang.String a(java.lang.String,int) -> jqEV
    70:70:int rand(int,int) -> MdAW
    1:175:int fromRoman(java.lang.String) -> GjbJ
    54:54:long ns() -> Plll
    72:72:long ms() -> GQRD
    12:134:double avg(surge.collection.GList) -> jqEV
    13:43:void lim(surge.collection.GList,int) -> CweS
    90:90:double distance(org.bukkit.Location,org.bukkit.Location) -> CweS
    34:34:boolean within(org.bukkit.Location,org.bukkit.Location,java.lang.Double) -> CweS
    6:6:float sin(float) -> sin
    79:79:float cos(float) -> cos
    18:118:int max(int[]) -> max
    17:167:int min(int[]) -> min
    9:9:boolean within(int,int,int) -> CweS
    173:173:float a(int) -> WFiQ
    19:174:double fsqrt(double) -> GkAI
    107:107:double maxSafeRadius(org.bukkit.Location) -> NxEh
    74:74:double clip(double,double,double) -> CweS
    5:168:double maxSafeRadius(org.bukkit.Location,double,double) -> CweS
    21:143:boolean isLoaded(org.bukkit.Location,double) -> CweS
    8:177:surge.collection.GList cradShift(org.bukkit.Location,double) -> NxEh
    146:146:int chunkShift(int) -> UAFa
    2:152:boolean isLoaded(org.bukkit.World,int,int) -> CweS
    27:164:boolean isLoaded(org.bukkit.Location) -> MdAW
    20:89:double dof(double,double) -> CweS
    11:178:surge.collection.GList getChunks(org.bukkit.Chunk,int) -> NxEh
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.math.Profiler -> jOHG:
    long a -> a
    long b -> b
    long c -> wnbu
    long d -> d
    double e -> e
    boolean f -> f
    java.lang.String[] g -> hsWg
    16:35:void <init>() -> <init>
    5:25:void begin() -> begin
    1:44:void end() -> end
    8:41:void reset() -> reset
    2:43:java.lang.String getTime(int) -> UjyO
    7:7:double getTicks() -> jErc
    27:27:double getSeconds() -> getSeconds
    40:40:double getMinutes() -> VfQJ
    17:17:double getHours() -> VDNJ
    22:22:double getMilliseconds() -> skEC
    31:31:long getNanoseconds() -> EeAF
    20:20:long getNanos() -> iSta
    34:34:long getStartNano() -> kQjc
    33:33:long getMillis() -> getMillis
    42:42:long getStartMillis() -> FFAR
    10:10:double getTime() -> jOHG
    14:14:boolean isProfiling() -> NMXK
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.nms.NMSClass -> NMXK:
    boolean a -> a
    int b -> b
    java.lang.Class PacketPlayOutPlayerListHeaderFooter -> rgbp
    java.lang.Class IChatBaseComponent -> Eudn
    java.lang.Class ChatSerializer -> AaHj
    java.lang.Class PacketPlayOutPlayerInfo -> NxPA
    java.lang.Class PlayerInfoData -> MIvu
    java.lang.Class c -> gyJI
    java.lang.Class GameProfile -> YUlx
    java.lang.Class EnumGamemode -> wesy
    java.lang.Class TileEntitySkull -> gpXe
    java.lang.Class LoadingCache -> DGpT
    1:47:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.nms.NMSX -> GbUr:
    surge.nms.NMSX bountifulAPI -> CVOS
    boolean a -> a
    java.lang.String nmsver -> GYkA
    java.lang.Object eTimes -> rpXR
    java.lang.Object eTitle -> loHD
    java.lang.Object eSubtitle -> XAiG
    boolean b -> b
    java.lang.String[] c -> lwMd
    1:177:void <clinit>() -> <clinit>
    37:37:void <init>() -> <init>
    15:155:java.lang.String getVersion() -> getVersion
    20:85:void setAi(org.bukkit.entity.LivingEntity,boolean) -> CweS
    8:165:java.lang.Class getCBNMSClass(java.lang.String) -> eHDe
    11:146:java.lang.Class getCBClass(java.lang.String) -> DPWW
    80:151:java.lang.Object serializeChat(java.lang.String) -> UtKQ
    38:133:java.lang.reflect.Field setAccessible(java.lang.reflect.Field) -> CweS
    33:58:java.lang.reflect.Method setAccessible(java.lang.reflect.Method) -> CweS
    169:169:java.lang.String getBukkitVersion() -> getBukkitVersion
    136:136:java.lang.String nmsPackage() -> GbUr
    158:158:java.lang.String craftPackage() -> BJSo
    21:167:void showPickup(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> CweS
    44:179:void sendPacket(org.bukkit.entity.Player,java.lang.Object) -> CweS
    19:149:java.lang.Class getNMSClass(java.lang.String) -> UQgU
    6:175:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> CweS
    41:123:void clearTitle(org.bukkit.entity.Player) -> sQKP
    9:157:void sendTabTitle(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> CweS
    2:178:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> CweS
    7:168:void sendActionBar(org.bukkit.entity.Player,java.lang.String,int) -> CweS
    114:120:void sendActionBarToAllPlayers(java.lang.String) -> avlt
    3:140:void sendActionBarToAllPlayers(java.lang.String,int) -> xGHv
    31:172:java.lang.String getEntityName(org.bukkit.entity.Entity) -> NxEh
    46:154:int ping(org.bukkit.entity.Player) -> fuXt
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.nms.NMSX$1 -> GbUr$1:
    org.bukkit.entity.Player val$player -> YVOK
    3:4:void <init>(org.bukkit.entity.Player) -> <init>
    1:2:void run() -> run
surge.nms.NMSX$2 -> GbUr$2:
    org.bukkit.entity.Player val$player -> YVOK
    java.lang.String val$message -> pGlu
    1:3:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    2:4:void run() -> run
surge.nms.PacketUtil -> BJSo:
    java.lang.String[] a -> a
    26:26:void <init>() -> <init>
    4:31:surge.nms.PacketUtil$V getVersion() -> lUMs
    1:27:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> CweS
    2:30:void clearTitle(org.bukkit.entity.Player) -> sQKP
    5:29:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> CweS
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.nms.PacketUtil$V -> BJSo$CweS:
    surge.nms.PacketUtil$V R17 -> EJsf
    surge.nms.PacketUtil$V R18 -> VCsV
    surge.nms.PacketUtil$V R19 -> ogNd
    surge.nms.PacketUtil$V R111 -> MuOe
    surge.nms.PacketUtil$V R110 -> vlCX
    surge.nms.PacketUtil$V R112 -> KLfD
    surge.nms.PacketUtil$V[] a -> JQsK
    1:9:void <clinit>() -> <clinit>
    10:10:void <init>(java.lang.String,int) -> <init>
    4:4:surge.nms.PacketUtil$V[] values() -> values
    5:5:surge.nms.PacketUtil$V valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.nms.Title -> lUMs:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.Integer d -> OQBX
    java.lang.Integer e -> oELC
    java.lang.Integer f -> eYPl
    8:49:void <init>() -> <init>
    3:42:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    1:40:void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    24:50:void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    2:37:void send(org.bukkit.entity.Player) -> PSXO
    32:32:java.lang.String getTitle() -> getTitle
    6:26:void setTitle(java.lang.String) -> setTitle
    23:23:java.lang.String getSubTitle() -> kRJo
    7:13:void setSubTitle(java.lang.String) -> XdCS
    45:45:java.lang.String getAction() -> getAction
    20:29:void setAction(java.lang.String) -> setAction
    14:14:java.lang.Integer getFadeIn() -> gopw
    43:46:void setFadeIn(java.lang.Integer) -> CweS
    21:21:java.lang.Integer getFadeOut() -> HTUl
    12:27:void setFadeOut(java.lang.Integer) -> NxEh
    22:22:java.lang.Integer getStayTime() -> Lhqx
    5:18:void setStayTime(java.lang.Integer) -> MdAW
surge.nms.VersionBukkit -> kRJo:
    surge.nms.VersionBukkit VU -> xPEc
    surge.nms.VersionBukkit V7 -> qlrm
    surge.nms.VersionBukkit V8 -> vtSH
    surge.nms.VersionBukkit V9 -> VUUC
    surge.nms.VersionBukkit V11 -> MAgt
    surge.nms.VersionBukkit V111 -> jNla
    surge.nms.VersionBukkit V112 -> cdKP
    surge.nms.VersionBukkit[] a -> fvEp
    java.lang.String[] b -> oDbJ
    7:28:void <clinit>() -> <clinit>
    26:26:void <init>(java.lang.String,int) -> <init>
    8:29:boolean tc() -> NUgC
    12:16:boolean uc() -> nJRQ
    1:24:surge.nms.VersionBukkit get() -> LqdK
    30:30:surge.nms.VersionBukkit[] values() -> values
    21:21:surge.nms.VersionBukkit valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.pool.A -> gopw:
    1:3:void <init>() -> <init>
surge.pool.A$1 -> gopw$1:
    surge.pool.A this$0 -> iLJb
    3:3:void <init>(surge.pool.A) -> <init>
    1:2:void run() -> run
surge.pool.Execution -> HTUl:
    int b -> b
    1:1:void <init>() -> <init>
surge.pool.ParallelPoolManager -> Lhqx:
    surge.pool.QueueMode a -> NVNN
    surge.collection.GList b -> RPnr
    int c -> c
    int d -> d
    java.util.Queue e -> ghGI
    java.lang.String f -> f
    surge.pool.ThreadInformation g -> IycM
    java.lang.String[] h -> ofjd
    29:42:void syncQueue(surge.pool.Execution) -> CweS
    31:53:void tickSyncQueue() -> yIop
    11:85:void <init>(java.lang.String,int,surge.pool.QueueMode) -> <init>
    1:90:void <init>(int,surge.pool.QueueMode) -> <init>
    5:89:long lock() -> eaYc
    73:79:void start() -> start
    3:76:void shutdown() -> shutdown
    47:61:void <init>(int) -> <init>
    24:45:void queue(surge.pool.Execution) -> NxEh
    57:57:int getSize() -> getSize
    9:72:int getQueueSize() -> wDJw
    4:4:surge.pool.ParallelThread[] getThreads() -> GbUH
    14:88:void a() -> a
    6:83:surge.pool.ParallelThread b() -> DjLx
    7:87:void a(int) -> a
    23:23:surge.pool.QueueMode getMode() -> byrx
    56:56:int getNext() -> CDgP
    32:32:int getThreadCount() -> getThreadCount
    71:71:java.util.Queue getSqueue() -> tLCN
    41:41:java.lang.String getKey() -> getKey
    80:80:surge.pool.ThreadInformation getAverageInfo() -> vIXF
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.pool.ParallelPoolManager$1 -> Lhqx$1:
    int[] a -> a
    1:1:void <clinit>() -> <clinit>
surge.pool.ParallelThread -> NUgC:
    java.util.Queue a -> xqfo
    surge.pool.ThreadInformation b -> MtnF
    java.lang.String[] c -> lwMd
    4:37:void <init>(java.lang.String,int) -> <init>
    3:47:void run() -> run
    8:46:void a(double) -> a
    1:42:void a(surge.pool.Execution) -> MdAW
    5:48:void a() -> a
    12:49:void queue(surge.pool.Execution) -> NxEh
    11:11:java.util.Queue getQueue() -> vIWr
    26:26:surge.pool.ThreadInformation getInfo() -> GrvD
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.pool.QueueMode -> nJRQ:
    surge.pool.QueueMode ROUND_ROBIN -> hawj
    surge.pool.QueueMode SMALLEST -> LPHc
    surge.pool.QueueMode[] a -> lwUy
    5:5:surge.pool.QueueMode[] values() -> values
    1:1:surge.pool.QueueMode valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    2:4:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.pool.S -> LqdK:
    1:3:void <init>() -> <init>
surge.pool.S$1 -> LqdK$1:
    surge.pool.S this$0 -> WPHD
    1:4:void <init>(surge.pool.S) -> <init>
    2:3:void run() -> run
surge.pool.ThreadInformation -> yIop:
    double a -> a
    int b -> b
    boolean c -> c
    double d -> d
    surge.math.Average e -> gEev
    long f -> OYTK
    int g -> g
    3:27:void <init>(int) -> <init>
    21:21:double getTicksPerSecond() -> XIuL
    9:19:void setTicksPerSecond(double) -> ftyJ
    1:1:int getQueuedSize() -> XtiW
    8:20:void setQueuedSize(int) -> biOS
    17:17:boolean isProcessing() -> Xkwp
    2:26:void setProcessing(boolean) -> IqFu
    18:18:double getUtilization() -> hsWg
    5:14:void setUtilization(double) -> BlQU
    22:22:double getTicksPerSecondAverage() -> cuHx
    7:7:long getTick() -> getTick
    23:28:void setTick(long) -> setTick
    25:25:long getTickLag() -> mqfA
    13:13:int getId() -> getId
surge.sched.IBursterator -> eaYc:
    void burst(java.lang.Object) -> PuXs
    void setTimeLock(double) -> IqFu
    double getEstimatedTimeUse() -> kcOS
    int flush() -> QVbe
    int flush(surge.math.Profiler) -> CweS
    void queue(java.lang.Object) -> xGHI
    void queue(java.util.List) -> NxEh
    void queue(java.lang.Object[]) -> CweS
surge.sched.ICancellable -> wDJw:
    void cancel() -> cancel
surge.sched.IMasterTickComponent -> GbUH:
    void onTick() -> XdCS
    java.lang.String getTickName() -> eqxF
surge.sched.ITask -> DjLx:
    int getId() -> getId
    void run() -> run
    boolean isRepeating() -> nItU
    java.lang.String getName() -> getName
    double getComputeTime() -> VUPx
    double getTotalComputeTime() -> PeBd
    double getActiveTime() -> woAl
    boolean hasCompleted() -> PvDN
surge.sched.TICK -> byrx:
    long tick -> lwYe
    boolean b -> b
    1:1:void <clinit>() -> <clinit>
    2:2:void <init>() -> <init>
surge.sched.Task -> CDgP:
    int a -> a
    java.lang.String b -> b
    boolean c -> c
    double d -> d
    double e -> e
    double f -> f
    boolean g -> g
    surge.math.Profiler h -> Xtob
    surge.math.Profiler i -> ggjC
    int j -> j
    7:48:void <init>(java.lang.String) -> <init>
    4:41:void <init>(java.lang.String,int) -> <init>
    1:45:void <init>(java.lang.String,int,int) -> <init>
    3:44:void a(java.lang.String,boolean) -> jqEV
    5:49:void cancel() -> cancel
    25:25:int getId() -> getId
    26:26:boolean isRepeating() -> nItU
    24:24:java.lang.String getName() -> getName
    46:46:double getComputeTime() -> VUPx
    43:43:boolean hasCompleted() -> PvDN
    2:2:double getTotalComputeTime() -> PeBd
    37:37:double getActiveTime() -> woAl
    9:9:surge.math.Profiler access$0(surge.sched.Task) -> CweS
    15:15:void access$1(surge.sched.Task,boolean) -> CweS
    42:42:surge.math.Profiler access$2(surge.sched.Task) -> NxEh
    47:47:void access$3(surge.sched.Task,double) -> CweS
    50:50:void access$4(surge.sched.Task,double) -> NxEh
    17:17:double access$5(surge.sched.Task) -> MdAW
    16:16:void access$6(surge.sched.Task,double) -> MdAW
    14:14:int access$7(surge.sched.Task) -> jqEV
    29:29:void access$8(surge.sched.Task,int) -> CweS
    19:19:double access$9(surge.sched.Task) -> xGHv
    34:34:double access$10(surge.sched.Task) -> GkAI
surge.sched.Task$1 -> CDgP$1:
    surge.sched.Task this$0 -> KLgU
    9:11:void <init>(surge.sched.Task) -> <init>
    1:13:void run() -> run
surge.sched.Task$2 -> CDgP$2:
    surge.sched.Task this$0 -> KLgU
    5:9:void <init>(surge.sched.Task) -> <init>
    1:14:void run() -> run
surge.sched.Task$3 -> CDgP$3:
    surge.sched.Task this$0 -> KLgU
    int val$total -> eQAw
    14:16:void <init>(surge.sched.Task,int) -> <init>
    1:15:void run() -> run
surge.sched.TaskManager -> tLCN:
    surge.collection.GList a -> Xkwp
    surge.collection.GMap b -> fdbI
    java.lang.String c -> c
    1:13:void <init>() -> <init>
    2:19:void onTick() -> XdCS
    5:11:void a(surge.sched.ITask) -> CweS
    4:21:void b(surge.sched.ITask) -> NxEh
    8:8:java.lang.String getTickName() -> eqxF
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.sched.TaskProfile -> vIXF:
    double a -> a
    double b -> b
    double c -> c
    3:9:void <init>() -> <init>
    4:4:double getActiveTime() -> woAl
    1:13:void setActiveTime(double) -> sQKP
    12:12:double getComputeTickTime() -> ieXb
    11:14:void setComputeTickTime(double) -> fuXt
    10:10:double getComputeTime() -> VUPx
    2:8:void setComputeTime(double) -> PSXO
surge.server.AsyncTick -> vIWr:
surge.server.CoreTickThread -> GrvD:
    java.lang.String[] a -> a
    1:8:void <init>() -> <init>
    2:14:void run() -> run
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.server.MemoryMonitor -> XIuL:
    long a -> a
    long b -> b
    long c -> wnbu
    long d -> d
    long e -> klGE
    long f -> OYTK
    long g -> xrLH
    long h -> h
    long i -> OYSs
    long j -> yIxp
    long k -> SvbU
    long l -> BAjw
    long m -> wUUY
    long n -> n
    java.lang.String o -> o
    2:52:void <init>() -> <init>
    void onAllocationSet() -> sPsC
    1:53:void run() -> run
    45:45:long getMemoryFree() -> nuHl
    46:46:long getMemoryUsed() -> getMemoryUsed
    26:26:long getMemoryMax() -> ykud
    24:24:long getLastMemoryUsed() -> rpTD
    19:19:long getMemoryUsedAfterGC() -> DXnX
    50:50:long getAllocated() -> getAllocated
    31:31:long getCollected() -> McgR
    9:9:long getCollections() -> VCnO
    28:28:long getSms() -> NgKT
    6:6:long getMemoryAllocatedPerTick() -> XBEI
    25:25:long getMemoryCollectedPerTick() -> WqeL
    47:47:long getMemoryFullyAllocatedPerTick() -> miSr
    5:5:long getMah() -> QVak
    42:42:long getMahs() -> Ynye
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.server.SuperSampler -> XtiW:
    surge.math.Average a -> PBeN
    surge.math.Average b -> Hvbp
    surge.math.Average c -> kARJ
    double d -> d
    double e -> e
    double f -> f
    double g -> IGAE
    boolean h -> h
    double i -> AFyp
    double j -> qvGR
    double k -> rNUl
    long l -> BAjw
    long m -> wUUY
    long n -> n
    long o -> BuQs
    int p -> fvHT
    int q -> q
    int r -> r
    int s -> PuhK
    int t -> t
    int u -> u
    int v -> Euhg
    surge.server.WorldMonitor w -> BSOO
    surge.server.TPSMonitor x -> OQCX
    surge.server.MemoryMonitor y -> BuRK
    boolean z -> z
    java.lang.String A -> VfXX
    3:144:void <init>() -> <init>
    21:116:void start() -> start
    4:124:void stop() -> stop
    16:60:void onTick() -> XdCS
    107:107:java.lang.String getTickName() -> eqxF
    126:126:surge.math.Average getTicksPerSecondL() -> iSvI
    99:99:double getTicksPerSecond() -> XIuL
    10:10:double getTicksPerSecondRaw() -> Fosv
    138:138:boolean isRunning() -> isRunning
    106:106:surge.server.TPSMonitor getTpsMonitor() -> uWYO
    117:117:surge.math.Average getTickTimeL() -> fmPg
    22:22:double getTickTime() -> tnHg
    137:137:double getTickTimeRaw() -> Bchu
    123:123:double getTickUtilizationRaw() -> xhrL
    131:131:double getTickUtilization() -> Mkwo
    26:26:double getLeftoverTickTime() -> BJVy
    78:78:surge.server.MemoryMonitor getMemoryMonitor() -> anan
    85:85:long getMemoryUse() -> yIrB
    51:51:long getMemoryAllocated() -> SCWC
    100:100:long getMemoryCollected() -> Ubmt
    91:91:surge.math.Average getMahL() -> pXij
    114:114:long getMahs() -> Ynye
    5:5:int getTotalChunks() -> VDOX
    82:82:int getTotalEntities() -> vAMX
    20:20:int getTotalDrops() -> ogLd
    54:54:int getTotalTiles() -> Rawi
    84:84:int getTotalLiving() -> fdbI
    9:9:surge.server.WorldMonitor getWorldMonitor() -> vkaG
    29:29:int getChunksLoaded() -> biWQ
    24:24:int getChunksUnloaded() -> APFc
    36:72:void setTicksPerSecondL(surge.math.Average) -> CweS
    37:49:void setTickTimeL(surge.math.Average) -> NxEh
    92:140:void setMahL(surge.math.Average) -> MdAW
    76:80:void setTicksPerSecond(double) -> ftyJ
    67:98:void setTicksPerSecondRaw(double) -> ThSf
    127:135:void setTickTime(double) -> PuXs
    47:136:void setTickTimeRaw(double) -> xGHI
    79:121:void setRunning(boolean) -> sQKP
    105:119:void setTickUtilizationRaw(double) -> fKEH
    48:74:void setTickUtilization(double) -> FpMI
    112:133:void setLeftoverTickTime(double) -> nlNk
    1:141:void setMemoryUse(long) -> jqEV
    31:77:void setMemoryAllocated(long) -> xGHv
    44:90:void setMemoryCollected(long) -> GkAI
    11:143:void setMahs(long) -> ftyJ
    50:66:void setTotalChunks(int) -> JIXC
    13:94:void setTotalEntities(int) -> GjbJ
    58:63:void setTotalDrops(int) -> eHDe
    33:40:void setTotalTiles(int) -> DPWW
    68:102:void setTotalLiving(int) -> UtKQ
    56:95:void setChunksLoaded(int) -> UQgU
    23:59:void setChunksUnloaded(int) -> avlt
    15:18:void setWorldMonitor(surge.server.WorldMonitor) -> CweS
    25:115:void setTpsMonitor(surge.server.TPSMonitor) -> CweS
    6:17:void setMemoryMonitor(surge.server.MemoryMonitor) -> CweS
    52:52:void access$0(surge.server.SuperSampler,int) -> CweS
    57:57:void access$1(surge.server.SuperSampler,int) -> NxEh
    27:27:void access$2(surge.server.SuperSampler,int) -> MdAW
    41:41:void access$3(surge.server.SuperSampler,int) -> jqEV
    125:125:void access$4(surge.server.SuperSampler,int) -> xGHv
    12:12:void access$5(surge.server.SuperSampler,int) -> GkAI
    28:28:void access$6(surge.server.SuperSampler,int) -> ftyJ
    73:73:void access$7(surge.server.SuperSampler,double) -> CweS
    96:96:void access$8(surge.server.SuperSampler,double) -> NxEh
    53:53:surge.math.Average access$9(surge.server.SuperSampler) -> CweS
    32:32:double access$10(surge.server.SuperSampler) -> NxEh
    35:35:surge.math.Average access$11(surge.server.SuperSampler) -> MdAW
    8:8:double access$12(surge.server.SuperSampler) -> jqEV
    81:81:void access$13(surge.server.SuperSampler,double) -> MdAW
    62:62:void access$14(surge.server.SuperSampler,double) -> jqEV
    2:2:void access$15(surge.server.SuperSampler,double) -> xGHv
    43:43:double access$16(surge.server.SuperSampler) -> xGHv
    88:88:void access$17(surge.server.SuperSampler,double) -> GkAI
    130:130:double access$18(surge.server.SuperSampler) -> GkAI
    139:139:void access$19(surge.server.SuperSampler,double) -> ftyJ
    113:113:void access$20(surge.server.SuperSampler,long) -> CweS
    70:70:void access$21(surge.server.SuperSampler,long) -> NxEh
    97:97:void access$22(surge.server.SuperSampler,long) -> MdAW
    65:65:surge.math.Average access$23(surge.server.SuperSampler) -> ftyJ
    89:89:void access$24(surge.server.SuperSampler,long) -> jqEV
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.server.SuperSampler$1 -> XtiW$1:
    surge.server.SuperSampler this$0 -> miYh
    2:7:void <init>(surge.server.SuperSampler) -> <init>
    1:10:void updated(int,int,int,int,int,int,int) -> CweS
surge.server.SuperSampler$2 -> XtiW$2:
    surge.server.SuperSampler this$0 -> miYh
    10:11:void <init>(surge.server.SuperSampler) -> <init>
    1:12:void onTicked() -> LaHo
surge.server.SuperSampler$3 -> XtiW$3:
    surge.server.SuperSampler this$0 -> miYh
    1:7:void <init>(surge.server.SuperSampler) -> <init>
    2:8:void onAllocationSet() -> sPsC
surge.server.TPSMonitor -> Xkwp:
    double a -> a
    double b -> b
    surge.math.Profiler c -> Vvxj
    surge.math.Profiler d -> SfAJ
    boolean e -> e
    java.lang.Thread$State f -> NxTE
    double g -> IGAE
    double h -> fTDf
    long i -> OYSs
    java.lang.String j -> OHUB
    1:58:void <init>() -> <init>
    void onTicked() -> LaHo
    2:53:void run() -> run
    3:57:void a(java.lang.Thread$State) -> CweS
    37:37:double getTickTimeMS() -> wnbu
    6:6:double getRawTicksPerSecond() -> UtSk
    23:23:surge.math.Profiler getTickProfiler() -> VoET
    31:31:boolean isTicked() -> ofjd
    8:43:void markTick() -> PJnw
    11:11:surge.math.Profiler getTickTimeProfiler() -> BuMr
    29:29:java.lang.Thread$State getLastState() -> maFM
    42:42:double getActualTickTimeMS() -> VfSd
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.server.WorldMonitor -> hsWg:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    long n -> n
    java.lang.String o -> o
    1:105:void <init>() -> <init>
    9:110:void run() -> run
    void updated(int,int,int,int,int,int,int) -> CweS
    13:106:void on(org.bukkit.event.world.ChunkLoadEvent) -> CweS
    22:108:void on(org.bukkit.event.world.ChunkUnloadEvent) -> CweS
    12:59:void on(org.bukkit.event.entity.EntitySpawnEvent) -> CweS
    83:89:void on(org.bukkit.event.entity.EntityDeathEvent) -> CweS
    33:91:void on(org.bukkit.event.player.PlayerDropItemEvent) -> CweS
    7:81:void on(org.bukkit.event.player.PlayerPickupItemEvent) -> CweS
    23:38:void on(org.bukkit.event.entity.EntityPickupItemEvent) -> CweS
    45:78:void on(org.bukkit.event.block.BlockPlaceEvent) -> CweS
    66:75:void on(org.bukkit.event.block.BlockBreakEvent) -> CweS
    10:40:void a() -> a
    3:103:void b() -> b
    44:109:void c() -> c
    24:82:void d() -> d
    17:90:void e() -> e
    6:100:void f() -> f
    4:74:void g() -> g
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.text.PhantomSpinner -> cuHx:
    surge.text.ProgressSpinner a -> ebEs
    surge.text.ProgressSpinner b -> Pdhv
    2:5:void <init>(surge.util.C,surge.util.C,surge.util.C) -> <init>
    1:1:java.lang.String toString() -> toString
surge.text.ProgressSpinner -> mqfA:
    java.lang.String[] a -> a
    int b -> b
    surge.text.ProgressSpinner DEFAULT -> wDVh
    surge.text.ProgressSpinner NETWORK -> TOSg
    surge.text.ProgressSpinner CIRCLES -> XlaN
    surge.text.ProgressSpinner RANDOMS -> BmCN
    surge.text.ProgressSpinner MERGERS -> Smrc
    boolean c -> c
    3:19:void <clinit>() -> <clinit>
    2:16:void <init>(java.lang.String[]) -> <init>
    9:12:void <init>() -> <init>
    1:17:java.lang.String toString() -> toString
    13:13:java.lang.String[] getChars() -> rhDm
    7:7:int getIndex() -> getIndex
surge.util.Adapter -> kcOS:
    java.lang.Object adapt(java.lang.Object) -> fKEH
    java.lang.Object onAdapt(java.lang.Object) -> FpMI
surge.util.Anchor -> QVbe:
    int value() -> value
surge.util.Area -> nItU:
    org.bukkit.Location a -> opDI
    java.lang.Double b -> BRoL
    57:57:boolean within(org.bukkit.Location,org.bukkit.Location,double) -> CweS
    17:28:void <init>(org.bukkit.Location,java.lang.Double) -> <init>
    55:55:surge.util.Cuboid toCuboid() -> LPFJ
    37:49:void <init>(org.bukkit.Location,java.lang.Integer) -> <init>
    10:62:java.lang.Double distance(org.bukkit.Location) -> jqEV
    60:60:java.lang.Double slowDistance(org.bukkit.Location) -> xGHv
    43:43:boolean isWithin(org.bukkit.Location) -> GkAI
    38:38:boolean hasEntities() -> hasEntities
    2:51:org.bukkit.entity.Entity[] getNearbyEntities(org.bukkit.entity.EntityType) -> NxEh
    7:48:org.bukkit.entity.Entity[] getNearbyEntities(java.lang.Class) -> CweS
    1:61:org.bukkit.entity.Entity[] getNearbyEntities() -> PKQD
    3:54:org.bukkit.entity.Player[] getNearbyPlayers() -> wUPm
    40:40:org.bukkit.Location getLocation() -> getLocation
    4:47:void setLocation(org.bukkit.Location) -> ftyJ
    50:50:java.lang.Double getRadius() -> jqOD
    36:58:void setRadius(java.lang.Double) -> NxEh
    5:46:org.bukkit.Location random() -> KURu
surge.util.Axis -> VUPx:
    surge.util.Axis X -> cdQM
    surge.util.Axis Y -> YEQa
    surge.util.Axis Z -> ccog
    int a -> a
    int b -> b
    int c -> c
    surge.util.Axis[] d -> JAVT
    1:1:surge.util.Axis[] values() -> values
    13:13:surge.util.Axis valueOf(java.lang.String) -> valueOf
    2:11:void <init>(java.lang.String,int,int,int,int) -> <init>
    4:4:org.bukkit.util.Vector positive() -> uqMW
    8:8:org.bukkit.util.Vector negative() -> nRec
    5:12:void <clinit>() -> <clinit>
surge.util.BlastResistance -> PeBd:
    surge.util.BlastResistance BARRIER -> YwuI
    surge.util.BlastResistance BEDROCK -> vQsd
    surge.util.BlastResistance COMMAND -> HLQg
    surge.util.BlastResistance ENDER_PORTAL -> hkOY
    surge.util.BlastResistance ENDER_PORTAL_FRAME -> ECII
    surge.util.BlastResistance ANVIL -> uGAX
    surge.util.BlastResistance ENCHANTMENT_TABLE -> bWyq
    surge.util.BlastResistance OBSIDIAN -> qeGg
    surge.util.BlastResistance ENDER_CHEST -> mGYQ
    surge.util.BlastResistance WATER -> GHlL
    surge.util.BlastResistance LAVA -> eYSk
    surge.util.BlastResistance STATIONARY_WATER -> CwuE
    surge.util.BlastResistance DRAGON_EGG -> rFHF
    surge.util.BlastResistance ENDER_STONE -> gEfp
    surge.util.BlastResistance COAL_BLOCK -> BRpQ
    surge.util.BlastResistance DIAMOND_BLOCK -> WqnM
    surge.util.BlastResistance EMERALD_BLOCK -> hHim
    surge.util.BlastResistance GOLD_BLOCK -> KCwV
    surge.util.BlastResistance IRON_BLOCK -> Eujn
    surge.util.BlastResistance REDSTONE_BLOCK -> woIQ
    surge.util.BlastResistance BRICK -> kbuF
    surge.util.BlastResistance BRICK_STAIRS -> pXrY
    surge.util.BlastResistance HARD_CLAY -> cmDI
    surge.util.BlastResistance STONE -> DbJM
    surge.util.BlastResistance SMOOTH_BRICK -> Lqpq
    surge.util.BlastResistance SMOOTH_STAIRS -> QVll
    surge.util.BlastResistance DOUBLE_STONE_SLAB2 -> SfER
    surge.util.BlastResistance STONE_SLAB2 -> HTdB
    surge.util.BlastResistance IRON_DOOR -> uhen
    surge.util.BlastResistance IRON_DOOR_BLOCK -> eGtV
    surge.util.BlastResistance IRON_TRAPDOOR -> mrOl
    surge.util.BlastResistance MOB_SPAWNER -> hjpT
    surge.util.BlastResistance WEB -> xPMC
    surge.util.BlastResistance DISPENSER -> vATv
    surge.util.BlastResistance DROPPER -> gyOl
    surge.util.BlastResistance FURNACE -> fujn
    surge.util.BlastResistance BURNING_FURNACE -> OYWN
    surge.util.BlastResistance BEACON -> QVlH
    surge.util.BlastResistance COAL_ORE -> NVSw
    surge.util.BlastResistance COCOA -> QEkE
    surge.util.BlastResistance DIAMOND_ORE -> vtYT
    surge.util.BlastResistance EMERALD_ORE -> hcAE
    surge.util.BlastResistance FENCE -> JRYC
    surge.util.BlastResistance FENCE_GATE -> NxXC
    surge.util.BlastResistance ACACIA_FENCE_GATE -> ntpj
    surge.util.BlastResistance BIRCH_FENCE_GATE -> aLhr
    surge.util.BlastResistance DARK_OAK_FENCE_GATE -> gxnI
    surge.util.BlastResistance SPRUCE_FENCE_GATE -> ivcc
    surge.util.BlastResistance JUNGLE_FENCE_GATE -> RkRT
    surge.util.BlastResistance ACACIA_FENCE -> dVRs
    surge.util.BlastResistance BIRCH_FENCE -> aMLl
    surge.util.BlastResistance DARK_OAK_FENCE -> YVVd
    surge.util.BlastResistance SPRUCE_FENCE -> kQxd
    surge.util.BlastResistance JUNGLE_FENCE -> imvI
    surge.util.BlastResistance ACACIA_WOOD_STAIRS -> QVni
    surge.util.BlastResistance BIRCH_WOOD_STAIRS -> sjqv
    surge.util.BlastResistance DARK_OAK_WOOD_STAIRS -> oESv
    surge.util.BlastResistance SPRUCE_WOOD_STAIRS -> PSkq
    surge.util.BlastResistance JUNGLE_WOOD_STAIRS -> AjCk
    surge.util.BlastResistance QUARTZ_STAIRS -> JlNY
    surge.util.BlastResistance COBBLESTONE_STAIRS -> nldc
    surge.util.BlastResistance SANDSTONE_STAIRS -> BlfH
    surge.util.BlastResistance NETHER_BRICK_STAIRS -> nmEF
    surge.util.BlastResistance WOOD_STAIRS -> ECMB
    surge.util.BlastResistance RED_SANDSTONE_STAIRS -> ggoR
    surge.util.BlastResistance ACACIA_DOOR -> quli
    surge.util.BlastResistance BIRCH_DOOR -> jpwu
    surge.util.BlastResistance DARK_OAK_DOOR -> pahY
    surge.util.BlastResistance SPRUCE_DOOR -> VMNJ
    surge.util.BlastResistance JUNGLE_DOOR -> GIRl
    surge.util.BlastResistance GOLD_ORE -> iKrA
    surge.util.BlastResistance HOPPER -> BuXa
    surge.util.BlastResistance IRON_ORE -> dMdH
    surge.util.BlastResistance LAPIS_BLOCK -> wLjH
    surge.util.BlastResistance LAPIS_ORE -> EJyx
    surge.util.BlastResistance QUARTZ_ORE -> HDCl
    surge.util.BlastResistance REDSTONE_ORE -> SCbR
    surge.util.BlastResistance TRAP_DOOR -> aoOL
    surge.util.BlastResistance WOOD -> TFfA
    surge.util.BlastResistance CHEST -> ycpx
    surge.util.BlastResistance TRAPPED_CHEST -> CMfq
    surge.util.BlastResistance WORKBENCH -> scAj
    surge.util.BlastResistance CAULDRON -> LjBl
    surge.util.BlastResistance LOG -> PvOT
    surge.util.BlastResistance LOG_2 -> baOs
    surge.util.BlastResistance BOOKSHELF -> CpJK
    surge.util.BlastResistance BANNER -> NVVX
    surge.util.BlastResistance STANDING_BANNER -> OajL
    surge.util.BlastResistance WALL_BANNER -> iUBy
    surge.util.BlastResistance JACK_O_LANTERN -> RHon
    surge.util.BlastResistance MELON_BLOCK -> Aqso
    surge.util.BlastResistance SKULL -> XBQc
    surge.util.BlastResistance PUMPKIN -> lnmP
    surge.util.BlastResistance SIGN -> FhRI
    surge.util.BlastResistance SIGN_POST -> qJxN
    surge.util.BlastResistance WALL_SIGN -> MKDE
    surge.util.BlastResistance QUARTZ_BLOCK -> LHAC
    surge.util.BlastResistance NOTE_BLOCK -> dofl
    surge.util.BlastResistance RED_SANDSTONE -> tfHL
    surge.util.BlastResistance SANDSTONE -> WjFB
    surge.util.BlastResistance WOOL -> EvSI
    surge.util.BlastResistance MONSTER_EGG -> AjEu
    surge.util.BlastResistance RAILS -> hcFE
    surge.util.BlastResistance ACTIVATOR_RAIL -> AaTd
    surge.util.BlastResistance DETECTOR_RAIL -> tmwW
    surge.util.BlastResistance POWERED_RAIL -> GHtD
    surge.util.BlastResistance CLAY -> FEqC
    surge.util.BlastResistance DIRT -> uNwC
    surge.util.BlastResistance GRASS -> qdma
    surge.util.BlastResistance GRAVEL -> RYuM
    surge.util.BlastResistance SPONGE -> RcFr
    surge.util.BlastResistance BREWING_STAND -> HKvr
    surge.util.BlastResistance STONE_BUTTON -> hbdY
    surge.util.BlastResistance WOOD_BUTTON -> pajd
    surge.util.BlastResistance CAKE_BLOCK -> Nwyu
    surge.util.BlastResistance ICE -> gxrT
    surge.util.BlastResistance PACKED_ICE -> tUDx
    surge.util.BlastResistance LEVER -> JJLR
    surge.util.BlastResistance MYCEL -> QFNy
    surge.util.BlastResistance PISTON_BASE -> XSUF
    surge.util.BlastResistance PISTON_EXTENSION -> DQKe
    surge.util.BlastResistance PISTON_MOVING_PIECE -> ydUI
    surge.util.BlastResistance PISTON_STICKY_BASE -> ySSI
    surge.util.BlastResistance GOLD_PLATE -> dUvL
    surge.util.BlastResistance IRON_PLATE -> fCJr
    surge.util.BlastResistance STONE_PLATE -> OrmY
    surge.util.BlastResistance WOOD_PLATE -> lgAD
    surge.util.BlastResistance SAND -> BBVH
    surge.util.BlastResistance SOUL_SAND -> vJJN
    surge.util.BlastResistance CACTUS -> MAro
    surge.util.BlastResistance LADDER -> MRuB
    surge.util.BlastResistance NETHERRACK -> Mcur
    surge.util.BlastResistance GLASS -> HwKV
    surge.util.BlastResistance THIN_GLASS -> XSTj
    surge.util.BlastResistance STAINED_GLASS -> DamJ
    surge.util.BlastResistance STAINED_GLASS_PANE -> oEUM
    surge.util.BlastResistance GLOWSTONE -> LjFC
    surge.util.BlastResistance REDSTONE_LAMP_OFF -> psKs
    surge.util.BlastResistance REDSTONE_LAMP_ON -> palo
    surge.util.BlastResistance SEA_LANTERN -> OPmS
    surge.util.BlastResistance BED_BLOCK -> sYuE
    surge.util.BlastResistance DAYLIGHT_DETECTOR -> BRxC
    surge.util.BlastResistance DAYLIGHT_DETECTOR_INVERTED -> qnAv
    surge.util.BlastResistance HUGE_MUSHROOM_1 -> bHCb
    surge.util.BlastResistance HUGE_MUSHROOM_2 -> BBWN
    surge.util.BlastResistance LEAVES -> Pdql
    surge.util.BlastResistance LEAVES_2 -> AaWH
    surge.util.BlastResistance SNOW -> wnqa
    int a -> a
    surge.util.BlastResistance[] b -> gxtf
    117:117:surge.util.BlastResistance[] values() -> values
    42:42:surge.util.BlastResistance valueOf(java.lang.String) -> valueOf
    6:77:void <init>(java.lang.String,int,int) -> <init>
    82:82:int getBlastResistance() -> ycgG
    19:123:int get(org.bukkit.Material) -> CweS
    1:160:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.Blocks -> woAl:
    1:1:void <init>() -> <init>
    2:2:org.bukkit.Location getCenter(org.bukkit.block.Block) -> CweS
surge.util.C -> PvDN:
    surge.util.C BLACK -> TypJ
    surge.util.C DARK_BLUE -> klPY
    surge.util.C DARK_GREEN -> hbfW
    surge.util.C DARK_AQUA -> dNHm
    surge.util.C DARK_RED -> JImR
    surge.util.C DARK_PURPLE -> MliM
    surge.util.C GOLD -> TXLW
    surge.util.C GRAY -> FODC
    surge.util.C DARK_GRAY -> lMOf
    surge.util.C BLUE -> bPRj
    surge.util.C GREEN -> KEAT
    surge.util.C AQUA -> yJdI
    surge.util.C RED -> yAsB
    surge.util.C LIGHT_PURPLE -> LaUt
    surge.util.C YELLOW -> UJNO
    surge.util.C WHITE -> kJLM
    surge.util.C MAGIC -> uFgW
    surge.util.C BOLD -> ymFt
    surge.util.C STRIKETHROUGH -> Oamt
    surge.util.C UNDERLINE -> dokQ
    surge.util.C ITALIC -> jGLb
    surge.util.C RESET -> esRP
    char COLOR_CHAR -> COLOR_CHAR
    java.util.regex.Pattern a -> a
    int b -> b
    char c -> xOso
    boolean d -> d
    java.lang.String e -> e
    java.util.Map f -> vuCV
    java.util.Map g -> antr
    java.util.Map h -> clji
    java.util.Map i -> nRxN
    java.util.Map j -> RskW
    int[] k -> hRGx
    surge.util.C[] l -> MKJT
    int m -> m
    java.lang.String[] n -> sHtx
    5:229:void <clinit>() -> <clinit>
    49:223:void <init>(java.lang.String,int,char,int) -> <init>
    2:199:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    148:148:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
    116:116:char getChar() -> getChar
    207:207:java.lang.String toString() -> toString
    213:213:org.bukkit.DyeColor dye() -> oEGq
    162:162:java.lang.String hex() -> clYh
    123:123:boolean isFormat() -> isFormat
    172:172:boolean isColor() -> isColor
    31:170:surge.util.C getByChar(char) -> BlQU
    29:212:surge.util.C getByChar(java.lang.String) -> eqxF
    103:205:java.lang.String stripColor(java.lang.String) -> stripColor
    130:211:surge.util.C dyeToChat(org.bukkit.DyeColor) -> CweS
    139:216:org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) -> CweS
    9:156:java.lang.String chatToHex(org.bukkit.ChatColor) -> NxEh
    75:217:java.lang.String dyeToHex(org.bukkit.DyeColor) -> NxEh
    3:228:org.bukkit.Color hexToColor(java.lang.String) -> ogDM
    73:193:org.bukkit.Color rgbToColor(java.lang.String) -> pGcN
    6:196:java.lang.String generateColorTable() -> rgbp
    190:190:org.bukkit.ChatColor chatColor() -> Eudn
    25:220:java.lang.String translateAlternateColorCodes(char,java.lang.String) -> translateAlternateColorCodes
    39:171:surge.util.C fromItemMeta(byte) -> CweS
    1:226:byte getItemMeta() -> AaHj
    24:225:java.lang.String getLastColors(java.lang.String) -> getLastColors
    78:78:surge.util.C[] values() -> values
    77:77:surge.util.C valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int,char,int,surge.util.C) -> <init>
    224:224:void <init>(java.lang.String,int,char,int,boolean,surge.util.C) -> <init>
    141:141:int[] a() -> CwgL
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.C$1 -> PvDN$1:
    1:2:void <init>(java.lang.String,int,char,int) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$10 -> PvDN$2:
    2:3:void <init>(java.lang.String,int,char,int) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$11 -> PvDN$3:
    1:2:void <init>(java.lang.String,int,char,int) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$12 -> PvDN$4:
    1:2:void <init>(java.lang.String,int,char,int) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$13 -> PvDN$5:
    1:2:void <init>(java.lang.String,int,char,int) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$14 -> PvDN$6:
    1:2:void <init>(java.lang.String,int,char,int) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$15 -> PvDN$7:
    1:3:void <init>(java.lang.String,int,char,int) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$16 -> PvDN$8:
    2:3:void <init>(java.lang.String,int,char,int) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$17 -> PvDN$9:
    2:3:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$18 -> PvDN$10:
    1:2:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$19 -> PvDN$11:
    2:3:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$2 -> PvDN$12:
    2:3:void <init>(java.lang.String,int,char,int) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$20 -> PvDN$13:
    2:3:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$21 -> PvDN$14:
    1:3:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$22 -> PvDN$15:
    1:2:void <init>(java.lang.String,int,char,int) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$3 -> PvDN$16:
    1:3:void <init>(java.lang.String,int,char,int) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$4 -> PvDN$17:
    1:3:void <init>(java.lang.String,int,char,int) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$5 -> PvDN$18:
    1:2:void <init>(java.lang.String,int,char,int) -> <init>
    3:3:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$6 -> PvDN$19:
    2:3:void <init>(java.lang.String,int,char,int) -> <init>
    1:1:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$7 -> PvDN$20:
    1:3:void <init>(java.lang.String,int,char,int) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$8 -> PvDN$21:
    1:3:void <init>(java.lang.String,int,char,int) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$9 -> PvDN$22:
    1:3:void <init>(java.lang.String,int,char,int) -> <init>
    2:2:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.CDou -> ieXb:
    double a -> a
    double b -> b
    5:17:void <init>(double) -> <init>
    2:8:surge.util.CDou set(double) -> PAtR
    3:15:surge.util.CDou add(double) -> tnAB
    1:13:surge.util.CDou sub(double) -> ieOT
    14:14:double get() -> get
    6:18:void circ() -> NxPA
surge.util.CMD -> sPsC:
    java.lang.String a -> a
    org.bukkit.command.CommandSender b -> dDyw
    boolean c -> c
    java.lang.String d -> d
    3:13:void <init>(java.lang.String) -> <init>
    2:17:surge.util.CMD virtual() -> MIvu
    1:12:void execute(org.bukkit.command.CommandSender) -> MdAW
    4:18:void execute() -> execute
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.CNum -> nuHl:
    int a -> a
    int b -> b
    1:19:void <init>(int) -> <init>
    2:14:surge.util.CNum set(int) -> XdCS
    5:13:surge.util.CNum add(int) -> eqxF
    9:20:surge.util.CNum sub(int) -> ogDM
    8:8:int get() -> get
    11:22:void circ() -> NxPA
    12:12:int getMax() -> getMax
    3:21:void setMax(int) -> pGcN
surge.util.Chunks -> ykud:
    4:4:void <init>() -> <init>
    27:27:surge.collection.GList getLoadedChunks(org.bukkit.World) -> NxEh
    1:21:surge.collection.GList getLoadedChunks() -> gyJI
    8:8:surge.collection.GList getRadius(org.bukkit.Chunk,int) -> MdAW
    10:10:boolean unload(org.bukkit.Chunk,boolean,boolean) -> CweS
    18:18:boolean unload(org.bukkit.Chunk,boolean) -> CweS
    26:26:boolean unload(org.bukkit.Chunk) -> NxEh
    3:28:int unload(surge.collection.GList,boolean,boolean) -> CweS
    9:9:int unload(surge.collection.GList,boolean) -> CweS
    16:16:int unload(surge.collection.GList) -> xGHv
    22:22:boolean isLoaded(java.lang.String,int,int) -> CweS
    2:29:boolean isLoaded(org.bukkit.World,int,int) -> CweS
    11:25:void load(surge.collection.GList) -> GkAI
surge.util.Cuboid -> rpTD:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    java.lang.String[] h -> ofjd
    80:221:void <init>(org.bukkit.Location,org.bukkit.Location) -> <init>
    8:200:int depth(surge.util.Axis) -> CweS
    31:232:void set(org.bukkit.Location,org.bukkit.Location) -> NxEh
    66:66:boolean hasPlayers() -> YUlx
    51:211:surge.collection.GList getPlayers() -> ogDM
    6:244:surge.collection.GList getEntities() -> wesy
    72:164:void <init>(org.bukkit.Location) -> <init>
    69:239:void <init>(surge.util.Cuboid) -> <init>
    2:224:void <init>(org.bukkit.World,int,int,int,int,int,int) -> <init>
    20:233:void <init>(java.lang.String,int,int,int,int,int,int) -> <init>
    38:247:void <init>(java.util.Map) -> <init>
    4:252:java.util.Map serialize() -> serialize
    206:206:surge.util.Cuboid flatten(int) -> jpee
    115:115:org.bukkit.Location getLowerNE() -> gpXe
    215:215:org.bukkit.Location getUpperSW() -> DGpT
    123:241:org.bukkit.Location getCenter() -> getCenter
    92:236:org.bukkit.World getWorld() -> getWorld
    196:196:int getSizeX() -> CVOS
    235:235:int getSizeY() -> GYkA
    127:127:int getSizeZ() -> rpXR
    183:183:int getLowerX() -> loHD
    245:245:int getLowerY() -> XAiG
    166:166:int getLowerZ() -> YVOK
    114:114:int getUpperX() -> pGlu
    23:23:int getUpperY() -> EJsf
    64:64:int getUpperZ() -> VCsV
    9:242:org.bukkit.block.Block[] corners() -> ogNd
    36:238:surge.util.Cuboid expand(surge.util.Cuboid$CuboidDirection,int) -> CweS
    229:229:surge.util.Cuboid shift(surge.util.Cuboid$CuboidDirection,int) -> NxEh
    1:225:surge.util.Cuboid outset(surge.util.Cuboid$CuboidDirection,int) -> MdAW
    57:57:surge.util.Cuboid inset(surge.util.Cuboid$CuboidDirection,int) -> jqEV
    190:190:boolean contains(int,int,int) -> NxEh
    54:54:boolean contains(org.bukkit.block.Block) -> NxEh
    222:222:boolean contains(org.bukkit.Location) -> BlQU
    124:124:int volume() -> MuOe
    25:234:byte averageLightLevel() -> vlCX
    39:39:surge.util.Cuboid contract() -> KLfD
    11:250:surge.util.Cuboid contract(surge.util.Cuboid$CuboidDirection) -> CweS
    3:249:surge.util.Cuboid getFace(surge.util.Cuboid$CuboidDirection) -> NxEh
    32:120:boolean containsOnly(org.bukkit.Material) -> NxEh
    5:251:surge.util.Cuboid getBoundingCuboid(surge.util.Cuboid) -> CweS
    158:158:org.bukkit.block.Block getRelativeBlock(int,int,int) -> MdAW
    185:185:org.bukkit.block.Block getRelativeBlock(org.bukkit.World,int,int,int) -> CweS
    18:216:java.util.List getChunks() -> JQsK
    45:191:void fill(int,byte) -> CweS
    192:192:java.util.Iterator iterator() -> iterator
    58:58:surge.util.Cuboid clone() -> OQBX
    134:134:java.lang.String toString() -> toString
    17:243:int hashCode() -> hashCode
    7:240:boolean equals(java.lang.Object) -> equals
    43:43:java.lang.Object clone() -> clone
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.Cuboid$1 -> rpTD$1:
    surge.util.Cuboid this$0 -> hYvf
    3:3:void <init>(surge.util.Cuboid) -> <init>
    2:5:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> MdAW
    1:1:java.lang.Object onAdapt(java.lang.Object) -> FpMI
surge.util.Cuboid$2 -> rpTD$2:
    int[] a -> a
    int[] b -> nmKM
    1:2:void <clinit>() -> <clinit>
surge.util.Cuboid$CuboidDirection -> rpTD$CweS:
    surge.util.Cuboid$CuboidDirection North -> XJiQ
    surge.util.Cuboid$CuboidDirection East -> rNbf
    surge.util.Cuboid$CuboidDirection South -> ivlc
    surge.util.Cuboid$CuboidDirection West -> wDaC
    surge.util.Cuboid$CuboidDirection Up -> KDce
    surge.util.Cuboid$CuboidDirection Down -> fvUN
    surge.util.Cuboid$CuboidDirection Horizontal -> tDIH
    surge.util.Cuboid$CuboidDirection Vertical -> GbkK
    surge.util.Cuboid$CuboidDirection Both -> KVFS
    surge.util.Cuboid$CuboidDirection Unknown -> EeVS
    surge.util.Cuboid$CuboidDirection[] a -> gyWs
    20:20:surge.util.Cuboid$CuboidDirection[] values() -> values
    7:7:surge.util.Cuboid$CuboidDirection valueOf(java.lang.String) -> valueOf
    1:1:void <init>(java.lang.String,int) -> <init>
    5:24:surge.util.Cuboid$CuboidDirection opposite() -> oELC
    2:25:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.Cuboid$CuboidIterator -> rpTD$NxEh:
    org.bukkit.World a -> uFkB
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    surge.util.Cuboid this$0 -> hYvf
    2:20:void <init>(surge.util.Cuboid,org.bukkit.World,int,int,int,int,int,int) -> <init>
    5:5:boolean hasNext() -> hasNext
    4:19:org.bukkit.block.Block next() -> next
    3:3:void remove() -> remove
    1:1:java.lang.Object next() -> next
surge.util.CuboidException -> DXnX:
    long serialVersionUID -> serialVersionUID
    1:2:void <init>(java.lang.String) -> <init>
surge.util.D -> McgR:
    surge.collection.GList a -> Xkwp
    java.lang.String[] b -> oDbJ
    20:20:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    9:39:void flush() -> flush
    11:45:void a(java.lang.String,java.lang.String) -> NxEh
    4:17:void l(java.lang.Object,java.lang.String) -> CweS
    25:41:void s(java.lang.Object,java.lang.String) -> NxEh
    16:22:void v(java.lang.Object,java.lang.String) -> MdAW
    12:31:void w(java.lang.Object,java.lang.String) -> jqEV
    5:40:void f(java.lang.Object,java.lang.String) -> xGHv
    8:44:void l(java.lang.String) -> jpee
    1:34:void s(java.lang.String) -> eYGI
    3:47:void v(java.lang.String) -> CLrO
    2:37:void w(java.lang.String) -> vbfg
    6:46:void f(java.lang.String) -> kQfJ
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.DMSRequire -> VCnO:
    surge.util.DMSRequirement value() -> eYPl
surge.util.DMSRequirement -> NgKT:
    surge.util.DMSRequirement SQL -> NyAp
    surge.util.DMSRequirement[] a -> JktO
    1:3:void <clinit>() -> <clinit>
    5:5:void <init>(java.lang.String,int) -> <init>
    2:2:surge.util.DMSRequirement[] values() -> values
    4:4:surge.util.DMSRequirement valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.Depend -> XBEI:
    surge.util.Depend VAULT -> VLqc
    surge.util.Depend FAWE -> YMkA
    surge.util.Depend WORLDEDIT -> tUHy
    surge.util.Depend PROTOLIB -> tDGg
    surge.util.Depend CITIZENS -> nAtv
    java.lang.String a -> a
    surge.util.Depend[] b -> tDHW
    2:12:void <clinit>() -> <clinit>
    3:6:void <init>(java.lang.String,int,java.lang.String) -> <init>
    1:1:boolean exists() -> exists
    7:7:surge.util.Depend[] values() -> values
    8:8:surge.util.Depend valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.Dimension -> WqeL:
    int a -> a
    int b -> b
    int c -> c
    1:18:void <init>(int,int,int) -> <init>
    8:19:void <init>(int,int) -> <init>
    2:20:surge.util.DimensionFace getPane() -> xPEc
    16:16:int getWidth() -> getWidth
    3:3:int getHeight() -> getHeight
    13:13:int getDepth() -> getDepth
surge.util.DimensionFace -> miSr:
    surge.util.DimensionFace X -> rOCd
    surge.util.DimensionFace Y -> wfcO
    surge.util.DimensionFace Z -> SelC
    surge.util.DimensionFace[] a -> woTC
    3:3:surge.util.DimensionFace[] values() -> values
    2:2:surge.util.DimensionFace valueOf(java.lang.String) -> valueOf
    1:1:void <init>(java.lang.String,int) -> <init>
    4:7:void <clinit>() -> <clinit>
surge.util.Direction -> QVak:
    surge.util.Direction U -> PBpS
    surge.util.Direction D -> rxtn
    surge.util.Direction N -> qBmj
    surge.util.Direction S -> EKbX
    surge.util.Direction E -> DrsB
    surge.util.Direction W -> rpdq
    int a -> a
    int b -> b
    int c -> c
    surge.util.Cuboid$CuboidDirection d -> CxaK
    int[] e -> RtNS
    surge.util.Direction[] f -> QWXW
    4:52:void <clinit>() -> <clinit>
    7:57:void <init>(java.lang.String,int,int,int,int,surge.util.Cuboid$CuboidDirection) -> <init>
    3:49:surge.util.Direction reverse() -> qlrm
    55:55:int x() -> vtSH
    50:50:int y() -> VUUC
    54:54:int z() -> z
    38:38:surge.util.Cuboid$CuboidDirection f() -> MAgt
    19:19:surge.collection.GList news() -> jNla
    29:29:surge.collection.GList udnews() -> cdKP
    1:56:surge.util.Direction facing(org.bukkit.entity.Player) -> ThSf
    2:47:surge.util.Direction fromByte(byte) -> NxEh
    9:53:byte byteValue() -> byteValue
    15:15:surge.util.Direction[] values() -> values
    33:33:surge.util.Direction valueOf(java.lang.String) -> valueOf
    24:24:int[] a() -> CwgL
surge.util.Embedded -> Ynye:
    surge.collection.GList get() -> fvEp
    void add(java.lang.Object) -> add
surge.util.F -> iSvI:
    java.text.NumberFormat a -> hQht
    java.text.DecimalFormat b -> b
    java.lang.String[] c -> lwMd
    java.math.BigInteger d -> QFWN
    java.util.NavigableMap e -> dMmK
    int f -> f
    java.lang.String[] g -> hsWg
    41:128:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
    11:123:java.lang.String time(double,int) -> CweS
    154:154:java.lang.String b(int) -> b
    50:50:java.lang.String b(long) -> BlQU
    101:101:java.lang.String b(double) -> ugqC
    4:164:java.lang.String b(java.math.BigInteger) -> CweS
    47:133:void a() -> a
    152:152:java.lang.String color(java.lang.String) -> kbgY
    86:86:java.lang.String fileSize(long) -> IqFu
    44:44:java.lang.String memSize(long) -> sQKP
    51:156:java.lang.String stamp(long) -> fuXt
    39:39:java.lang.String stamp() -> iLJb
    1:149:java.lang.String ofSize(long,int) -> NxEh
    24:165:java.lang.String ofSize(long,int,surge.util.C) -> CweS
    107:107:surge.collection.GList wrap(java.lang.String) -> KTic
    5:148:surge.collection.GList wrap(java.lang.String,int) -> GkAI
    56:117:java.lang.String trim(java.lang.String,int) -> ftyJ
    16:146:java.lang.String cname(java.lang.String) -> EmLK
    9:157:surge.collection.GList getParameters(java.lang.String,char) -> CweS
    18:162:java.lang.String repeat(java.lang.String,int) -> repeat
    2:124:java.lang.String mem(long) -> PSXO
    12:153:java.lang.String memx(long) -> ThSf
    8:55:java.lang.String f(long) -> PuXs
    10:45:java.lang.String f(int) -> eYGI
    14:155:java.lang.String f(double,int) -> NxEh
    33:145:java.lang.String fd(double,int) -> MdAW
    7:163:java.lang.String f(float,int) -> CweS
    57:57:java.lang.String f(double) -> Qokb
    93:93:java.lang.String f(float) -> CweS
    103:103:java.lang.String pc(double,int) -> jqEV
    26:26:java.lang.String pc(float,int) -> NxEh
    159:159:java.lang.String pc(double) -> TgsT
    17:17:java.lang.String pc(float) -> NxEh
    91:91:java.lang.String pc(int,int,int) -> jqEV
    110:110:java.lang.String pc(int,int) -> jqEV
    160:160:java.lang.String pc(long,long,int) -> CweS
    95:95:java.lang.String pc(long,long) -> CweS
    6:6:java.lang.String msSeconds(long) -> xGHI
    35:35:java.lang.String msSeconds(long,int) -> MdAW
    59:59:java.lang.String nsMs(long) -> fKEH
    126:126:java.lang.String nsMs(long,int) -> jqEV
    61:61:java.lang.String nsMsd(long,int) -> xGHv
    46:151:surge.collection.GList color(java.util.List) -> MdAW
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.FU -> Fosv:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long ONE_GB -> ONE_GB
    java.io.File[] EMPTY_FILE_ARRAY -> EMPTY_FILE_ARRAY
    java.lang.String[] a -> a
    292:292:void <clinit>() -> <clinit>
    177:237:void <init>() -> <init>
    18:282:java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    32:301:void touch(java.io.File) -> touch
    186:186:java.io.File[] convertFileCollectionToFileArray(java.util.Collection) -> convertFileCollectionToFileArray
    11:293:java.io.File toFile(java.net.URL) -> toFile
    7:318:java.io.File[] toFiles(java.net.URL[]) -> toFiles
    17:299:java.net.URL[] toURLs(java.io.File[]) -> toURLs
    55:291:void copyFileToDirectory(java.io.File,java.io.File) -> copyFileToDirectory
    38:45:void copyFile(java.io.File,java.io.File) -> copyFile
    16:278:void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    1:308:void a(java.io.File,java.io.File,boolean) -> CweS
    39:218:void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    24:221:void copyDirectory(java.io.File,java.io.File) -> copyDirectory
    13:277:void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    5:289:void b(java.io.File,java.io.File,boolean) -> NxEh
    15:314:void copyURLToFile(java.net.URL,java.io.File) -> copyURLToFile
    96:309:void deleteDirectory(java.io.File) -> deleteDirectory
    51:315:void cleanDirectory(java.io.File) -> cleanDirectory
    10:319:boolean waitFor(java.io.File,int) -> waitFor
    50:296:java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    134:279:byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    2:317:java.util.List readLines(java.io.File,java.lang.String) -> readLines
    21:212:void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    86:316:void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    81:238:void writeLines(java.io.File,java.lang.String,java.util.Collection) -> writeLines
    40:313:void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String) -> writeLines
    54:303:void forceDelete(java.io.File) -> forceDelete
    47:265:void forceDeleteOnExit(java.io.File) -> forceDeleteOnExit
    119:264:void a(java.io.File) -> MdAW
    4:298:void b(java.io.File) -> jqEV
    14:306:void forceMkdir(java.io.File) -> forceMkdir
    3:311:long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    43:302:boolean isFileNewer(java.io.File,java.io.File) -> isFileNewer
    89:284:boolean isFileNewer(java.io.File,java.util.Date) -> isFileNewer
    41:200:boolean isFileNewer(java.io.File,long) -> isFileNewer
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.FinalDouble -> uWYO:
    double a -> a
    2:10:void <init>(double) -> <init>
    8:8:double get() -> get
    1:9:void set(double) -> set
    6:7:void add(double) -> add
    3:4:void sub(double) -> picM
surge.util.FinalFloat -> fmPg:
    float a -> a
    2:9:void <init>(float) -> <init>
    10:10:float get() -> get
    5:6:void set(float) -> set
    1:8:void add(float) -> add
    4:7:void sub(float) -> MdAW
surge.util.FinalInteger -> tnHg:
    int a -> a
    2:10:void <init>(int) -> <init>
    8:8:int get() -> get
    7:9:void set(int) -> set
    1:4:void add(int) -> add
    3:6:void sub(int) -> CLrO
surge.util.FinalLong -> Bchu:
    long a -> a
    2:7:void <init>(long) -> <init>
    3:3:long get() -> get
    1:5:void set(long) -> set
    8:10:void add(long) -> add
    6:9:void sub(long) -> FpMI
surge.util.FinalString -> xhrL:
    java.lang.String a -> a
    1:6:void <init>(java.lang.String) -> <init>
    4:4:java.lang.String get() -> get
    2:5:void set(java.lang.String) -> set
surge.util.Fingerprint -> Mkwo:
    java.lang.String a -> a
    4:4:void <init>() -> <init>
    1:5:java.lang.String randomFingerprint(java.lang.String) -> biMo
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.GListAdapter -> BJVy:
    6:6:void <init>() -> <init>
    1:8:java.util.List adapt(java.util.List) -> jqEV
    java.lang.Object onAdapt(java.lang.Object) -> FpMI
surge.util.Health -> anan:
    double a -> a
    2:7:void <init>(double) -> <init>
    5:5:int getFlatHearts() -> NVNN
    4:4:double getHearts() -> ghGI
    6:6:double getHalfHearts() -> IycM
    1:1:int getFlatHalfHearts() -> xqfo
surge.util.IO -> yIrB:
    char DIR_SEPARATOR_UNIX -> DIR_SEPARATOR_UNIX
    char DIR_SEPARATOR_WINDOWS -> DIR_SEPARATOR_WINDOWS
    char DIR_SEPARATOR -> DIR_SEPARATOR
    java.lang.String LINE_SEPARATOR_UNIX -> LINE_SEPARATOR_UNIX
    java.lang.String LINE_SEPARATOR_WINDOWS -> LINE_SEPARATOR_WINDOWS
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    21:196:void <clinit>() -> <clinit>
    188:198:void <init>() -> <init>
    32:182:void closeQuietly(java.io.Reader) -> closeQuietly
    52:214:void closeQuietly(java.io.Writer) -> closeQuietly
    87:172:void closeQuietly(java.io.InputStream) -> closeQuietly
    131:216:void closeQuietly(java.io.OutputStream) -> closeQuietly
    9:126:byte[] toByteArray(java.io.InputStream) -> toByteArray
    127:193:byte[] toByteArray(java.io.Reader) -> toByteArray
    7:116:byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    1:1:byte[] toByteArray(java.lang.String) -> toByteArray
    136:203:char[] toCharArray(java.io.InputStream) -> toCharArray
    85:215:char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    54:162:char[] toCharArray(java.io.Reader) -> toCharArray
    13:207:java.lang.String toString(java.io.InputStream) -> toString
    88:176:java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    74:173:java.lang.String toString(java.io.Reader) -> toString
    223:223:java.lang.String toString(byte[]) -> toString
    26:86:java.lang.String toString(byte[],java.lang.String) -> toString
    145:225:java.util.List readLines(java.io.InputStream) -> readLines
    23:143:java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    2:209:java.util.List readLines(java.io.Reader) -> readLines
    120:168:java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    42:108:java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    15:192:void write(byte[],java.io.OutputStream) -> write
    34:178:void write(byte[],java.io.Writer) -> write
    29:218:void write(byte[],java.io.Writer,java.lang.String) -> write
    73:144:void write(char[],java.io.Writer) -> write
    17:174:void write(char[],java.io.OutputStream) -> write
    40:185:void write(char[],java.io.OutputStream,java.lang.String) -> write
    6:159:void write(java.lang.String,java.io.Writer) -> write
    81:138:void write(java.lang.String,java.io.OutputStream) -> write
    16:200:void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    78:210:void write(java.lang.StringBuffer,java.io.Writer) -> write
    14:191:void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    5:217:void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    37:220:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream) -> writeLines
    38:219:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String) -> writeLines
    4:228:void writeLines(java.util.Collection,java.lang.String,java.io.Writer) -> writeLines
    53:118:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    8:226:long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    10:124:void copy(java.io.InputStream,java.io.Writer) -> copy
    43:202:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    45:194:int copy(java.io.Reader,java.io.Writer) -> copy
    11:109:long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    30:227:void copy(java.io.Reader,java.io.OutputStream) -> copy
    12:221:void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    19:213:boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    3:155:boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.Items -> SCWC:
    57:57:void <init>() -> <init>
    65:65:boolean is(org.bukkit.inventory.ItemStack) -> CweS
    68:68:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material) -> CweS
    59:59:boolean is(org.bukkit.inventory.ItemStack,surge.util.MaterialBlock) -> CweS
    44:44:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,byte) -> CweS
    36:36:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,int) -> CweS
    43:43:boolean hasMeta(org.bukkit.inventory.ItemStack) -> NxEh
    64:64:boolean hasName(org.bukkit.inventory.ItemStack) -> MdAW
    54:54:boolean hasLore(org.bukkit.inventory.ItemStack) -> jqEV
    70:70:boolean hasName(org.bukkit.inventory.ItemStack,java.lang.String) -> CweS
    8:8:boolean hasLore(org.bukkit.inventory.ItemStack,java.util.List) -> CweS
    3:3:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment) -> CweS
    1:51:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment,int) -> CweS
    42:53:boolean hasEnchantments(org.bukkit.inventory.ItemStack) -> xGHv
    20:71:surge.util.MaterialBlock toMaterialBlock(org.bukkit.inventory.ItemStack) -> GkAI
    28:28:boolean isBroken(org.bukkit.inventory.ItemStack) -> ftyJ
    25:25:boolean hasDurability(org.bukkit.inventory.ItemStack) -> BlQU
    37:66:double getDurabilityPercent(org.bukkit.inventory.ItemStack) -> IqFu
    2:63:void setDurabilityPercent(org.bukkit.inventory.ItemStack,double) -> CweS
    19:55:short getMaxDurability(org.bukkit.inventory.ItemStack) -> sQKP
    10:67:short getDurability(org.bukkit.inventory.ItemStack) -> fuXt
    4:35:void setDurability(org.bukkit.inventory.ItemStack,short) -> CweS
    7:33:void setDurability(org.bukkit.inventory.ItemStack,int) -> CweS
    9:56:void damage(org.bukkit.inventory.ItemStack,int) -> NxEh
    5:69:boolean isMergable(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack) -> CweS
surge.util.MSound -> Ubmt:
    surge.util.MSound AMBIENCE_CAVE -> pPpM
    surge.util.MSound AMBIENCE_RAIN -> qeUY
    surge.util.MSound AMBIENCE_THUNDER -> xrYt
    surge.util.MSound ANVIL_BREAK -> DkEn
    surge.util.MSound ANVIL_LAND -> Coqv
    surge.util.MSound ANVIL_USE -> wMTC
    surge.util.MSound ARROW_HIT -> RcLo
    surge.util.MSound BURP -> IXRS
    surge.util.MSound CHEST_CLOSE -> KEGD
    surge.util.MSound CHEST_OPEN -> IXRY
    surge.util.MSound CLICK -> QVwe
    surge.util.MSound DOOR_CLOSE -> IPAn
    surge.util.MSound DOOR_OPEN -> oyBE
    surge.util.MSound DRINK -> fmfI
    surge.util.MSound EAT -> fmei
    surge.util.MSound EXPLODE -> woWK
    surge.util.MSound FALL_BIG -> Rsmh
    surge.util.MSound FALL_SMALL -> DHay
    surge.util.MSound FIRE -> ePou
    surge.util.MSound FIRE_IGNITE -> rpgs
    surge.util.MSound FIZZ -> MJjR
    surge.util.MSound FUSE -> JBAo
    surge.util.MSound GLASS -> sbhj
    surge.util.MSound HURT_FLESH -> JktY
    surge.util.MSound ITEM_BREAK -> qdsQ
    surge.util.MSound ITEM_PICKUP -> VUeT
    surge.util.MSound LAVA -> Tqaq
    surge.util.MSound LAVA_POP -> rVto
    surge.util.MSound LEVEL_UP -> CWAb
    surge.util.MSound MINECART_BASE -> jhpL
    surge.util.MSound MINECART_INSIDE -> Jtei
    surge.util.MSound NOTE_BASS -> EBrc
    surge.util.MSound NOTE_PIANO -> xrYG
    surge.util.MSound NOTE_BASS_DRUM -> VnwY
    surge.util.MSound NOTE_STICKS -> FEul
    surge.util.MSound NOTE_BASS_GUITAR -> JlVH
    surge.util.MSound NOTE_SNARE_DRUM -> xXep
    surge.util.MSound NOTE_PLING -> xGgn
    surge.util.MSound ORB_PICKUP -> FqMe
    surge.util.MSound PISTON_EXTEND -> pruJ
    surge.util.MSound PISTON_RETRACT -> DQTk
    surge.util.MSound PORTAL -> JRed
    surge.util.MSound PORTAL_TRAVEL -> qSuD
    surge.util.MSound PORTAL_TRIGGER -> SUOm
    surge.util.MSound SHOOT_ARROW -> vkuP
    surge.util.MSound SPLASH -> esUm
    surge.util.MSound SPLASH2 -> vdEp
    surge.util.MSound STEP_GRASS -> ChEO
    surge.util.MSound STEP_GRAVEL -> rNgO
    surge.util.MSound STEP_LADDER -> JtiP
    surge.util.MSound STEP_SAND -> cKNB
    surge.util.MSound STEP_SNOW -> DPsy
    surge.util.MSound STEP_STONE -> OPtC
    surge.util.MSound STEP_WOOD -> RRNA
    surge.util.MSound STEP_WOOL -> WimW
    surge.util.MSound SWIM -> SoCY
    surge.util.MSound WATER -> pQRS
    surge.util.MSound WOOD_CLICK -> fKdx
    surge.util.MSound BAT_DEATH -> iCkx
    surge.util.MSound BAT_HURT -> KDhH
    surge.util.MSound BAT_IDLE -> wfgc
    surge.util.MSound BAT_LOOP -> fvYU
    surge.util.MSound BAT_TAKEOFF -> pYal
    surge.util.MSound BLAZE_BREATH -> bOxX
    surge.util.MSound BLAZE_DEATH -> hsmV
    surge.util.MSound BLAZE_HIT -> VUfh
    surge.util.MSound CAT_HISS -> Tysp
    surge.util.MSound CAT_HIT -> Aimw
    surge.util.MSound CAT_MEOW -> gWXe
    surge.util.MSound CAT_PURR -> RbmF
    surge.util.MSound CAT_PURREOW -> htNB
    surge.util.MSound CHICKEN_IDLE -> eYbj
    surge.util.MSound CHICKEN_HURT -> sYyT
    surge.util.MSound CHICKEN_EGG_POP -> vuEh
    surge.util.MSound CHICKEN_WALK -> DIDT
    surge.util.MSound COW_IDLE -> RcNP
    surge.util.MSound COW_HURT -> LHKC
    surge.util.MSound COW_WALK -> wfff
    surge.util.MSound CREEPER_HISS -> lwiH
    surge.util.MSound CREEPER_DEATH -> KUhW
    surge.util.MSound ENDERDRAGON_DEATH -> NWBX
    surge.util.MSound ENDERDRAGON_GROWL -> fnGk
    surge.util.MSound ENDERDRAGON_HIT -> jXPp
    surge.util.MSound ENDERDRAGON_WINGS -> hlAN
    surge.util.MSound ENDERMAN_DEATH -> gpmW
    surge.util.MSound ENDERMAN_HIT -> eHdG
    surge.util.MSound ENDERMAN_IDLE -> UIvN
    surge.util.MSound ENDERMAN_TELEPORT -> jyvc
    surge.util.MSound ENDERMAN_SCREAM -> ObXO
    surge.util.MSound ENDERMAN_STARE -> KLyl
    surge.util.MSound GHAST_SCREAM -> rqLu
    surge.util.MSound GHAST_SCREAM2 -> ceAr
    surge.util.MSound GHAST_CHARGE -> CWCp
    surge.util.MSound GHAST_DEATH -> jGRF
    surge.util.MSound GHAST_FIREBALL -> PTWw
    surge.util.MSound GHAST_MOAN -> jXRt
    surge.util.MSound IRONGOLEM_DEATH -> HDPT
    surge.util.MSound IRONGOLEM_HIT -> nvBL
    surge.util.MSound IRONGOLEM_THROW -> ieqE
    surge.util.MSound IRONGOLEM_WALK -> LYNB
    surge.util.MSound MAGMACUBE_WALK -> qvYf
    surge.util.MSound MAGMACUBE_WALK2 -> qdxA
    surge.util.MSound MAGMACUBE_JUMP -> ervM
    surge.util.MSound PIG_IDLE -> tfPx
    surge.util.MSound PIG_DEATH -> ETXw
    surge.util.MSound PIG_WALK -> Ucgq
    surge.util.MSound SHEEP_IDLE -> wnxg
    surge.util.MSound SHEEP_SHEAR -> PSwh
    surge.util.MSound SHEEP_WALK -> NMrH
    surge.util.MSound SILVERFISH_HIT -> NpUc
    surge.util.MSound SILVERFISH_KILL -> wxJj
    surge.util.MSound SILVERFISH_IDLE -> ePtB
    surge.util.MSound SILVERFISH_WALK -> pIBu
    surge.util.MSound SKELETON_IDLE -> NyGY
    surge.util.MSound SKELETON_DEATH -> RQmj
    surge.util.MSound SKELETON_HURT -> KgLm
    surge.util.MSound SKELETON_WALK -> UAhB
    surge.util.MSound SLIME_ATTACK -> MKQx
    surge.util.MSound SLIME_WALK -> bYPA
    surge.util.MSound SLIME_WALK2 -> qCYC
    surge.util.MSound SPIDER_IDLE -> sbqA
    surge.util.MSound SPIDER_DEATH -> TqiX
    surge.util.MSound SPIDER_WALK -> PLKX
    surge.util.MSound WITHER_DEATH -> EByj
    surge.util.MSound WITHER_HURT -> mXmd
    surge.util.MSound WITHER_IDLE -> GstY
    surge.util.MSound WITHER_SHOOT -> kdIw
    surge.util.MSound WITHER_SPAWN -> aVLo
    surge.util.MSound WOLF_BARK -> jrIH
    surge.util.MSound WOLF_DEATH -> ioFI
    surge.util.MSound WOLF_GROWL -> slBX
    surge.util.MSound WOLF_HOWL -> Qyau
    surge.util.MSound WOLF_HURT -> tMBW
    surge.util.MSound WOLF_PANT -> UAhW
    surge.util.MSound WOLF_SHAKE -> HUUf
    surge.util.MSound WOLF_WALK -> TrKE
    surge.util.MSound WOLF_WHINE -> URid
    surge.util.MSound ZOMBIE_METAL -> uaFP
    surge.util.MSound ZOMBIE_WOOD -> TrHp
    surge.util.MSound ZOMBIE_WOODBREAK -> fSxX
    surge.util.MSound ZOMBIE_IDLE -> vIts
    surge.util.MSound ZOMBIE_DEATH -> DQWn
    surge.util.MSound ZOMBIE_HURT -> uWsc
    surge.util.MSound ZOMBIE_INFECT -> axOB
    surge.util.MSound ZOMBIE_UNFECT -> AsDj
    surge.util.MSound ZOMBIE_REMEDY -> ioDv
    surge.util.MSound ZOMBIE_WALK -> MvEg
    surge.util.MSound ZOMBIE_PIG_IDLE -> mioO
    surge.util.MSound ZOMBIE_PIG_ANGRY -> cJog
    surge.util.MSound ZOMBIE_PIG_DEATH -> pQTx
    surge.util.MSound ZOMBIE_PIG_HURT -> uiVG
    surge.util.MSound DIG_WOOL -> rqMo
    surge.util.MSound DIG_GRASS -> dpWD
    surge.util.MSound DIG_GRAVEL -> LiqG
    surge.util.MSound DIG_SAND -> UAgY
    surge.util.MSound DIG_SNOW -> lgLY
    surge.util.MSound DIG_STONE -> PKjM
    surge.util.MSound DIG_WOOD -> fLIV
    surge.util.MSound FIREWORK_BLAST -> oWDK
    surge.util.MSound FIREWORK_BLAST2 -> lxNP
    surge.util.MSound FIREWORK_LARGE_BLAST -> pjfu
    surge.util.MSound FIREWORK_LARGE_BLAST2 -> aUmh
    surge.util.MSound FIREWORK_TWINKLE -> YgiD
    surge.util.MSound FIREWORK_TWINKLE2 -> IWyQ
    surge.util.MSound FIREWORK_LAUNCH -> HoIj
    surge.util.MSound SUCCESSFUL_HIT -> RQsA
    surge.util.MSound HORSE_ANGRY -> lxQc
    surge.util.MSound HORSE_ARMOR -> Bdev
    surge.util.MSound HORSE_BREATHE -> DPyy
    surge.util.MSound HORSE_DEATH -> dpXn
    surge.util.MSound HORSE_GALLOP -> PnPg
    surge.util.MSound HORSE_HIT -> Lisf
    surge.util.MSound HORSE_IDLE -> kBIY
    surge.util.MSound HORSE_JUMP -> UtoO
    surge.util.MSound HORSE_LAND -> OIJk
    surge.util.MSound HORSE_SADDLE -> EwCO
    surge.util.MSound HORSE_SOFT -> iMCq
    surge.util.MSound HORSE_WOOD -> LrdD
    surge.util.MSound DONKEY_ANGRY -> RtUV
    surge.util.MSound DONKEY_DEATH -> MBan
    surge.util.MSound DONKEY_HIT -> qLJb
    surge.util.MSound DONKEY_IDLE -> vRhj
    surge.util.MSound HORSE_SKELETON_DEATH -> RAPm
    surge.util.MSound HORSE_SKELETON_HIT -> HMEm
    surge.util.MSound HORSE_SKELETON_IDLE -> WXqH
    surge.util.MSound HORSE_ZOMBIE_DEATH -> mjPt
    surge.util.MSound HORSE_ZOMBIE_HIT -> URkA
    surge.util.MSound HORSE_ZOMBIE_IDLE -> mHNY
    surge.util.MSound VILLAGER_DEATH -> jOed
    surge.util.MSound VILLAGER_HAGGLE -> iwWP
    surge.util.MSound VILLAGER_HIT -> kAfy
    surge.util.MSound VILLAGER_IDLE -> IFwU
    surge.util.MSound VILLAGER_NO -> nude
    surge.util.MSound VILLAGER_YES -> Kwqd
    java.lang.String a -> a
    java.lang.String b -> b
    org.bukkit.Sound c -> pkJW
    surge.util.MSound[] d -> jiXe
    1:207:void <clinit>() -> <clinit>
    2:121:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    8:186:org.bukkit.Sound bukkitSound() -> MtnF
    71:71:surge.util.MSound[] values() -> values
    21:21:surge.util.MSound valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.MaterialBlock -> pXij:
    org.bukkit.Material a -> AjUM
    java.lang.Byte b -> KDoX
    4:38:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    31:45:void <init>(org.bukkit.Material) -> <init>
    9:37:void <init>(org.bukkit.Location) -> <init>
    5:22:void <init>() -> <init>
    21:21:org.bukkit.Material getMaterial() -> getMaterial
    41:44:void setMaterial(org.bukkit.Material) -> setMaterial
    26:26:java.lang.Byte getData() -> hawj
    1:8:void setData(java.lang.Byte) -> CweS
    12:43:java.lang.String toString() -> toString
    2:36:int hashCode() -> hashCode
    3:42:boolean equals(java.lang.Object) -> equals
surge.util.P -> VDOX:
    java.lang.String[] a -> a
    40:40:void <init>() -> <init>
    62:62:boolean isOnline(java.lang.String) -> ooSo
    39:39:org.bukkit.entity.Player getPlayer(java.lang.String) -> getPlayer
    35:35:org.bukkit.entity.Player getAnyPlayer() -> LPHc
    38:38:boolean isAnyOnline() -> lwUy
    71:71:surge.collection.GList inWorld(org.bukkit.World) -> MdAW
    33:58:surge.collection.GList inChunk(org.bukkit.Chunk) -> MdAW
    3:3:surge.collection.GList inArea(org.bukkit.Location,double) -> MdAW
    47:47:surge.collection.GList inArea(org.bukkit.Location,int) -> CweS
    28:31:void disable(org.bukkit.entity.Player) -> PuXs
    44:53:void enable(org.bukkit.entity.Player) -> xGHI
    27:27:org.bukkit.Location targetBlock(org.bukkit.entity.Player,int) -> CweS
    59:59:org.bukkit.entity.Entity targetEntity(org.bukkit.entity.Player,int) -> NxEh
    7:29:boolean hasInventoryOpen(org.bukkit.entity.Player) -> fKEH
    1:76:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Player,double,double) -> CweS
    20:68:int getTotalExperience(org.bukkit.entity.Player) -> FpMI
    13:69:void setTotalExperience(org.bukkit.entity.Player,int) -> MdAW
    78:78:boolean canFindPlayer(java.lang.String) -> NwfL
    9:79:org.bukkit.entity.Player findPlayer(java.lang.String) -> JtJs
    4:65:surge.collection.GList onlinePlayers() -> WPHD
    64:64:org.bukkit.Location getCrotchLocation(org.bukkit.entity.Player) -> nlNk
    21:43:void clear(org.bukkit.entity.Player) -> PAtR
    8:52:void clearEffects(org.bukkit.entity.Player) -> tnAB
    41:70:void heal(org.bukkit.entity.Player,double) -> CweS
    14:73:void heal(org.bukkit.entity.Player) -> ieOT
    42:74:void resetMaxHeath(org.bukkit.entity.Player) -> ugqC
    2:5:void resetHunger(org.bukkit.entity.Player) -> Qokb
    30:66:void kill(org.bukkit.entity.Player) -> TgsT
    72:72:surge.util.Shape getShape(org.bukkit.entity.Player) -> picM
    81:81:org.bukkit.Location getHand(org.bukkit.entity.Player) -> SdpW
    6:80:org.bukkit.Location getHand(org.bukkit.entity.Player,float,float) -> CweS
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.P$1 -> VDOX$1:
    3:4:void <init>() -> <init>
    1:6:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> MdAW
    2:2:java.lang.Object onAdapt(java.lang.Object) -> FpMI
surge.util.P$2 -> VDOX$2:
    java.lang.Double val$doff -> cKUY
    org.bukkit.entity.Player val$e -> WPcW
    org.bukkit.entity.Entity[] val$result -> Kwsm
    2:7:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Player,org.bukkit.entity.Entity[]) -> <init>
    1:10:void onTrace(org.bukkit.Location) -> IqFu
surge.util.PE -> vAMX:
    surge.util.PE ABSORPTION -> EfCH
    surge.util.PE BLINDNESS -> YhKh
    surge.util.PE CONFUSION -> xPaY
    surge.util.PE DAMAGE_RESISTANCE -> HCwD
    surge.util.PE FAST_DIGGING -> bbDk
    surge.util.PE FIRE_RESISTANCE -> KMaI
    surge.util.PE GLOWING -> kcmm
    surge.util.PE HARM -> sIbk
    surge.util.PE HEAL -> oEgN
    surge.util.PE HEALTH_BOOST -> Witi
    surge.util.PE HUNGER -> gXBo
    surge.util.PE INCREASE_DAMAGE -> oFGl
    surge.util.PE INVISIBILITY -> pPyt
    surge.util.PE JUMP -> WPdD
    surge.util.PE LEVITATION -> oghv
    surge.util.PE LUCK -> qmny
    surge.util.PE NIGHT_VISION -> xXqS
    surge.util.PE POISON -> apDP
    surge.util.PE REGENERATION -> jFwa
    surge.util.PE SATURATION -> dWJK
    surge.util.PE SLOW -> jaLA
    surge.util.PE SLOW_DIGGING -> YMww
    surge.util.PE SPEED -> HMIc
    surge.util.PE UNLUCK -> jrMS
    surge.util.PE WATER_BREATHING -> lgPf
    surge.util.PE WEAKNESS -> jqjx
    surge.util.PE WITHER -> VfqB
    5:52:void <clinit>() -> <clinit>
    3:24:void <init>(java.util.Map) -> <init>
    17:46:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> <init>
    1:21:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean) -> <init>
    15:23:void <init>(org.bukkit.potion.PotionEffectType,int,int) -> <init>
    47:47:java.util.Map serialize() -> serialize
    22:27:boolean apply(org.bukkit.entity.LivingEntity) -> apply
    34:34:boolean equals(java.lang.Object) -> equals
    2:2:int getAmplifier() -> getAmplifier
    7:7:int getDuration() -> getDuration
    19:19:org.bukkit.potion.PotionEffectType getType() -> getType
    53:53:boolean isAmbient() -> isAmbient
    16:16:boolean hasParticles() -> hasParticles
    43:43:int hashCode() -> hashCode
    9:9:java.lang.String toString() -> toString
    26:26:surge.util.PE defaulted(org.bukkit.potion.PotionEffectType) -> CweS
    4:4:surge.util.PE d(int) -> vbfg
    35:35:surge.util.PE a(int) -> kQfJ
    33:33:org.bukkit.potion.PotionEffect c() -> gEev
    38:50:void c(org.bukkit.entity.LivingEntity) -> CweS
    6:40:void crm(org.bukkit.entity.LivingEntity) -> NxEh
    30:31:void rm(org.bukkit.entity.LivingEntity) -> MdAW
surge.util.Paste -> ogLd:
    java.lang.String[] a -> a
    5:5:void <init>() -> <init>
    1:9:java.lang.String paste(java.lang.String) -> aChE
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.Persist -> Rawi:
surge.util.PluginUtil -> fdbI:
    java.lang.String[] a -> a
    97:97:void <init>() -> <init>
    127:173:void enable(org.bukkit.plugin.Plugin) -> CweS
    2:134:void enableAll() -> OYTK
    47:165:void disable(org.bukkit.plugin.Plugin) -> NxEh
    120:144:void disableAll() -> lwYe
    71:71:java.lang.String getFormattedName(org.bukkit.plugin.Plugin) -> MdAW
    10:181:java.lang.String getFormattedName(org.bukkit.plugin.Plugin,boolean) -> CweS
    74:177:org.bukkit.plugin.Plugin getPluginByName(java.lang.String) -> FpNy
    37:154:java.util.List getPluginNames(boolean) -> fuXt
    11:151:java.lang.String getPluginVersion(java.lang.String) -> DXff
    1:166:java.lang.String getUsages(org.bukkit.plugin.Plugin) -> jqEV
    7:176:java.util.List findByCommand(java.lang.String) -> CwgL
    6:82:void a(org.bukkit.plugin.Plugin) -> xGHv
    58:184:java.lang.String getPluginFileName(java.lang.String) -> QMjh
    16:185:void load(java.lang.String) -> load
    50:182:void reload(org.bukkit.plugin.Plugin) -> GkAI
    119:168:void reloadAll() -> Xtob
    3:183:void unload(org.bukkit.plugin.Plugin) -> ftyJ
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.PositionalSelector -> vkaG:
    surge.collection.GSet a -> hQrc
    4:16:void <init>() -> <init>
    1:12:void <init>(org.bukkit.Chunk) -> <init>
    7:15:void <init>(org.bukkit.World) -> <init>
    3:14:void addWorld(org.bukkit.World) -> addWorld
    2:13:void addAllWorlds() -> ggjC
    8:9:void addChunk(org.bukkit.Chunk) -> jqEV
    10:10:surge.collection.GSet getAllowedChunks() -> KLgU
surge.util.Protocol -> biWQ:
    surge.util.Protocol LATEST -> QqTa
    surge.util.Protocol R1_12_2 -> eIJF
    surge.util.Protocol R1_12_2_PRE -> VxTK
    surge.util.Protocol R1_12_1 -> kRkD
    surge.util.Protocol R1_12 -> RIdD
    surge.util.Protocol R1_11_2 -> tevL
    surge.util.Protocol R1_11_1 -> toHW
    surge.util.Protocol R1_11 -> TOkw
    surge.util.Protocol R1_10_2 -> pjni
    surge.util.Protocol R1_10_1 -> Wrgt
    surge.util.Protocol R1_10 -> GIfg
    surge.util.Protocol R1_9_4 -> rqUm
    surge.util.Protocol R1_9_3 -> RlJR
    surge.util.Protocol R1_9_2 -> hIdw
    surge.util.Protocol R1_9_1 -> Wafh
    surge.util.Protocol R1_9 -> EDBJ
    surge.util.Protocol R1_8_9 -> WsHm
    surge.util.Protocol R1_8_8 -> Ulaj
    surge.util.Protocol R1_8_7 -> vuQp
    surge.util.Protocol R1_8_6 -> Ygla
    surge.util.Protocol R1_8_5 -> mjWS
    surge.util.Protocol R1_8_4 -> UcqG
    surge.util.Protocol R1_8_3 -> WPeQ
    surge.util.Protocol R1_8_2 -> JcrF
    surge.util.Protocol R1_8_1 -> PTbR
    surge.util.Protocol R1_8 -> YEix
    surge.util.Protocol R1_7_10 -> aEQk
    surge.util.Protocol R1_7_9 -> EfEW
    surge.util.Protocol R1_7_8 -> QOTu
    surge.util.Protocol R1_7_7 -> tLgX
    surge.util.Protocol R1_7_6 -> nJti
    surge.util.Protocol R1_7_5 -> ffAm
    surge.util.Protocol R1_7_4 -> KMaj
    surge.util.Protocol R1_7_3 -> pkNq
    surge.util.Protocol R1_7_2 -> SCwS
    surge.util.Protocol R1_7_1 -> XSgN
    surge.util.Protocol B1_6_4 -> hJDd
    surge.util.Protocol B1_6_3 -> STyL
    surge.util.Protocol B1_6_2 -> IPLv
    surge.util.Protocol B1_6_1 -> USOd
    surge.util.Protocol B1_5_2 -> xQCJ
    surge.util.Protocol B1_5_1 -> XTIK
    surge.util.Protocol B1_5 -> cJud
    surge.util.Protocol B1_4_7 -> mQCg
    surge.util.Protocol B1_4_6 -> baeX
    surge.util.Protocol B1_4_5 -> Nglk
    surge.util.Protocol B1_4_4 -> lDoF
    surge.util.Protocol B1_4_2 -> BCHh
    surge.util.Protocol B1_3_2 -> ioMw
    surge.util.Protocol B1_3_1 -> EKsS
    surge.util.Protocol B1_2_5 -> PvgA
    surge.util.Protocol B1_2_4 -> nJxW
    surge.util.Protocol EARLIEST -> Ulcl
    surge.util.Protocol UNKNOWN -> kttF
    int a -> a
    java.lang.String b -> b
    surge.util.Protocol[] c -> sQwU
    40:40:surge.util.Protocol[] values() -> values
    45:45:surge.util.Protocol valueOf(java.lang.String) -> valueOf
    23:69:void <init>(java.lang.String,int,int) -> <init>
    8:75:surge.util.Protocol getProtocolVersion() -> eQAw
    52:52:surge.util.ProtocolRange to(surge.util.Protocol) -> NxEh
    22:22:boolean isServerVersion() -> klGE
    35:35:java.lang.String getVersionString() -> getVersionString
    76:76:boolean isNettySupported() -> xrLH
    57:57:boolean isActualVersion() -> OYSs
    28:63:int getVersion() -> getVersion
    7:7:int getMetaVersion() -> yIxp
    1:77:void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.ProtocolRange -> APFc:
    surge.util.Protocol a -> Fpxy
    surge.util.Protocol b -> fCaE
    java.lang.String c -> c
    2:8:void <init>(surge.util.Protocol,surge.util.Protocol) -> <init>
    6:6:surge.util.Protocol getFrom() -> SvbU
    7:7:surge.util.Protocol getTo() -> BAjw
    5:5:boolean contains(surge.util.Protocol) -> MdAW
    1:1:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.Range -> LaHo:
    double a -> a
    double b -> b
    1:17:void <init>(double,double) -> <init>
    9:18:void <init>(int,int) -> <init>
    7:10:void <init>(long,long) -> <init>
    5:5:double randomNext() -> wUUY
    19:19:int randomNextInt() -> PBeN
    13:13:long randomNextLong() -> Hvbp
    15:15:boolean isWithin(double) -> SdpW
    3:3:boolean isWithin(int) -> kbgY
    11:11:boolean isWithin(long) -> nlNk
    20:20:double getMin() -> getMin
    8:14:void setMin(double) -> WFiQ
    4:4:double getMax() -> getMax
    2:16:void setMax(double) -> UAFa
surge.util.RayTrace -> wnbu:
    org.bukkit.Location a -> opDI
    org.bukkit.util.Vector b -> DcDT
    java.lang.Double c -> scYN
    java.lang.Double d -> fnTm
    java.lang.Double e -> EnWc
    java.lang.Boolean f -> qLQW
    11:31:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double) -> <init>
    6:35:void trace() -> kARJ
    5:21:void stop() -> stop
    1:1:void onTrace(org.bukkit.Location) -> IqFu
    4:4:org.bukkit.Location getStart() -> IGAE
    25:36:void setStart(org.bukkit.Location) -> sQKP
    16:16:org.bukkit.util.Vector getDirection() -> getDirection
    3:8:void setDirection(org.bukkit.util.Vector) -> setDirection
    24:24:java.lang.Double getMaxDistance() -> AFyp
    10:19:void setMaxDistance(java.lang.Double) -> MdAW
    23:23:java.lang.Double getDistanceCovered() -> qvGR
    2:22:void setDistanceCovered(java.lang.Double) -> jqEV
    30:30:java.lang.Double getStep() -> rNUl
    14:15:void setStep(java.lang.Double) -> xGHv
surge.util.ReflectionUtils -> UtSk:
    java.lang.String[] a -> a
    20:24:void <init>() -> <init>
    2:36:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    28:28:java.lang.reflect.Constructor getConstructor(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.Class[]) -> CweS
    4:4:java.lang.Object instantiateObject(java.lang.Class,java.lang.Object[]) -> CweS
    23:23:java.lang.Object instantiateObject(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.Object[]) -> CweS
    10:34:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    22:22:java.lang.reflect.Method getMethod(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Class[]) -> CweS
    6:6:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    16:16:java.lang.Object invokeMethod(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Object[]) -> CweS
    25:25:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Object[]) -> CweS
    3:31:java.lang.reflect.Field getField(java.lang.Class,boolean,java.lang.String) -> CweS
    14:14:java.lang.reflect.Field getField(java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> CweS
    7:7:java.lang.Object getValue(java.lang.Object,java.lang.Class,boolean,java.lang.String) -> CweS
    17:17:java.lang.Object getValue(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> CweS
    32:32:java.lang.Object getValue(java.lang.Object,boolean,java.lang.String) -> CweS
    8:21:void setValue(java.lang.Object,java.lang.Class,boolean,java.lang.String,java.lang.Object) -> CweS
    11:15:void setValue(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String,java.lang.Object) -> CweS
    1:5:void setValue(java.lang.Object,boolean,java.lang.String,java.lang.Object) -> CweS
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.ReflectionUtils$DataType -> UtSk$CweS:
    surge.util.ReflectionUtils$DataType BYTE -> Lrjw
    surge.util.ReflectionUtils$DataType SHORT -> bsJm
    surge.util.ReflectionUtils$DataType INTEGER -> oyPN
    surge.util.ReflectionUtils$DataType LONG -> Cpap
    surge.util.ReflectionUtils$DataType CHARACTER -> AGur
    surge.util.ReflectionUtils$DataType FLOAT -> fwFd
    surge.util.ReflectionUtils$DataType DOUBLE -> jPLw
    surge.util.ReflectionUtils$DataType BOOLEAN -> ceJt
    java.util.Map a -> a
    java.lang.Class b -> b
    java.lang.Class c -> gyJI
    surge.util.ReflectionUtils$DataType[] d -> oglk
    1:53:void <clinit>() -> <clinit>
    15:42:void <init>(java.lang.String,int,java.lang.Class,java.lang.Class) -> <init>
    47:47:java.lang.Class getPrimitive() -> BuQs
    27:27:java.lang.Class getReference() -> fvHT
    5:5:surge.util.ReflectionUtils$DataType fromClass(java.lang.Class) -> NxEh
    26:29:java.lang.Class getPrimitive(java.lang.Class) -> MdAW
    6:24:java.lang.Class getReference(java.lang.Class) -> jqEV
    8:54:java.lang.Class[] getPrimitive(java.lang.Class[]) -> CweS
    3:48:java.lang.Class[] getReference(java.lang.Class[]) -> NxEh
    9:49:java.lang.Class[] getPrimitive(java.lang.Object[]) -> NxEh
    4:39:java.lang.Class[] getReference(java.lang.Object[]) -> MdAW
    7:51:boolean compare(java.lang.Class[],java.lang.Class[]) -> CweS
    43:43:surge.util.ReflectionUtils$DataType[] values() -> values
    45:45:surge.util.ReflectionUtils$DataType valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.ReflectionUtils$PackageType -> UtSk$NxEh:
    surge.util.ReflectionUtils$PackageType MINECRAFT_SERVER -> YEkL
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT -> rXEO
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_BLOCK -> fnUD
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CHUNKIO -> agTu
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_COMMAND -> VVSx
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CONVERSATIONS -> vuRk
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENCHANTMENS -> ghfE
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENTITY -> qvdD
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_EVENT -> qwDb
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_GENERATOR -> briS
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_HELP -> JJaW
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_INVENTORY -> PnVH
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_MAP -> inlN
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_METADATA -> hlIk
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_POTION -> vcob
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_PROJECTILES -> jaOA
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCHEDULER -> OkSS
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCOREBOARD -> iTyY
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UPDATER -> jaOC
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UTIL -> aMcN
    java.lang.String a -> a
    surge.util.ReflectionUtils$PackageType[] b -> nvLS
    6:9:void <clinit>() -> <clinit>
    4:11:void <init>(java.lang.String,int,java.lang.String) -> <init>
    1:5:void <init>(java.lang.String,int,surge.util.ReflectionUtils$PackageType,java.lang.String) -> <init>
    13:13:java.lang.String getPath() -> getPath
    10:10:java.lang.Class getClass(java.lang.String) -> getClass
    2:2:java.lang.String toString() -> toString
    12:12:java.lang.String getServerVersion() -> getServerVersion
    7:7:surge.util.ReflectionUtils$PackageType[] values() -> values
    3:3:surge.util.ReflectionUtils$PackageType valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.Refreshable -> VoET:
    void refresh() -> refresh
surge.util.SQLOperation -> ofjd:
    surge.util.SQLOperation LOAD -> HLlF
    surge.util.SQLOperation SAVE -> jPOy
    surge.util.SQLOperation[] a -> majM
    1:4:void <clinit>() -> <clinit>
    5:5:void <init>(java.lang.String,int) -> <init>
    2:2:surge.util.SQLOperation[] values() -> values
    3:3:surge.util.SQLOperation valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.ServerState -> PJnw:
    surge.util.ServerState START -> ebcP
    surge.util.ServerState ENABLE -> XTLq
    surge.util.ServerState DISABLE -> QNwi
    surge.util.ServerState STOP -> pjrp
    surge.util.ServerState RUNNING -> sklO
    surge.util.ServerState[] a -> JArg
    1:14:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
    13:13:surge.util.ServerState[] values() -> values
    2:2:surge.util.ServerState valueOf(java.lang.String) -> valueOf
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.Shape -> BuMr:
    org.bukkit.Location a -> opDI
    org.bukkit.util.Vector b -> DcDT
    org.bukkit.util.Vector c -> KMgQ
    2:23:void <init>(org.bukkit.Location,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    20:24:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    5:17:void <init>(org.bukkit.Location) -> <init>
    1:21:boolean isWithinShape(org.bukkit.Location) -> fuXt
    3:15:org.bukkit.Location randomLocation() -> PuhK
    19:19:org.bukkit.Location randomSurface() -> Euhg
    7:7:org.bukkit.Location getCenter() -> getCenter
    22:22:org.bukkit.Location getLocation() -> getLocation
    13:13:org.bukkit.util.Vector getOffset() -> BSOO
    9:9:org.bukkit.util.Vector getSize() -> OQCX
surge.util.SnowLevel -> maFM:
    byte a -> ejsN
    1:8:void <init>(byte) -> <init>
    2:10:byte getLevel() -> BuRK
    4:5:void setLevel(byte) -> MdAW
surge.util.T -> VfSd:
    1:6:void <init>() -> <init>
    void onStop(long,double) -> CweS
    2:5:void stop() -> stop
surge.util.TXT -> rhDm:
    java.lang.String a -> a
    4:4:void <init>() -> <init>
    6:6:java.lang.String repeat(java.lang.String,int) -> repeat
    1:18:surge.collection.GList wrap(java.lang.String,int) -> GkAI
    12:12:java.lang.String makeTag(surge.util.C,surge.util.C,surge.util.C,surge.util.C,java.lang.String) -> CweS
    10:10:java.lang.String makeTag(surge.util.C,surge.util.C,surge.util.C,java.lang.String) -> CweS
    2:2:java.lang.String line(surge.util.C,int) -> CweS
    5:5:java.lang.String underline(surge.util.C,int) -> NxEh
    7:17:java.lang.String getLine(surge.util.C,int,double,java.lang.String,java.lang.String,java.lang.String) -> CweS
    void <clinit>() -> <clinit>
    char[] a(java.lang.String) -> CweS
    java.lang.String a(char[]) -> CweS
surge.util.Tag -> LPFJ:
    java.lang.String value() -> value
surge.util.Timer -> PKQD:
    long a -> a
    long b -> b
    3:11:void <init>() -> <init>
    1:4:void start() -> start
    2:8:void stop() -> stop
    9:9:long getTime() -> getTime
    10:10:long getLastRun() -> VfXX
surge.util.VectorMath -> wUPm:
    int[] a -> a
    int[] b -> nmKM
    43:43:void <init>() -> <init>
    81:179:org.bukkit.util.Vector scaleStatic(surge.util.Axis,org.bukkit.util.Vector,double) -> CweS
    83:184:org.bukkit.util.Vector scaleX(org.bukkit.util.Vector,double) -> CweS
    19:215:org.bukkit.util.Vector scaleY(org.bukkit.util.Vector,double) -> NxEh
    17:159:org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector,double) -> MdAW
    21:207:org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) -> CweS
    128:178:boolean isLookingNear(org.bukkit.Location,org.bukkit.Location,double) -> NxEh
    100:100:org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) -> NxEh
    168:168:org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) -> MdAW
    61:61:org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) -> jqEV
    196:196:org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) -> xGHv
    12:12:org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) -> GkAI
    199:199:org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) -> ftyJ
    66:66:double a(double,int) -> xGHv
    32:182:org.bukkit.util.Vector clip(org.bukkit.util.Vector,int) -> CweS
    24:190:org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector,org.bukkit.util.Vector,double) -> CweS
    1:220:surge.collection.GList split(org.bukkit.block.BlockFace) -> CweS
    198:198:org.bukkit.util.Vector direction(org.bukkit.Location,org.bukkit.Location) -> MdAW
    2:2:org.bukkit.util.Vector directionNoNormal(org.bukkit.Location,org.bukkit.Location) -> jqEV
    71:71:org.bukkit.util.Vector toVector(float,float) -> CweS
    44:107:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> CweS
    109:210:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector,double) -> CweS
    39:183:org.bukkit.util.Vector reverse(org.bukkit.util.Vector) -> BlQU
    95:217:double getSpeed(org.bukkit.util.Vector) -> IqFu
    14:158:surge.collection.GList shift(org.bukkit.util.Vector,surge.collection.GList) -> CweS
    9:218:org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) -> sQKP
    10:219:org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector,float) -> CweS
    5:222:org.bukkit.util.Vector angleRight(org.bukkit.util.Vector,float) -> NxEh
    22:214:org.bukkit.util.Vector angleUp(org.bukkit.util.Vector,float) -> MdAW
    6:221:org.bukkit.util.Vector angleDown(org.bukkit.util.Vector,float) -> jqEV
    15:212:org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) -> fuXt
    33:33:int[] a() -> CwgL
    114:114:int[] b() -> b
surge.util.VectorMath$1 -> wUPm$1:
    org.bukkit.util.Vector val$vector -> sJHv
    1:3:void <init>(org.bukkit.util.Vector) -> <init>
    4:4:org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) -> PSXO
    2:2:java.lang.Object onAdapt(java.lang.Object) -> FpMI
surge.util.W -> jqOD:
    111:111:void <init>() -> <init>
    74:136:boolean visible(org.bukkit.block.Block) -> MdAW
    89:121:void colorArmor(org.bukkit.inventory.ItemStack,org.bukkit.Color) -> CweS
    12:158:org.bukkit.entity.Entity getEntity(int) -> KTic
    16:107:int count(org.bukkit.entity.Player,surge.util.MaterialBlock) -> CweS
    9:9:boolean has(org.bukkit.entity.Player,surge.util.MaterialBlock,int) -> CweS
    29:29:int getChunkX(org.bukkit.block.Block) -> jqEV
    157:157:int getChunkY(org.bukkit.block.Block) -> xGHv
    24:153:void dropXp(org.bukkit.Location,int) -> NxEh
    94:94:int getChunkZ(org.bukkit.block.Block) -> GkAI
    1:150:void take(org.bukkit.entity.Player,surge.util.MaterialBlock,int) -> NxEh
    41:148:int getManhattanDistance(org.bukkit.Location,org.bukkit.Location,boolean) -> CweS
    40:134:surge.collection.GList news(org.bukkit.Location) -> PSXO
    54:160:int getManhattanDistance(org.bukkit.block.Block,org.bukkit.block.Block,boolean) -> CweS
    34:34:surge.collection.GList getBlocks(org.bukkit.Chunk) -> xGHv
    25:25:org.bukkit.World getSyncWorld(org.bukkit.World) -> jqEV
    46:46:org.bukkit.World toSync(org.bukkit.World) -> xGHv
    151:151:org.bukkit.block.Block toSync(org.bukkit.block.Block) -> ftyJ
    84:84:org.bukkit.Location toSync(org.bukkit.Location) -> ThSf
    80:80:org.bukkit.Chunk toSync(org.bukkit.Chunk) -> GkAI
    4:162:surge.util.MaterialBlock getMaterialBlock(java.lang.String) -> MBAr
    10:138:org.bukkit.block.Block[] getRelative(org.bukkit.block.Block,org.bukkit.block.BlockFace[]) -> CweS
    87:149:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData) -> CweS
    14:86:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData,boolean) -> CweS
    22:116:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int) -> CweS
    32:101:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int,boolean) -> CweS
    2:57:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData) -> CweS
    37:93:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData,boolean) -> CweS
    5:131:int getHighestPotionLevel(org.bukkit.potion.PotionEffectType,java.util.Collection) -> CweS
    44:163:surge.collection.GList chunkFaces(org.bukkit.Chunk) -> ftyJ
    3:79:surge.collection.GList blockFaces(org.bukkit.block.Block) -> BlQU
    43:159:org.bukkit.Location simulateFall(org.bukkit.Location) -> PuXs
    26:132:surge.collection.GList chunkRadius(org.bukkit.Chunk,int) -> jqEV
    19:106:surge.collection.GList blockRadius(org.bukkit.block.Block,int) -> CweS
    6:161:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Entity,double,double) -> CweS
    58:155:boolean isLookingAt(org.bukkit.entity.Entity,org.bukkit.entity.Entity,double,double) -> CweS
    139:139:double differenceOfVectors(org.bukkit.util.Vector,org.bukkit.util.Vector) -> CweS
surge.util.W$1 -> jqOD$1:
    java.lang.Double val$doff -> cKUY
    org.bukkit.entity.Entity val$e -> fnVo
    org.bukkit.entity.Entity[] val$result -> Kwsm
    1:1:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Entity,org.bukkit.entity.Entity[]) -> <init>
    2:9:void onTrace(org.bukkit.Location) -> IqFu
surge.util.Worlds -> KURu:
    3:3:void <init>() -> <init>
    1:1:surge.collection.GList getWorlds() -> miYh
    2:2:boolean hasWorld(java.lang.String) -> kYyA
    4:4:org.bukkit.World getWorld(java.lang.String) -> getWorld
surge.util.a -> uqMW:
    int k -> k
    java.lang.String a -> a
    java.lang.String j -> OHUB
    java.security.MessageDigest b -> lNFE
    java.util.HashMap c -> VDvD
    java.util.HashMap d -> WQJm
    boolean e -> e
    java.lang.String f -> f
    java.util.HashMap g -> dEme
    java.util.HashMap h -> LbMS
    java.lang.String x -> GIkd
    java.io.PrintWriter writer -> oVnU
    java.lang.String[] i -> PvDN
    java.lang.String[] l -> IPRh
    20:20:void <init>() -> <init>
    107:107:void a(java.util.HashMap) -> CweS
    112:112:void b(java.util.HashMap) -> NxEh
    117:117:void c(java.util.HashMap) -> MdAW
    122:122:void d(java.util.HashMap) -> jqEV
    127:127:void e(java.util.HashMap) -> xGHv
    132:132:void f(java.util.HashMap) -> GkAI
    137:137:void g(java.util.HashMap) -> ftyJ
    142:142:void h(java.util.HashMap) -> BlQU
    147:147:void i(java.util.HashMap) -> IqFu
    152:152:void j(java.util.HashMap) -> sQKP
    157:157:void k(java.util.HashMap) -> fuXt
    163:177:void a(java.util.HashMap,java.lang.String) -> CweS
    186:235:java.lang.String a(java.lang.String) -> a
    254:297:java.lang.String b(java.lang.String,java.lang.Class,java.lang.Class[]) -> CweS
    308:342:java.lang.String c(java.lang.Class,java.lang.String) -> NxEh
    362:420:java.lang.String b(java.lang.String) -> b
    429:478:java.lang.String a(java.lang.String,java.lang.String) -> a
    485:495:java.lang.String a(java.lang.Class,java.lang.String) -> MdAW
    502:506:java.lang.String a(java.lang.Class) -> xGHv
    514:525:java.util.ArrayList b(java.lang.Class) -> GkAI
    532:547:void b(java.lang.Class,java.util.ArrayList,java.util.HashMap) -> CweS
    553:553:java.lang.String c(java.lang.Class) -> ftyJ
    21:102:void <clinit>() -> <clinit>
    java.lang.String a(int,int) -> xGHv
surge.util.package-info -> nRec:
