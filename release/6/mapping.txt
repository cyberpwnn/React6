react.Base -> OYFA:
    8:8:void <init>() -> <init>
    12:13:void msg(org.bukkit.command.CommandSender,java.lang.String) -> OYFA
react.CrackerChecker -> rNIA:
    java.lang.String uid -> OYFA
    5:5:void <init>() -> <init>
    11:11:boolean isCracked() -> OYFA
    16:20:void doCheck() -> rNIA
react.Info -> OOry:
    java.lang.String CORE_REACT_DOT -> rNIA
    java.lang.String CORE_NAME -> OOry
    java.lang.String CORE_CACHE -> NVCA
    java.lang.String CORE_DOTYML -> xFgl
    java.lang.String COMMAND_ACT_DESCRIPTION -> DqwT
    java.lang.String COMMAND_ACT -> LWko
    java.lang.String COMMAND_ACT_ALIAS_1 -> fJdc
    java.lang.String COMMAND_ACT_ALIAS_2 -> fRuL
    java.lang.String COMMAND_ACT_USAGE -> mFhm
    java.lang.String COMMAND_HELP_DESCRIPTION -> wKty
    java.lang.String COMMAND_HELP -> dLpA
    java.lang.String COMMAND_HELP_ALIAS_1 -> pHAu
    java.lang.String COMMAND_HELP_ALIAS_2 -> JkXv
    java.lang.String COMMAND_HELP_USAGE -> mXJm
    java.lang.String COMMAND_MONITOR_DESCRIPTION -> mNxf
    java.lang.String COMMAND_MONITOR -> lLWC
    java.lang.String COMMAND_MONITOR_ALIAS_1 -> wTep
    java.lang.String COMMAND_MONITOR_ALIAS_2 -> Whkc
    java.lang.String COMMAND_MONITOR_USAGE -> WGId
    java.lang.String COMMAND_REACT -> aKts
    java.lang.String MSG_PERMISSION -> UADF
    java.lang.String MSG_MONITORING_STARTED -> vABV
    java.lang.String MSG_MONITORING_STOPPED -> UQdR
    java.lang.String NAME_TICK -> PcwO
    java.lang.String NAME_MEMORY -> QpLd
    java.lang.String NAME_CHUNKS -> rpIo
    java.lang.String NAME_ENTITIES -> SurD
    java.lang.String STATE_MONITORING_TAB -> JYvB
    java.lang.String STATE_MONITORING_ENABLED -> gNHJ
    java.lang.String STATE_MAPPING_ENABLED -> wmvm
    java.lang.String STATE_SOUND_PLAYS -> sPht
    java.lang.String STATE_MONITORING_POSTED -> lKuB
    java.lang.String STATE_MONITORING_LASTTAB -> haka
    java.lang.String STATE_MONITORING_SWITCHNOTIFICATION -> qAtx
    java.lang.String STATE_PLAYER_HOTBAR -> jguI
    java.lang.String STATE_PLAYER_SHIFT -> ylQW
    java.lang.String STATE_PLAYER_SCROLL -> CxGx
    java.lang.String STATE_PLAYER_HEIGHT_CURRENT -> ieSM
    java.lang.String STATE_PLAYER_HEIGHT_CHANGING -> YfdY
    java.lang.String PERM_ACCESS -> kYwD
    java.lang.String PERM_MONITOR -> SnDu
    java.lang.String PERM_MONITOR_TITLE -> OGeX
    java.lang.String PERM_MONITOR_MAP -> SdsK
    java.lang.String PERM_MONITOR_ENVIRONMENT -> lmyx
    java.lang.String PERM_ACT -> IgwJ
    java.lang.String PERM_RELOAD -> hsQK
    java.lang.String SAMPLER_TPS -> qmIo
    java.lang.String SAMPLER_TICK -> BdCG
    java.lang.String SAMPLER_TIU -> qlhv
    java.lang.String SAMPLER_MEM -> xWjv
    java.lang.String SAMPLER_FREEMEM -> CUbr
    java.lang.String SAMPLER_MAXMEM -> OHFh
    java.lang.String SAMPLER_ALLOCMEM -> IhWu
    java.lang.String SAMPLER_MAHS -> sbOJ
    java.lang.String SAMPLER_CHK -> aTiC
    java.lang.String SAMPLER_CHKS -> Xkpe
    java.lang.String SAMPLER_ENT -> FNKe
    java.lang.String SAMPLER_ENTLIV -> PAvF
    java.lang.String SAMPLER_ENTDROP -> XInJ
    java.lang.String SAMPLER_ENTTILE -> YweV
    java.lang.String[] ACTION_PURGE_ENTITIES_TAGS -> ooTG
    java.lang.String ACTION_PURGE_ENTITIES_STATUS -> ePSk
    java.lang.String ACTION_PURGE_ENTITIES_NAME -> nuBW
    java.lang.String ACTION_PURGE_ENTITIES_DESCRIPTION -> OPUj
    5:5:void <init>() -> <init>
    7:95:void <clinit>() -> <clinit>
react.React -> NVCA:
    react.React instance -> Pcxu
    react.controller.SampleController sampleController -> rUwt
    react.controller.PlayerController playerController -> BlSl
    react.controller.MonitorController monitorController -> XJOQ
    react.controller.CommandController commandController -> aCgX
    react.controller.ActionController actionController -> bXLh
    17:17:void <init>() -> <init>
    42:49:void enable() -> enable
    55:55:void disable() -> disable
react.action.ActionPurgeEntities -> xFgl:
    long ms -> biPx
    int lcd -> xWnC
    34:62:void <init>() -> <init>
    67:154:void enact(react.api.IActionSource,react.api.ISelector[]) -> OYFA
    158:201:void purge(org.bukkit.Chunk,java.lang.Runnable,react.api.IActionSource,react.api.ISelector[]) -> OYFA
    205:206:void helloWorld() -> OOry
    27:27:long access$002(react.action.ActionPurgeEntities,long) -> OYFA
    27:27:int access$100(react.action.ActionPurgeEntities) -> OYFA
    27:27:long access$000(react.action.ActionPurgeEntities) -> rNIA
    27:27:int access$102(react.action.ActionPurgeEntities,int) -> OYFA
react.action.ActionPurgeEntities$1 -> xFgl$1:
    react.action.ActionPurgeEntities this$0 -> CoXo
    39:39:void <init>(react.action.ActionPurgeEntities) -> <init>
    43:46:react.api.ISelector get() -> NVCA
    39:39:java.lang.Object get() -> get
react.action.ActionPurgeEntities$2 -> xFgl$2:
    react.action.ActionPurgeEntities this$0 -> CoXo
    51:51:void <init>(react.action.ActionPurgeEntities) -> <init>
    55:59:react.api.ISelector get() -> NVCA
    51:51:java.lang.Object get() -> get
react.action.ActionPurgeEntities$3 -> xFgl$3:
    surge.util.FinalInteger val$completed -> KUNK
    surge.util.FinalInteger val$total -> XSBh
    surge.util.FinalInteger val$totalCulled -> mGNL
    surge.util.FinalInteger val$totalChunked -> iCQt
    react.api.IActionSource val$source -> GkEQ
    react.action.ActionPurgeEntities this$0 -> CoXo
    108:108:void <init>(react.action.ActionPurgeEntities,surge.util.FinalInteger,surge.util.FinalInteger,surge.util.FinalInteger,surge.util.FinalInteger,react.api.IActionSource) -> <init>
    112:132:void run() -> run
react.action.ActionPurgeEntities$4 -> xFgl$4:
    react.api.IActionSource val$source -> GkEQ
    surge.util.FinalInteger val$totalCulled -> mGNL
    surge.util.FinalInteger val$totalChunked -> iCQt
    react.action.ActionPurgeEntities this$0 -> CoXo
    140:140:void <init>(react.action.ActionPurgeEntities,java.lang.String,int,react.api.IActionSource,surge.util.FinalInteger,surge.util.FinalInteger) -> <init>
    145:151:void run() -> run
react.action.ActionPurgeEntities$5 -> xFgl$5:
    org.bukkit.entity.Entity val$i -> XBBP
    surge.util.FinalInteger val$cu -> rMkW
    int val$k -> Gjcs
    org.bukkit.Chunk val$chunk -> OYIp
    java.lang.Runnable val$cb -> ronS
    react.action.ActionPurgeEntities this$0 -> CoXo
    180:180:void <init>(react.action.ActionPurgeEntities,org.bukkit.entity.Entity,surge.util.FinalInteger,int,org.bukkit.Chunk,java.lang.Runnable) -> <init>
    184:192:void run() -> run
react.api.Action -> DqwT:
    java.lang.String name -> name
    java.lang.String description -> description
    java.lang.String status -> QpQc
    java.lang.String[] nodes -> kbhv
    react.api.ActionHandle handle -> jhWb
    react.api.ActionState state -> skAx
    react.api.ActionTargetType target -> HBsS
    react.api.ActionType type -> vbhh
    react.api.IActionSource currentSource -> yJPC
    double progress -> qBXR
    surge.collection.GMap defaultSelectors -> oDbD
    23:24:void <init>(react.api.ActionType) -> <init>
    27:39:void <init>(java.lang.String,java.lang.String,react.api.ActionHandle,react.api.ActionTargetType,react.api.ActionType) -> <init>
    44:59:react.api.ISelector[] biselect(react.api.ISelector[]) -> OYFA
    65:66:void setDefaultSelector(java.lang.Class,surge.util.Callback) -> OYFA
    71:71:java.lang.String getName() -> getName
    77:77:java.lang.String getDescription() -> getDescription
    83:83:react.api.ActionHandle getHandleType() -> xFgl
    89:89:react.api.ActionState getState() -> DqwT
    95:95:java.lang.String getStatus() -> getStatus
    101:102:void setStatus(java.lang.String) -> OYFA
    107:107:double getProgress() -> getProgress
    113:114:void setProgress(double) -> setProgress
    119:119:react.api.ActionTargetType getTarget() -> LWko
    125:125:react.api.ActionType getType() -> fJdc
    131:131:surge.collection.GMap getDefaultSelectors() -> fRuL
    137:146:void act(react.api.IActionSource,react.api.ISelector[]) -> rNIA
    151:152:void completeAction() -> mFhm
    157:157:react.api.IActionSource getCurrentSource() -> wKty
    163:163:java.lang.String[] getNodes() -> dLpA
    169:170:void setNodes(java.lang.String[]) -> OYFA
    void enact(react.api.IActionSource,react.api.ISelector[]) -> OYFA
react.api.ActionAlreadyRunningException -> LWko:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
react.api.ActionException -> fJdc:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
react.api.ActionHandle -> fRuL:
    react.api.ActionHandle AUTOMATIC -> vHuV
    react.api.ActionHandle MANUAL -> sPnM
    react.api.ActionHandle MUTEX -> Ellr
    react.api.ActionHandle[] $VALUES -> SCQl
    3:3:react.api.ActionHandle[] values() -> values
    3:3:react.api.ActionHandle valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:7:void <clinit>() -> <clinit>
react.api.ActionNotRunningException -> mFhm:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
react.api.ActionState -> wKty:
    react.api.ActionState IDLE -> GsSv
    react.api.ActionState RUNNING -> UAHF
    react.api.ActionState[] $VALUES -> RQPY
    3:3:react.api.ActionState[] values() -> values
    3:3:react.api.ActionState valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
react.api.ActionTargetType -> dLpA:
    react.api.ActionTargetType POSITIONAL -> cdBa
    react.api.ActionTargetType SYSTEM -> Nwgh
    react.api.ActionTargetType[] $VALUES -> cJOi
    3:3:react.api.ActionTargetType[] values() -> values
    3:3:react.api.ActionTargetType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
react.api.ActionType -> pHAu:
    react.api.ActionType PURGE_ENTITIES -> tTQR
    java.lang.String name -> name
    java.lang.String description -> description
    react.api.ActionHandle handle -> jhWb
    react.api.ActionTargetType target -> HBsS
    react.api.ActionType[] $VALUES -> lKyE
    5:5:react.api.ActionType[] values() -> values
    5:5:react.api.ActionType valueOf(java.lang.String) -> valueOf
    15:20:void <init>(java.lang.String,int,react.api.ActionHandle,react.api.ActionTargetType,java.lang.String,java.lang.String) -> <init>
    24:24:java.lang.String getName() -> getName
    29:29:java.lang.String getDescription() -> getDescription
    34:34:react.api.ActionHandle getHandle() -> pHAu
    39:39:react.api.ActionTargetType getTarget() -> LWko
    5:7:void <clinit>() -> <clinit>
react.api.CommandSenderActionSource -> JkXv:
    org.bukkit.command.CommandSender sender -> sender
    12:14:void <init>(org.bukkit.command.CommandSender) -> <init>
    18:18:org.bukkit.command.CommandSender getSender() -> getSender
    24:25:void sendResponse(java.lang.String) -> rNIA
react.api.ConsoleActionSource -> mXJm:
    7:7:void <init>() -> <init>
    12:13:void sendResponse(java.lang.String) -> rNIA
react.api.Gate -> mNxf:
    5:5:void <init>() -> <init>
    9:10:void removeEntity(org.bukkit.entity.Entity) -> OYFA
react.api.IAction -> lLWC:
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    react.api.ActionHandle getHandleType() -> xFgl
    void act(react.api.IActionSource,react.api.ISelector[]) -> rNIA
    void enact(react.api.IActionSource,react.api.ISelector[]) -> OYFA
    react.api.ActionState getState() -> DqwT
    react.api.ActionTargetType getTarget() -> LWko
    void setNodes(java.lang.String[]) -> OYFA
    java.lang.String[] getNodes() -> dLpA
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> OYFA
    double getProgress() -> getProgress
    void setProgress(double) -> setProgress
    react.api.ActionType getType() -> fJdc
    surge.collection.GMap getDefaultSelectors() -> fRuL
    void setDefaultSelector(java.lang.Class,surge.util.Callback) -> OYFA
    react.api.ISelector[] biselect(react.api.ISelector[]) -> OYFA
    react.api.IActionSource getCurrentSource() -> wKty
    void completeAction() -> mFhm
react.api.IActionSource -> wTep:
    void sendResponse(java.lang.String) -> rNIA
react.api.ICommand -> Whkc:
    java.lang.String getCommand() -> getCommand
    java.lang.String[] getAliases() -> JkXv
    java.lang.String[] getPermissions() -> mXJm
    java.lang.String getUsage() -> getUsage
    java.lang.String getDescription() -> getDescription
    react.api.SideGate getSideGate() -> mNxf
    void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> OYFA
react.api.ISampler -> WGId:
    java.lang.String getID() -> getID
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    void setID(java.lang.String) -> setID
    void setName(java.lang.String) -> setName
    void setDescription(java.lang.String) -> setDescription
    surge.util.C getColor() -> lLWC
    surge.util.C getAltColor() -> wTep
    void setColor(surge.util.C,surge.util.C) -> OYFA
    int getInterval() -> getInterval
    void setInterval(int) -> OYFA
    void sample() -> Whkc
    java.lang.String get() -> get
    void construct() -> WGId
    void setValue(double) -> setValue
    double getValue() -> getValue
react.api.ISelector -> aKts:
    react.api.SelectionMode getMode() -> aKts
    java.lang.Class getType() -> getType
    boolean can(java.lang.Object) -> OYFA
    surge.collection.GSet getList() -> UADF
    surge.collection.GSet getPossibilities() -> vABV
    int parse(org.bukkit.command.CommandSender,java.lang.String) -> rNIA
    java.lang.String getName() -> getName
react.api.Lang -> UADF:
    java.lang.String value() -> value
react.api.MSampler -> vABV:
    6:6:void <init>() -> <init>
    10:10:surge.server.SuperSampler ss() -> UQdR
react.api.MonitorHeading -> UQdR:
    react.api.ISampler head -> jWTr
    surge.collection.GList children -> Tgwa
    java.lang.String name -> name
    13:17:void <init>(java.lang.String,react.api.ISampler) -> <init>
    21:22:void addSampler(react.api.ISampler) -> OYFA
    26:26:react.api.ISampler getHead() -> PcwO
    31:32:void setHead(react.api.ISampler) -> rNIA
    36:36:surge.collection.GList getChildren() -> QpLd
    41:41:java.lang.String getHeadText() -> rpIo
    46:59:java.lang.String getChildText() -> SurD
    64:64:java.lang.String getName() -> getName
    69:70:void setName(java.lang.String) -> setName
    74:75:void setChildren(surge.collection.GList) -> OYFA
react.api.Permissable -> PcwO:
    react.api.Permissable ACCESS -> Ynuq
    react.api.Permissable MONITOR -> vjxN
    react.api.Permissable MONITOR_TITLE -> Huvh
    react.api.Permissable MONITOR_MAP -> wfKd
    react.api.Permissable MONITOR_ENVIRONMENT -> iBsJ
    react.api.Permissable ACT -> rMnG
    react.api.Permissable RELOAD -> lwPu
    java.lang.String node -> fKKr
    react.api.Permissable[] $VALUES -> dgIP
    7:7:react.api.Permissable[] values() -> values
    7:7:react.api.Permissable valueOf(java.lang.String) -> valueOf
    20:30:void <init>(java.lang.String,int,java.lang.String) -> <init>
    34:34:boolean has(org.bukkit.command.CommandSender) -> OYFA
    39:39:java.lang.String getNode() -> JYvB
    7:15:void <clinit>() -> <clinit>
react.api.PlayerActionSource -> QpLd:
    org.bukkit.entity.Player p -> Plns
    12:14:void <init>(org.bukkit.entity.Player) -> <init>
    18:18:org.bukkit.entity.Player getPlayer() -> getPlayer
    24:25:void sendResponse(java.lang.String) -> rNIA
react.api.ReactActionSource -> rpIo:
    3:3:void <init>() -> <init>
    9:9:void sendResponse(java.lang.String) -> rNIA
react.api.ReactCommand -> SurD:
    java.lang.String command -> command
    java.lang.String[] aliases -> aliases
    java.lang.String[] permissions -> WFpD
    java.lang.String usage -> tLDe
    java.lang.String description -> description
    react.api.SideGate sideGate -> rpRL
    13:15:void <init>() -> <init>
    20:20:java.lang.String getCommand() -> getCommand
    26:26:java.lang.String[] getAliases() -> JkXv
    32:32:java.lang.String[] getPermissions() -> mXJm
    38:38:java.lang.String getUsage() -> getUsage
    44:44:java.lang.String getDescription() -> getDescription
    50:50:react.api.SideGate getSideGate() -> mNxf
react.api.ReactException -> JYvB:
    long serialVersionUID -> serialVersionUID
    7:8:void <init>(java.lang.String) -> <init>
    11:13:void <init>() -> <init>
react.api.ReactPlayer -> gNHJ:
    surge.collection.GMap keystore -> clWK
    boolean monitoring -> monitoring
    boolean mapping -> pOvw
    int monitorSelection -> LOau
    int plays -> Sdvw
    boolean monitorPosted -> AFpQ
    int monitorLastSelection -> YLvU
    int switchNotification -> TEwb
    int hotbarSlot -> EvBo
    boolean shift -> DXiu
    int scroll -> hjbq
    double lastHeight -> nIqG
    boolean heightMovement -> Rrss
    org.bukkit.entity.Player p -> Plns
    38:80:void <init>(org.bukkit.entity.Player) -> <init>
    86:93:void save() -> save
    99:106:void load() -> load
    110:110:boolean isMonitoring() -> gNHJ
    115:115:boolean isMapping() -> wmvm
    120:120:org.bukkit.entity.Player getP() -> sPht
    125:126:void setMonitoring(boolean) -> OYFA
    130:131:void setMapping(boolean) -> rNIA
    135:135:int getMonitorSelection() -> lKuB
    140:141:void setMonitorSelection(int) -> rNIA
    145:145:int getHotbarSlot() -> haka
    150:151:void setHotbarSlot(int) -> OOry
    155:155:boolean isShifting() -> qAtx
    160:161:void setShifting(boolean) -> OOry
    165:165:boolean isShift() -> jguI
    170:171:void setShift(boolean) -> NVCA
    175:175:int getScroll() -> ylQW
    180:181:void setScroll(int) -> NVCA
    185:185:int getMonitorLastSelection() -> CxGx
    190:191:void setMonitorLastSelection(int) -> xFgl
    195:196:void setP(org.bukkit.entity.Player) -> OYFA
    200:200:double getLastHeight() -> ieSM
    205:206:void setLastHeight(double) -> OYFA
    210:210:boolean isHeightMovement() -> YfdY
    215:216:void setHeightMovement(boolean) -> xFgl
    220:220:int getSwitchNotification() -> kYwD
    225:226:void setSwitchNotification(int) -> DqwT
    230:230:boolean getMonitorPosted() -> SnDu
    235:236:void setMonitorPosted(boolean) -> DqwT
    240:240:int getPlays() -> OGeX
    245:246:void setPlays(int) -> LWko
    23:36:void <clinit>() -> <clinit>
react.api.SampledType -> wmvm:
    react.api.SampledType TPS -> cccj
    react.api.SampledType TICK -> VwPs
    react.api.SampledType TIU -> Ynwi
    react.api.SampledType MEM -> FNPT
    react.api.SampledType FREEMEM -> uVty
    react.api.SampledType MAXMEM -> baCC
    react.api.SampledType ALLOCMEM -> kYyQ
    react.api.SampledType MAHS -> kcKY
    react.api.SampledType CHK -> vtKp
    react.api.SampledType CHKS -> eXiQ
    react.api.SampledType ENT -> aUNU
    react.api.SampledType ENTLIV -> jWVt
    react.api.SampledType ENTDROP -> nuEf
    react.api.SampledType ENTTILE -> UtOC
    java.lang.String node -> fKKr
    react.api.SampledType[] $VALUES -> YnxY
    5:5:react.api.SampledType[] values() -> values
    5:5:react.api.SampledType valueOf(java.lang.String) -> valueOf
    25:35:void <init>(java.lang.String,int,java.lang.String) -> <init>
    39:39:java.lang.String getNode() -> JYvB
    5:20:void <clinit>() -> <clinit>
react.api.Sampler -> sPht:
    double value -> value
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String description -> description
    surge.util.C color -> vcJg
    surge.util.C altColor -> YVHA
    int interval -> SLHU
    17:19:void <init>() -> <init>
    24:24:java.lang.String getID() -> getID
    30:30:java.lang.String getName() -> getName
    36:36:java.lang.String getDescription() -> getDescription
    42:42:surge.util.C getColor() -> lLWC
    48:48:surge.util.C getAltColor() -> wTep
    54:54:int getInterval() -> getInterval
    void sample() -> Whkc
    void construct() -> WGId
    java.lang.String get() -> get
    69:70:void setValue(double) -> setValue
    75:75:double getValue() -> getValue
    81:82:void setID(java.lang.String) -> setID
    87:88:void setName(java.lang.String) -> setName
    93:94:void setDescription(java.lang.String) -> setDescription
    99:101:void setColor(surge.util.C,surge.util.C) -> OYFA
    106:107:void setInterval(int) -> OYFA
react.api.SelectionException -> lKuB:
    long serialVersionUID -> serialVersionUID
    7:8:void <init>(java.lang.String) -> <init>
react.api.SelectionMode -> haka:
    react.api.SelectionMode WHITELIST -> BRfu
    react.api.SelectionMode BLACKLIST -> tTVh
    react.api.SelectionMode[] $VALUES -> LOdH
    3:3:react.api.SelectionMode[] values() -> values
    3:3:react.api.SelectionMode valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
react.api.Selector -> qAtx:
    java.lang.Class objectType -> qKNF
    react.api.SelectionMode mode -> skGL
    surge.collection.GSet list -> lnay
    surge.collection.GSet possibilities -> owkb
    int popoff -> JANE
    16:21:void <init>(java.lang.Class,react.api.SelectionMode) -> <init>
    26:26:react.api.SelectionMode getMode() -> aKts
    32:32:java.lang.Class getType() -> getType
    38:38:boolean can(java.lang.Object) -> OYFA
    44:44:surge.collection.GSet getList() -> UADF
    50:50:surge.collection.GSet getPossibilities() -> vABV
    int parse(org.bukkit.command.CommandSender,java.lang.String) -> rNIA
    58:89:react.api.ISelector createSelector(org.bukkit.command.CommandSender,java.lang.String) -> OOry
    94:96:int pop() -> pop
    13:13:void <clinit>() -> <clinit>
react.api.SelectorEntityType -> jguI:
    12:18:void <init>(react.api.SelectionMode) -> <init>
    22:23:void add(org.bukkit.entity.EntityType) -> OYFA
    28:61:int parse(org.bukkit.command.CommandSender,java.lang.String) -> rNIA
    66:114:surge.collection.GSet parseNode(org.bukkit.command.CommandSender,java.lang.String) -> NVCA
    120:120:java.lang.String getName() -> getName
react.api.SelectorParseException -> ylQW:
    long serialVersionUID -> serialVersionUID
    7:8:void <init>(java.lang.String) -> <init>
react.api.SelectorPosition -> CxGx:
    16:17:void <init>() -> <init>
    21:22:void add(org.bukkit.Chunk) -> OYFA
    26:27:void add(org.bukkit.Chunk,int) -> OYFA
    31:35:void add(org.bukkit.World) -> OYFA
    39:43:void addAll() -> SdsK
    48:91:int parse(org.bukkit.command.CommandSender,java.lang.String) -> rNIA
    96:277:surge.collection.GSet parseNode(org.bukkit.command.CommandSender,java.lang.String) -> NVCA
    283:283:java.lang.String getName() -> getName
react.api.Side -> ieSM:
    react.api.Side PLAYERS -> imjC
    react.api.Side CONSOLE -> clWn
    java.lang.String ss -> ssWO
    react.api.Side[] $VALUES -> AaFW
    6:6:react.api.Side[] values() -> values
    6:6:react.api.Side valueOf(java.lang.String) -> valueOf
    14:16:void <init>(java.lang.String,int,java.lang.String) -> <init>
    20:20:java.lang.String ss() -> lmyx
    25:30:react.api.Side get(org.bukkit.command.CommandSender) -> rNIA
    6:9:void <clinit>() -> <clinit>
react.api.SideGate -> YfdY:
    react.api.SideGate PLAYERS_ONLY -> LPDl
    react.api.SideGate CONSOLES_ONLY -> hrvM
    react.api.SideGate ANYTHING -> gWBS
    react.api.SideGate[] $VALUES -> UlBE
    3:3:react.api.SideGate[] values() -> values
    3:3:react.api.SideGate valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    11:34:boolean supports(react.api.Side) -> OYFA
    3:7:void <clinit>() -> <clinit>
react.api.SideGate$1 -> YfdY$1:
    int[] $SwitchMap$react$api$SideGate -> KndQ
    13:13:void <clinit>() -> <clinit>
react.api.TitleMonitor -> kYwD:
    surge.collection.GList headings -> mPBf
    12:14:void <init>() -> <init>
    18:19:void addHeading(react.api.MonitorHeading) -> OYFA
    23:23:int getMaxSelection() -> IgwJ
    28:36:int left(int) -> fJdc
    41:49:int right(int) -> fRuL
    54:54:react.api.MonitorHeading getHeadFor(int) -> mFhm
    59:77:java.lang.String getHotbarHeadFor(int,boolean,react.controller.MonitorController,react.api.ReactPlayer,int) -> OYFA
    82:99:java.lang.String getHotbarFor(int,boolean) -> OYFA
react.command.CommandAct -> SnDu:
    29:36:void <init>() -> <init>
    41:130:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> OYFA
react.command.CommandFreeze -> OGeX:
    16:23:void <init>() -> <init>
    28:39:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> OYFA
react.command.CommandHelp -> SdsK:
    15:22:void <init>() -> <init>
    27:28:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> OYFA
react.command.CommandMonitor -> lmyx:
    17:24:void <init>() -> <init>
    29:31:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> OYFA
react.controller.ActionController -> IgwJ:
    surge.collection.GMap actions -> xhro
    12:12:void <init>() -> <init>
    19:58:void start() -> start
    62:62:react.api.IAction getAction(react.api.ActionType) -> OYFA
    67:68:void registerAction(react.api.IAction) -> OYFA
    74:74:void stop() -> stop
    80:80:void tick() -> tick
    84:84:surge.collection.GList getActions() -> hsQK
react.controller.CommandController -> hsQK:
    surge.collection.GList commands -> xyuA
    boolean k -> RjhJ
    25:25:void <init>() -> <init>
    33:34:void start() -> start
    39:40:void stop() -> stop
    44:88:void begin() -> begin
    93:97:void tick() -> tick
    101:102:void msg(org.bukkit.command.CommandSender,java.lang.String) -> OYFA
    106:107:void f(org.bukkit.command.CommandSender,java.lang.String) -> xFgl
    112:196:boolean onCommand(org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String,java.lang.String[]) -> onCommand
react.controller.MonitorController -> qmIo:
    int maxCooldown -> rxcf
    react.api.TitleMonitor titleMonitor -> OYMJ
    surge.collection.GMap posts -> vAIs
    36:39:void <init>() -> <init>
    44:55:void start() -> start
    59:75:void toggleMonitoring(org.bukkit.entity.Player) -> rNIA
    80:82:void stop() -> stop
    86:105:void constructMonitor() -> qmIo
    109:114:float calcVolume(react.api.ReactPlayer) -> OYFA
    119:119:boolean canMonitor(org.bukkit.entity.Player) -> OOry
    124:129:boolean isMonitoring(org.bukkit.entity.Player) -> NVCA
    134:138:void startMonitoring(org.bukkit.entity.Player) -> xFgl
    142:153:void stopMonitoring(org.bukkit.entity.Player) -> DqwT
    159:159:void tick() -> tick
    163:166:void changePost(react.api.ReactPlayer) -> rNIA
    170:179:void processPlayer(react.api.ReactPlayer) -> OOry
    183:207:void handleTriggers(react.api.ReactPlayer) -> NVCA
    211:250:void handleScrolling(react.api.ReactPlayer) -> xFgl
    254:282:void handleShifting(react.api.ReactPlayer) -> DqwT
    286:308:void handlePosting(react.api.ReactPlayer) -> LWko
    312:330:java.lang.String prefixFor(react.api.ReactPlayer,int,int) -> OYFA
    335:349:java.lang.String prefixForSub(react.api.ReactPlayer,surge.util.C,int) -> OYFA
    354:361:void tickMonitor(react.api.ReactPlayer) -> fJdc
    365:365:react.api.TitleMonitor getTitleMonitor() -> BdCG
    371:375:void on(org.bukkit.event.player.PlayerJoinEvent) -> OYFA
    380:389:void on(org.bukkit.event.player.PlayerToggleSneakEvent) -> OYFA
    394:405:void onTick() -> qlhv
    410:410:java.lang.String getTickName() -> xWjv
    31:31:void <clinit>() -> <clinit>
react.controller.PlayerController -> BdCG:
    surge.collection.GList players -> BAfb
    12:12:void <init>() -> <init>
    19:21:void start() -> start
    26:27:void stop() -> stop
    33:33:void tick() -> tick
    37:45:boolean has(org.bukkit.entity.Player) -> LWko
    50:61:react.api.ReactPlayer getPlayer(org.bukkit.entity.Player) -> fJdc
    66:66:surge.collection.GList getPlayers() -> CUbr
    72:77:void on(org.bukkit.event.player.PlayerQuitEvent) -> OYFA
react.controller.SampleController -> qlhv:
    surge.collection.GMap samplers -> vsmb
    surge.server.SuperSampler ss -> INii
    23:27:void <init>() -> <init>
    31:32:void registerSampler(react.api.ISampler) -> OOry
    36:36:react.api.ISampler getSampler(java.lang.String) -> OOry
    41:84:void constructSamplers() -> OHFh
    89:92:void start() -> start
    97:100:void stop() -> stop
    106:106:void tick() -> tick
    110:110:surge.server.SuperSampler getSuperSampler() -> IhWu
    116:132:void onTick() -> qlhv
    137:137:java.lang.String getTickName() -> xWjv
react.sampler.SampleChunksLoaded -> xWjv:
    10:10:void <init>() -> <init>
    15:21:void construct() -> WGId
    26:27:void sample() -> Whkc
    32:32:java.lang.String get() -> get
react.sampler.SampleChunksLoadedPerSecond -> CUbr:
    surge.math.Average a -> gxdK
    11:13:void <init>() -> <init>
    18:24:void construct() -> WGId
    29:31:void sample() -> Whkc
    36:36:java.lang.String get() -> get
react.sampler.SampleEntitiesDrops -> OHFh:
    10:10:void <init>() -> <init>
    15:21:void construct() -> WGId
    26:27:void sample() -> Whkc
    32:32:java.lang.String get() -> get
react.sampler.SampleEntitiesLiving -> IhWu:
    10:10:void <init>() -> <init>
    15:21:void construct() -> WGId
    26:27:void sample() -> Whkc
    32:32:java.lang.String get() -> get
react.sampler.SampleEntitiesTiles -> sbOJ:
    10:10:void <init>() -> <init>
    15:21:void construct() -> WGId
    26:27:void sample() -> Whkc
    32:32:java.lang.String get() -> get
react.sampler.SampleEntitiesTotal -> aTiC:
    10:10:void <init>() -> <init>
    15:21:void construct() -> WGId
    26:27:void sample() -> Whkc
    32:32:java.lang.String get() -> get
react.sampler.SampleMemoryAllocated -> Xkpe:
    10:10:void <init>() -> <init>
    15:21:void construct() -> WGId
    26:27:void sample() -> Whkc
    32:32:java.lang.String get() -> get
react.sampler.SampleMemoryAllocationPerSecond -> FNKe:
    10:10:void <init>() -> <init>
    15:21:void construct() -> WGId
    26:27:void sample() -> Whkc
    32:32:java.lang.String get() -> get
react.sampler.SampleMemoryFree -> PAvF:
    10:10:void <init>() -> <init>
    15:21:void construct() -> WGId
    26:27:void sample() -> Whkc
    32:32:java.lang.String get() -> get
react.sampler.SampleMemoryMax -> XInJ:
    10:10:void <init>() -> <init>
    15:21:void construct() -> WGId
    26:27:void sample() -> Whkc
    32:32:java.lang.String get() -> get
react.sampler.SampleMemoryUse -> YweV:
    10:10:void <init>() -> <init>
    15:21:void construct() -> WGId
    26:27:void sample() -> Whkc
    32:32:java.lang.String get() -> get
react.sampler.SampleTickTime -> ooTG:
    10:10:void <init>() -> <init>
    15:21:void construct() -> WGId
    26:27:void sample() -> Whkc
    32:32:java.lang.String get() -> get
react.sampler.SampleTickUtilization -> ePSk:
    10:10:void <init>() -> <init>
    15:21:void construct() -> WGId
    26:27:void sample() -> Whkc
    32:32:java.lang.String get() -> get
react.sampler.SampleTicksPerSecond -> nuBW:
    11:11:void <init>() -> <init>
    16:22:void construct() -> WGId
    27:28:void sample() -> Whkc
    33:38:java.lang.String get() -> get
surge.Main -> OPUj:
    surge.collection.GList plugins -> STXF
    surge.collection.GMap pluginInstances -> nIsS
    surge.collection.GList controllerSet -> tTUq
    surge.collection.GMap anchors -> pjLl
    28:28:void <init>() -> <init>
    39:39:void onControllerRegistry() -> sbOJ
    46:92:void onStart(surge.util.Protocol) -> OYFA
    99:116:void onStop() -> aTiC
    122:122:void onPostInit() -> Xkpe
    128:128:void onPreInit() -> FNKe
    132:143:void shutDownAmps() -> PAvF
    147:351:void initializeAmps() -> XInJ
    355:393:void scanForAmps() -> YweV
    398:409:void onTick() -> qlhv
surge.PluginAmp -> Pcxu:
    surge.control.AmpedPlugin plugin -> hbTx
    boolean connected -> connected
    int masterTask -> IqNS
    18:21:void <init>(surge.control.AmpedPlugin) -> <init>
    25:25:surge.control.AmpedPlugin getPluginInstance() -> ooTG
    30:30:boolean isConnected() -> isConnected
    35:55:void connect() -> connect
    59:71:void masterTick() -> ePSk
    75:79:void disconnect() -> disconnect
    83:93:int startTask(int,java.lang.Runnable) -> OYFA
    98:108:int startRepeatingTask(int,int,java.lang.Runnable) -> OYFA
    113:114:void stopTask(int) -> wKty
    11:11:void access$000(surge.PluginAmp) -> OYFA
surge.PluginAmp$1 -> Pcxu$1:
    surge.PluginAmp this$0 -> hHaa
    38:38:void <init>(surge.PluginAmp) -> <init>
    42:44:void run() -> run
surge.PluginAmp$2 -> Pcxu$2:
    surge.PluginAmp this$0 -> hHaa
    48:48:void <init>(surge.PluginAmp) -> <init>
    52:53:void run() -> run
surge.Surge -> rUwt:
    surge.PluginAmp amp -> MJVO
    surge.collection.GList tickComponents -> QpTj
    surge.collection.GList atickComponents -> nceV
    surge.sched.TaskManager taskmgr -> AXVJ
    surge.hotload.HotloadManager hotloadmgr -> hjdi
    java.lang.Thread mainThread -> ETAM
    19:139:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    28:29:void register(org.bukkit.event.Listener) -> OYFA
    33:34:void unregister(org.bukkit.event.Listener) -> unregister
    38:38:java.io.File folder(java.lang.String) -> NVCA
    43:43:java.io.File folder() -> nuBW
    48:50:java.io.File getPluginJarFile() -> OPUj
    55:57:void startup() -> startup
    61:61:java.lang.Thread getServerThread() -> Pcxu
    66:66:surge.collection.GList getTickComponents() -> rUwt
    71:71:surge.collection.GList getAsyncTickComponents() -> BlSl
    76:83:void registerTicked(surge.sched.IMasterTickComponent) -> OYFA
    87:94:void unregisterTicked(surge.sched.IMasterTickComponent) -> rNIA
    98:103:surge.PluginAmp createAmp(surge.control.AmpedPlugin) -> OYFA
    108:108:boolean isMainThread() -> isMainThread
    113:114:void stopAmp() -> XJOQ
    118:118:boolean hasAmp() -> aCgX
    123:123:surge.PluginAmp getAmp() -> bXLh
    128:128:surge.sched.TaskManager getTaskManager() -> biPx
    133:133:surge.hotload.HotloadManager getHotloadManager() -> xWnC
surge.cluster.Cluster -> BlSl:
    surge.cluster.ClusterType type -> xFnj
    java.lang.Object t -> hkFQ
    9:12:void <init>(surge.cluster.ClusterType,java.lang.Object) -> <init>
    17:17:surge.cluster.ClusterType getType() -> CoXo
    23:24:void set(java.lang.Object) -> set
    29:29:java.lang.Object get() -> get
surge.cluster.ClusterBoolean -> XJOQ:
    7:8:void <init>(java.lang.Boolean) -> <init>
surge.cluster.ClusterDouble -> aCgX:
    7:8:void <init>(java.lang.Double) -> <init>
surge.cluster.ClusterInt -> bXLh:
    7:8:void <init>(java.lang.Integer) -> <init>
surge.cluster.ClusterLong -> biPx:
    7:8:void <init>(java.lang.Long) -> <init>
surge.cluster.ClusterString -> xWnC:
    7:8:void <init>(java.lang.String) -> <init>
surge.cluster.ClusterStringList -> CoXo:
    9:10:void <init>(java.util.List) -> <init>
surge.cluster.ClusterType -> KUNK:
    surge.cluster.ClusterType INT -> XuJD
    surge.cluster.ClusterType BOOLEAN -> nIsD
    surge.cluster.ClusterType STRING -> OsBb
    surge.cluster.ClusterType STRING_LIST -> cSHg
    surge.cluster.ClusterType DOUBLE -> AGVH
    surge.cluster.ClusterType LONG -> MBHV
    surge.cluster.ClusterType[] $VALUES -> FFDl
    3:3:surge.cluster.ClusterType[] values() -> values
    3:3:surge.cluster.ClusterType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:5:void <clinit>() -> <clinit>
surge.cluster.ConfigurationDataInput -> XSBh:
    int[] $SWITCH_TABLE$surge$cluster$ClusterType -> MBIA
    11:11:void <init>() -> <init>
    16:126:void read(surge.cluster.IConfigurable,java.io.File) -> OYFA
    131:256:surge.cluster.DataCluster fillDefaults(surge.cluster.IConfigurable) -> OYFA
    11:11:int[] $SWITCH_TABLE$surge$cluster$ClusterType() -> KUNK
surge.cluster.ConfigurationDataOutput -> mGNL:
    11:11:void <init>() -> <init>
    16:142:void write(surge.cluster.IConfigurable,java.io.File) -> rNIA
surge.cluster.DataCluster -> iCQt:
    surge.collection.GMap clusters -> OYOt
    17:20:void <init>() -> <init>
    24:24:surge.collection.GList keys() -> XSBh
    29:33:void fromJson(surge.json.JSONObject) -> OYFA
    37:44:surge.json.JSONObject toJson() -> mGNL
    49:56:org.bukkit.configuration.file.FileConfiguration toFileConfiguration() -> iCQt
    61:100:void fromFileConfiguration(org.bukkit.configuration.file.FileConfiguration) -> OYFA
    104:104:boolean contains(java.lang.String) -> contains
    109:109:surge.cluster.ClusterType getType(java.lang.String) -> xFgl
    114:114:int getInt(java.lang.String) -> getInt
    119:119:java.lang.Object get(java.lang.String) -> get
    124:124:long getLong(java.lang.String) -> getLong
    129:129:java.lang.String getString(java.lang.String) -> getString
    134:134:double getDouble(java.lang.String) -> getDouble
    139:139:boolean getBoolean(java.lang.String) -> getBoolean
    145:145:java.util.List getStringList(java.lang.String) -> getStringList
    151:182:void trySet(java.lang.String,java.lang.Object) -> OYFA
    186:187:void set(java.lang.String,int) -> OYFA
    191:192:void set(java.lang.String,boolean) -> OYFA
    196:197:void set(java.lang.String,double) -> OYFA
    201:202:void set(java.lang.String,long) -> OYFA
    206:207:void set(java.lang.String,java.lang.String) -> set
    211:212:void set(java.lang.String,java.util.List) -> OYFA
surge.cluster.ICluster -> GkEQ:
    surge.cluster.ClusterType getType() -> CoXo
    void set(java.lang.Object) -> set
    java.lang.Object get() -> get
surge.cluster.IConfigurable -> XBBP:
surge.cluster.IDataInput -> rMkW:
    surge.cluster.DataCluster read(java.io.File) -> OYFA
surge.cluster.IDataOutput -> Gjcs:
    void write(surge.cluster.DataCluster,java.io.File) -> OYFA
surge.cluster.Key -> OYIp:
    java.lang.String value() -> value
surge.cluster.KeyPointer -> ronS:
    int value() -> value
surge.cluster.KeyStore -> QpQc:
surge.cluster.ReflectedConfigurationException -> kbhv:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
surge.cluster.YamlDataInput -> jhWb:
    8:8:void <init>() -> <init>
    13:27:surge.cluster.DataCluster read(java.io.File) -> OYFA
surge.cluster.YamlDataOutput -> skAx:
    6:6:void <init>() -> <init>
    13:20:void write(surge.cluster.DataCluster,java.io.File) -> OYFA
surge.collection.GBiset -> HBsS:
    java.lang.Object a -> MtlT
    java.lang.Object b -> tCWa
    8:12:void <init>(java.lang.Object,java.lang.Object) -> <init>
    16:16:java.lang.Object getA() -> GkEQ
    21:22:void setA(java.lang.Object) -> rNIA
    26:26:java.lang.Object getB() -> XBBP
    31:32:void setB(java.lang.Object) -> OOry
surge.collection.GList -> vbhh:
    long serialVersionUID -> serialVersionUID
    19:20:void <init>() -> <init>
    24:26:void <init>(java.lang.Object[]) -> <init>
    30:36:void <init>(java.util.Iterator) -> <init>
    40:48:void <init>(java.util.List) -> <init>
    52:79:java.lang.Object mostCommon() -> rMkW
    84:88:void remove(surge.collection.GList) -> rNIA
    92:94:surge.collection.GList shuffle() -> Gjcs
    100:126:surge.collection.GList split() -> OYIp
    131:131:boolean hasIndex(int) -> dLpA
    136:137:java.lang.Object pickRandom() -> ronS
    142:148:void <init>(java.util.Set) -> <init>
    152:158:void <init>(java.util.Collection) -> <init>
    163:169:void <init>(surge.collection.GList) -> <init>
    173:180:surge.collection.GList stringList() -> QpQc
    185:189:surge.collection.GList removeDuplicates() -> kbhv
    194:194:boolean hasDuplicates() -> jhWb
    199:207:void sort() -> sort
    211:217:void push(java.lang.Object,int) -> OYFA
    221:222:void addFirst(java.lang.Object) -> addFirst
    227:231:void add(java.lang.Object[]) -> add
    235:236:surge.collection.GList qadd(java.lang.Object) -> NVCA
    241:245:void add(java.util.List) -> OYFA
    249:261:java.lang.String toString(java.lang.String) -> toString
    266:268:surge.collection.GList reverse() -> skAx
    274:274:java.lang.String toString() -> toString
    279:286:surge.collection.GList copy() -> HBsS
    291:292:surge.collection.GList qdel(java.lang.Object) -> xFgl
    297:304:java.lang.Object pop() -> pop
surge.collection.GList$1 -> vbhh$1:
    surge.collection.GList this$0 -> bOcw
    200:200:void <init>(surge.collection.GList) -> <init>
    204:204:int compare(java.lang.Object,java.lang.Object) -> compare
surge.collection.GMap -> yJPC:
    long serialVersionUID -> serialVersionUID
    5:5:void <init>() -> <init>
    11:18:surge.collection.GMap copy() -> vbhh
    23:31:java.lang.Object findKey(java.lang.Object) -> DqwT
    36:37:surge.collection.GMap qput(java.lang.Object,java.lang.Object) -> OYFA
    42:59:surge.collection.GMap flip() -> yJPC
    65:72:java.lang.String toString() -> toString
    77:82:surge.collection.GMap append(surge.collection.GMap) -> OYFA
    87:87:surge.collection.GList k() -> qBXR
    92:92:surge.collection.GList v() -> oDbD
    97:101:void putNVD(java.lang.Object,java.lang.Object) -> rNIA
    105:115:surge.collection.GList get(surge.collection.GList) -> OOry
    120:130:surge.collection.GMap removeDuplicateKeys() -> vHuV
    135:145:surge.collection.GMap removeDuplicateValues() -> sPnM
    150:159:void put(surge.collection.GList,surge.collection.GList) -> OYFA
    163:164:void put(surge.collection.GMap) -> rNIA
surge.collection.GQuadraset -> qBXR:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> MtlT
    java.lang.Object b -> tCWa
    java.lang.Object c -> ogLm
    java.lang.Object d -> GIHR
    14:20:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    24:24:java.lang.Object getA() -> GkEQ
    29:30:void setA(java.lang.Object) -> rNIA
    34:34:java.lang.Object getB() -> XBBP
    39:40:void setB(java.lang.Object) -> OOry
    44:44:java.lang.Object getC() -> Ellr
    49:50:void setC(java.lang.Object) -> LWko
    54:54:java.lang.Object getD() -> SCQl
    59:60:void setD(java.lang.Object) -> fJdc
surge.collection.GSet -> oDbD:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>() -> <init>
    17:18:void <init>(java.util.Collection) -> <init>
    22:23:void <init>(int,float) -> <init>
    27:28:void <init>(int) -> <init>
surge.collection.GSound -> vHuV:
    java.lang.String sound -> WiXL
    org.bukkit.Sound iSound -> bGUL
    java.lang.Float volume -> bGTk
    java.lang.Float pitch -> xFqd
    16:21:void <init>(java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    23:28:void <init>(java.lang.String) -> <init>
    30:35:void <init>(org.bukkit.Sound,java.lang.Float,java.lang.Float) -> <init>
    37:42:void <init>(org.bukkit.Sound) -> <init>
    46:57:void play(org.bukkit.entity.Player) -> fRuL
    61:72:void play(org.bukkit.Location) -> OYFA
    76:89:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> OYFA
    93:93:java.lang.String getSound() -> GsSv
    98:99:void setSound(java.lang.String) -> DqwT
    103:103:org.bukkit.Sound getiSound() -> UAHF
    108:109:void setiSound(org.bukkit.Sound) -> OYFA
    113:113:java.lang.Float getVolume() -> RQPY
    118:119:void setVolume(java.lang.Float) -> OYFA
    123:123:java.lang.Float getPitch() -> cdBa
    128:129:void setPitch(java.lang.Float) -> rNIA
surge.collection.GTriset -> sPnM:
    java.lang.Object a -> MtlT
    java.lang.Object b -> tCWa
    java.lang.Object c -> ogLm
    11:15:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    19:19:java.lang.Object getA() -> GkEQ
    24:25:void setA(java.lang.Object) -> rNIA
    29:29:java.lang.Object getB() -> XBBP
    34:35:void setB(java.lang.Object) -> OOry
    39:39:java.lang.Object getC() -> Ellr
    44:45:void setC(java.lang.Object) -> LWko
surge.collection.Snippet -> Ellr:
    3:3:void <init>() -> <init>
surge.control.AmpedPlugin -> SCQl:
    surge.collection.GList controllers -> savJ
    surge.pool.ParallelPoolManager pp -> VUTI
    surge.server.CoreTickThread ctt -> IOOF
    19:26:void <init>() -> <init>
    31:34:void onLoad() -> onLoad
    39:48:void onEnable() -> onEnable
    53:63:void onDisable() -> onDisable
    68:68:surge.collection.GList getControllers() -> Nwgh
    74:75:void registerController(surge.control.IController) -> OYFA
    80:91:void onTick() -> qlhv
    96:96:java.lang.String getTickName() -> xWjv
    102:102:surge.pool.ParallelPoolManager getThreadPool() -> cJOi
    void onControllerRegistry() -> sbOJ
    void onStart(surge.util.Protocol) -> OYFA
    void onStop() -> aTiC
    void onPostInit() -> Xkpe
    void onPreInit() -> FNKe
surge.control.Control -> GsSv:
surge.control.Controller -> UAHF:
    7:10:void <init>() -> <init>
surge.control.Disable -> RQPY:
surge.control.Enable -> cdBa:
surge.control.IController -> Nwgh:
    void start() -> start
    void stop() -> stop
    void tick() -> tick
surge.control.Instance -> cJOi:
surge.control.Plugin -> tTQR:
surge.control.SurgePlugin -> lKyE:
    void onStart(surge.util.Protocol) -> OYFA
    void onStop() -> aTiC
    void onPostInit() -> Xkpe
    void onPreInit() -> FNKe
    void onControllerRegistry() -> sbOJ
    void registerController(surge.control.IController) -> OYFA
    surge.collection.GList getControllers() -> Nwgh
    surge.pool.ParallelPoolManager getThreadPool() -> cJOi
surge.hotload.HotloadManager -> jWTr:
    surge.collection.GMap filemods -> hbWl
    surge.collection.GMap filesizes -> qdaB
    surge.collection.GMap fileacts -> OXmj
    15:20:void <init>() -> <init>
    24:28:void track(java.io.File,java.lang.Runnable) -> OYFA
    32:35:void untrack(java.io.File) -> rNIA
    39:42:void untrackall() -> tTQR
    47:71:void onTick() -> qlhv
    76:76:java.lang.String getTickName() -> xWjv
surge.json.HTTP -> Tgwa:
    java.lang.String CRLF -> teXy
    35:35:void <init>() -> <init>
    93:127:surge.json.JSONObject toJSONObject(java.lang.String) -> LWko
    162:198:java.lang.String toString(surge.json.JSONObject) -> rNIA
surge.json.HTTPTokener -> Ynuq:
    45:46:void <init>(java.lang.String) -> <init>
    58:87:java.lang.String nextToken() -> nextToken
surge.json.JSONArray -> vjxN:
    java.util.ArrayList myArrayList -> UROU
    93:96:void <init>() -> <init>
    108:143:void <init>(surge.json.JSONTokener) -> <init>
    157:158:void <init>(java.lang.String) -> <init>
    166:177:void <init>(java.util.Collection) -> <init>
    187:199:void <init>(java.lang.Object) -> <init>
    204:204:java.util.Iterator iterator() -> iterator
    218:223:java.lang.Object get(int) -> get
    239:247:boolean getBoolean(int) -> getBoolean
    262:268:double getDouble(int) -> getDouble
    286:294:java.lang.Enum getEnum(java.lang.Class,int) -> OYFA
    309:315:java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    331:337:java.math.BigInteger getBigInteger(int) -> pHAu
    352:358:int getInt(int) -> getInt
    374:379:surge.json.JSONArray getJSONArray(int) -> JkXv
    394:399:surge.json.JSONObject getJSONObject(int) -> mXJm
    414:420:long getLong(int) -> getLong
    435:440:java.lang.String getString(int) -> getString
    452:452:boolean isNull(int) -> isNull
    468:479:java.lang.String join(java.lang.String) -> fJdc
    489:489:int length() -> length
    501:501:java.lang.Object opt(int) -> mNxf
    515:515:boolean optBoolean(int) -> lLWC
    533:536:boolean optBoolean(int,boolean) -> rNIA
    551:551:double optDouble(int) -> wTep
    569:572:double optDouble(int,double) -> OYFA
    587:587:int optInt(int) -> Whkc
    605:608:int optInt(int,int) -> OYFA
    623:623:java.lang.Enum optEnum(java.lang.Class,int) -> rNIA
    642:664:java.lang.Enum optEnum(java.lang.Class,int,java.lang.Enum) -> OYFA
    683:686:java.math.BigInteger optBigInteger(int,java.math.BigInteger) -> OYFA
    705:708:java.math.BigDecimal optBigDecimal(int,java.math.BigDecimal) -> OYFA
    722:723:surge.json.JSONArray optJSONArray(int) -> WGId
    737:738:surge.json.JSONObject optJSONObject(int) -> aKts
    752:752:long optLong(int) -> UADF
    770:773:long optLong(int,long) -> OYFA
    788:788:java.lang.String optString(int) -> vABV
    803:804:java.lang.String optString(int,java.lang.String) -> OYFA
    816:817:surge.json.JSONArray put(boolean) -> LWko
    830:831:surge.json.JSONArray put(java.util.Collection) -> OYFA
    845:848:surge.json.JSONArray put(double) -> rNIA
    860:861:surge.json.JSONArray put(int) -> UQdR
    873:874:surge.json.JSONArray put(long) -> OYFA
    887:888:surge.json.JSONArray put(java.util.Map) -> OYFA
    902:903:surge.json.JSONArray put(java.lang.Object) -> fRuL
    921:922:surge.json.JSONArray put(int,boolean) -> OOry
    939:940:surge.json.JSONArray put(int,java.util.Collection) -> OYFA
    958:959:surge.json.JSONArray put(int,double) -> rNIA
    977:978:surge.json.JSONArray put(int,int) -> rNIA
    996:997:surge.json.JSONArray put(int,long) -> rNIA
    1015:1016:surge.json.JSONArray put(int,java.util.Map) -> OYFA
    1037:1053:surge.json.JSONArray put(int,java.lang.Object) -> OYFA
    1066:1066:java.lang.Object remove(int) -> remove
    1079:1109:boolean similar(java.lang.Object) -> mFhm
    1126:1135:surge.json.JSONObject toJSONObject(surge.json.JSONArray) -> OYFA
    1153:1156:java.lang.String toString() -> toString
    1174:1177:java.lang.String toString(int) -> toString
    1192:1192:java.io.Writer write(java.io.Writer) -> OYFA
    1212:1247:java.io.Writer write(java.io.Writer,int,int) -> OYFA
surge.json.JSONException -> Huvh:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> BuNU
    22:23:void <init>(java.lang.String) -> <init>
    33:35:void <init>(java.lang.Throwable) -> <init>
    47:47:java.lang.Throwable getCause() -> getCause
surge.json.JSONML -> wfKd:
    37:37:void <init>() -> <init>
    57:279:java.lang.Object parse(surge.json.XMLTokener,boolean,surge.json.JSONArray) -> OYFA
    301:301:surge.json.JSONArray toJSONArray(java.lang.String) -> fRuL
    320:320:surge.json.JSONArray toJSONArray(surge.json.XMLTokener) -> OYFA
    340:340:surge.json.JSONObject toJSONObject(surge.json.XMLTokener) -> rNIA
    360:360:surge.json.JSONObject toJSONObject(java.lang.String) -> LWko
    379:456:java.lang.String toString(surge.json.JSONArray) -> rNIA
    472:552:java.lang.String toString(surge.json.JSONObject) -> rNIA
surge.json.JSONObject -> iBsJ:
    java.util.Map map -> map
    java.lang.Object NULL -> dgKq
    153:153:void <clinit>() -> <clinit>
    158:161:void <init>() -> <init>
    179:189:void <init>(surge.json.JSONObject,java.lang.String[]) -> <init>
    202:248:void <init>(surge.json.JSONTokener) -> <init>
    261:277:void <init>(java.util.Map) -> <init>
    302:304:void <init>(java.lang.Object) -> <init>
    322:334:void <init>(java.lang.Object,java.lang.String[]) -> <init>
    350:351:void <init>(java.lang.String) -> <init>
    365:400:void <init>(java.lang.String,java.util.Locale) -> <init>
    423:435:surge.json.JSONObject accumulate(java.lang.String,java.lang.Object) -> rNIA
    455:467:surge.json.JSONObject append(java.lang.String,java.lang.Object) -> OOry
    480:499:java.lang.String doubleToString(double) -> OOry
    513:522:java.lang.Object get(java.lang.String) -> get
    539:547:java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    562:570:boolean getBoolean(java.lang.String) -> getBoolean
    585:591:java.math.BigInteger getBigInteger(java.lang.String) -> mFhm
    607:613:java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    629:635:double getDouble(java.lang.String) -> getDouble
    651:657:int getInt(java.lang.String) -> getInt
    672:677:surge.json.JSONArray getJSONArray(java.lang.String) -> wKty
    691:696:surge.json.JSONObject getJSONObject(java.lang.String) -> dLpA
    711:717:long getLong(java.lang.String) -> getLong
    728:741:java.lang.String[] getNames(surge.json.JSONObject) -> OOry
    751:767:java.lang.String[] getNames(java.lang.Object) -> wKty
    781:786:java.lang.String getString(java.lang.String) -> getString
    798:798:boolean has(java.lang.String) -> has
    815:841:surge.json.JSONObject increment(java.lang.String) -> pHAu
    855:855:boolean isNull(java.lang.String) -> JkXv
    865:865:java.util.Iterator keys() -> keys
    875:875:java.util.Set keySet() -> keySet
    885:885:int length() -> length
    897:903:surge.json.JSONArray names() -> lKyE
    917:937:java.lang.String numberToString(java.lang.Number) -> OYFA
    949:949:java.lang.Object opt(java.lang.String) -> mXJm
    963:963:java.lang.Enum optEnum(java.lang.Class,java.lang.String) -> OYFA
    982:1004:java.lang.Enum optEnum(java.lang.Class,java.lang.String,java.lang.Enum) -> OYFA
    1018:1018:boolean optBoolean(java.lang.String) -> mNxf
    1036:1039:boolean optBoolean(java.lang.String,boolean) -> rNIA
    1054:1054:double optDouble(java.lang.String) -> lLWC
    1072:1075:java.math.BigInteger optBigInteger(java.lang.String,java.math.BigInteger) -> OYFA
    1094:1097:java.math.BigDecimal optBigDecimal(java.lang.String,java.math.BigDecimal) -> OYFA
    1116:1119:double optDouble(java.lang.String,double) -> rNIA
    1134:1134:int optInt(java.lang.String) -> wTep
    1152:1155:int optInt(java.lang.String,int) -> rNIA
    1169:1170:surge.json.JSONArray optJSONArray(java.lang.String) -> Whkc
    1183:1184:surge.json.JSONObject optJSONObject(java.lang.String) -> WGId
    1198:1198:long optLong(java.lang.String) -> aKts
    1216:1219:long optLong(java.lang.String,long) -> rNIA
    1234:1234:java.lang.String optString(java.lang.String) -> UADF
    1249:1250:java.lang.String optString(java.lang.String,java.lang.String) -> OYFA
    1255:1305:void populateMap(java.lang.Object) -> dLpA
    1320:1321:surge.json.JSONObject put(java.lang.String,boolean) -> OOry
    1337:1338:surge.json.JSONObject put(java.lang.String,java.util.Collection) -> OYFA
    1354:1355:surge.json.JSONObject put(java.lang.String,double) -> OOry
    1371:1372:surge.json.JSONObject put(java.lang.String,int) -> OOry
    1388:1389:surge.json.JSONObject put(java.lang.String,long) -> OOry
    1405:1406:surge.json.JSONObject put(java.lang.String,java.util.Map) -> OYFA
    1425:1437:surge.json.JSONObject put(java.lang.String,java.lang.Object) -> NVCA
    1455:1463:surge.json.JSONObject putOnce(java.lang.String,java.lang.Object) -> xFgl
    1482:1486:surge.json.JSONObject putOpt(java.lang.String,java.lang.Object) -> DqwT
    1501:1510:java.lang.String quote(java.lang.String) -> quote
    1517:1577:java.io.Writer quote(java.lang.String,java.io.Writer) -> OYFA
    1590:1590:java.lang.Object remove(java.lang.String) -> vABV
    1605:1640:boolean similar(java.lang.Object) -> mFhm
    1655:1707:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    1720:1736:void testValidity(java.lang.Object) -> pHAu
    1751:1760:surge.json.JSONArray toJSONArray(surge.json.JSONArray) -> OOry
    1779:1782:java.lang.String toString() -> toString
    1802:1805:java.lang.String toString(int) -> toString
    1835:1879:java.lang.String valueToString(java.lang.Object) -> valueToString
    1898:1932:java.lang.Object wrap(java.lang.Object) -> wrap
    1947:1947:java.io.Writer write(java.io.Writer) -> OYFA
    1952:1995:java.io.Writer writeValue(java.io.Writer,java.lang.Object,int,int) -> OYFA
    2000:2004:void indent(java.io.Writer,int) -> OYFA
    2019:2068:java.io.Writer write(java.io.Writer,int,int) -> OYFA
surge.json.JSONObject$Null -> iBsJ$OYFA:
    102:102:void <init>() -> <init>
    114:114:java.lang.Object clone() -> clone
    128:128:boolean equals(java.lang.Object) -> equals
    138:138:java.lang.String toString() -> toString
    102:102:void <init>(surge.json.JSONObject$Null) -> <init>
surge.json.JSONString -> rMnG:
    java.lang.String toJSONString() -> toJSONString
surge.json.JSONStringer -> lwPu:
    69:70:void <init>() -> <init>
    83:83:java.lang.String toString() -> toString
surge.json.JSONTokener -> fKKr:
    long character -> WWtT
    boolean eof -> eof
    long index -> KoEn
    long line -> JROx
    char previous -> JlBp
    java.io.Reader reader -> reader
    boolean usePrevious -> UtSR
    60:68:void <init>(java.io.Reader) -> <init>
    78:79:void <init>(java.io.InputStream) -> <init>
    89:90:void <init>(java.lang.String) -> <init>
    99:107:void back() -> jWTr
    119:131:int dehexchar(char) -> OYFA
    136:136:boolean end() -> Tgwa
    147:153:boolean more() -> Ynuq
    164:198:char next() -> next
    213:218:char next(char) -> rNIA
    233:250:java.lang.String next(int) -> PcwO
    263:268:char nextClean() -> vjxN
    287:334:java.lang.String nextString(char) -> OOry
    349:362:java.lang.String nextTo(char) -> NVCA
    376:388:java.lang.String nextTo(java.lang.String) -> UQdR
    403:441:java.lang.Object nextValue() -> Huvh
    458:479:char skipTo(char) -> xFgl
    491:491:surge.json.JSONException syntaxError(java.lang.String) -> PcwO
    501:501:java.lang.String toString() -> toString
surge.json.JSONWriter -> dgIP:
    int maxdepth -> OjPg
    boolean comma -> aCob
    char mode -> mXSs
    surge.json.JSONObject[] stack -> iSwW
    int top -> top
    java.io.Writer writer -> writer
    97:104:void <init>(java.io.Writer) -> <init>
    117:141:surge.json.JSONWriter append(java.lang.String) -> QpLd
    157:164:surge.json.JSONWriter array() -> wfKd
    180:193:surge.json.JSONWriter end(char,char) -> OYFA
    206:206:surge.json.JSONWriter endArray() -> iBsJ
    219:219:surge.json.JSONWriter endObject() -> rMnG
    235:258:surge.json.JSONWriter key(java.lang.String) -> rpIo
    274:285:surge.json.JSONWriter object() -> lwPu
    299:310:void pop(char) -> DqwT
    322:329:void push(surge.json.JSONObject) -> NVCA
    342:342:surge.json.JSONWriter value(boolean) -> fJdc
    356:356:surge.json.JSONWriter value(double) -> NVCA
    369:369:surge.json.JSONWriter value(long) -> rNIA
    385:385:surge.json.JSONWriter value(java.lang.Object) -> JkXv
surge.json.XML -> Plns:
    java.lang.Character AMP -> jqNT
    java.lang.Character APOS -> clYc
    java.lang.Character BANG -> MBIx
    java.lang.Character EQ -> APHx
    java.lang.Character GT -> fCAn
    java.lang.Character LT -> UAPs
    java.lang.Character QUEST -> awXF
    java.lang.Character QUOT -> EdfQ
    java.lang.Character SLASH -> WOfq
    40:64:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    82:107:java.lang.String escape(java.lang.String) -> escape
    120:132:void noSpace(java.lang.String) -> SurD
    150:339:boolean parse(surge.json.XMLTokener,surge.json.JSONObject,java.lang.String) -> OYFA
    358:399:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    420:426:surge.json.JSONObject toJSONObject(java.lang.String) -> LWko
    439:439:java.lang.String toString(java.lang.Object) -> toString
    454:579:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
surge.json.XMLTokener -> WFpD:
    java.util.HashMap entity -> OQAh
    45:51:void <clinit>() -> <clinit>
    61:62:void <init>(java.lang.String) -> <init>
    75:88:java.lang.String nextCDATA() -> fKKr
    108:133:java.lang.Object nextContent() -> dgIP
    149:166:java.lang.Object nextEntity(char) -> LWko
    186:239:java.lang.Object nextMeta() -> Plns
    261:334:java.lang.Object nextToken() -> WFpD
    354:420:boolean skipPast(java.lang.String) -> JYvB
surge.math.ArrayUtils -> tLDe:
    3:3:void <init>() -> <init>
    7:13:void shiftRight(double[],double) -> OYFA
    17:19:void wrapRight(double[]) -> OYFA
    23:27:void fill(double[],double) -> fill
surge.math.Average -> rpRL:
    double[] values -> QNVb
    double average -> IhbU
    boolean dirty -> MdNK
    10:15:void <init>(int) -> <init>
    19:21:void put(double) -> xFgl
    25:31:double getAverage() -> getAverage
    36:45:void calculateAverage() -> tLDe
surge.math.M -> clWK:
    double[] fastsqrt -> NgPk
    int precision -> Xtmk
    int modulus -> qSaa
    float[] sin -> rgfT
    26:630:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    39:42:double evaluate(java.lang.String) -> gNHJ
    54:59:boolean r(java.lang.Double) -> OYFA
    81:91:double evaluate(java.lang.String,java.lang.Double[]) -> OYFA
    96:119:org.bukkit.block.Block highestBlock(org.bukkit.Location,int,int) -> OYFA
    134:134:double tps(long,int) -> OYFA
    146:146:double ticksFromNS(long) -> OOry
    158:184:java.lang.String toRoman(int) -> QpLd
    198:210:java.lang.String repeat(java.lang.String,int) -> repeat
    215:215:int rand(int,int) -> OOry
    227:299:int fromRoman(java.lang.String) -> wmvm
    309:309:long ns() -> rpRL
    319:319:long ms() -> clWK
    331:338:double avg(surge.collection.GList) -> NVCA
    351:355:void lim(surge.collection.GList,int) -> OYFA
    368:368:double distance(org.bukkit.Location,org.bukkit.Location) -> OYFA
    385:385:boolean within(org.bukkit.Location,org.bukkit.Location,java.lang.Double) -> OYFA
    397:397:float sin(float) -> sin
    409:409:float cos(float) -> cos
    421:431:int max(int[]) -> max
    443:453:int min(int[]) -> min
    469:469:boolean within(int,int,int) -> OYFA
    482:482:float sinLookup(int) -> rpIo
    487:497:double fsqrt(double) -> DqwT
    502:502:double maxSafeRadius(org.bukkit.Location) -> rNIA
    507:507:double clip(double,double,double) -> OYFA
    512:529:double maxSafeRadius(org.bukkit.Location,double,double) -> OYFA
    534:542:boolean isLoaded(org.bukkit.Location,double) -> OYFA
    547:561:surge.collection.GList cradShift(org.bukkit.Location,double) -> rNIA
    566:566:int chunkShift(int) -> SurD
    571:579:boolean isLoaded(org.bukkit.World,int,int) -> OYFA
    584:592:boolean isLoaded(org.bukkit.Location) -> OOry
    597:602:double dof(double,double) -> OYFA
    607:619:surge.collection.GList getChunks(org.bukkit.Chunk,int) -> rNIA
surge.math.Profiler -> pOvw:
    long nanos -> CfqE
    long startNano -> Elvh
    long millis -> KCtW
    long startMillis -> fmTw
    double time -> rhGY
    boolean profiling -> KfWy
    14:18:void <init>() -> <init>
    22:25:void begin() -> begin
    29:39:void end() -> end
    43:49:void reset() -> reset
    53:73:java.lang.String getTime(int) -> JYvB
    78:78:double getTicks() -> pOvw
    83:83:double getSeconds() -> getSeconds
    88:88:double getMinutes() -> LOau
    93:93:double getHours() -> Sdvw
    98:98:double getMilliseconds() -> AFpQ
    103:103:long getNanoseconds() -> YLvU
    108:108:long getNanos() -> TEwb
    113:113:long getStartNano() -> EvBo
    118:118:long getMillis() -> getMillis
    123:123:long getStartMillis() -> DXiu
    128:128:double getTime() -> hjbq
    133:133:boolean isProfiling() -> nIqG
surge.nms.NMSClass -> LOau:
    boolean init -> nAff
    int version -> version
    java.lang.Class PacketPlayOutPlayerListHeaderFooter -> ncif
    java.lang.Class IChatBaseComponent -> kkaq
    java.lang.Class ChatSerializer -> DGoQ
    java.lang.Class PacketPlayOutPlayerInfo -> DirX
    java.lang.Class PlayerInfoData -> gpXK
    java.lang.Class EnumPlayerInfoAction -> FhIT
    java.lang.Class GameProfile -> JkdO
    java.lang.Class EnumGamemode -> afTq
    java.lang.Class TileEntitySkull -> rgeU
    java.lang.Class LoadingCache -> QEeH
    6:131:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
surge.nms.NMSX -> Sdvw:
    surge.nms.NMSX bountifulAPI -> awXA
    boolean useOldMethods -> EugI
    java.lang.String nmsver -> EBaw
    java.lang.Object eTimes -> KLcr
    java.lang.Object eTitle -> sHdp
    java.lang.Object eSubtitle -> ejRH
    20:459:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    26:28:java.lang.String getVersion() -> getVersion
    35:45:void setAi(org.bukkit.entity.LivingEntity,boolean) -> OYFA
    56:70:java.lang.Class getCBNMSClass(java.lang.String) -> sPht
    75:89:java.lang.Class getCBClass(java.lang.String) -> lKuB
    96:104:java.lang.Object serializeChat(java.lang.String) -> haka
    109:114:java.lang.reflect.Field setAccessible(java.lang.reflect.Field) -> OYFA
    119:121:java.lang.reflect.Method setAccessible(java.lang.reflect.Method) -> OYFA
    131:131:java.lang.String getBukkitVersion() -> getBukkitVersion
    141:141:java.lang.String nmsPackage() -> Rrss
    151:151:java.lang.String craftPackage() -> cccj
    166:178:void showPickup(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> OYFA
    184:193:void sendPacket(org.bukkit.entity.Player,java.lang.Object) -> OYFA
    197:207:java.lang.Class getNMSClass(java.lang.String) -> qAtx
    217:275:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> OYFA
    279:280:void clearTitle(org.bukkit.entity.Player) -> mFhm
    284:316:void sendTabTitle(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> OYFA
    320:375:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> OYFA
    379:405:void sendActionBar(org.bukkit.entity.Player,java.lang.String,int) -> OYFA
    409:410:void sendActionBarToAllPlayers(java.lang.String) -> jguI
    414:418:void sendActionBarToAllPlayers(java.lang.String,int) -> NVCA
    422:427:java.lang.String getEntityName(org.bukkit.entity.Entity) -> rNIA
    434:447:int ping(org.bukkit.entity.Player) -> wKty
surge.nms.NMSX$1 -> Sdvw$1:
    org.bukkit.entity.Player val$player -> YwpO
    1:382:void <init>(org.bukkit.entity.Player) -> <init>
    387:388:void run() -> run
surge.nms.NMSX$2 -> Sdvw$2:
    org.bukkit.entity.Player val$player -> YwpO
    java.lang.String val$message -> Vnfa
    1:395:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    401:402:void run() -> run
surge.nms.PacketUtil -> AFpQ:
    6:6:void <init>() -> <init>
    20:45:surge.nms.PacketUtil$V getVersion() -> VwPs
    50:64:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> OYFA
    68:82:void clearTitle(org.bukkit.entity.Player) -> mFhm
    86:100:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> OYFA
surge.nms.PacketUtil$V -> AFpQ$OYFA:
    surge.nms.PacketUtil$V R17 -> CpAq
    surge.nms.PacketUtil$V R18 -> EmWN
    surge.nms.PacketUtil$V R19 -> CVPy
    surge.nms.PacketUtil$V R111 -> BuQX
    surge.nms.PacketUtil$V R110 -> ryJv
    surge.nms.PacketUtil$V R112 -> VvyY
    surge.nms.PacketUtil$V[] ENUM$VALUES -> YUoS
    8:15:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    1:1:surge.nms.PacketUtil$V[] values() -> values
    1:1:surge.nms.PacketUtil$V valueOf(java.lang.String) -> valueOf
surge.nms.Title -> YLvU:
    java.lang.String title -> title
    java.lang.String subTitle -> qKSv
    java.lang.String action -> action
    java.lang.Integer fadeIn -> aDUY
    java.lang.Integer fadeOut -> lewV
    java.lang.Integer stayTime -> NVPv
    14:19:void <init>() -> <init>
    21:29:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    31:38:void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    40:46:void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    52:60:void send(org.bukkit.entity.Player) -> dLpA
    64:64:java.lang.String getTitle() -> getTitle
    69:70:void setTitle(java.lang.String) -> setTitle
    74:74:java.lang.String getSubTitle() -> Ynwi
    79:80:void setSubTitle(java.lang.String) -> ylQW
    84:84:java.lang.String getAction() -> getAction
    89:90:void setAction(java.lang.String) -> setAction
    94:94:java.lang.Integer getFadeIn() -> FNPT
    99:100:void setFadeIn(java.lang.Integer) -> OYFA
    104:104:java.lang.Integer getFadeOut() -> uVty
    109:110:void setFadeOut(java.lang.Integer) -> rNIA
    114:114:java.lang.Integer getStayTime() -> baCC
    119:120:void setStayTime(java.lang.Integer) -> OOry
surge.nms.VersionBukkit -> TEwb:
    surge.nms.VersionBukkit VU -> Jsvy
    surge.nms.VersionBukkit V7 -> qSdF
    surge.nms.VersionBukkit V8 -> MAlM
    surge.nms.VersionBukkit V9 -> IORb
    surge.nms.VersionBukkit V11 -> dUnx
    surge.nms.VersionBukkit V111 -> YpCh
    surge.nms.VersionBukkit V112 -> FhLe
    surge.nms.VersionBukkit[] ENUM$VALUES -> OXtJ
    5:13:void <clinit>() -> <clinit>
    5:5:void <init>(java.lang.String,int) -> <init>
    17:22:boolean tc() -> kYyQ
    27:32:boolean uc() -> kcKY
    37:67:surge.nms.VersionBukkit get() -> vtKp
    1:1:surge.nms.VersionBukkit[] values() -> values
    1:1:surge.nms.VersionBukkit valueOf(java.lang.String) -> valueOf
surge.pool.A -> EvBo:
    7:17:void <init>() -> <init>
surge.pool.A$1 -> EvBo$1:
    surge.pool.A this$0 -> PSfa
    1:9:void <init>(surge.pool.A) -> <init>
    14:15:void run() -> run
surge.pool.Execution -> DXiu:
    3:3:void <init>() -> <init>
surge.pool.ParallelPoolManager -> hjbq:
    surge.pool.QueueMode mode -> mFvf
    surge.collection.GList threads -> EBed
    int next -> jiCQ
    int threadCount -> cRlM
    java.util.Queue squeue -> pjRn
    java.lang.String key -> key
    surge.pool.ThreadInformation info -> lLdU
    int[] $SWITCH_TABLE$surge$pool$QueueMode -> TNoV
    23:24:void syncQueue(surge.pool.Execution) -> OYFA
    28:41:void tickSyncQueue() -> eXiQ
    45:48:void <init>(java.lang.String,int,surge.pool.QueueMode) -> <init>
    50:69:void <init>(int,surge.pool.QueueMode) -> <init>
    73:88:long lock() -> aUNU
    93:94:void start() -> start
    98:102:void shutdown() -> shutdown
    106:107:void <init>(int) -> <init>
    111:112:void queue(surge.pool.Execution) -> rNIA
    116:116:int getSize() -> getSize
    121:128:int getQueueSize() -> jWVt
    133:133:surge.pool.ParallelThread[] getThreads() -> nuEf
    140:167:void updateThreadInformation() -> UtOC
    171:203:surge.pool.ParallelThread nextThread() -> YnxY
    208:214:void createThreads(int) -> gNHJ
    218:218:surge.pool.QueueMode getMode() -> vcJg
    223:223:int getNext() -> YVHA
    228:228:int getThreadCount() -> getThreadCount
    233:233:java.util.Queue getSqueue() -> SLHU
    238:238:java.lang.String getKey() -> getKey
    243:243:surge.pool.ThreadInformation getAverageInfo() -> BRfu
    11:11:int[] $SWITCH_TABLE$surge$pool$QueueMode() -> tTVh
surge.pool.ParallelPoolManager$1 -> hjbq$1:
    int[] $SwitchMap$surge$pool$QueueMode -> lfVw
    169:169:void <clinit>() -> <clinit>
surge.pool.ParallelThread -> nIqG:
    java.util.Queue queue -> uOOR
    surge.pool.ThreadInformation info -> lLdU
    14:19:void <init>(java.lang.String,int) -> <init>
    24:56:void run() -> run
    60:64:void conditionallySleep(double) -> LWko
    70:77:void execute(surge.pool.Execution) -> OOry
    81:91:void execute() -> execute
    95:96:void queue(surge.pool.Execution) -> rNIA
    100:100:java.util.Queue getQueue() -> LOdH
    105:105:surge.pool.ThreadInformation getInfo() -> qKNF
surge.pool.QueueMode -> Rrss:
    surge.pool.QueueMode ROUND_ROBIN -> fvGs
    surge.pool.QueueMode SMALLEST -> XcmF
    surge.pool.QueueMode[] $VALUES -> gEef
    3:3:surge.pool.QueueMode[] values() -> values
    3:3:surge.pool.QueueMode valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
surge.pool.S -> cccj:
    7:17:void <init>() -> <init>
surge.pool.S$1 -> cccj$1:
    surge.pool.S this$0 -> XRkj
    1:9:void <init>(surge.pool.S) -> <init>
    14:15:void run() -> run
surge.pool.ThreadInformation -> VwPs:
    double ticksPerSecond -> pYPl
    int queuedSize -> avxb
    boolean processing -> DXsQ
    double utilization -> OPbQ
    surge.math.Average ticksPerSecondAverage -> WWyV
    long tick -> Vevw
    int id -> id
    17:25:void <init>(int) -> <init>
    29:29:double getTicksPerSecond() -> skGL
    34:36:void setTicksPerSecond(double) -> fJdc
    40:40:int getQueuedSize() -> lnay
    45:46:void setQueuedSize(int) -> wmvm
    50:50:boolean isProcessing() -> owkb
    55:56:void setProcessing(boolean) -> fRuL
    60:60:double getUtilization() -> JANE
    65:66:void setUtilization(double) -> fRuL
    70:70:double getTicksPerSecondAverage() -> imjC
    75:75:long getTick() -> getTick
    80:81:void setTick(long) -> setTick
    85:85:long getTickLag() -> clWn
    90:90:int getId() -> getId
surge.sched.IBursterator -> Ynwi:
    void burst(java.lang.Object) -> mXJm
    void setTimeLock(double) -> mFhm
    double getEstimatedTimeUse() -> ssWO
    int flush() -> AaFW
    int flush(surge.math.Profiler) -> OYFA
    void queue(java.lang.Object) -> mNxf
    void queue(java.util.List) -> rNIA
    void queue(java.lang.Object[]) -> OYFA
surge.sched.ICancellable -> FNPT:
    void cancel() -> cancel
surge.sched.IMasterTickComponent -> uVty:
    void onTick() -> qlhv
    java.lang.String getTickName() -> xWjv
surge.sched.ITask -> baCC:
    int getId() -> getId
    void run() -> run
    boolean isRepeating() -> LPDl
    java.lang.String getName() -> getName
    double getComputeTime() -> hrvM
    double getTotalComputeTime() -> gWBS
    double getActiveTime() -> UlBE
    boolean hasCompleted() -> KndQ
surge.sched.TICK -> kYyQ:
    long tick -> Vevw
    5:5:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
surge.sched.Task -> kcKY:
    int id -> id
    java.lang.String name -> name
    boolean repeating -> yAhA
    double computeTime -> JkgC
    double totalComputeTime -> TiDG
    double activeTime -> cmBF
    boolean completed -> completed
    surge.math.Profiler profiler -> OQEg
    surge.math.Profiler activeProfiler -> gVik
    int ticks -> cmAc
    19:41:void <init>(java.lang.String) -> <init>
    43:66:void <init>(java.lang.String,int) -> <init>
    68:96:void <init>(java.lang.String,int,int) -> <init>
    100:109:void setup(java.lang.String,boolean) -> NVCA
    114:120:void cancel() -> cancel
    125:125:int getId() -> getId
    131:131:boolean isRepeating() -> LPDl
    137:137:java.lang.String getName() -> getName
    143:143:double getComputeTime() -> hrvM
    149:149:boolean hasCompleted() -> KndQ
    155:155:double getTotalComputeTime() -> gWBS
    161:161:double getActiveTime() -> UlBE
    16:16:surge.math.Profiler access$0(surge.sched.Task) -> OYFA
    14:14:void access$1(surge.sched.Task,boolean) -> OYFA
    15:15:surge.math.Profiler access$2(surge.sched.Task) -> rNIA
    13:13:void access$3(surge.sched.Task,double) -> OYFA
    11:11:void access$4(surge.sched.Task,double) -> rNIA
    13:13:double access$5(surge.sched.Task) -> OOry
    12:12:void access$6(surge.sched.Task,double) -> OOry
    17:17:int access$7(surge.sched.Task) -> NVCA
    17:17:void access$8(surge.sched.Task,int) -> OYFA
    12:12:double access$9(surge.sched.Task) -> xFgl
    11:11:double access$10(surge.sched.Task) -> DqwT
surge.sched.Task$1 -> kcKY$1:
    surge.sched.Task this$0 -> IWcv
    1:24:void <init>(surge.sched.Task) -> <init>
    29:39:void run() -> run
surge.sched.Task$2 -> kcKY$2:
    surge.sched.Task this$0 -> IWcv
    1:48:void <init>(surge.sched.Task) -> <init>
    53:64:void run() -> run
surge.sched.Task$3 -> kcKY$3:
    surge.sched.Task this$0 -> IWcv
    int val$total -> dpDc
    1:73:void <init>(surge.sched.Task,int) -> <init>
    78:94:void run() -> run
surge.sched.TaskManager -> vtKp:
    surge.collection.GList tasks -> YgSt
    surge.collection.GMap taskProfiles -> lLhB
    11:15:void <init>() -> <init>
    20:30:void onTick() -> qlhv
    34:35:void putFinishingTask(surge.sched.ITask) -> OYFA
    39:48:void putTask(surge.sched.ITask) -> rNIA
    53:53:java.lang.String getTickName() -> xWjv
surge.sched.TaskProfile -> eXiQ:
    double activeTime -> cmBF
    double computeTickTime -> xWyv
    double computeTime -> JkgC
    10:14:void <init>() -> <init>
    18:18:double getActiveTime() -> UlBE
    23:24:void setActiveTime(double) -> wKty
    28:28:double getComputeTickTime() -> mPBf
    33:34:void setComputeTickTime(double) -> dLpA
    38:38:double getComputeTime() -> hrvM
    43:44:void setComputeTime(double) -> pHAu
surge.server.AsyncTick -> aUNU:
surge.server.CoreTickThread -> jWVt:
    10:12:void <init>() -> <init>
    17:36:void run() -> run
surge.server.MemoryMonitor -> nuEf:
    long memoryFree -> vlHM
    long memoryUsed -> ySNI
    long memoryMax -> jpsn
    long lastMemoryUsed -> erfx
    long memoryUsedAfterGC -> HUBh
    long allocated -> DjYE
    long collected -> XlbK
    long collections -> gNYW
    long sms -> OGtL
    long memoryAllocatedPerTick -> mFxf
    long memoryCollectedPerTick -> Cwva
    long memoryFullyAllocatedPerTick -> URWR
    long mah -> bPJi
    long mahs -> FMxr
    22:39:void <init>() -> <init>
    void onAllocationSet() -> xhro
    46:93:void run() -> run
    97:97:long getMemoryFree() -> xyuA
    102:102:long getMemoryUsed() -> getMemoryUsed
    107:107:long getMemoryMax() -> RjhJ
    112:112:long getLastMemoryUsed() -> rxcf
    117:117:long getMemoryUsedAfterGC() -> OYMJ
    122:122:long getAllocated() -> getAllocated
    127:127:long getCollected() -> vAIs
    132:132:long getCollections() -> BAfb
    137:137:long getSms() -> vsmb
    142:142:long getMemoryAllocatedPerTick() -> INii
    147:147:long getMemoryCollectedPerTick() -> gxdK
    152:152:long getMemoryFullyAllocatedPerTick() -> STXF
    157:157:long getMah() -> nIsS
    162:162:long getMahs() -> tTUq
surge.server.SuperSampler -> UtOC:
    surge.math.Average ticksPerSecondL -> pQBv
    surge.math.Average tickTimeL -> eYTM
    surge.math.Average mahL -> TGBT
    double ticksPerSecond -> pYPl
    double ticksPerSecondRaw -> Keye
    double tickTime -> gMwh
    double tickTimeRaw -> DGrw
    boolean running -> running
    double tickUtilizationRaw -> NNBN
    double tickUtilization -> MmBN
    double leftoverTickTime -> TXCk
    long memoryUse -> gMwl
    long memoryAllocated -> uycy
    long memoryCollected -> NpEY
    long mahs -> FMxr
    int totalChunks -> Cwtt
    int totalEntities -> IpvE
    int totalDrops -> cRmW
    int totalTiles -> opBm
    int totalLiving -> HKpH
    int chunksLoaded -> WOkF
    int chunksUnloaded -> IpxS
    surge.server.WorldMonitor worldMonitor -> BdSo
    surge.server.TPSMonitor tpsMonitor -> rgmO
    surge.server.MemoryMonitor memoryMonitor -> oftS
    31:105:void <init>() -> <init>
    109:114:void start() -> start
    118:123:void stop() -> stop
    128:132:void onTick() -> qlhv
    137:137:java.lang.String getTickName() -> xWjv
    142:142:surge.math.Average getTicksPerSecondL() -> pjLl
    147:147:double getTicksPerSecond() -> skGL
    152:152:double getTicksPerSecondRaw() -> hbTx
    157:157:boolean isRunning() -> isRunning
    162:162:surge.server.TPSMonitor getTpsMonitor() -> IqNS
    167:167:surge.math.Average getTickTimeL() -> hHaa
    172:172:double getTickTime() -> MJVO
    177:177:double getTickTimeRaw() -> QpTj
    182:182:double getTickUtilizationRaw() -> nceV
    187:187:double getTickUtilization() -> AXVJ
    192:192:double getLeftoverTickTime() -> hjdi
    197:197:surge.server.MemoryMonitor getMemoryMonitor() -> ETAM
    202:202:long getMemoryUse() -> xFnj
    207:207:long getMemoryAllocated() -> hkFQ
    212:212:long getMemoryCollected() -> XuJD
    217:217:surge.math.Average getMahL() -> nIsD
    222:222:long getMahs() -> tTUq
    227:227:int getTotalChunks() -> OsBb
    232:232:int getTotalEntities() -> cSHg
    237:237:int getTotalDrops() -> AGVH
    242:242:int getTotalTiles() -> MBHV
    247:247:int getTotalLiving() -> FFDl
    252:252:surge.server.WorldMonitor getWorldMonitor() -> MBIA
    257:257:int getChunksLoaded() -> OYOt
    262:262:int getChunksUnloaded() -> MtlT
    267:268:void setTicksPerSecondL(surge.math.Average) -> OYFA
    272:273:void setTickTimeL(surge.math.Average) -> rNIA
    277:278:void setMahL(surge.math.Average) -> OOry
    282:283:void setTicksPerSecond(double) -> fJdc
    287:288:void setTicksPerSecondRaw(double) -> JkXv
    292:293:void setTickTime(double) -> mXJm
    297:298:void setTickTimeRaw(double) -> mNxf
    302:303:void setRunning(boolean) -> mFhm
    307:308:void setTickUtilizationRaw(double) -> lLWC
    312:313:void setTickUtilization(double) -> wTep
    317:318:void setLeftoverTickTime(double) -> Whkc
    322:323:void setMemoryUse(long) -> NVCA
    327:328:void setMemoryAllocated(long) -> xFgl
    332:333:void setMemoryCollected(long) -> DqwT
    337:338:void setMahs(long) -> LWko
    342:343:void setTotalChunks(int) -> sPht
    347:348:void setTotalEntities(int) -> lKuB
    352:353:void setTotalDrops(int) -> haka
    357:358:void setTotalTiles(int) -> qAtx
    362:363:void setTotalLiving(int) -> jguI
    367:368:void setChunksLoaded(int) -> ylQW
    372:373:void setChunksUnloaded(int) -> CxGx
    377:378:void setWorldMonitor(surge.server.WorldMonitor) -> OYFA
    382:383:void setTpsMonitor(surge.server.TPSMonitor) -> OYFA
    387:388:void setMemoryMonitor(surge.server.MemoryMonitor) -> OYFA
    26:26:void access$0(surge.server.SuperSampler,int) -> OYFA
    28:28:void access$1(surge.server.SuperSampler,int) -> rNIA
    29:29:void access$2(surge.server.SuperSampler,int) -> OOry
    27:27:void access$3(surge.server.SuperSampler,int) -> NVCA
    30:30:void access$4(surge.server.SuperSampler,int) -> xFgl
    31:31:void access$5(surge.server.SuperSampler,int) -> DqwT
    32:32:void access$6(surge.server.SuperSampler,int) -> LWko
    15:15:void access$7(surge.server.SuperSampler,double) -> OYFA
    17:17:void access$8(surge.server.SuperSampler,double) -> rNIA
    11:11:surge.math.Average access$9(surge.server.SuperSampler) -> OYFA
    15:15:double access$10(surge.server.SuperSampler) -> rNIA
    12:12:surge.math.Average access$11(surge.server.SuperSampler) -> OOry
    17:17:double access$12(surge.server.SuperSampler) -> NVCA
    14:14:void access$13(surge.server.SuperSampler,double) -> OOry
    16:16:void access$14(surge.server.SuperSampler,double) -> NVCA
    19:19:void access$15(surge.server.SuperSampler,double) -> xFgl
    16:16:double access$16(surge.server.SuperSampler) -> xFgl
    20:20:void access$17(surge.server.SuperSampler,double) -> DqwT
    20:20:double access$18(surge.server.SuperSampler) -> DqwT
    21:21:void access$19(surge.server.SuperSampler,double) -> LWko
    22:22:void access$20(surge.server.SuperSampler,long) -> OYFA
    23:23:void access$21(surge.server.SuperSampler,long) -> rNIA
    24:24:void access$22(surge.server.SuperSampler,long) -> OOry
    13:13:surge.math.Average access$23(surge.server.SuperSampler) -> LWko
    25:25:void access$24(surge.server.SuperSampler,long) -> NVCA
surge.server.SuperSampler$1 -> UtOC$1:
    surge.server.SuperSampler this$0 -> jFbx
    1:61:void <init>(surge.server.SuperSampler) -> <init>
    66:73:void updated(int,int,int,int,int,int,int) -> OYFA
surge.server.SuperSampler$2 -> UtOC$2:
    surge.server.SuperSampler this$0 -> jFbx
    1:76:void <init>(surge.server.SuperSampler) -> <init>
    81:90:void onTicked() -> tCWa
surge.server.SuperSampler$3 -> UtOC$3:
    surge.server.SuperSampler this$0 -> jFbx
    1:93:void <init>(surge.server.SuperSampler) -> <init>
    98:103:void onAllocationSet() -> xhro
surge.server.TPSMonitor -> YnxY:
    double tickTimeMS -> sIMh
    double rawTicksPerSecond -> jOTc
    surge.math.Profiler tickProfiler -> PCHw
    surge.math.Profiler tickTimeProfiler -> QVmI
    boolean ticked -> fKXX
    java.lang.Thread$State lastState -> FFMW
    double actualTickTimeMS -> ArQs
    double ltt -> iTbV
    long lastTick -> fJxM
    19:32:void <init>() -> <init>
    void onTicked() -> tCWa
    39:83:void run() -> run
    87:115:void processState(java.lang.Thread$State) -> OYFA
    119:119:double getTickTimeMS() -> bOcw
    124:124:double getRawTicksPerSecond() -> ogLm
    129:129:surge.math.Profiler getTickProfiler() -> GIHR
    134:134:boolean isTicked() -> WiXL
    139:140:void markTick() -> bGUL
    144:144:surge.math.Profiler getTickTimeProfiler() -> bGTk
    149:149:java.lang.Thread$State getLastState() -> xFqd
    154:154:double getActualTickTimeMS() -> savJ
surge.server.WorldMonitor -> vcJg:
    boolean chunksChanged -> dftk
    boolean dropChanged -> cAoJ
    boolean tileChanged -> lDYK
    boolean livingChanged -> ntrW
    boolean totalChanged -> gEjb
    boolean updated -> sYnT
    int totalChunks -> Cwtt
    int totalDrops -> cRmW
    int totalTiles -> opBm
    int totalLiving -> HKpH
    int totalEntities -> IpvE
    int chunksLoaded -> WOkF
    int chunksUnloaded -> IpxS
    long ms -> biPx
    25:44:void <init>() -> <init>
    49:64:void run() -> run
    void updated(int,int,int,int,int,int,int) -> OYFA
    71:76:void on(org.bukkit.event.world.ChunkLoadEvent) -> OYFA
    81:86:void on(org.bukkit.event.world.ChunkUnloadEvent) -> OYFA
    91:92:void on(org.bukkit.event.entity.EntitySpawnEvent) -> OYFA
    97:98:void on(org.bukkit.event.entity.EntityDeathEvent) -> OYFA
    103:104:void on(org.bukkit.event.player.PlayerDropItemEvent) -> OYFA
    109:110:void on(org.bukkit.event.player.PlayerPickupItemEvent) -> OYFA
    115:116:void on(org.bukkit.event.entity.EntityPickupItemEvent) -> OYFA
    121:122:void on(org.bukkit.event.block.BlockPlaceEvent) -> OYFA
    127:128:void on(org.bukkit.event.block.BlockBreakEvent) -> OYFA
    132:133:void doUpdate() -> VUTI
    137:188:void sample() -> Whkc
    192:198:void sampleTotalCount() -> IOOF
    202:208:void sampleLivingCount() -> hbWl
    212:221:void sampleTileCount() -> qdaB
    225:231:void sampleDropCount() -> OXmj
    235:241:void sampleChunkCount() -> teXy
surge.text.PhantomSpinner -> YVHA:
    surge.text.ProgressSpinner s -> ydQG
    surge.text.ProgressSpinner c -> iTbB
    15:19:void <init>(surge.util.C,surge.util.C,surge.util.C) -> <init>
    24:24:java.lang.String toString() -> toString
surge.text.ProgressSpinner -> SLHU:
    java.lang.String[] chars -> JIhg
    int index -> index
    surge.text.ProgressSpinner DEFAULT -> dVRl
    surge.text.ProgressSpinner NETWORK -> WOmA
    surge.text.ProgressSpinner CIRCLES -> ePeD
    surge.text.ProgressSpinner RANDOMS -> pHTO
    surge.text.ProgressSpinner MERGERS -> GcAk
    70:75:void <clinit>() -> <clinit>
    25:29:void <init>(java.lang.String[]) -> <init>
    36:37:void <init>() -> <init>
    45:55:java.lang.String toString() -> toString
    60:60:java.lang.String[] getChars() -> UROU
    65:65:int getIndex() -> getIndex
surge.util.Adapter -> BRfu:
    java.lang.Object adapt(java.lang.Object) -> lLWC
    java.lang.Object onAdapt(java.lang.Object) -> wTep
surge.util.Anchor -> tTVh:
    int value() -> value
surge.util.Area -> LOdH:
    org.bukkit.Location location -> MRov
    java.lang.Double radius -> aCvy
    26:26:boolean within(org.bukkit.Location,org.bukkit.Location,double) -> OYFA
    39:42:void <init>(org.bukkit.Location,java.lang.Double) -> <init>
    46:46:surge.util.Cuboid toCuboid() -> BuNU
    59:62:void <init>(org.bukkit.Location,java.lang.Integer) -> <init>
    76:84:java.lang.Double distance(org.bukkit.Location) -> NVCA
    98:98:java.lang.Double slowDistance(org.bukkit.Location) -> xFgl
    110:110:boolean isWithin(org.bukkit.Location) -> DqwT
    120:120:boolean hasEntities() -> hasEntities
    132:142:org.bukkit.entity.Entity[] getNearbyEntities(org.bukkit.entity.EntityType) -> rNIA
    154:164:org.bukkit.entity.Entity[] getNearbyEntities(java.lang.Class) -> OYFA
    177:201:org.bukkit.entity.Entity[] getNearbyEntities() -> dgKq
    212:222:org.bukkit.entity.Player[] getNearbyPlayers() -> WWtT
    232:232:org.bukkit.Location getLocation() -> getLocation
    243:244:void setLocation(org.bukkit.Location) -> LWko
    253:253:java.lang.Double getRadius() -> KoEn
    264:265:void setRadius(java.lang.Double) -> rNIA
    274:279:org.bukkit.Location random() -> JROx
surge.util.Axis -> qKNF:
    surge.util.Axis X -> gxmt
    surge.util.Axis Y -> yRme
    surge.util.Axis Z -> yBMW
    int x -> x
    int y -> y
    int z -> z
    surge.util.Axis[] $VALUES -> weyg
    5:5:surge.util.Axis[] values() -> values
    5:5:surge.util.Axis valueOf(java.lang.String) -> valueOf
    16:20:void <init>(java.lang.String,int,int,int,int) -> <init>
    24:24:org.bukkit.util.Vector positive() -> JlBp
    29:29:org.bukkit.util.Vector negative() -> UtSR
    5:9:void <clinit>() -> <clinit>
surge.util.BlastResistance -> skGL:
    surge.util.BlastResistance BARRIER -> bFyv
    surge.util.BlastResistance BEDROCK -> oNCB
    surge.util.BlastResistance COMMAND -> xOkM
    surge.util.BlastResistance ENDER_PORTAL -> feJj
    surge.util.BlastResistance ENDER_PORTAL_FRAME -> TFdH
    surge.util.BlastResistance ANVIL -> JAVo
    surge.util.BlastResistance ENCHANTMENT_TABLE -> PCIL
    surge.util.BlastResistance OBSIDIAN -> owtM
    surge.util.BlastResistance ENDER_CHEST -> aDXj
    surge.util.BlastResistance WATER -> cBNe
    surge.util.BlastResistance LAVA -> Ihgc
    surge.util.BlastResistance STATIONARY_WATER -> cSOt
    surge.util.BlastResistance DRAGON_EGG -> yBMH
    surge.util.BlastResistance ENDER_STONE -> nmEV
    surge.util.BlastResistance COAL_BLOCK -> IhjL
    surge.util.BlastResistance DIAMOND_BLOCK -> hRBL
    surge.util.BlastResistance EMERALD_BLOCK -> yuUV
    surge.util.BlastResistance GOLD_BLOCK -> dUtl
    surge.util.BlastResistance IRON_BLOCK -> jhiD
    surge.util.BlastResistance REDSTONE_BLOCK -> ESlf
    surge.util.BlastResistance BRICK -> YUtx
    surge.util.BlastResistance BRICK_STAIRS -> iUDp
    surge.util.BlastResistance HARD_CLAY -> MuWW
    surge.util.BlastResistance STONE -> iCbe
    surge.util.BlastResistance SMOOTH_BRICK -> YNFX
    surge.util.BlastResistance SMOOTH_STAIRS -> ctvC
    surge.util.BlastResistance DOUBLE_STONE_SLAB2 -> NfxV
    surge.util.BlastResistance STONE_SLAB2 -> vbyO
    surge.util.BlastResistance IRON_DOOR -> eaie
    surge.util.BlastResistance IRON_DOOR_BLOCK -> TNvw
    surge.util.BlastResistance IRON_TRAPDOOR -> HTfV
    surge.util.BlastResistance MOB_SPAWNER -> ArSb
    surge.util.BlastResistance WEB -> ryQT
    surge.util.BlastResistance DISPENSER -> fJyC
    surge.util.BlastResistance DROPPER -> Sedv
    surge.util.BlastResistance FURNACE -> HKrt
    surge.util.BlastResistance BURNING_FURNACE -> gFLS
    surge.util.BlastResistance BEACON -> TiIa
    surge.util.BlastResistance COAL_ORE -> mqqL
    surge.util.BlastResistance COCOA -> Yofw
    surge.util.BlastResistance DIAMOND_ORE -> QqAi
    surge.util.BlastResistance EMERALD_ORE -> iCaG
    surge.util.BlastResistance FENCE -> nRpM
    surge.util.BlastResistance FENCE_GATE -> tTbG
    surge.util.BlastResistance ACACIA_FENCE_GATE -> GHpd
    surge.util.BlastResistance BIRCH_FENCE_GATE -> Mtuj
    surge.util.BlastResistance DARK_OAK_FENCE_GATE -> UlLe
    surge.util.BlastResistance SPRUCE_FENCE_GATE -> dpGr
    surge.util.BlastResistance JUNGLE_FENCE_GATE -> ECKf
    surge.util.BlastResistance ACACIA_FENCE -> TNvY
    surge.util.BlastResistance BIRCH_FENCE -> APQf
    surge.util.BlastResistance DARK_OAK_FENCE -> vlKA
    surge.util.BlastResistance SPRUCE_FENCE -> RcDK
    surge.util.BlastResistance JUNGLE_FENCE -> gqAE
    surge.util.BlastResistance ACACIA_WOOD_STAIRS -> tnUC
    surge.util.BlastResistance BIRCH_WOOD_STAIRS -> ofuI
    surge.util.BlastResistance DARK_OAK_WOOD_STAIRS -> PBmB
    surge.util.BlastResistance SPRUCE_WOOD_STAIRS -> Yojb
    surge.util.BlastResistance JUNGLE_WOOD_STAIRS -> VoRg
    surge.util.BlastResistance QUARTZ_STAIRS -> Yoiv
    surge.util.BlastResistance COBBLESTONE_STAIRS -> ObNI
    surge.util.BlastResistance SANDSTONE_STAIRS -> CEXF
    surge.util.BlastResistance NETHER_BRICK_STAIRS -> IXLO
    surge.util.BlastResistance WOOD_STAIRS -> LHBw
    surge.util.BlastResistance RED_SANDSTONE_STAIRS -> DQMR
    surge.util.BlastResistance ACACIA_DOOR -> ytue
    surge.util.BlastResistance BIRCH_DOOR -> VLoT
    surge.util.BlastResistance DARK_OAK_DOOR -> RHrq
    surge.util.BlastResistance SPRUCE_DOOR -> ctxA
    surge.util.BlastResistance JUNGLE_DOOR -> jykc
    surge.util.BlastResistance GOLD_ORE -> SvjX
    surge.util.BlastResistance HOPPER -> XJdb
    surge.util.BlastResistance IRON_ORE -> fuoj
    surge.util.BlastResistance LAPIS_BLOCK -> gyTM
    surge.util.BlastResistance LAPIS_ORE -> SUIA
    surge.util.BlastResistance QUARTZ_ORE -> jOXD
    surge.util.BlastResistance REDSTONE_ORE -> wxAU
    surge.util.BlastResistance TRAP_DOOR -> HehL
    surge.util.BlastResistance WOOD -> jNwH
    surge.util.BlastResistance CHEST -> rEmK
    surge.util.BlastResistance TRAPPED_CHEST -> qCKJ
    surge.util.BlastResistance WORKBENCH -> FgrU
    surge.util.BlastResistance CAULDRON -> pXxb
    surge.util.BlastResistance LOG -> sIQX
    surge.util.BlastResistance LOG_2 -> GcEr
    surge.util.BlastResistance BOOKSHELF -> dxYl
    surge.util.BlastResistance BANNER -> WjDS
    surge.util.BlastResistance STANDING_BANNER -> mqrf
    surge.util.BlastResistance WALL_BANNER -> SKte
    surge.util.BlastResistance JACK_O_LANTERN -> Rsex
    surge.util.BlastResistance MELON_BLOCK -> yleA
    surge.util.BlastResistance SKULL -> dMfT
    surge.util.BlastResistance PUMPKIN -> wLlC
    surge.util.BlastResistance SIGN -> twGn
    surge.util.BlastResistance SIGN_POST -> AOuD
    surge.util.BlastResistance WALL_SIGN -> Purr
    surge.util.BlastResistance QUARTZ_BLOCK -> mYDn
    surge.util.BlastResistance NOTE_BLOCK -> stHY
    surge.util.BlastResistance RED_SANDSTONE -> wgCO
    surge.util.BlastResistance SANDSTONE -> Xlim
    surge.util.BlastResistance WOOL -> wwcH
    surge.util.BlastResistance MONSTER_EGG -> lgCH
    surge.util.BlastResistance RAILS -> KVDP
    surge.util.BlastResistance ACTIVATOR_RAIL -> BljK
    surge.util.BlastResistance DETECTOR_RAIL -> UImk
    surge.util.BlastResistance POWERED_RAIL -> xquK
    surge.util.BlastResistance CLAY -> IhoK
    surge.util.BlastResistance DIRT -> KgFD
    surge.util.BlastResistance GRASS -> tmyM
    surge.util.BlastResistance GRAVEL -> jWkH
    surge.util.BlastResistance SPONGE -> ssfn
    surge.util.BlastResistance BREWING_STAND -> xPSD
    surge.util.BlastResistance STONE_BUTTON -> iTfm
    surge.util.BlastResistance WOOD_BUTTON -> afbB
    surge.util.BlastResistance CAKE_BLOCK -> IiMw
    surge.util.BlastResistance ICE -> jiLf
    surge.util.BlastResistance PACKED_ICE -> jXKW
    surge.util.BlastResistance LEVER -> palS
    surge.util.BlastResistance MYCEL -> MmJR
    surge.util.BlastResistance PISTON_BASE -> VxDh
    surge.util.BlastResistance PISTON_EXTENSION -> STgn
    surge.util.BlastResistance PISTON_MOVING_PIECE -> hbdl
    surge.util.BlastResistance PISTON_STICKY_BASE -> DQMt
    surge.util.BlastResistance GOLD_PLATE -> MSWb
    surge.util.BlastResistance IRON_PLATE -> WHDC
    surge.util.BlastResistance STONE_PLATE -> psNW
    surge.util.BlastResistance WOOD_PLATE -> NpNK
    surge.util.BlastResistance SAND -> nArh
    surge.util.BlastResistance SOUL_SAND -> Wiee
    surge.util.BlastResistance CACTUS -> Rbfn
    surge.util.BlastResistance LADDER -> fnDl
    surge.util.BlastResistance NETHERRACK -> uFkN
    surge.util.BlastResistance GLASS -> vkqO
    surge.util.BlastResistance THIN_GLASS -> Aihy
    surge.util.BlastResistance STAINED_GLASS -> ifMI
    surge.util.BlastResistance STAINED_GLASS_PANE -> fBnu
    surge.util.BlastResistance GLOWSTONE -> kcaf
    surge.util.BlastResistance REDSTONE_LAMP_OFF -> AjJP
    surge.util.BlastResistance REDSTONE_LAMP_ON -> LOwD
    surge.util.BlastResistance SEA_LANTERN -> brYc
    surge.util.BlastResistance BED_BLOCK -> lxGE
    surge.util.BlastResistance DAYLIGHT_DETECTOR -> panl
    surge.util.BlastResistance DAYLIGHT_DETECTOR_INVERTED -> bigr
    surge.util.BlastResistance HUGE_MUSHROOM_1 -> Ukrr
    surge.util.BlastResistance HUGE_MUSHROOM_2 -> WaXd
    surge.util.BlastResistance LEAVES -> DbQS
    surge.util.BlastResistance LEAVES_2 -> IFlQ
    surge.util.BlastResistance SNOW -> bjHN
    int br -> YDxu
    surge.util.BlastResistance[] $VALUES -> rEqU
    10:10:surge.util.BlastResistance[] values() -> values
    10:10:surge.util.BlastResistance valueOf(java.lang.String) -> valueOf
    164:166:void <init>(java.lang.String,int,int) -> <init>
    170:170:int getBlastResistance() -> OjPg
    175:190:int get(org.bukkit.Material) -> OYFA
    10:159:void <clinit>() -> <clinit>
surge.util.Blocks -> lnay:
    11:11:void <init>() -> <init>
    22:22:org.bukkit.Location getCenter(org.bukkit.block.Block) -> OYFA
surge.util.C -> owkb:
    surge.util.C BLACK -> furw
    surge.util.C DARK_BLUE -> XAux
    surge.util.C DARK_GREEN -> PKaF
    surge.util.C DARK_AQUA -> Ukqi
    surge.util.C DARK_RED -> tejJ
    surge.util.C DARK_PURPLE -> TrAQ
    surge.util.C GOLD -> wMPu
    surge.util.C GRAY -> NNKs
    surge.util.C DARK_GRAY -> xGbm
    surge.util.C BLUE -> ssha
    surge.util.C GREEN -> MSYh
    surge.util.C AQUA -> Rjxt
    surge.util.C RED -> qBnD
    surge.util.C LIGHT_PURPLE -> iejS
    surge.util.C YELLOW -> nSWX
    surge.util.C WHITE -> PTSB
    surge.util.C MAGIC -> APXR
    surge.util.C BOLD -> wVAq
    surge.util.C STRIKETHROUGH -> iDGv
    surge.util.C UNDERLINE -> mYFB
    surge.util.C ITALIC -> DkBx
    surge.util.C RESET -> Wqwt
    char COLOR_CHAR -> COLOR_CHAR
    java.util.regex.Pattern STRIP_COLOR_PATTERN -> STRIP_COLOR_PATTERN
    int intCode -> jFnK
    char code -> ienL
    boolean isFormat -> yRxr
    java.lang.String toString -> NMnd
    java.util.Map BY_ID -> fvWI
    java.util.Map BY_CHAR -> QqKj
    java.util.Map dyeChatMap -> lUeD
    java.util.Map chatHexMap -> gphi
    java.util.Map dyeHexMap -> Pmgg
    int[] $SWITCH_TABLE$surge$util$C -> TGPY
    surge.util.C[] ENUM$VALUES -> QqKh
    19:727:void <clinit>() -> <clinit>
    334:335:void <init>(java.lang.String,int,char,int) -> <init>
    337:343:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    347:347:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
    357:357:char getChar() -> getChar
    363:363:java.lang.String toString() -> toString
    373:373:org.bukkit.DyeColor dye() -> aCob
    378:378:java.lang.String hex() -> mXSs
    388:388:boolean isFormat() -> isFormat
    398:398:boolean isColor() -> isColor
    413:418:surge.util.C getByChar(char) -> fJdc
    434:442:surge.util.C getByChar(java.lang.String) -> CxGx
    455:460:java.lang.String stripColor(java.lang.String) -> stripColor
    472:477:surge.util.C dyeToChat(org.bukkit.DyeColor) -> OYFA
    482:490:org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) -> OYFA
    496:501:java.lang.String chatToHex(org.bukkit.ChatColor) -> rNIA
    506:511:java.lang.String dyeToHex(org.bukkit.DyeColor) -> rNIA
    516:537:org.bukkit.Color hexToColor(java.lang.String) -> ieSM
    542:555:org.bukkit.Color rgbToColor(java.lang.String) -> YfdY
    560:578:java.lang.String generateColorTable() -> iSwW
    588:588:org.bukkit.ChatColor chatColor() -> jqNT
    605:614:java.lang.String translateAlternateColorCodes(char,java.lang.String) -> translateAlternateColorCodes
    619:627:surge.util.C fromItemMeta(byte) -> OYFA
    632:679:byte getItemMeta() -> clYc
    692:717:java.lang.String getLastColors(java.lang.String) -> getLastColors
    1:1:surge.util.C[] values() -> values
    1:1:surge.util.C valueOf(java.lang.String) -> valueOf
    332:332:void <init>(java.lang.String,int,char,int,surge.util.C) -> <init>
    337:337:void <init>(java.lang.String,int,char,int,boolean,surge.util.C) -> <init>
    17:17:int[] $SWITCH_TABLE$surge$util$C() -> MBIx
surge.util.C$1 -> owkb$1:
    1:23:void <init>(java.lang.String,int,char,int) -> <init>
    27:27:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$10 -> owkb$2:
    1:122:void <init>(java.lang.String,int,char,int) -> <init>
    126:126:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$11 -> owkb$3:
    1:133:void <init>(java.lang.String,int,char,int) -> <init>
    137:137:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$12 -> owkb$4:
    1:144:void <init>(java.lang.String,int,char,int) -> <init>
    148:148:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$13 -> owkb$5:
    1:155:void <init>(java.lang.String,int,char,int) -> <init>
    159:159:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$14 -> owkb$6:
    1:166:void <init>(java.lang.String,int,char,int) -> <init>
    170:170:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$15 -> owkb$7:
    1:177:void <init>(java.lang.String,int,char,int) -> <init>
    181:181:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$16 -> owkb$8:
    1:188:void <init>(java.lang.String,int,char,int) -> <init>
    192:192:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$17 -> owkb$9:
    1:199:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    203:203:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$18 -> owkb$10:
    1:210:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    214:214:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$19 -> owkb$11:
    1:221:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    225:225:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$2 -> owkb$12:
    1:34:void <init>(java.lang.String,int,char,int) -> <init>
    38:38:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$20 -> owkb$13:
    1:232:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    236:236:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$21 -> owkb$14:
    1:243:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    247:247:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$22 -> owkb$15:
    1:255:void <init>(java.lang.String,int,char,int) -> <init>
    259:259:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$3 -> owkb$16:
    1:45:void <init>(java.lang.String,int,char,int) -> <init>
    49:49:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$4 -> owkb$17:
    1:56:void <init>(java.lang.String,int,char,int) -> <init>
    60:60:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$5 -> owkb$18:
    1:67:void <init>(java.lang.String,int,char,int) -> <init>
    71:71:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$6 -> owkb$19:
    1:78:void <init>(java.lang.String,int,char,int) -> <init>
    82:82:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$7 -> owkb$20:
    1:89:void <init>(java.lang.String,int,char,int) -> <init>
    93:93:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$8 -> owkb$21:
    1:100:void <init>(java.lang.String,int,char,int) -> <init>
    104:104:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.C$9 -> owkb$22:
    1:111:void <init>(java.lang.String,int,char,int) -> <init>
    115:115:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
surge.util.CDou -> JANE:
    double number -> Xlmm
    double max -> max
    8:12:void <init>(double) -> <init>
    16:18:surge.util.CDou set(double) -> WGId
    23:25:surge.util.CDou add(double) -> aKts
    30:32:surge.util.CDou sub(double) -> UADF
    37:37:double get() -> get
    42:48:void circ() -> APHx
surge.util.CMD -> imjC:
    java.lang.String command -> command
    org.bukkit.command.CommandSender sender -> sender
    boolean virtual -> JAcK
    25:30:void <init>(java.lang.String) -> <init>
    39:40:surge.util.CMD virtual() -> fCAn
    51:53:void execute(org.bukkit.command.CommandSender) -> OOry
    60:77:void execute() -> execute
surge.util.CNum -> clWn:
    int number -> number
    int max -> max
    8:12:void <init>(int) -> <init>
    16:18:surge.util.CNum set(int) -> ieSM
    23:25:surge.util.CNum add(int) -> YfdY
    30:32:surge.util.CNum sub(int) -> kYwD
    37:37:int get() -> get
    42:48:void circ() -> APHx
    52:52:int getMax() -> getMax
    57:59:void setMax(int) -> SnDu
surge.util.Callback -> ssWO:
    java.lang.Object get() -> get
surge.util.Chunks -> AaFW:
    13:13:void <init>() -> <init>
    24:24:surge.collection.GList getLoadedChunks(org.bukkit.World) -> rNIA
    34:41:surge.collection.GList getLoadedChunks() -> UAPs
    55:55:surge.collection.GList getRadius(org.bukkit.Chunk,int) -> OOry
    73:73:boolean unload(org.bukkit.Chunk,boolean,boolean) -> OYFA
    87:87:boolean unload(org.bukkit.Chunk,boolean) -> OYFA
    99:99:boolean unload(org.bukkit.Chunk) -> rNIA
    115:125:int unload(surge.collection.GList,boolean,boolean) -> OYFA
    139:139:int unload(surge.collection.GList,boolean) -> OYFA
    151:151:int unload(surge.collection.GList) -> xFgl
    167:167:boolean isLoaded(java.lang.String,int,int) -> OYFA
    183:191:boolean isLoaded(org.bukkit.World,int,int) -> OYFA
    202:206:void load(surge.collection.GList) -> DqwT
surge.util.Cuboid -> LPDl:
    java.lang.String worldName -> hYyV
    int x1 -> WaXw
    int y1 -> VUdm
    int z1 -> BuaL
    int x2 -> cRxu
    int y2 -> OkCn
    int z2 -> gNeQ
    43:56:void <init>(org.bukkit.Location,org.bukkit.Location) -> <init>
    60:70:int depth(surge.util.Axis) -> OYFA
    83:89:void set(org.bukkit.Location,org.bukkit.Location) -> rNIA
    93:93:boolean hasPlayers() -> awXF
    98:110:surge.collection.GList getPlayers() -> CUbr
    115:166:surge.collection.GList getEntities() -> EdfQ
    177:178:void <init>(org.bukkit.Location) -> <init>
    188:189:void <init>(surge.util.Cuboid) -> <init>
    210:218:void <init>(org.bukkit.World,int,int,int,int,int,int) -> <init>
    239:247:void <init>(java.lang.String,int,int,int,int,int,int) -> <init>
    250:258:void <init>(java.util.Map) -> <init>
    263:271:java.util.Map serialize() -> serialize
    276:276:surge.util.Cuboid flatten(int) -> OGeX
    287:287:org.bukkit.Location getLowerNE() -> WOfq
    298:298:org.bukkit.Location getUpperSW() -> OQAh
    308:311:org.bukkit.Location getCenter() -> getCenter
    323:328:org.bukkit.World getWorld() -> getWorld
    338:338:int getSizeX() -> QNVb
    348:348:int getSizeY() -> IhbU
    358:358:int getSizeZ() -> MdNK
    368:368:int getLowerX() -> NgPk
    378:378:int getLowerY() -> Xtmk
    388:388:int getLowerZ() -> qSaa
    398:398:int getUpperX() -> rgfT
    408:408:int getUpperY() -> CfqE
    418:418:int getUpperZ() -> Elvh
    428:438:org.bukkit.block.Block[] corners() -> KCtW
    454:469:surge.util.Cuboid expand(surge.util.Cuboid$CuboidDirection,int) -> OYFA
    484:484:surge.util.Cuboid shift(surge.util.Cuboid$CuboidDirection,int) -> rNIA
    500:514:surge.util.Cuboid outset(surge.util.Cuboid$CuboidDirection,int) -> OOry
    530:530:surge.util.Cuboid inset(surge.util.Cuboid$CuboidDirection,int) -> NVCA
    546:546:boolean contains(int,int,int) -> rNIA
    558:558:boolean contains(org.bukkit.block.Block) -> rNIA
    570:570:boolean contains(org.bukkit.Location) -> fJdc
    580:580:int volume() -> fmTw
    591:601:byte averageLightLevel() -> rhGY
    612:612:surge.util.Cuboid contract() -> KfWy
    626:666:surge.util.Cuboid contract(surge.util.Cuboid$CuboidDirection) -> OYFA
    680:695:surge.util.Cuboid getFace(surge.util.Cuboid$CuboidDirection) -> rNIA
    708:715:boolean containsOnly(org.bukkit.Material) -> rNIA
    727:739:surge.util.Cuboid getBoundingCuboid(surge.util.Cuboid) -> OYFA
    755:755:org.bukkit.block.Block getRelativeBlock(int,int,int) -> OOry
    775:775:org.bukkit.block.Block getRelativeBlock(org.bukkit.World,int,int,int) -> OYFA
    786:800:java.util.List getChunks() -> nAff
    815:819:void fill(int,byte) -> OYFA
    843:843:java.util.Iterator iterator() -> iterator
    854:854:surge.util.Cuboid clone() -> ncif
    865:865:java.lang.String toString() -> toString
    961:970:int hashCode() -> hashCode
    976:1036:boolean equals(java.lang.Object) -> equals
    27:27:java.lang.Object clone() -> clone
surge.util.Cuboid$1 -> LPDl$1:
    surge.util.Cuboid this$0 -> loVi
    99:99:void <init>(surge.util.Cuboid) -> <init>
    103:108:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> OOry
    99:99:java.lang.Object onAdapt(java.lang.Object) -> wTep
surge.util.Cuboid$2 -> LPDl$2:
    int[] $SwitchMap$surge$util$Axis -> TrCG
    int[] $SwitchMap$surge$util$Cuboid$CuboidDirection -> LjJn
    60:454:void <clinit>() -> <clinit>
surge.util.Cuboid$CuboidDirection -> LPDl$OYFA:
    surge.util.Cuboid$CuboidDirection North -> Knvx
    surge.util.Cuboid$CuboidDirection East -> rhVr
    surge.util.Cuboid$CuboidDirection South -> QOFv
    surge.util.Cuboid$CuboidDirection West -> wfeT
    surge.util.Cuboid$CuboidDirection Up -> quuJ
    surge.util.Cuboid$CuboidDirection Down -> QgxL
    surge.util.Cuboid$CuboidDirection Horizontal -> Rskt
    surge.util.Cuboid$CuboidDirection Vertical -> RslS
    surge.util.Cuboid$CuboidDirection Both -> dyBL
    surge.util.Cuboid$CuboidDirection Unknown -> hkYv
    surge.util.Cuboid$CuboidDirection[] $VALUES -> HUMs
    916:916:surge.util.Cuboid$CuboidDirection[] values() -> values
    916:916:surge.util.Cuboid$CuboidDirection valueOf(java.lang.String) -> valueOf
    916:916:void <init>(java.lang.String,int) -> <init>
    932:953:surge.util.Cuboid$CuboidDirection opposite() -> kkaq
    916:928:void <clinit>() -> <clinit>
surge.util.Cuboid$CuboidIterator -> LPDl$rNIA:
    org.bukkit.World w -> aLtH
    int baseX -> pPmo
    int baseY -> jGMW
    int baseZ -> fmeH
    int x -> x
    int y -> y
    int z -> z
    int sizeX -> nKHs
    int sizeY -> oDyq
    int sizeZ -> EeWV
    surge.util.Cuboid this$0 -> loVi
    876:885:void <init>(surge.util.Cuboid,org.bukkit.World,int,int,int,int,int,int) -> <init>
    890:890:boolean hasNext() -> hasNext
    896:906:org.bukkit.block.Block next() -> next
    913:913:void remove() -> remove
    868:868:java.lang.Object next() -> next
surge.util.CuboidException -> hrvM:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>(java.lang.String) -> <init>
surge.util.D -> gWBS:
    surge.collection.GList buffer -> QOIq
    10:10:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    14:18:void flush() -> flush
    22:33:void log(java.lang.String,java.lang.String) -> rNIA
    37:38:void l(java.lang.Object,java.lang.String) -> OYFA
    42:43:void s(java.lang.Object,java.lang.String) -> rNIA
    47:48:void v(java.lang.Object,java.lang.String) -> OOry
    52:53:void w(java.lang.Object,java.lang.String) -> NVCA
    57:58:void f(java.lang.Object,java.lang.String) -> xFgl
    62:69:void l(java.lang.String) -> kYwD
    73:80:void s(java.lang.String) -> SnDu
    84:91:void v(java.lang.String) -> OGeX
    95:102:void w(java.lang.String) -> SdsK
    106:113:void f(java.lang.String) -> lmyx
surge.util.DMSRequire -> UlBE:
    surge.util.DMSRequirement value() -> DGoQ
surge.util.DMSRequirement -> KndQ:
    surge.util.DMSRequirement SQL -> feXG
    surge.util.DMSRequirement[] ENUM$VALUES -> Xloe
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:surge.util.DMSRequirement[] values() -> values
    1:1:surge.util.DMSRequirement valueOf(java.lang.String) -> valueOf
surge.util.Depend -> mPBf:
    surge.util.Depend VAULT -> iTmy
    surge.util.Depend FAWE -> CpUP
    surge.util.Depend WORLDEDIT -> NxeJ
    surge.util.Depend PROTOLIB -> uqdE
    surge.util.Depend CITIZENS -> nJkg
    java.lang.String name -> name
    surge.util.Depend[] ENUM$VALUES -> qnHc
    5:11:void <clinit>() -> <clinit>
    15:18:void <init>(java.lang.String,int,java.lang.String) -> <init>
    22:22:boolean exists() -> exists
    1:1:surge.util.Depend[] values() -> values
    1:1:surge.util.Depend valueOf(java.lang.String) -> valueOf
surge.util.Dimension -> xhro:
    int width -> width
    int height -> height
    int depth -> depth
    25:29:void <init>(int,int,int) -> <init>
    40:44:void <init>(int,int) -> <init>
    53:68:surge.util.DimensionFace getPane() -> DirX
    73:73:int getWidth() -> getWidth
    78:78:int getHeight() -> getHeight
    83:83:int getDepth() -> getDepth
surge.util.DimensionFace -> xyuA:
    surge.util.DimensionFace X -> UJUI
    surge.util.DimensionFace Y -> XvBc
    surge.util.DimensionFace Z -> jysh
    surge.util.DimensionFace[] $VALUES -> WHKL
    8:8:surge.util.DimensionFace[] values() -> values
    8:8:surge.util.DimensionFace valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    8:23:void <clinit>() -> <clinit>
surge.util.Direction -> RjhJ:
    surge.util.Direction U -> xOxL
    surge.util.Direction D -> yAxt
    surge.util.Direction N -> Kfjn
    surge.util.Direction S -> WYJp
    surge.util.Direction E -> FVyI
    surge.util.Direction W -> HwSH
    int x -> x
    int y -> y
    int z -> z
    surge.util.Cuboid$CuboidDirection f -> mPXj
    int[] $SWITCH_TABLE$surge$util$Direction -> ChCe
    surge.util.Direction[] ENUM$VALUES -> ienk
    14:21:void <clinit>() -> <clinit>
    28:34:void <init>(java.lang.String,int,int,int,int,surge.util.Cuboid$CuboidDirection) -> <init>
    38:56:surge.util.Direction reverse() -> gpXK
    61:61:int x() -> FhIT
    66:66:int y() -> JkdO
    71:71:int z() -> z
    76:76:surge.util.Cuboid$CuboidDirection f() -> afTq
    81:81:surge.collection.GList news() -> rgeU
    86:86:surge.collection.GList udnews() -> QEeH
    91:101:surge.util.Direction facing(org.bukkit.entity.Player) -> pHAu
    115:147:surge.util.Direction fromByte(byte) -> rNIA
    158:176:byte byteValue() -> byteValue
    1:1:surge.util.Direction[] values() -> values
    1:1:surge.util.Direction valueOf(java.lang.String) -> valueOf
    14:14:int[] $SWITCH_TABLE$surge$util$Direction() -> awXA
surge.util.Embedded -> rxcf:
    surge.collection.GList get() -> EugI
    void add(java.lang.Object) -> add
surge.util.F -> OYMJ:
    java.text.NumberFormat NF -> kRcV
    java.text.DecimalFormat DF -> jysa
    java.lang.String[] NAMES -> DICm
    java.math.BigInteger THOUSAND -> fuxH
    java.util.NavigableMap MAP -> WYKb
    24:35:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    39:54:java.lang.String time(double,int) -> OYFA
    59:59:java.lang.String b(int) -> b
    64:64:java.lang.String b(long) -> fJdc
    69:69:java.lang.String b(double) -> vABV
    74:91:java.lang.String b(java.math.BigInteger) -> OYFA
    96:100:void instantiate() -> EBaw
    111:111:java.lang.String color(java.lang.String) -> IgwJ
    124:124:java.lang.String fileSize(long) -> fRuL
    137:137:java.lang.String memSize(long) -> mFhm
    150:151:java.lang.String stamp(long) -> wKty
    161:161:java.lang.String stamp() -> KLcr
    177:204:java.lang.String ofSize(long,int) -> rNIA
    209:236:java.lang.String ofSize(long,int,surge.util.C) -> OYFA
    248:248:surge.collection.GList wrap(java.lang.String) -> hsQK
    262:279:surge.collection.GList wrap(java.lang.String,int) -> xFgl
    293:298:java.lang.String trim(java.lang.String,int) -> DqwT
    311:331:java.lang.String cname(java.lang.String) -> qmIo
    346:381:surge.collection.GList getParameters(java.lang.String,char) -> OYFA
    395:407:java.lang.String repeat(java.lang.String,int) -> repeat
    419:426:java.lang.String mem(long) -> dLpA
    439:457:java.lang.String memx(long) -> pHAu
    471:472:java.lang.String f(long) -> JkXv
    484:485:java.lang.String f(int) -> SdsK
    499:508:java.lang.String f(double,int) -> rNIA
    524:533:java.lang.String fd(double,int) -> OOry
    547:556:java.lang.String f(float,int) -> OYFA
    567:567:java.lang.String f(double) -> UQdR
    578:578:java.lang.String f(float) -> OYFA
    593:593:java.lang.String pc(double,int) -> NVCA
    608:608:java.lang.String pc(float,int) -> rNIA
    621:621:java.lang.String pc(double) -> PcwO
    634:634:java.lang.String pc(float) -> rNIA
    650:650:java.lang.String pc(int,int,int) -> NVCA
    664:664:java.lang.String pc(int,int) -> NVCA
    680:680:java.lang.String pc(long,long,int) -> OYFA
    694:694:java.lang.String pc(long,long) -> OYFA
    706:706:java.lang.String msSeconds(long) -> mXJm
    720:720:java.lang.String msSeconds(long,int) -> OOry
    732:732:java.lang.String nsMs(long) -> mNxf
    746:746:java.lang.String nsMs(long,int) -> NVCA
    760:760:java.lang.String nsMsd(long,int) -> xFgl
    772:779:surge.collection.GList color(java.util.List) -> OOry
surge.util.FU -> vAIs:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long ONE_GB -> ONE_GB
    java.io.File[] EMPTY_FILE_ARRAY -> EMPTY_FILE_ARRAY
    95:95:void <clinit>() -> <clinit>
    74:75:void <init>() -> <init>
    110:123:java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    139:145:void touch(java.io.File) -> touch
    159:159:java.io.File[] convertFileCollectionToFileArray(java.util.Collection) -> convertFileCollectionToFileArray
    179:195:java.io.File toFile(java.net.URL) -> toFile
    222:239:java.io.File[] toFiles(java.net.URL[]) -> toFiles
    256:263:java.net.URL[] toURLs(java.io.File[]) -> toURLs
    290:299:void copyFileToDirectory(java.io.File,java.io.File) -> copyFileToDirectory
    324:325:void copyFile(java.io.File,java.io.File) -> copyFile
    353:385:void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    401:430:void doCopyFile(java.io.File,java.io.File,boolean) -> OYFA
    458:475:void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    503:504:void copyDirectory(java.io.File,java.io.File) -> copyDirectory
    534:555:void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    572:610:void doCopyDirectory(java.io.File,java.io.File,boolean) -> rNIA
    636:663:void copyURLToFile(java.net.URL,java.io.File) -> copyURLToFile
    676:687:void deleteDirectory(java.io.File) -> deleteDirectory
    699:734:void cleanDirectory(java.io.File) -> cleanDirectory
    753:776:boolean waitFor(java.io.File,int) -> waitFor
    799:807:java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    823:831:byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    855:863:java.util.List readLines(java.io.File,java.lang.String) -> readLines
    886:894:void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    909:917:void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    942:943:void writeLines(java.io.File,java.lang.String,java.util.Collection) -> writeLines
    970:978:void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String) -> writeLines
    1000:1015:void forceDelete(java.io.File) -> forceDelete
    1030:1037:void forceDeleteOnExit(java.io.File) -> forceDeleteOnExit
    1051:1058:void deleteDirectoryOnExit(java.io.File) -> OOry
    1072:1107:void cleanDirectoryOnExit(java.io.File) -> NVCA
    1123:1138:void forceMkdir(java.io.File) -> forceMkdir
    1152:1184:long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    1207:1215:boolean isFileNewer(java.io.File,java.io.File) -> isFileNewer
    1236:1240:boolean isFileNewer(java.io.File,java.util.Date) -> isFileNewer
    1260:1268:boolean isFileNewer(java.io.File,long) -> isFileNewer
surge.util.FinalDouble -> BAfb:
    double i -> CyEa
    18:21:void <init>(double) -> <init>
    30:30:double get() -> get
    41:42:void set(double) -> set
    52:53:void add(double) -> add
    63:64:void sub(double) -> QpLd
surge.util.FinalFloat -> vsmb:
    float i -> i
    18:21:void <init>(float) -> <init>
    30:30:float get() -> get
    41:42:void set(float) -> set
    52:53:void add(float) -> add
    63:64:void sub(float) -> OOry
surge.util.FinalInteger -> INii:
    int i -> i
    18:21:void <init>(int) -> <init>
    30:30:int get() -> get
    41:42:void set(int) -> set
    52:53:void add(int) -> add
    63:64:void sub(int) -> lmyx
surge.util.FinalLong -> gxdK:
    long i -> GQkv
    18:21:void <init>(long) -> <init>
    30:30:long get() -> get
    41:42:void set(long) -> set
    52:53:void add(long) -> add
    63:64:void sub(long) -> lLWC
surge.util.FinalString -> STXF:
    java.lang.String string -> string
    18:21:void <init>(java.lang.String) -> <init>
    30:30:java.lang.String get() -> get
    41:42:void set(java.lang.String) -> set
surge.util.Fingerprint -> nIsS:
    5:5:void <init>() -> <init>
    9:14:java.lang.String randomFingerprint(java.lang.String) -> BdCG
surge.util.GListAdapter -> tTUq:
    16:16:void <init>() -> <init>
    27:39:java.util.List adapt(java.util.List) -> NVCA
    java.lang.Object onAdapt(java.lang.Object) -> wTep
surge.util.Health -> pjLl:
    double hp -> qLDJ
    20:22:void <init>(double) -> <init>
    31:31:int getFlatHearts() -> sHdp
    41:41:double getHearts() -> ejRH
    51:51:double getHalfHearts() -> YwpO
    61:61:int getFlatHalfHearts() -> Vnfa
surge.util.IO -> hbTx:
    char DIR_SEPARATOR_UNIX -> DIR_SEPARATOR_UNIX
    char DIR_SEPARATOR_WINDOWS -> DIR_SEPARATOR_WINDOWS
    char DIR_SEPARATOR -> DIR_SEPARATOR
    java.lang.String LINE_SEPARATOR_UNIX -> LINE_SEPARATOR_UNIX
    java.lang.String LINE_SEPARATOR_WINDOWS -> LINE_SEPARATOR_WINDOWS
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    97:122:void <clinit>() -> <clinit>
    129:130:void <init>() -> <init>
    146:154:void closeQuietly(java.io.Reader) -> closeQuietly
    169:177:void closeQuietly(java.io.Writer) -> closeQuietly
    192:200:void closeQuietly(java.io.InputStream) -> closeQuietly
    215:223:void closeQuietly(java.io.OutputStream) -> closeQuietly
    243:245:byte[] toByteArray(java.io.InputStream) -> toByteArray
    265:267:byte[] toByteArray(java.io.Reader) -> toByteArray
    293:295:byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    315:315:byte[] toByteArray(java.lang.String) -> toByteArray
    338:340:char[] toCharArray(java.io.InputStream) -> toCharArray
    366:368:char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    388:390:char[] toCharArray(java.io.Reader) -> toCharArray
    412:414:java.lang.String toString(java.io.InputStream) -> toString
    439:441:java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    460:462:java.lang.String toString(java.io.Reader) -> toString
    480:480:java.lang.String toString(byte[]) -> toString
    503:508:java.lang.String toString(byte[],java.lang.String) -> toString
    532:533:java.util.List readLines(java.io.InputStream) -> readLines
    559:565:java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    587:595:java.util.List readLines(java.io.Reader) -> readLines
    610:611:java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    632:633:java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    654:658:void write(byte[],java.io.OutputStream) -> write
    679:683:void write(byte[],java.io.Writer) -> write
    709:719:void write(byte[],java.io.Writer,java.lang.String) -> write
    740:744:void write(char[],java.io.Writer) -> write
    766:770:void write(char[],java.io.OutputStream) -> write
    797:807:void write(char[],java.io.OutputStream,java.lang.String) -> write
    826:830:void write(java.lang.String,java.io.Writer) -> write
    851:855:void write(java.lang.String,java.io.OutputStream) -> write
    880:890:void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    909:913:void write(java.lang.StringBuffer,java.io.Writer) -> write
    934:938:void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    963:973:void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    997:1014:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream) -> writeLines
    1041:1064:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String) -> writeLines
    1084:1101:void writeLines(java.util.Collection,java.lang.String,java.io.Writer) -> writeLines
    1132:1137:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    1160:1168:long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    1192:1194:void copy(java.io.InputStream,java.io.Writer) -> copy
    1222:1230:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    1260:1265:int copy(java.io.Reader,java.io.Writer) -> copy
    1288:1296:long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    1324:1328:void copy(java.io.Reader,java.io.OutputStream) -> copy
    1360:1370:void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    1394:1415:boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    1439:1460:boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
surge.util.Items -> IqNS:
    16:16:void <init>() -> <init>
    27:27:boolean is(org.bukkit.inventory.ItemStack) -> OYFA
    41:41:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material) -> OYFA
    56:56:boolean is(org.bukkit.inventory.ItemStack,surge.util.MaterialBlock) -> OYFA
    72:72:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,byte) -> OYFA
    88:88:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,int) -> OYFA
    100:100:boolean hasMeta(org.bukkit.inventory.ItemStack) -> rNIA
    112:112:boolean hasName(org.bukkit.inventory.ItemStack) -> OOry
    124:124:boolean hasLore(org.bukkit.inventory.ItemStack) -> NVCA
    138:138:boolean hasName(org.bukkit.inventory.ItemStack,java.lang.String) -> OYFA
    152:152:boolean hasLore(org.bukkit.inventory.ItemStack,java.util.List) -> OYFA
    166:166:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment) -> OYFA
    182:187:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment,int) -> OYFA
    199:204:boolean hasEnchantments(org.bukkit.inventory.ItemStack) -> xFgl
    217:222:surge.util.MaterialBlock toMaterialBlock(org.bukkit.inventory.ItemStack) -> DqwT
    234:234:boolean isBroken(org.bukkit.inventory.ItemStack) -> LWko
    246:246:boolean hasDurability(org.bukkit.inventory.ItemStack) -> fJdc
    258:268:double getDurabilityPercent(org.bukkit.inventory.ItemStack) -> fRuL
    281:294:void setDurabilityPercent(org.bukkit.inventory.ItemStack,double) -> OYFA
    305:310:short getMaxDurability(org.bukkit.inventory.ItemStack) -> mFhm
    322:327:short getDurability(org.bukkit.inventory.ItemStack) -> wKty
    340:346:void setDurability(org.bukkit.inventory.ItemStack,short) -> OYFA
    358:364:void setDurability(org.bukkit.inventory.ItemStack,int) -> OYFA
    376:382:void damage(org.bukkit.inventory.ItemStack,int) -> rNIA
    396:439:boolean isMergable(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack) -> OYFA
surge.util.MSound -> hHaa:
    surge.util.MSound AMBIENCE_CAVE -> mXhd
    surge.util.MSound AMBIENCE_RAIN -> CxeN
    surge.util.MSound AMBIENCE_THUNDER -> klYK
    surge.util.MSound ANVIL_BREAK -> CxgV
    surge.util.MSound ANVIL_LAND -> ESyP
    surge.util.MSound ANVIL_USE -> cuax
    surge.util.MSound ARROW_HIT -> TiWQ
    surge.util.MSound BURP -> dgdH
    surge.util.MSound CHEST_CLOSE -> erxI
    surge.util.MSound CHEST_OPEN -> AHMR
    surge.util.MSound CLICK -> kAcp
    surge.util.MSound DOOR_CLOSE -> bina
    surge.util.MSound DOOR_OPEN -> psXB
    surge.util.MSound DRINK -> IOdy
    surge.util.MSound EAT -> NNTR
    surge.util.MSound EXPLODE -> PLJG
    surge.util.MSound FALL_BIG -> Rsqj
    surge.util.MSound FALL_SMALL -> Gsrb
    surge.util.MSound FIRE -> jyus
    surge.util.MSound FIRE_IGNITE -> aEGr
    surge.util.MSound FIZZ -> kSFR
    surge.util.MSound FUSE -> uhro
    surge.util.MSound GLASS -> nKMi
    surge.util.MSound HURT_FLESH -> HDQD
    surge.util.MSound ITEM_BREAK -> yloS
    surge.util.MSound ITEM_PICKUP -> BvFA
    surge.util.MSound LAVA -> QNkE
    surge.util.MSound LAVA_POP -> QqNl
    surge.util.MSound LEVEL_UP -> oxdE
    surge.util.MSound MINECART_BASE -> SwUI
    surge.util.MSound MINECART_INSIDE -> CWFn
    surge.util.MSound NOTE_BASS -> SCrD
    surge.util.MSound NOTE_PIANO -> LGnW
    surge.util.MSound NOTE_BASS_DRUM -> vAek
    surge.util.MSound NOTE_STICKS -> PKjQ
    surge.util.MSound NOTE_BASS_GUITAR -> YEbw
    surge.util.MSound NOTE_SNARE_DRUM -> BeDw
    surge.util.MSound NOTE_PLING -> Kwoo
    surge.util.MSound ORB_PICKUP -> ejib
    surge.util.MSound PISTON_EXTEND -> iLab
    surge.util.MSound PISTON_RETRACT -> qTXu
    surge.util.MSound PORTAL -> jWtp
    surge.util.MSound PORTAL_TRAVEL -> cTBh
    surge.util.MSound PORTAL_TRIGGER -> jWtr
    surge.util.MSound SHOOT_ARROW -> HCsR
    surge.util.MSound SPLASH -> vJWM
    surge.util.MSound SPLASH2 -> qKhX
    surge.util.MSound STEP_GRASS -> dott
    surge.util.MSound STEP_GRAVEL -> lwlu
    surge.util.MSound STEP_LADDER -> oNSH
    surge.util.MSound STEP_SAND -> HLcH
    surge.util.MSound STEP_SNOW -> MSbH
    surge.util.MSound STEP_STONE -> SLbX
    surge.util.MSound STEP_WOOD -> mYOA
    surge.util.MSound STEP_WOOL -> EnNT
    surge.util.MSound SWIM -> scOc
    surge.util.MSound WATER -> dMrf
    surge.util.MSound WOOD_CLICK -> IPFu
    surge.util.MSound BAT_DEATH -> YhGT
    surge.util.MSound BAT_HURT -> WXoM
    surge.util.MSound BAT_IDLE -> rOJo
    surge.util.MSound BAT_LOOP -> hlBI
    surge.util.MSound BAT_TAKEOFF -> NowT
    surge.util.MSound BLAZE_BREATH -> aVKg
    surge.util.MSound BLAZE_DEATH -> STrj
    surge.util.MSound BLAZE_HIT -> fLLS
    surge.util.MSound CAT_HISS -> xYQC
    surge.util.MSound CAT_HIT -> DIKM
    surge.util.MSound CAT_MEOW -> LjUC
    surge.util.MSound CAT_PURR -> DHjQ
    surge.util.MSound CAT_PURREOW -> LXqs
    surge.util.MSound CHICKEN_IDLE -> GJCo
    surge.util.MSound CHICKEN_HURT -> IFwp
    surge.util.MSound CHICKEN_EGG_POP -> jXXQ
    surge.util.MSound CHICKEN_WALK -> oEcq
    surge.util.MSound COW_IDLE -> RsvR
    surge.util.MSound COW_HURT -> agQB
    surge.util.MSound COW_WALK -> bsDe
    surge.util.MSound CREEPER_HISS -> ioFq
    surge.util.MSound CREEPER_DEATH -> hRPw
    surge.util.MSound ENDERDRAGON_DEATH -> FycS
    surge.util.MSound ENDERDRAGON_GROWL -> Blwj
    surge.util.MSound ENDERDRAGON_HIT -> JclS
    surge.util.MSound ENDERDRAGON_WINGS -> VDlJ
    surge.util.MSound ENDERMAN_DEATH -> KxQj
    surge.util.MSound ENDERMAN_HIT -> XTDW
    surge.util.MSound ENDERMAN_IDLE -> iCqm
    surge.util.MSound ENDERMAN_TELEPORT -> twWD
    surge.util.MSound ENDERMAN_SCREAM -> cBaG
    surge.util.MSound ENDERMAN_STARE -> qmmJ
    surge.util.MSound GHAST_SCREAM -> Wiqc
    surge.util.MSound GHAST_SCREAM2 -> GtVU
    surge.util.MSound GHAST_CHARGE -> MvGi
    surge.util.MSound GHAST_DEATH -> BCER
    surge.util.MSound GHAST_FIREBALL -> vJXH
    surge.util.MSound GHAST_MOAN -> FhbU
    surge.util.MSound IRONGOLEM_DEATH -> vtjw
    surge.util.MSound IRONGOLEM_HIT -> oVdl
    surge.util.MSound IRONGOLEM_THROW -> oVeL
    surge.util.MSound IRONGOLEM_WALK -> GlIE
    surge.util.MSound MAGMACUBE_WALK -> GJFF
    surge.util.MSound MAGMACUBE_WALK2 -> IFyb
    surge.util.MSound MAGMACUBE_JUMP -> IPLI
    surge.util.MSound PIG_IDLE -> tvxo
    surge.util.MSound PIG_DEATH -> jWxk
    surge.util.MSound PIG_WALK -> PLOd
    surge.util.MSound SHEEP_IDLE -> bXsV
    surge.util.MSound SHEEP_SHEAR -> jqlL
    surge.util.MSound SHEEP_WALK -> vAjK
    surge.util.MSound SILVERFISH_HIT -> KNAw
    surge.util.MSound SILVERFISH_KILL -> sIbU
    surge.util.MSound SILVERFISH_IDLE -> Laeh
    surge.util.MSound SILVERFISH_WALK -> MJuq
    surge.util.MSound SKELETON_IDLE -> kRlQ
    surge.util.MSound SKELETON_DEATH -> TGYM
    surge.util.MSound SKELETON_HURT -> PvbB
    surge.util.MSound SKELETON_WALK -> hRRy
    surge.util.MSound SLIME_ATTACK -> TOhr
    surge.util.MSound SLIME_WALK -> RIcQ
    surge.util.MSound SLIME_WALK2 -> GJDe
    surge.util.MSound SPIDER_IDLE -> GtWo
    surge.util.MSound SPIDER_DEATH -> fnQA
    surge.util.MSound SPIDER_WALK -> tevc
    surge.util.MSound WITHER_DEATH -> lDmT
    surge.util.MSound WITHER_HURT -> RRUK
    surge.util.MSound WITHER_IDLE -> tMDo
    surge.util.MSound WITHER_SHOOT -> AQFE
    surge.util.MSound WITHER_SPAWN -> wgOd
    surge.util.MSound WOLF_BARK -> mHPU
    surge.util.MSound WOLF_DEATH -> QiEB
    surge.util.MSound WOLF_GROWL -> LGrG
    surge.util.MSound WOLF_HOWL -> slDn
    surge.util.MSound WOLF_HURT -> iewB
    surge.util.MSound WOLF_PANT -> twWu
    surge.util.MSound WOLF_SHAKE -> slEN
    surge.util.MSound WOLF_WALK -> payv
    surge.util.MSound WOLF_WHINE -> Qpso
    surge.util.MSound ZOMBIE_METAL -> VfqV
    surge.util.MSound ZOMBIE_WOOD -> GkhB
    surge.util.MSound ZOMBIE_WOODBREAK -> mrdK
    surge.util.MSound ZOMBIE_IDLE -> kmBQ
    surge.util.MSound ZOMBIE_DEATH -> hRWA
    surge.util.MSound ZOMBIE_HURT -> Tqnt
    surge.util.MSound ZOMBIE_INFECT -> SCwg
    surge.util.MSound ZOMBIE_UNFECT -> FOTq
    surge.util.MSound ZOMBIE_REMEDY -> OcAO
    surge.util.MSound ZOMBIE_WALK -> BulP
    surge.util.MSound ZOMBIE_PIG_IDLE -> wxTo
    surge.util.MSound ZOMBIE_PIG_ANGRY -> UAml
    surge.util.MSound ZOMBIE_PIG_DEATH -> iTxl
    surge.util.MSound ZOMBIE_PIG_HURT -> gOTK
    surge.util.MSound DIG_WOOL -> sJDr
    surge.util.MSound DIG_GRASS -> rGAq
    surge.util.MSound DIG_GRAVEL -> ydhH
    surge.util.MSound DIG_SAND -> BBgQ
    surge.util.MSound DIG_SNOW -> tUWv
    surge.util.MSound DIG_STONE -> neIV
    surge.util.MSound DIG_WOOD -> QXEy
    surge.util.MSound FIREWORK_BLAST -> mXtX
    surge.util.MSound FIREWORK_BLAST2 -> etBD
    surge.util.MSound FIREWORK_LARGE_BLAST -> KDrV
    surge.util.MSound FIREWORK_LARGE_BLAST2 -> EKqj
    surge.util.MSound FIREWORK_TWINKLE -> rqUK
    surge.util.MSound FIREWORK_TWINKLE2 -> RcWm
    surge.util.MSound FIREWORK_LAUNCH -> YMyM
    surge.util.MSound SUCCESSFUL_HIT -> LjVx
    surge.util.MSound HORSE_ANGRY -> UdPn
    surge.util.MSound HORSE_ARMOR -> GtYq
    surge.util.MSound HORSE_BREATHE -> QheO
    surge.util.MSound HORSE_DEATH -> BBiA
    surge.util.MSound HORSE_GALLOP -> WjVf
    surge.util.MSound HORSE_HIT -> IqoO
    surge.util.MSound HORSE_IDLE -> rqTp
    surge.util.MSound HORSE_JUMP -> rXCW
    surge.util.MSound HORSE_LAND -> HLhr
    surge.util.MSound HORSE_SADDLE -> Hnkw
    surge.util.MSound HORSE_SOFT -> dxlw
    surge.util.MSound HORSE_WOOD -> slGS
    surge.util.MSound DONKEY_ANGRY -> cmYn
    surge.util.MSound DONKEY_DEATH -> QOTJ
    surge.util.MSound DONKEY_HIT -> XSgi
    surge.util.MSound DONKEY_IDLE -> aDod
    surge.util.MSound HORSE_SKELETON_DEATH -> dVjP
    surge.util.MSound HORSE_SKELETON_HIT -> LagD
    surge.util.MSound HORSE_SKELETON_IDLE -> sRTb
    surge.util.MSound HORSE_ZOMBIE_DEATH -> msGJ
    surge.util.MSound HORSE_ZOMBIE_HIT -> iLgO
    surge.util.MSound HORSE_ZOMBIE_IDLE -> YVja
    surge.util.MSound VILLAGER_DEATH -> WXtj
    surge.util.MSound VILLAGER_HAGGLE -> rOUN
    surge.util.MSound VILLAGER_HIT -> KVVP
    surge.util.MSound VILLAGER_IDLE -> CVms
    surge.util.MSound VILLAGER_NO -> tnmC
    surge.util.MSound VILLAGER_YES -> Djrw
    java.lang.String pre19sound -> LGwI
    java.lang.String post19sound -> DRCD
    org.bukkit.Sound resolvedSound -> fCbD
    surge.util.MSound[] ENUM$VALUES -> wMaq
    8:203:void <clinit>() -> <clinit>
    207:213:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    217:229:org.bukkit.Sound bukkitSound() -> CpAq
    1:1:surge.util.MSound[] values() -> values
    1:1:surge.util.MSound valueOf(java.lang.String) -> valueOf
surge.util.MaterialBlock -> MJVO:
    org.bukkit.Material material -> iCyA
    java.lang.Byte data -> vRnw
    26:29:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    32:35:void <init>(org.bukkit.Material) -> <init>
    38:41:void <init>(org.bukkit.Location) -> <init>
    44:47:void <init>() -> <init>
    51:51:org.bukkit.Material getMaterial() -> getMaterial
    56:57:void setMaterial(org.bukkit.Material) -> setMaterial
    61:61:java.lang.Byte getData() -> EmWN
    66:67:void setData(java.lang.Byte) -> OYFA
    72:77:java.lang.String toString() -> toString
    83:87:int hashCode() -> hashCode
    93:121:boolean equals(java.lang.Object) -> equals
surge.util.P -> QpTj:
    25:25:void <init>() -> <init>
    36:36:boolean isOnline(java.lang.String) -> qlhv
    48:48:org.bukkit.entity.Player getPlayer(java.lang.String) -> getPlayer
    58:58:org.bukkit.entity.Player getAnyPlayer() -> CVPy
    68:68:boolean isAnyOnline() -> BuQX
    80:80:surge.collection.GList inWorld(org.bukkit.World) -> OOry
    92:104:surge.collection.GList inChunk(org.bukkit.Chunk) -> OOry
    118:118:surge.collection.GList inArea(org.bukkit.Location,double) -> OOry
    132:132:surge.collection.GList inArea(org.bukkit.Location,int) -> OYFA
    143:144:void disable(org.bukkit.entity.Player) -> JkXv
    154:155:void enable(org.bukkit.entity.Player) -> mXJm
    168:168:org.bukkit.Location targetBlock(org.bukkit.entity.Player,int) -> OYFA
    182:182:org.bukkit.entity.Entity targetEntity(org.bukkit.entity.Player,int) -> rNIA
    194:195:boolean hasInventoryOpen(org.bukkit.entity.Player) -> mNxf
    211:243:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Player,double,double) -> OYFA
    257:266:int getTotalExperience(org.bukkit.entity.Player) -> lLWC
    281:289:void setTotalExperience(org.bukkit.entity.Player,int) -> OOry
    300:300:boolean canFindPlayer(java.lang.String) -> xWjv
    312:328:org.bukkit.entity.Player findPlayer(java.lang.String) -> CUbr
    338:345:surge.collection.GList onlinePlayers() -> ryJv
    357:357:org.bukkit.Location getCrotchLocation(org.bukkit.entity.Player) -> wTep
    368:371:void clear(org.bukkit.entity.Player) -> Whkc
    381:385:void clearEffects(org.bukkit.entity.Player) -> WGId
    398:399:void heal(org.bukkit.entity.Player,double) -> OYFA
    409:410:void heal(org.bukkit.entity.Player) -> aKts
    421:422:void resetMaxHeath(org.bukkit.entity.Player) -> UADF
    432:433:void resetHunger(org.bukkit.entity.Player) -> vABV
    443:444:void kill(org.bukkit.entity.Player) -> UQdR
    455:455:surge.util.Shape getShape(org.bukkit.entity.Player) -> PcwO
    467:467:org.bukkit.Location getHand(org.bukkit.entity.Player) -> QpLd
    483:492:org.bukkit.Location getHand(org.bukkit.entity.Player,float,float) -> OYFA
surge.util.P$1 -> QpTj$1:
    1:92:void <init>() -> <init>
    97:102:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> OOry
    1:1:java.lang.Object onAdapt(java.lang.Object) -> wTep
surge.util.P$2 -> QpTj$2:
    java.lang.Double val$doff -> pcAN
    org.bukkit.entity.Player val$e -> BTLD
    org.bukkit.entity.Entity[] val$result -> ioMp
    1:224:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Player,org.bukkit.entity.Entity[]) -> <init>
    229:240:void onTrace(org.bukkit.Location) -> fRuL
surge.util.PE -> nceV:
    surge.util.PE ABSORPTION -> BeLn
    surge.util.PE BLINDNESS -> sQvf
    surge.util.PE CONFUSION -> EnWk
    surge.util.PE DAMAGE_RESISTANCE -> kdSI
    surge.util.PE FAST_DIGGING -> xHTn
    surge.util.PE FIRE_RESISTANCE -> nKYI
    surge.util.PE GLOWING -> tnkg
    surge.util.PE HARM -> MdkY
    surge.util.PE HEAL -> cBfv
    surge.util.PE HEALTH_BOOST -> nJvk
    surge.util.PE HUNGER -> cdiu
    surge.util.PE INCREASE_DAMAGE -> BSku
    surge.util.PE INVISIBILITY -> rXDn
    surge.util.PE JUMP -> LPgI
    surge.util.PE LEVITATION -> agTs
    surge.util.PE LUCK -> TjAX
    surge.util.PE NIGHT_VISION -> HLkR
    surge.util.PE POISON -> magK
    surge.util.PE REGENERATION -> AQIl
    surge.util.PE SATURATION -> lUrf
    surge.util.PE SLOW -> EvgM
    surge.util.PE SLOW_DIGGING -> EKrd
    surge.util.PE SPEED -> oEjA
    surge.util.PE UNLUCK -> OcBh
    surge.util.PE WATER_BREATHING -> GlOJ
    surge.util.PE WEAKNESS -> ghjB
    surge.util.PE WITHER -> tnoR
    192:215:void <clinit>() -> <clinit>
    50:51:void <init>(java.util.Map) -> <init>
    55:56:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> <init>
    60:61:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean) -> <init>
    65:66:void <init>(org.bukkit.potion.PotionEffectType,int,int) -> <init>
    71:71:java.util.Map serialize() -> serialize
    77:79:boolean apply(org.bukkit.entity.LivingEntity) -> apply
    85:85:boolean equals(java.lang.Object) -> equals
    91:91:int getAmplifier() -> getAmplifier
    97:97:int getDuration() -> getDuration
    103:103:org.bukkit.potion.PotionEffectType getType() -> getType
    109:109:boolean isAmbient() -> isAmbient
    115:115:boolean hasParticles() -> hasParticles
    121:121:int hashCode() -> hashCode
    127:127:java.lang.String toString() -> toString
    132:132:surge.util.PE defaulted(org.bukkit.potion.PotionEffectType) -> OYFA
    144:144:surge.util.PE d(int) -> IgwJ
    156:156:surge.util.PE a(int) -> hsQK
    166:166:org.bukkit.potion.PotionEffect c() -> VvyY
    177:178:void c(org.bukkit.entity.LivingEntity) -> OYFA
    182:183:void crm(org.bukkit.entity.LivingEntity) -> rNIA
    187:188:void rm(org.bukkit.entity.LivingEntity) -> OOry
surge.util.Paste -> AXVJ:
    15:15:void <init>() -> <init>
    28:36:java.lang.String paste(java.lang.String) -> OHFh
surge.util.Persist -> hjdi:
surge.util.PluginUtil -> ETAM:
    61:61:void <init>() -> <init>
    72:74:void enable(org.bukkit.plugin.Plugin) -> OYFA
    81:85:void enableAll() -> YUoS
    95:99:void disable(org.bukkit.plugin.Plugin) -> rNIA
    106:110:void disableAll() -> qKSv
    121:121:java.lang.String getFormattedName(org.bukkit.plugin.Plugin) -> OOry
    135:142:java.lang.String getFormattedName(org.bukkit.plugin.Plugin,boolean) -> OYFA
    154:159:org.bukkit.plugin.Plugin getPluginByName(java.lang.String) -> IhWu
    169:172:java.util.List getPluginNames(boolean) -> wKty
    184:187:java.lang.String getPluginVersion(java.lang.String) -> sbOJ
    200:222:java.lang.String getUsages(org.bukkit.plugin.Plugin) -> NVCA
    237:316:java.util.List findByCommand(java.lang.String) -> aTiC
    337:338:void load(org.bukkit.plugin.Plugin) -> xFgl
    342:364:java.lang.String getPluginFileName(java.lang.String) -> Xkpe
    377:429:void load(java.lang.String) -> load
    441:446:void reload(org.bukkit.plugin.Plugin) -> DqwT
    453:457:void reloadAll() -> aDUY
    469:595:void unload(org.bukkit.plugin.Plugin) -> LWko
surge.util.PositionalSelector -> xFnj:
    surge.collection.GSet allowedChunks -> fmvk
    12:15:void <init>() -> <init>
    19:21:void <init>(org.bukkit.Chunk) -> <init>
    23:26:void <init>(org.bukkit.World) -> <init>
    30:31:void addWorld(org.bukkit.World) -> addWorld
    35:36:void addAllWorlds() -> lewV
    40:41:void addChunk(org.bukkit.Chunk) -> NVCA
    45:45:surge.collection.GSet getAllowedChunks() -> NVPv
surge.util.Protocol -> hkFQ:
    surge.util.Protocol LATEST -> gGHC
    surge.util.Protocol R1_12_2 -> aoiS
    surge.util.Protocol R1_12_2_PRE -> bsLq
    surge.util.Protocol R1_12_1 -> cTLr
    surge.util.Protocol R1_12 -> kApb
    surge.util.Protocol R1_11_2 -> qKsH
    surge.util.Protocol R1_11_1 -> eRBh
    surge.util.Protocol R1_11 -> Jtwi
    surge.util.Protocol R1_10_2 -> TGaF
    surge.util.Protocol R1_10_1 -> ryhu
    surge.util.Protocol R1_10 -> cTLJ
    surge.util.Protocol R1_9_4 -> bQHg
    surge.util.Protocol R1_9_3 -> nTJx
    surge.util.Protocol R1_9_2 -> OYrT
    surge.util.Protocol R1_9_1 -> aUtg
    surge.util.Protocol R1_9 -> lxXd
    surge.util.Protocol R1_8_9 -> oElU
    surge.util.Protocol R1_8_8 -> ejqm
    surge.util.Protocol R1_8_7 -> vSPy
    surge.util.Protocol R1_8_6 -> yBgg
    surge.util.Protocol R1_8_5 -> KMfV
    surge.util.Protocol R1_8_4 -> afvj
    surge.util.Protocol R1_8_3 -> YyRq
    surge.util.Protocol R1_8_2 -> eHpE
    surge.util.Protocol R1_8_1 -> jPNq
    surge.util.Protocol R1_8 -> ghgp
    surge.util.Protocol R1_7_10 -> sRXg
    surge.util.Protocol R1_7_9 -> JSTi
    surge.util.Protocol R1_7_8 -> ndlD
    surge.util.Protocol R1_7_7 -> lEVo
    surge.util.Protocol R1_7_6 -> igAs
    surge.util.Protocol R1_7_5 -> nSlx
    surge.util.Protocol R1_7_4 -> IGbj
    surge.util.Protocol R1_7_3 -> JJel
    surge.util.Protocol R1_7_2 -> xrmP
    surge.util.Protocol R1_7_1 -> fmxf
    surge.util.Protocol B1_6_4 -> lDur
    surge.util.Protocol B1_6_3 -> hIlB
    surge.util.Protocol B1_6_2 -> xPjM
    surge.util.Protocol B1_6_1 -> pHqq
    surge.util.Protocol B1_5_2 -> HxEd
    surge.util.Protocol B1_5_1 -> FiMv
    surge.util.Protocol B1_5 -> IHDQ
    surge.util.Protocol B1_4_7 -> oEnt
    surge.util.Protocol B1_4_6 -> xGxO
    surge.util.Protocol B1_4_5 -> jXay
    surge.util.Protocol B1_4_4 -> JAuS
    surge.util.Protocol B1_4_2 -> feiA
    surge.util.Protocol B1_3_2 -> fLWG
    surge.util.Protocol B1_3_1 -> CVrC
    surge.util.Protocol B1_2_5 -> XmbB
    surge.util.Protocol B1_2_4 -> YWSL
    surge.util.Protocol EARLIEST -> MeRT
    surge.util.Protocol UNKNOWN -> HfdB
    int version -> version
    java.lang.String search -> dVok
    surge.util.Protocol[] $VALUES -> sklh
    5:5:surge.util.Protocol[] values() -> values
    5:5:surge.util.Protocol valueOf(java.lang.String) -> valueOf
    66:74:void <init>(java.lang.String,int,int) -> <init>
    78:86:surge.util.Protocol getProtocolVersion() -> Jsvy
    91:91:surge.util.ProtocolRange to(surge.util.Protocol) -> rNIA
    96:96:boolean isServerVersion() -> qSdF
    101:101:java.lang.String getVersionString() -> getVersionString
    106:106:boolean isNettySupported() -> MAlM
    111:111:boolean isActualVersion() -> IORb
    116:121:int getVersion() -> getVersion
    126:126:int getMetaVersion() -> dUnx
    5:60:void <clinit>() -> <clinit>
surge.util.ProtocolRange -> XuJD:
    surge.util.Protocol from -> Dsfy
    surge.util.Protocol to -> kmFt
    9:12:void <init>(surge.util.Protocol,surge.util.Protocol) -> <init>
    16:16:surge.util.Protocol getFrom() -> YpCh
    21:21:surge.util.Protocol getTo() -> FhLe
    26:26:boolean contains(surge.util.Protocol) -> OOry
    32:32:java.lang.String toString() -> toString
surge.util.Range -> nIsD:
    double min -> min
    double max -> max
    21:25:void <init>(double,double) -> <init>
    37:38:void <init>(int,int) -> <init>
    50:51:void <init>(long,long) -> <init>
    60:60:double randomNext() -> OXtJ
    70:70:int randomNextInt() -> PSfa
    80:80:long randomNextLong() -> mFvf
    92:92:boolean isWithin(double) -> rpIo
    104:104:boolean isWithin(int) -> qmIo
    116:116:boolean isWithin(long) -> wTep
    121:121:double getMin() -> getMin
    126:127:void setMin(double) -> SurD
    131:131:double getMax() -> getMax
    136:137:void setMax(double) -> JYvB
surge.util.RayTrace -> OsBb:
    org.bukkit.Location start -> fvhl
    org.bukkit.util.Vector direction -> wNFa
    java.lang.Double maxDistance -> MBlX
    java.lang.Double distanceCovered -> xXyK
    java.lang.Double step -> QiMC
    java.lang.Boolean stop -> YVot
    37:44:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double) -> <init>
    51:65:void trace() -> EBed
    73:74:void stop() -> stop
    85:85:void onTrace(org.bukkit.Location) -> fRuL
    89:89:org.bukkit.Location getStart() -> jiCQ
    94:95:void setStart(org.bukkit.Location) -> mFhm
    99:99:org.bukkit.util.Vector getDirection() -> getDirection
    104:105:void setDirection(org.bukkit.util.Vector) -> setDirection
    109:109:java.lang.Double getMaxDistance() -> cRlM
    114:115:void setMaxDistance(java.lang.Double) -> OOry
    119:119:java.lang.Double getDistanceCovered() -> pjRn
    124:125:void setDistanceCovered(java.lang.Double) -> NVCA
    129:129:java.lang.Double getStep() -> lLdU
    134:135:void setStep(java.lang.Double) -> xFgl
surge.util.ReflectionUtils -> cSHg:
    33:36:void <init>() -> <init>
    56:65:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    89:89:java.lang.reflect.Constructor getConstructor(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.Class[]) -> OYFA
    119:119:java.lang.Object instantiateObject(java.lang.Class,java.lang.Object[]) -> OYFA
    156:156:java.lang.Object instantiateObject(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.Object[]) -> OYFA
    178:187:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    213:213:java.lang.reflect.Method getMethod(java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Class[]) -> OYFA
    243:243:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    276:276:java.lang.Object invokeMethod(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Object[]) -> OYFA
    312:312:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Object[]) -> OYFA
    332:334:java.lang.reflect.Field getField(java.lang.Class,boolean,java.lang.String) -> OYFA
    360:360:java.lang.reflect.Field getField(java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> OYFA
    387:387:java.lang.Object getValue(java.lang.Object,java.lang.Class,boolean,java.lang.String) -> OYFA
    419:419:java.lang.Object getValue(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> OYFA
    446:446:java.lang.Object getValue(java.lang.Object,boolean,java.lang.String) -> OYFA
    475:476:void setValue(java.lang.Object,java.lang.Class,boolean,java.lang.String,java.lang.Object) -> OYFA
    509:510:void setValue(java.lang.Object,java.lang.String,surge.util.ReflectionUtils$PackageType,boolean,java.lang.String,java.lang.Object) -> OYFA
    536:537:void setValue(java.lang.Object,boolean,java.lang.String,java.lang.Object) -> OYFA
surge.util.ReflectionUtils$DataType -> cSHg$OYFA:
    surge.util.ReflectionUtils$DataType BYTE -> PUGk
    surge.util.ReflectionUtils$DataType SHORT -> THBY
    surge.util.ReflectionUtils$DataType INTEGER -> Ulfu
    surge.util.ReflectionUtils$DataType LONG -> hIij
    surge.util.ReflectionUtils$DataType CHARACTER -> PvjW
    surge.util.ReflectionUtils$DataType FLOAT -> jqro
    surge.util.ReflectionUtils$DataType DOUBLE -> vleQ
    surge.util.ReflectionUtils$DataType BOOLEAN -> NOAs
    java.util.Map CLASS_MAP -> WGyh
    java.lang.Class primitive -> pIRE
    java.lang.Class reference -> VNIG
    surge.util.ReflectionUtils$DataType[] ENUM$VALUES -> lDxR
    632:646:void <clinit>() -> <clinit>
    656:660:void <init>(java.lang.String,int,java.lang.Class,java.lang.Class) -> <init>
    669:669:java.lang.Class getPrimitive() -> TNoV
    679:679:java.lang.Class getReference() -> lfVw
    691:691:surge.util.ReflectionUtils$DataType fromClass(java.lang.Class) -> rNIA
    704:705:java.lang.Class getPrimitive(java.lang.Class) -> OOry
    718:719:java.lang.Class getReference(java.lang.Class) -> NVCA
    731:737:java.lang.Class[] getPrimitive(java.lang.Class[]) -> OYFA
    749:755:java.lang.Class[] getReference(java.lang.Class[]) -> rNIA
    767:773:java.lang.Class[] getPrimitive(java.lang.Object[]) -> rNIA
    785:791:java.lang.Class[] getReference(java.lang.Object[]) -> OOry
    805:819:boolean compare(java.lang.Class[],java.lang.Class[]) -> OYFA
    1:1:surge.util.ReflectionUtils$DataType[] values() -> values
    1:1:surge.util.ReflectionUtils$DataType valueOf(java.lang.String) -> valueOf
surge.util.ReflectionUtils$PackageType -> cSHg$rNIA:
    surge.util.ReflectionUtils$PackageType MINECRAFT_SERVER -> jOtG
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT -> CyYN
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_BLOCK -> YVry
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CHUNKIO -> dguQ
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_COMMAND -> uXcg
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CONVERSATIONS -> jjFh
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENCHANTMENS -> Snti
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENTITY -> ydod
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_EVENT -> oNbN
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_GENERATOR -> HUdP
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_HELP -> cvTV
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_INVENTORY -> CVtB
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_MAP -> MCPt
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_METADATA -> lNJT
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_POTION -> EDJi
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_PROJECTILES -> RuDY
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCHEDULER -> wDwR
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCOREBOARD -> aUxp
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UPDATER -> uXbs
    surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UTIL -> qCfK
    java.lang.String path -> path
    surge.util.ReflectionUtils$PackageType[] ENUM$VALUES -> pcGE
    548:550:void <clinit>() -> <clinit>
    560:563:void <init>(java.lang.String,int,java.lang.String) -> <init>
    575:576:void <init>(java.lang.String,int,surge.util.ReflectionUtils$PackageType,java.lang.String) -> <init>
    585:585:java.lang.String getPath() -> getPath
    600:600:java.lang.Class getClass(java.lang.String) -> getClass
    607:607:java.lang.String toString() -> toString
    617:617:java.lang.String getServerVersion() -> getServerVersion
    1:1:surge.util.ReflectionUtils$PackageType[] values() -> values
    1:1:surge.util.ReflectionUtils$PackageType valueOf(java.lang.String) -> valueOf
surge.util.Refreshable -> AGVH:
    void refresh() -> refresh
surge.util.SQLOperation -> MBHV:
    surge.util.SQLOperation LOAD -> YVra
    surge.util.SQLOperation SAVE -> XBmq
    surge.util.SQLOperation[] ENUM$VALUES -> CyWh
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:surge.util.SQLOperation[] values() -> values
    1:1:surge.util.SQLOperation valueOf(java.lang.String) -> valueOf
surge.util.ServerState -> FFDl:
    surge.util.ServerState START -> pkVw
    surge.util.ServerState ENABLE -> ifba
    surge.util.ServerState DISABLE -> ebgG
    surge.util.ServerState STOP -> AsSM
    surge.util.ServerState RUNNING -> AQOi
    surge.util.ServerState[] ENUM$VALUES -> qDEs
    3:37:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:surge.util.ServerState[] values() -> values
    1:1:surge.util.ServerState valueOf(java.lang.String) -> valueOf
surge.util.Shape -> MBIA:
    org.bukkit.Location location -> MRov
    org.bukkit.util.Vector offset -> VDxh
    org.bukkit.util.Vector size -> Swdq
    27:32:void <init>(org.bukkit.Location,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    44:45:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    55:56:void <init>(org.bukkit.Location) -> <init>
    67:80:boolean isWithinShape(org.bukkit.Location) -> wKty
    90:94:org.bukkit.Location randomLocation() -> uOOR
    104:104:org.bukkit.Location randomSurface() -> fvGs
    114:114:org.bukkit.Location getCenter() -> getCenter
    119:119:org.bukkit.Location getLocation() -> getLocation
    124:124:org.bukkit.util.Vector getOffset() -> XcmF
    129:129:org.bukkit.util.Vector getSize() -> gEef
surge.util.SnowLevel -> OYOt:
    byte level -> USWv
    18:21:void <init>(byte) -> <init>
    30:40:byte getLevel() -> XRkj
    51:52:void setLevel(byte) -> OOry
surge.util.T -> MtlT:
    15:17:void <init>() -> <init>
    void onStop(long,double) -> OYFA
    32:35:void stop() -> stop
surge.util.TXT -> tCWa:
    12:12:void <init>() -> <init>
    25:25:java.lang.String repeat(java.lang.String,int) -> repeat
    39:47:surge.collection.GList wrap(java.lang.String,int) -> xFgl
    67:67:java.lang.String makeTag(surge.util.C,surge.util.C,surge.util.C,surge.util.C,java.lang.String) -> OYFA
    85:85:java.lang.String makeTag(surge.util.C,surge.util.C,surge.util.C,java.lang.String) -> OYFA
    99:99:java.lang.String line(surge.util.C,int) -> OYFA
    113:113:java.lang.String underline(surge.util.C,int) -> rNIA
    135:140:java.lang.String getLine(surge.util.C,int,double,java.lang.String,java.lang.String,java.lang.String) -> OYFA
surge.util.Tag -> bOcw:
    java.lang.String value() -> value
surge.util.Timer -> ogLm:
    long tns -> TrWu
    long cns -> SoUS
    19:23:void <init>() -> <init>
    30:31:void start() -> start
    38:40:void stop() -> stop
    49:49:long getTime() -> getTime
    59:59:long getLastRun() -> pYPl
surge.util.VectorMath -> GIHR:
    int[] $SWITCH_TABLE$surge$util$Axis -> dpeI
    int[] $SWITCH_TABLE$org$bukkit$block$BlockFace -> woml
    16:16:void <init>() -> <init>
    20:30:org.bukkit.util.Vector scaleStatic(surge.util.Axis,org.bukkit.util.Vector,double) -> OYFA
    35:40:org.bukkit.util.Vector scaleX(org.bukkit.util.Vector,double) -> OYFA
    45:50:org.bukkit.util.Vector scaleY(org.bukkit.util.Vector,double) -> rNIA
    55:60:org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector,double) -> OOry
    65:67:org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) -> OYFA
    72:75:boolean isLookingNear(org.bukkit.Location,org.bukkit.Location,double) -> rNIA
    80:80:org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) -> rNIA
    85:85:org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) -> OOry
    90:90:org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) -> NVCA
    95:95:org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) -> xFgl
    100:100:org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) -> DqwT
    105:105:org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) -> LWko
    110:110:double round(double,int) -> xFgl
    115:118:org.bukkit.util.Vector clip(org.bukkit.util.Vector,int) -> OYFA
    123:136:org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector,org.bukkit.util.Vector,double) -> OYFA
    149:234:surge.collection.GList split(org.bukkit.block.BlockFace) -> OYFA
    248:248:org.bukkit.util.Vector direction(org.bukkit.Location,org.bukkit.Location) -> OOry
    253:253:org.bukkit.util.Vector directionNoNormal(org.bukkit.Location,org.bukkit.Location) -> NVCA
    267:267:org.bukkit.util.Vector toVector(float,float) -> OYFA
    280:281:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> OYFA
    295:298:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector,double) -> OYFA
    309:324:org.bukkit.util.Vector reverse(org.bukkit.util.Vector) -> fJdc
    336:339:double getSpeed(org.bukkit.util.Vector) -> fRuL
    353:360:surge.collection.GList shift(org.bukkit.util.Vector,surge.collection.GList) -> OYFA
    372:414:org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) -> mFhm
    428:440:org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector,float) -> OYFA
    454:466:org.bukkit.util.Vector angleRight(org.bukkit.util.Vector,float) -> rNIA
    480:489:org.bukkit.util.Vector angleUp(org.bukkit.util.Vector,float) -> OOry
    503:512:org.bukkit.util.Vector angleDown(org.bukkit.util.Vector,float) -> NVCA
    525:573:org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) -> wKty
    16:16:int[] $SWITCH_TABLE$surge$util$Axis() -> avxb
    16:16:int[] $SWITCH_TABLE$org$bukkit$block$BlockFace() -> DXsQ
surge.util.VectorMath$1 -> GIHR$1:
    org.bukkit.util.Vector val$vector -> YyYc
    1:353:void <init>(org.bukkit.util.Vector) -> <init>
    358:358:org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) -> dLpA
    1:1:java.lang.Object onAdapt(java.lang.Object) -> wTep
surge.util.W -> WiXL:
    30:30:void <init>() -> <init>
    41:49:boolean visible(org.bukkit.block.Block) -> OOry
    62:65:void colorArmor(org.bukkit.inventory.ItemStack,org.bukkit.Color) -> OYFA
    76:87:org.bukkit.entity.Entity getEntity(int) -> BdCG
    102:115:int count(org.bukkit.entity.Player,surge.util.MaterialBlock) -> OYFA
    132:132:boolean has(org.bukkit.entity.Player,surge.util.MaterialBlock,int) -> OYFA
    144:144:int getChunkX(org.bukkit.block.Block) -> NVCA
    156:156:int getChunkY(org.bukkit.block.Block) -> xFgl
    169:170:void dropXp(org.bukkit.Location,int) -> rNIA
    181:181:int getChunkZ(org.bukkit.block.Block) -> DqwT
    197:204:void take(org.bukkit.entity.Player,surge.util.MaterialBlock,int) -> rNIA
    220:228:int getManhattanDistance(org.bukkit.Location,org.bukkit.Location,boolean) -> OYFA
    233:240:surge.collection.GList news(org.bukkit.Location) -> dLpA
    257:265:int getManhattanDistance(org.bukkit.block.Block,org.bukkit.block.Block,boolean) -> OYFA
    277:277:surge.collection.GList getBlocks(org.bukkit.Chunk) -> xFgl
    289:289:org.bukkit.World getSyncWorld(org.bukkit.World) -> NVCA
    301:301:org.bukkit.World toSync(org.bukkit.World) -> xFgl
    313:313:org.bukkit.block.Block toSync(org.bukkit.block.Block) -> LWko
    325:325:org.bukkit.Location toSync(org.bukkit.Location) -> pHAu
    337:337:org.bukkit.Chunk toSync(org.bukkit.Chunk) -> DqwT
    353:420:surge.util.MaterialBlock getMaterialBlock(java.lang.String) -> FNKe
    434:446:org.bukkit.block.Block[] getRelative(org.bukkit.block.Block,org.bukkit.block.BlockFace[]) -> OYFA
    461:462:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData) -> OYFA
    479:480:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData,boolean) -> OYFA
    494:495:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int) -> OYFA
    512:513:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int,boolean) -> OYFA
    526:527:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData) -> OYFA
    542:543:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData,boolean) -> OYFA
    559:569:int getHighestPotionLevel(org.bukkit.potion.PotionEffectType,java.util.Collection) -> OYFA
    581:588:surge.collection.GList chunkFaces(org.bukkit.Chunk) -> LWko
    600:609:surge.collection.GList blockFaces(org.bukkit.block.Block) -> fJdc
    621:635:org.bukkit.Location simulateFall(org.bukkit.Location) -> JkXv
    649:661:surge.collection.GList chunkRadius(org.bukkit.Chunk,int) -> NVCA
    675:687:surge.collection.GList blockRadius(org.bukkit.block.Block,int) -> OYFA
    709:741:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Entity,double,double) -> OYFA
    759:766:boolean isLookingAt(org.bukkit.entity.Entity,org.bukkit.entity.Entity,double,double) -> OYFA
    780:780:double differenceOfVectors(org.bukkit.util.Vector,org.bukkit.util.Vector) -> OYFA
surge.util.W$1 -> WiXL$1:
    java.lang.Double val$doff -> pcAN
    org.bukkit.entity.Entity val$e -> WjbW
    org.bukkit.entity.Entity[] val$result -> ioMp
    723:723:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Entity,org.bukkit.entity.Entity[]) -> <init>
    727:738:void onTrace(org.bukkit.Location) -> fRuL
surge.util.Worlds -> bGUL:
    13:13:void <init>() -> <init>
    22:22:surge.collection.GList getWorlds() -> OPbQ
    34:34:boolean hasWorld(java.lang.String) -> PAvF
    46:46:org.bukkit.World getWorld(java.lang.String) -> getWorld
surge.util.package-info -> bGTk:
