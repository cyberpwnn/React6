react.Config -> Oqux:
    java.lang.String A_ENTITYCACHE_CHUNK_RADIUS -> Oqux
    java.lang.String A_ENTITYCACHE_INTERVAL -> uyTg
    java.lang.String A_COMMANDOVERRIDE_TPS -> jgsI
    java.lang.String A_REACT_REMOTE_PORT -> NoSy
    java.lang.String A_REACT_REMOTE_ENABLED -> gojx
    java.lang.String A_ENTITY_STACK_MAX_COUNT -> tBlP
    java.lang.String A_POOL_MAXTHREADS -> RPkn
    java.lang.String A_POOL_SYNC_NANOS -> KUIi
    java.lang.String A_ENTITYCACHE_ENABLED -> JYut
    java.lang.String A_FASTLEAF_ENABLED -> gfyw
    java.lang.String A_FASTLEAF_ONDECAY -> OXdf
    java.lang.String A_FASTLEAF_INSTANT -> biLe
    java.lang.String A_FASTLEAF_DECAYPERIOD -> rUwX
    java.lang.String A_COMMANDOVERRIDE_MEMORY -> PmJd
    java.lang.String A_ENTITYSTACK_ENABLED -> QpMe
    java.lang.String A_ENTITYSTACK_MINIMUM_GROUP -> UADm
    java.lang.String A_ENTITYSTACK_GROUP_SEARCH_RADIUS -> UcHV
    java.lang.String A_ENTITYSTACK_MAXIMUM_HEALTH -> SCNo
    java.lang.String A_GLASS_SHOW_BLOCKS -> HmcS
    java.lang.String A_GLASS_SHOW_PARTICLES -> quXa
    java.lang.String A_ALLOW_CULL -> gVXr
    java.lang.String A_ALLOW_PURGE -> uOAQ
    java.lang.String A_ALLOW_CACHE -> RQMi
    java.lang.String A_CULL_RULES -> Lymd
    java.lang.String A_RAI_TPS_HIGH_TICK -> SSnT
    java.lang.String A_RAI_REDSTONE_TIME_FLOOR -> rVWi
    java.lang.String A_RAI_REDSTONE_TIME_CEIL -> ivPx
    java.lang.String A_RAI_REDSTONE_TIME_MUDDING -> eYBv
    java.lang.String A_RAI_REDSTONE_TIME_FUNCTION -> bWhw
    java.lang.String A_RAI_REDSTONE_TIME_OVERBLEED -> tSmJ
    java.lang.String A_RAI_REDSTONE_TIME_RADIUS -> EKGK
    java.lang.String A_RAI_REDSTONE_TIME_PROPIGATION -> INbK
    java.lang.String A_RAI_HOPPER_TIME_FLOOR -> pqtM
    java.lang.String A_RAI_HOPPER_TIME_CEIL -> qJcM
    java.lang.String A_RAI_HOPPER_TIME_MUDDING -> Plhk
    java.lang.String A_RAI_HOPPER_TIME_FUNCTION -> OYDv
    java.lang.String A_RAI_HOPPER_TIME_OVERBLEED -> IpeW
    java.lang.String A_RAI_HOPPER_TIME_RADIUS -> rNFx
    java.lang.String A_RAI_HOPPER_TIME_PROPIGATION -> VDFk
    java.lang.String A_RAI_ENTITY_CHUNK_MULTIPLIER -> sHXl
    java.lang.String A_RAI_ENTITY_CHUNK_CLUSTERIZER -> YnrT
    java.lang.String A_RAI_ENTITY_CHUNK_RADIUS -> xGHC
    java.lang.String A_RAI_FLUID_TIME_FLOOR -> wLUJ
    java.lang.String A_RAI_FLUID_TIME_CEIL -> BlTI
    java.lang.String A_RAI_FLUID_TIME_MUDDING -> iusX
    java.lang.String A_RAI_FLUID_TIME_FUNCTION -> FooI
    java.lang.String A_RAI_FLUID_TIME_OVERBLEED -> EKIe
    java.lang.String A_RAI_FLUID_TIME_RADIUS -> ERxn
    java.lang.String A_RAI_FLUID_TIME_PROPIGATION -> ckqS
    java.lang.String A_SMEAR_TICK_ENTITIES_MAX_TICK -> OqyC
    java.lang.String A_SMEAR_TICK_TILES_MAX_TICK -> ERyV
    java.lang.String A_SMEAR_TICK_ENTITIES_SEPERATION_BIAS -> jVtB
    java.lang.String A_SMEAR_TICK_TILES_SEPERATION_BIAS -> FMlQ
    java.lang.String A_SMEAR_TICK_ENTITIES_AMOUNT -> jgtv
    java.lang.String A_SMEAR_TICK_TILES_AMOUNT -> oMQp
    java.lang.String A_SMEAR_TICK_ENTITIES_ENABLE -> CDbR
    java.lang.String A_SMEAR_TICK_TILES_ENABLE -> yJNT
    java.lang.String A_HOPPER_OVERTICK_ENABLE -> lCgS
    java.lang.String A_LANGUAGE -> Hutw
    java.lang.String A_RAI_CHUNK_TIME_FLOOR -> UAFm
    java.lang.String A_RAI_CHUNK_TIME_CEIL -> BdBi
    java.lang.String A_RAI_CHUNK_TIME_MUDDING -> RkAy
    java.lang.String A_RAI_CHUNK_TIME_FUNCTION -> ejHY
    java.lang.String A_RAI_CHUNK_TIME_OVERBLEED -> VwOA
    java.lang.String A_RAI_CHUNK_TIME_RADIUS -> dwfE
    java.lang.String A_RAI_CHUNK_TIME_PROPIGATION -> DYIR
    java.lang.String A_RAI_CHUNK_TIME_PROPIGATE -> CfeE
    java.lang.String A_RAI_FLUID_TIME_PROPIGATE -> WFjf
    java.lang.String A_RAI_ENTITY_PROPIGATE -> BJQd
    java.lang.String A_RAI_HOPPER_TIME_PROPIGATE -> kRFT
    java.lang.String A_RAI_REDSTONE_TIME_PROPIGATE -> Tpex
    int ENTITYCACHE_CHUNK_RADIUS -> Ujwc
    int ENTITYCACHE_INTERVAL -> hamo
    boolean COMMANDOVERRIDES_TPS -> Eljr
    int REACT_REMOTE_PORT -> Tgtx
    boolean REACT_REMOTE_ENABLED -> qRtu
    int ENTITY_STACK_MAX_COUNT -> PAuv
    int POOL_MAXTHREADS -> uyTp
    long POOL_SYNC_NANOS -> UbkF
    boolean ENTITYCACHE_ENABLED -> CMVI
    boolean FASTLEAF_ENABLED -> AFoF
    boolean FASTLEAF_ONDECAY -> jEsj
    boolean FASTLEAF_INSTANT -> dnvV
    int FASTLEAF_DECAYPERIOD -> QpRA
    boolean COMMANDOVERRIDES_MEMORY -> eXfx
    boolean ENTITYSTACK_ENABLED -> dECg
    int ENTITYSTACK_MINIMUM_GROUP -> lCik
    int ENTITYSTACK_GROUP_SEARCH_RADIUS -> YwiC
    int ENTITYSTACK_MAXIMUM_HEALTH -> oUdB
    boolean GLASS_SHOW_BLOCKS -> tutT
    boolean GLASS_SHOW_PARTICLES -> NgIB
    react.glang.GList ALLOW_CULL -> lULH
    react.glang.GList ALLOW_PURGE -> cktB
    react.glang.GList ALLOW_CACHE -> OjLN
    react.glang.GList CULL_RULES -> RIAg
    double RAI_TPS_HIGH_TICK -> EJlB
    long RAI_REDSTONE_TIME_FLOOR -> AqbS
    long RAI_REDSTONE_TIME_CEIL -> Jbko
    long RAI_REDSTONE_TIME_MUDDING -> Vvmu
    double RAI_REDSTONE_TIME_FUNCTION -> bhoU
    double RAI_REDSTONE_TIME_OVERBLEED -> KDKR
    int RAI_REDSTONE_TIME_RADIUS -> eihN
    int RAI_REDSTONE_TIME_PROPIGATION -> RsRs
    long RAI_HOPPER_TIME_FLOOR -> TEsc
    long RAI_HOPPER_TIME_CEIL -> GrsM
    long RAI_HOPPER_TIME_MUDDING -> dgEi
    double RAI_HOPPER_TIME_FUNCTION -> MuEj
    double RAI_HOPPER_TIME_OVERBLEED -> JRJK
    int RAI_HOPPER_TIME_RADIUS -> mWnB
    int RAI_HOPPER_TIME_PROPIGATION -> vbgv
    int RAI_ENTITY_CHUNK_MULTIPLIER -> kYwO
    int RAI_ENTITY_CHUNK_CLUSTERIZER -> YUde
    int RAI_ENTITY_CHUNK_RADIUS -> GIAS
    long RAI_FLUID_TIME_FLOOR -> bXNs
    long RAI_FLUID_TIME_CEIL -> vHuQ
    long RAI_FLUID_TIME_MUDDING -> nSAF
    double RAI_FLUID_TIME_FUNCTION -> TEuA
    double RAI_FLUID_TIME_OVERBLEED -> iTQq
    int RAI_FLUID_TIME_RADIUS -> AhrP
    int RAI_FLUID_TIME_PROPIGATION -> hkBK
    double SMEAR_TICK_ENTITIES_MAX_TICK -> BRbu
    double SMEAR_TICK_TILES_MAX_TICK -> gNLQ
    double SMEAR_TICK_ENTITIES_SEPERATION_BIAS -> WXOb
    double SMEAR_TICK_TILES_SEPERATION_BIAS -> OGiX
    double SMEAR_TICK_ENTITIES_AMOUNT -> FMom
    double SMEAR_TICK_TILES_AMOUNT -> tTUG
    boolean SMEAR_TICK_ENTITIES_ENABLE -> SdwH
    boolean SMEAR_TICK_TILES_ENABLE -> nRcT
    boolean HOPPER_OVERTICK_ENABLE -> HBuA
    java.lang.String LANGUAGE -> LANGUAGE
    long RAI_CHUNK_TIME_FLOOR -> ncdi
    long RAI_CHUNK_TIME_CEIL -> RPsA
    long RAI_CHUNK_TIME_MUDDING -> QgbY
    double RAI_CHUNK_TIME_FUNCTION -> XkvG
    double RAI_CHUNK_TIME_OVERBLEED -> OGjG
    int RAI_CHUNK_TIME_RADIUS -> tSsV
    int RAI_CHUNK_TIME_PROPIGATION -> hYbV
    boolean RAI_CHUNK_TIME_PROPIGATE -> rNNU
    boolean RAI_FLUID_TIME_PROPIGATE -> FpUA
    boolean RAI_ENTITY_PROPIGATE -> SLFl
    boolean RAI_HOPPER_TIME_PROPIGATE -> CUgX
    boolean RAI_REDSTONE_TIME_PROPIGATE -> myru
    boolean hrld -> Bcef
    boolean rns -> iBrf
    boolean rrl -> uqIc
    int[] $SWITCH_TABLE$org$bukkit$entity$EntityType -> QxcC
    258:648:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    653:670:void doTrack(org.bukkit.plugin.Plugin) -> Oqux
    675:697:void onRead(org.bukkit.plugin.Plugin) -> uyTg
    701:731:void read(java.io.File,boolean) -> Oqux
    736:849:react.surge.cluster.DataCluster read(react.surge.cluster.DataCluster,boolean) -> Oqux
    854:891:react.surge.cluster.DataCluster defaultConfig(boolean) -> Oqux
    896:965:react.glang.GList getDefaultEntitiesForCaching() -> Oqux
    970:1039:react.glang.GList getDefaultEntitiesForCulling() -> uyTg
    1044:1075:react.glang.GList getDefaultEntitiesForRemoval() -> jgsI
    1080:1109:react.glang.GList getDefaultCullRules() -> NoSy
    34:34:int[] $SWITCH_TABLE$org$bukkit$entity$EntityType() -> gojx
react.Config$1 -> Oqux$1:
    java.io.File val$fConfig -> qlmI
    java.io.File val$fConfigExperimental -> CgIi
    org.bukkit.plugin.Plugin val$main -> MIrV
    1:656:void <init>(java.io.File,java.io.File,org.bukkit.plugin.Plugin) -> <init>
    661:665:void run() -> run
react.Gate -> uyTg:
    react.glang.GMap defaultSettings -> Keny
    int[] $SWITCH_TABLE$react$api$ActivationRangeType -> ArFm
    37:37:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
    41:127:void fixLighting(react.api.SelectorPosition,react.glang.Callback,react.glang.Callback) -> Oqux
    131:156:org.bukkit.entity.Player whoLoaded(org.bukkit.Chunk) -> Oqux
    161:161:int getChunkCountForView() -> tBlP
    166:166:int getMaxChunksForView() -> RPkn
    171:171:boolean hasFawe() -> KUIi
    176:197:void tickEntityNextTickListTick(org.bukkit.World) -> Oqux
    201:205:void resetEntityMaxTick(org.bukkit.World) -> uyTg
    209:209:int getEntityTickMax(org.bukkit.World) -> jgsI
    214:214:int getTileTickMax(org.bukkit.World) -> NoSy
    219:237:void tweakEntityTickMax(org.bukkit.World,int) -> Oqux
    241:258:java.lang.reflect.Field deepFindField(java.lang.Object,java.lang.String) -> Oqux
    263:267:void forceSet(org.spigotmc.SpigotWorldConfig,java.lang.String,java.lang.Object) -> Oqux
    271:283:int getActivationRange(org.bukkit.World,react.api.ActivationRangeType) -> Oqux
    288:292:void resetActivationRange(org.bukkit.World,react.api.ActivationRangeType) -> uyTg
    296:314:void tweakActivationRange(org.bukkit.World,react.api.ActivationRangeType,int) -> Oqux
    318:322:org.spigotmc.SpigotWorldConfig getSpigotConfig(org.bukkit.World) -> gojx
    327:330:java.lang.String msg(org.bukkit.command.CommandSender,java.lang.String) -> Oqux
    335:338:java.lang.String msgRAI(org.bukkit.command.CommandSender,java.lang.String) -> uyTg
    343:343:java.lang.String msgSuccess(org.bukkit.command.CommandSender,java.lang.String) -> jgsI
    348:348:java.lang.String msgError(org.bukkit.command.CommandSender,java.lang.String) -> NoSy
    353:353:java.lang.String msgActing(org.bukkit.command.CommandSender,java.lang.String) -> gojx
    360:366:boolean unloadChunk(org.bukkit.Chunk) -> unloadChunk
    372:373:void unloadChunk(org.bukkit.World,int,int) -> Oqux
    377:383:void removeEntity(org.bukkit.entity.Entity) -> Oqux
    387:393:void purgeEntity(org.bukkit.entity.Entity) -> uyTg
    397:403:void cullEntity(org.bukkit.entity.Entity) -> jgsI
    407:413:void cachedEntity(org.bukkit.entity.Entity) -> NoSy
    418:435:void updateBlock(org.bukkit.block.Block) -> Oqux
    439:443:java.lang.String header(java.lang.String,react.surge.util.C) -> Oqux
    448:448:java.lang.String header(react.surge.util.C) -> Oqux
    454:458:void updateFluid(org.bukkit.block.Block) -> uyTg
    35:35:int[] $SWITCH_TABLE$react$api$ActivationRangeType() -> JYut
react.Gate$1 -> uyTg$1:
    react.api.SelectorPosition val$sel -> WhrB
    react.glang.Callback val$prog -> FNOo
    react.glang.Callback val$cb -> hsUI
    1:41:void <init>(react.api.SelectorPosition,react.glang.Callback,react.glang.Callback) -> <init>
    46:125:void run() -> run
react.Gate$1$1 -> uyTg$1$1:
    react.Gate$1 this$1 -> MJSk
    java.lang.Object val$o -> TNgb
    java.lang.reflect.Constructor val$vectorConstruct -> NLvI
    java.lang.reflect.Constructor val$cuboidConstruct -> hrsQ
    java.lang.reflect.Method val$faweFixMethod -> QNOn
    java.lang.Integer[] val$total -> eijX
    java.lang.Integer[] val$sof -> SLEd
    react.glang.Callback val$prog -> FNOo
    java.lang.Integer val$tot -> xFpY
    1:73:void <init>(react.Gate$1,java.lang.String,int,java.lang.Object,java.lang.reflect.Constructor,java.lang.reflect.Constructor,java.lang.reflect.Method,java.lang.Integer[],java.lang.Integer[],react.glang.Callback,java.lang.Integer) -> <init>
    80:94:void run() -> run
react.Gate$1$2 -> uyTg$1$2:
    react.Gate$1 this$1 -> MJSk
    react.glang.Callback val$prog -> FNOo
    react.glang.Callback val$cb -> hsUI
    java.lang.Integer[] val$total -> eijX
    1:98:void <init>(react.Gate$1,java.lang.String,int,react.glang.Callback,react.glang.Callback,java.lang.Integer[]) -> <init>
    105:113:void run() -> run
react.Info -> jgsI:
    java.lang.String CORE_REACT_DOT -> dgKV
    java.lang.String CORE_NAME -> wwRh
    java.lang.String CORE_CACHE -> GPtm
    java.lang.String CORE_DOTYML -> RIDo
    java.lang.String COMMAND_REACT -> oLwN
    java.lang.String COMMAND_RAI -> NUjF
    java.lang.String COMMAND_ACT_DESCRIPTION -> ycem
    java.lang.String COMMAND_ACT -> qvAt
    java.lang.String COMMAND_ACT_ALIAS_1 -> hsWh
    java.lang.String COMMAND_ACT_ALIAS_2 -> LPEO
    java.lang.String COMMAND_ACT_USAGE -> HKgs
    java.lang.String COMMAND_HELP_DESCRIPTION -> teXK
    java.lang.String COMMAND_HELP -> kQkg
    java.lang.String COMMAND_HELP_ALIAS_1 -> rhCS
    java.lang.String COMMAND_HELP_ALIAS_2 -> WqgG
    java.lang.String COMMAND_HELP_USAGE -> nReH
    java.lang.String COMMAND_STATUS_DESCRIPTION -> Fgdy
    java.lang.String COMMAND_STATUS -> brGI
    java.lang.String COMMAND_STATUS_ALIAS_1 -> HLIa
    java.lang.String COMMAND_STATUS_ALIAS_2 -> TNkI
    java.lang.String COMMAND_STATUS_USAGE -> sbUP
    java.lang.String COMMAND_CPUSCORE_DESCRIPTION -> gWAa
    java.lang.String COMMAND_CPUSCORE -> ySEG
    java.lang.String COMMAND_CPUSCORE_ALIAS_1 -> sPrF
    java.lang.String COMMAND_CPUSCORE_ALIAS_2 -> jNgw
    java.lang.String COMMAND_CPUSCORE_USAGE -> LqfN
    java.lang.String COMMAND_RELOAD_DESCRIPTION -> xytE
    java.lang.String COMMAND_RELOAD -> HLHN
    java.lang.String COMMAND_RELOAD_ALIAS_1 -> dDfF
    java.lang.String COMMAND_RELOAD_ALIAS_2 -> ccee
    java.lang.String COMMAND_RELOAD_USAGE -> pjMM
    java.lang.String COMMAND_MONITOR_DESCRIPTION -> aoAu
    java.lang.String COMMAND_MONITOR -> Nfji
    java.lang.String COMMAND_MONITOR_ALIAS_1 -> nAao
    java.lang.String COMMAND_MONITOR_ALIAS_2 -> PeBC
    java.lang.String COMMAND_MONITOR_USAGE -> bhsf
    java.lang.String COMMAND_MAP_DESCRIPTION -> TOKM
    java.lang.String COMMAND_MAP -> FpUe
    java.lang.String COMMAND_MAP_ALIAS_1 -> Suyo
    java.lang.String COMMAND_MAP_ALIAS_2 -> wndC
    java.lang.String COMMAND_MAP_USAGE -> bGSv
    java.lang.String COMMAND_GLASS_DESCRIPTION -> PJpV
    java.lang.String COMMAND_GLASS -> uOKb
    java.lang.String COMMAND_GLASS_ALIAS_1 -> WiXT
    java.lang.String COMMAND_GLASS_ALIAS_2 -> XtkO
    java.lang.String COMMAND_GLASS_USAGE -> woDi
    java.lang.String COMMAND_CBLAME_DESCRIPTION -> xWsn
    java.lang.String COMMAND_CBLAME -> Cfmx
    java.lang.String COMMAND_CBLAME_ALIAS_1 -> KfVG
    java.lang.String COMMAND_CBLAME_ALIAS_2 -> ggfE
    java.lang.String COMMAND_CBLAME_USAGE -> yuJW
    java.lang.String COMMAND_ACTIONLOG_DESCRIPTION -> LrIy
    java.lang.String COMMAND_ACTIONLOG -> PmTk
    java.lang.String COMMAND_ACTIONLOG_ALIAS_1 -> LaHi
    java.lang.String COMMAND_ACTIONLOG_ALIAS_2 -> Veta
    java.lang.String COMMAND_ACTIONLOG_USAGE -> WrIl
    java.lang.String COMMAND_CAPABILITIES_DESCRIPTION -> Bcio
    java.lang.String COMMAND_CAPABILITIES -> bhwG
    java.lang.String COMMAND_CAPABILITIES_ALIAS_1 -> NEKr
    java.lang.String COMMAND_CAPABILITIES_ALIAS_2 -> inKq
    java.lang.String COMMAND_CAPABILITIES_USAGE -> myvr
    java.lang.String MSG_PERMISSION -> DYPx
    java.lang.String MSG_MONITORING_STARTED -> OGmp
    java.lang.String MSG_MONITORING_STOPPED -> mGTG
    java.lang.String MSG_ACTIONLOGGING_STARTED -> QEbS
    java.lang.String MSG_ACTIONLOGGING_STOPPED -> mGSK
    java.lang.String MSG_GLASS_STARTED -> JQng
    java.lang.String MSG_GLASS_STOPPED -> YUjY
    org.bukkit.Color COLOR_HOPPER -> mqeq
    org.bukkit.Color COLOR_BLOCK_UPDATE -> Aqir
    org.bukkit.Color COLOR_BLOCK_FROMTO -> WXTs
    org.bukkit.Color COLOR_BLOCK_BURN -> cdIN
    org.bukkit.Color COLOR_BLOCK_DECAY -> NwnQ
    org.bukkit.Color COLOR_BLOCK_FORM -> dgKl
    java.lang.String NAME_TICK -> AXWu
    java.lang.String NAME_MEMORY -> leqw
    java.lang.String NAME_CHUNKS -> UlBP
    java.lang.String NAME_ENTITIES -> STYo
    java.lang.String STATE_MONITORING_TAB -> lwTL
    java.lang.String STATE_MONITORING_ENABLED -> BRjF
    java.lang.String STATE_ACTIONLOGGING_ENABLED -> woCM
    java.lang.String STATE_MAPPING_ENABLED -> gyEx
    java.lang.String STATE_SOUND_PLAYS -> EvEn
    java.lang.String STATE_MONITORING_POSTED -> xrIk
    java.lang.String STATE_MONITORING_LASTTAB -> fvGP
    java.lang.String STATE_GLASSES_ENABLED -> qCAl
    java.lang.String STATE_MONITORING_SWITCHNOTIFICATION -> NoaH
    java.lang.String STATE_PLAYER_HOTBAR -> DbDV
    java.lang.String STATE_PLAYER_SHIFT -> AOge
    java.lang.String STATE_PLAYER_SCROLL -> PKTO
    java.lang.String STATE_PLAYER_HEIGHT_CURRENT -> sbXi
    java.lang.String STATE_PLAYER_HEIGHT_CHANGING -> cdME
    java.lang.String PERM_ACCESS -> TqSU
    java.lang.String PERM_MONITOR -> gggQ
    java.lang.String PERM_MONITOR_TITLE -> miYF
    java.lang.String PERM_MONITOR_ACTIONLOG -> lTry
    java.lang.String PERM_MONITOR_MAP -> MIyv
    java.lang.String PERM_MONITOR_ENVIRONMENT -> IiDA
    java.lang.String PERM_MONITOR_GLASSES -> qJpK
    java.lang.String PERM_MONITOR_CHUNK_BLAME -> xqhG
    java.lang.String PERM_ACT -> PSbe
    java.lang.String PERM_RAI -> Gjjk
    java.lang.String PERM_RAI_CONTROL -> UcRr
    java.lang.String PERM_RAI_ACCESS -> WOep
    java.lang.String PERM_RAI_MONITOR -> AaJx
    java.lang.String PERM_RELOAD -> Ussn
    java.lang.String SAMPLER_REDSTONE_TICK_USAGE -> DYRO
    java.lang.String SAMPLER_REDSTONE_TICK -> rFBu
    java.lang.String SAMPLER_ENTITY_TIME -> dgNg
    java.lang.String SAMPLER_ENTITY_TIME_LOCK -> SKkC
    java.lang.String SAMPLER_TILE_TIME_LOCK -> xiWT
    java.lang.String SAMPLER_TILE_TIME -> FyKO
    java.lang.String SAMPLER_TILE_DROPTICK -> WaIQ
    java.lang.String SAMPLER_ENTITY_DROPTICK -> Jkdb
    java.lang.String SAMPLER_REDSTONE_SECOND -> IOOh
    java.lang.String SAMPLER_REDSTONE_TIME -> ObCJ
    java.lang.String SAMPLER_HOPPER_TICK_USAGE -> XAkJ
    java.lang.String SAMPLER_HOPPER_TICK -> nuOX
    java.lang.String SAMPLER_HOPPER_SECOND -> Btox
    java.lang.String SAMPLER_HOPPER_TIME -> xPIA
    java.lang.String SAMPLER_FLUID_TICK_USAGE -> nBKR
    java.lang.String SAMPLER_FLUID_TICK -> wDUG
    java.lang.String SAMPLER_FLUID_SECOND -> NocQ
    java.lang.String SAMPLER_FLUID_TIME -> IiDl
    java.lang.String SAMPLER_TPS -> Dads
    java.lang.String SAMPLER_TICK -> maKT
    java.lang.String SAMPLER_TIU -> VMGW
    java.lang.String SAMPLER_MEM -> hPxp
    java.lang.String SAMPLER_FREEMEM -> XuPm
    java.lang.String SAMPLER_MAXMEM -> CgTD
    java.lang.String SAMPLER_ALLOCMEM -> mOgi
    java.lang.String SAMPLER_MAHS -> mrLR
    java.lang.String SAMPLER_CHK -> inPS
    java.lang.String SAMPLER_ATASK -> qmWJ
    java.lang.String SAMPLER_STASK -> aLej
    java.lang.String SAMPLER_CHK_TIME -> SfAf
    java.lang.String SAMPLER_EXPLOSION_TIME -> JASy
    java.lang.String SAMPLER_CHKS -> SvaD
    java.lang.String SAMPLER_ENT -> Tych
    java.lang.String SAMPLER_ENTLIV -> oVNW
    java.lang.String SAMPLER_ENTDROP -> vRRF
    java.lang.String SAMPLER_ENTTILE -> skLF
    java.lang.String[] ACTION_CULL_ENTITIES_TAGS -> ThbN
    java.lang.String ACTION_CULL_ENTITIES_STATUS -> tLLM
    java.lang.String ACTION_CULL_ENTITIES_NAME -> xqjH
    java.lang.String ACTION_CULL_ENTITIES_DESCRIPTION -> KfYU
    java.lang.String[] ACTION_UPDATE_FLUID_TAGS -> SmpI
    java.lang.String ACTION_UPDATE_FLUID_STATUS -> JQsc
    java.lang.String ACTION_UPDATE_FLUID_NAME -> Ditd
    java.lang.String ACTION_UPDATE_FLUID_DESCRIPTION -> UlFn
    java.lang.String[] ACTION_LOCK_FLUID_TAGS -> qvGO
    java.lang.String ACTION_LOCK_FLUID_STATUS -> erdL
    java.lang.String ACTION_LOCK_FLUID_NAME -> KfYW
    java.lang.String ACTION_LOCK_FLUID_DESCRIPTION -> gggr
    java.lang.String[] ACTION_UNLOCK_FLUID_TAGS -> uqRC
    java.lang.String ACTION_UNLOCK_FLUID_STATUS -> TiCi
    java.lang.String ACTION_UNLOCK_FLUID_NAME -> mGWL
    java.lang.String ACTION_UNLOCK_FLUID_DESCRIPTION -> JtXK
    java.lang.String[] ACTION_LOCK_HOPPER_TAGS -> HvbQ
    java.lang.String ACTION_LOCK_HOPPER_STATUS -> HmsQ
    java.lang.String ACTION_LOCK_HOPPER_NAME -> XdPl
    java.lang.String ACTION_LOCK_HOPPER_DESCRIPTION -> ctqJ
    java.lang.String[] ACTION_UNLOCK_HOPPER_TAGS -> JcYE
    java.lang.String ACTION_UNLOCK_HOPPER_STATUS -> imqd
    java.lang.String ACTION_UNLOCK_HOPPER_NAME -> iwCm
    java.lang.String ACTION_UNLOCK_HOPPER_DESCRIPTION -> CVRu
    java.lang.String[] ACTION_LOCK_REDSTONE_TAGS -> SnTF
    java.lang.String ACTION_LOCK_REDSTONE_STATUS -> Mtqs
    java.lang.String ACTION_LOCK_REDSTONE_NAME -> Oafh
    java.lang.String ACTION_LOCK_REDSTONE_DESCRIPTION -> BuSN
    java.lang.String[] ACTION_UNLOCK_REDSTONE_TAGS -> OQFU
    java.lang.String ACTION_UNLOCK_REDSTONE_STATUS -> dfsK
    java.lang.String ACTION_UNLOCK_REDSTONE_NAME -> AqoD
    java.lang.String ACTION_UNLOCK_REDSTONE_DESCRIPTION -> eYUV
    java.lang.String[] ACTION_PURGE_ENTITIES_TAGS -> kJES
    java.lang.String ACTION_PURGE_ENTITIES_STATUS -> NgUT
    java.lang.String ACTION_PURGE_ENTITIES_NAME -> JIdh
    java.lang.String ACTION_PURGE_ENTITIES_DESCRIPTION -> wUVm
    java.lang.String[] ACTION_PURGE_CHUNKS_TAGS -> DHSs
    java.lang.String ACTION_PURGE_CHUNKS_STATUS -> dfpw
    java.lang.String ACTION_PURGE_CHUNKS_NAME -> pjUM
    java.lang.String ACTION_PURGE_CHUNKS_DESCRIPTION -> Uswh
    java.lang.String[] ACTION_FIX_LIGHTING_TAGS -> xGXg
    java.lang.String ACTION_FIX_LIGHTING_STATUS -> JsxY
    java.lang.String ACTION_FIX_LIGHTING_NAME -> cSNB
    java.lang.String ACTION_FIX_LIGHTING_DESCRIPTION -> JlHu
    java.lang.String[] ACTION_COLLECT_GARBAGE_TAGS -> qdgM
    java.lang.String ACTION_COLLECT_GARBAGE -> DiwA
    java.lang.String ACTION_COLLECT_GARBAGE_NAME -> BKAD
    java.lang.String ACTION_COLLECT_GARBAGE_DESCRIPTION -> xaKN
    8:226:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
react.Lang -> NoSy:
    java.lang.String BUNDLE_NAME -> nAjb
    java.util.ResourceBundle RESOURCE_BUNDLE -> eHSG
    java.util.ResourceBundle PRIMARY_BUNDLE -> lMFm
    9:10:void <clinit>() -> <clinit>
    12:15:void <init>() -> <init>
    23:34:java.lang.String getString(java.lang.String) -> getString
react.React -> gojx:
    react.React instance -> erfN
    react.controller.SampleController sampleController -> SKoR
    react.controller.PlayerController playerController -> yAjI
    react.controller.MonitorController monitorController -> fShh
    react.controller.CommandController commandController -> uXDr
    react.controller.ActionController actionController -> UQwh
    react.controller.FastDecayController fastDecayController -> nBOX
    react.controller.EntityStackController entityStackController -> pYVg
    react.controller.GlassController glassController -> Tpwc
    react.controller.EntityCullController entityCullController -> sjnx
    react.controller.SpikeController spikeController -> eriV
    react.controller.SecurityController securityController -> HwGm
    react.controller.RedstoneController redstoneController -> wMHi
    react.controller.HopperController hopperController -> eiva
    react.controller.PhysicsController physicsController -> RcAV
    react.controller.TickTimeController tickTimeController -> KoNL
    react.controller.RAIController raiController -> OsIh
    react.controller.FluidController fluidController -> PTIq
    react.controller.ChunkController chunkController -> jWcn
    react.controller.GraphController graphController -> QWMT
    react.controller.ChronophyFluidController fluidChronophyController -> NNCk
    react.controller.EventController eventController -> aTyI
    react.controller.BlockInjectController blockInjectController -> dwtb
    react.controller.SmearTickController smearTickController -> lnlF
    react.controller.FeatureController featureController -> HnUa
    react.controller.HopperOvertickController hopperPlungeController -> ivbv
    react.controller.BenchmarkController benchmarkController -> pbFT
    react.controller.LanguageController languageController -> Thfb
    react.controller.RemoteController remoteController -> NUtJ
    react.controller.ExplosiveController explosiveController -> EdlK
    41:41:void <init>() -> <init>
    137:137:void enable() -> enable
    143:143:void disable() -> disable
react.action.ActionCollectGarbage -> tBlP:
    19:22:void <init>() -> <init>
    27:61:void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
react.action.ActionCollectGarbage$1 -> tBlP$1:
    react.action.ActionCollectGarbage this$0 -> bOoO
    react.api.IActionSource val$source -> TOXC
    1:29:void <init>(react.action.ActionCollectGarbage,react.api.IActionSource) -> <init>
    35:59:void run() -> run
    29:29:react.action.ActionCollectGarbage access$0(react.action.ActionCollectGarbage$1) -> Oqux
react.action.ActionCollectGarbage$1$1 -> tBlP$1$1:
    react.action.ActionCollectGarbage$1 this$1 -> mjBV
    long val$mbnex -> bjCG
    long val$mbmem -> VxBL
    react.api.IActionSource val$source -> TOXC
    1:39:void <init>(react.action.ActionCollectGarbage$1,long,long,react.api.IActionSource) -> <init>
    44:57:void run() -> run
react.action.ActionCullEntities -> RPkn:
    long ms -> ObJw
    int lcd -> tmuL
    32:59:void <init>() -> <init>
    64:150:void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
    154:156:void cull(org.bukkit.Chunk,java.lang.Runnable,react.api.IActionSource,react.api.ISelector[]) -> Oqux
    27:27:void access$0(react.action.ActionCullEntities,long) -> Oqux
    28:28:int access$1(react.action.ActionCullEntities) -> Oqux
    27:27:long access$2(react.action.ActionCullEntities) -> uyTg
react.action.ActionCullEntities$1 -> RPkn$1:
    react.action.ActionCullEntities this$0 -> baPu
    1:36:void <init>(react.action.ActionCullEntities) -> <init>
    41:44:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionCullEntities$2 -> RPkn$2:
    react.action.ActionCullEntities this$0 -> baPu
    1:48:void <init>(react.action.ActionCullEntities) -> <init>
    53:56:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionCullEntities$3 -> RPkn$3:
    react.action.ActionCullEntities this$0 -> baPu
    react.glang.FinalInteger val$completed -> IXJC
    react.glang.FinalInteger val$total -> YgXd
    react.glang.FinalInteger val$totalCulled -> iTbx
    react.glang.FinalInteger val$totalChunked -> dwyA
    react.api.IActionSource val$source -> TOXC
    1:104:void <init>(react.action.ActionCullEntities,react.glang.FinalInteger,react.glang.FinalInteger,react.glang.FinalInteger,react.glang.FinalInteger,react.api.IActionSource) -> <init>
    109:129:void run() -> run
react.action.ActionCullEntities$4 -> RPkn$4:
    react.action.ActionCullEntities this$0 -> baPu
    react.api.IActionSource val$source -> TOXC
    react.glang.FinalInteger val$totalCulled -> iTbx
    react.glang.FinalInteger val$totalChunked -> dwyA
    1:136:void <init>(react.action.ActionCullEntities,java.lang.String,int,react.api.IActionSource,react.glang.FinalInteger,react.glang.FinalInteger) -> <init>
    141:147:void run() -> run
react.action.ActionFixLighting -> KUIi:
    24:38:void <init>() -> <init>
    43:95:void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
react.action.ActionFixLighting$1 -> KUIi$1:
    react.action.ActionFixLighting this$0 -> NDtn
    1:27:void <init>(react.action.ActionFixLighting) -> <init>
    32:35:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionFixLighting$2 -> KUIi$2:
    react.action.ActionFixLighting this$0 -> NDtn
    react.api.IActionSource val$source -> TOXC
    int val$ch -> NUwA
    1:69:void <init>(react.action.ActionFixLighting,react.api.IActionSource,int) -> <init>
    74:79:void run(java.lang.Integer) -> Oqux
    1:1:void run(java.lang.Object) -> Oqux
react.action.ActionFixLighting$3 -> KUIi$3:
    react.action.ActionFixLighting this$0 -> NDtn
    1:80:void <init>(react.action.ActionFixLighting) -> <init>
    85:90:void run(java.lang.Double) -> Oqux
    1:1:void run(java.lang.Object) -> Oqux
react.action.ActionLockFluid -> JYut:
    int lcd -> tmuL
    26:53:void <init>() -> <init>
    58:103:void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
react.action.ActionLockFluid$1 -> JYut$1:
    react.action.ActionLockFluid this$0 -> CVVk
    1:30:void <init>(react.action.ActionLockFluid) -> <init>
    35:38:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionLockFluid$2 -> JYut$2:
    react.action.ActionLockFluid this$0 -> CVVk
    1:42:void <init>(react.action.ActionLockFluid) -> <init>
    47:50:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionLockHopper -> gfyw:
    int lcd -> tmuL
    26:53:void <init>() -> <init>
    58:103:void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
react.action.ActionLockHopper$1 -> gfyw$1:
    react.action.ActionLockHopper this$0 -> JlOI
    1:30:void <init>(react.action.ActionLockHopper) -> <init>
    35:38:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionLockHopper$2 -> gfyw$2:
    react.action.ActionLockHopper this$0 -> JlOI
    1:42:void <init>(react.action.ActionLockHopper) -> <init>
    47:50:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionLockRedstone -> OXdf:
    int lcd -> tmuL
    26:53:void <init>() -> <init>
    58:102:void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
react.action.ActionLockRedstone$1 -> OXdf$1:
    react.action.ActionLockRedstone this$0 -> iDBW
    1:30:void <init>(react.action.ActionLockRedstone) -> <init>
    35:38:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionLockRedstone$2 -> OXdf$2:
    react.action.ActionLockRedstone this$0 -> iDBW
    1:42:void <init>(react.action.ActionLockRedstone) -> <init>
    47:50:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionPurgeChunks -> biLe:
    long ms -> ObJw
    int lcd -> tmuL
    boolean fail -> tTbY
    31:46:void <init>() -> <init>
    51:144:void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
    148:164:void purge(org.bukkit.Chunk,java.lang.Runnable,react.api.IActionSource,react.api.ISelector[]) -> uyTg
    27:27:boolean access$0(react.action.ActionPurgeChunks) -> Oqux
    25:25:void access$1(react.action.ActionPurgeChunks,long) -> Oqux
    26:26:int access$2(react.action.ActionPurgeChunks) -> uyTg
    25:25:long access$3(react.action.ActionPurgeChunks) -> jgsI
    27:27:void access$4(react.action.ActionPurgeChunks,boolean) -> Oqux
react.action.ActionPurgeChunks$1 -> biLe$1:
    react.action.ActionPurgeChunks this$0 -> sjqP
    1:35:void <init>(react.action.ActionPurgeChunks) -> <init>
    40:43:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionPurgeChunks$2 -> biLe$2:
    react.action.ActionPurgeChunks this$0 -> sjqP
    int val$dk -> biaG
    java.lang.Object val$j -> YfvX
    react.api.IActionSource val$source -> TOXC
    react.api.ISelector[] val$selectors -> PTKv
    react.glang.FinalInteger val$acompleted -> YgVi
    react.glang.FinalInteger val$completed -> IXJC
    react.glang.FinalInteger val$total -> YgXd
    react.glang.FinalInteger val$totalCulled -> iTbx
    react.glang.FinalInteger val$totalChunked -> dwyA
    1:81:void <init>(react.action.ActionPurgeChunks,java.lang.String,int,int,int,java.lang.Object,react.api.IActionSource,react.api.ISelector[],react.glang.FinalInteger,react.glang.FinalInteger,react.glang.FinalInteger,react.glang.FinalInteger,react.glang.FinalInteger) -> <init>
    86:123:void run() -> run
    81:81:react.action.ActionPurgeChunks access$0(react.action.ActionPurgeChunks$2) -> Oqux
react.action.ActionPurgeChunks$2$1 -> biLe$2$1:
    react.action.ActionPurgeChunks$2 this$1 -> cttb
    react.glang.FinalInteger val$acompleted -> YgVi
    react.glang.FinalInteger val$completed -> IXJC
    react.glang.FinalInteger val$total -> YgXd
    react.glang.FinalInteger val$totalCulled -> iTbx
    react.glang.FinalInteger val$totalChunked -> dwyA
    react.api.IActionSource val$source -> TOXC
    1:88:void <init>(react.action.ActionPurgeChunks$2,react.glang.FinalInteger,react.glang.FinalInteger,react.glang.FinalInteger,react.glang.FinalInteger,react.glang.FinalInteger,react.api.IActionSource) -> <init>
    93:118:void run() -> run
react.action.ActionPurgeChunks$3 -> biLe$3:
    react.action.ActionPurgeChunks this$0 -> sjqP
    react.api.IActionSource val$source -> TOXC
    react.glang.FinalInteger val$acompleted -> YgVi
    1:130:void <init>(react.action.ActionPurgeChunks,java.lang.String,int,react.api.IActionSource,react.glang.FinalInteger) -> <init>
    135:141:void run() -> run
react.action.ActionPurgeChunks$4 -> biLe$4:
    react.action.ActionPurgeChunks this$0 -> sjqP
    org.bukkit.Chunk val$chunk -> klKJ
    java.lang.Runnable val$cb -> JAXr
    1:148:void <init>(react.action.ActionPurgeChunks,org.bukkit.Chunk,java.lang.Runnable) -> <init>
    153:162:void run() -> run
react.action.ActionPurgeEntities -> rUwX:
    long ms -> ObJw
    int lcd -> tmuL
    34:61:void <init>() -> <init>
    66:153:void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
    157:200:void purge(org.bukkit.Chunk,java.lang.Runnable,react.api.IActionSource,react.api.ISelector[]) -> uyTg
    29:29:void access$0(react.action.ActionPurgeEntities,long) -> Oqux
    30:30:int access$1(react.action.ActionPurgeEntities) -> Oqux
    29:29:long access$2(react.action.ActionPurgeEntities) -> uyTg
    30:30:void access$3(react.action.ActionPurgeEntities,int) -> Oqux
react.action.ActionPurgeEntities$1 -> rUwX$1:
    react.action.ActionPurgeEntities this$0 -> MRri
    1:38:void <init>(react.action.ActionPurgeEntities) -> <init>
    43:46:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionPurgeEntities$2 -> rUwX$2:
    react.action.ActionPurgeEntities this$0 -> MRri
    1:50:void <init>(react.action.ActionPurgeEntities) -> <init>
    55:58:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionPurgeEntities$3 -> rUwX$3:
    react.action.ActionPurgeEntities this$0 -> MRri
    react.glang.FinalInteger val$completed -> IXJC
    react.glang.FinalInteger val$total -> YgXd
    react.glang.FinalInteger val$totalCulled -> iTbx
    react.glang.FinalInteger val$totalChunked -> dwyA
    react.api.IActionSource val$source -> TOXC
    1:106:void <init>(react.action.ActionPurgeEntities,react.glang.FinalInteger,react.glang.FinalInteger,react.glang.FinalInteger,react.glang.FinalInteger,react.api.IActionSource) -> <init>
    111:131:void run() -> run
react.action.ActionPurgeEntities$4 -> rUwX$4:
    react.action.ActionPurgeEntities this$0 -> MRri
    react.api.IActionSource val$source -> TOXC
    react.glang.FinalInteger val$totalCulled -> iTbx
    react.glang.FinalInteger val$totalChunked -> dwyA
    1:138:void <init>(react.action.ActionPurgeEntities,java.lang.String,int,react.api.IActionSource,react.glang.FinalInteger,react.glang.FinalInteger) -> <init>
    144:150:void run() -> run
react.action.ActionPurgeEntities$5 -> rUwX$5:
    react.action.ActionPurgeEntities this$0 -> MRri
    org.bukkit.entity.Entity val$i -> uFdA
    react.glang.FinalInteger val$cu -> rEkF
    int val$k -> ejYh
    org.bukkit.Chunk val$chunk -> klKJ
    java.lang.Runnable val$cb -> JAXr
    1:178:void <init>(react.action.ActionPurgeEntities,org.bukkit.entity.Entity,react.glang.FinalInteger,int,org.bukkit.Chunk,java.lang.Runnable) -> <init>
    183:191:void run() -> run
react.action.ActionUnlockFluid -> PmJd:
    int lcd -> tmuL
    25:40:void <init>() -> <init>
    45:84:void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
react.action.ActionUnlockFluid$1 -> PmJd$1:
    react.action.ActionUnlockFluid this$0 -> kbxm
    1:29:void <init>(react.action.ActionUnlockFluid) -> <init>
    34:37:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionUnlockHopper -> QpMe:
    int lcd -> tmuL
    25:40:void <init>() -> <init>
    45:84:void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
react.action.ActionUnlockHopper$1 -> QpMe$1:
    react.action.ActionUnlockHopper this$0 -> Wqtc
    1:29:void <init>(react.action.ActionUnlockHopper) -> <init>
    34:37:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.action.ActionUnlockRedstone -> UADm:
    int lcd -> tmuL
    25:40:void <init>() -> <init>
    45:84:void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
react.action.ActionUnlockRedstone$1 -> UADm$1:
    react.action.ActionUnlockRedstone this$0 -> anpp
    1:29:void <init>(react.action.ActionUnlockRedstone) -> <init>
    34:37:react.api.ISelector get() -> gfyw
    1:1:java.lang.Object get() -> get
react.api.Action -> UcHV:
    java.lang.String name -> name
    java.lang.String description -> description
    java.lang.String status -> brTp
    java.lang.String[] nodes -> SKvC
    react.api.ActionHandle handle -> vIik
    react.api.ActionState state -> bHBE
    react.api.ActionTargetType target -> CMgx
    react.api.ActionType type -> doih
    react.api.IActionSource currentSource -> yKCp
    double progress -> uhjH
    react.glang.GMap defaultSelectors -> RtGt
    23:24:void <init>(react.api.ActionType) -> <init>
    26:39:void <init>(java.lang.String,java.lang.String,react.api.ActionHandle,react.api.ActionTargetType,react.api.ActionType) -> <init>
    44:59:react.api.ISelector[] biselect(react.api.ISelector[]) -> Oqux
    65:66:void setDefaultSelector(java.lang.Class,react.glang.AccessCallback) -> Oqux
    71:71:java.lang.String getName() -> getName
    77:77:java.lang.String getDescription() -> getDescription
    83:83:react.api.ActionHandle getHandleType() -> OXdf
    89:89:react.api.ActionState getState() -> biLe
    95:95:java.lang.String getStatus() -> getStatus
    101:102:void setStatus(java.lang.String) -> Oqux
    107:107:double getProgress() -> getProgress
    113:114:void setProgress(double) -> setProgress
    119:119:react.api.ActionTargetType getTarget() -> rUwX
    125:125:react.api.ActionType getType() -> PmJd
    131:131:react.glang.GMap getDefaultSelectors() -> QpMe
    137:146:void act(react.api.IActionSource,react.api.ISelector[]) -> uyTg
    151:152:void completeAction() -> UADm
    157:157:react.api.IActionSource getCurrentSource() -> UcHV
    163:163:java.lang.String[] getNodes() -> SCNo
    169:170:void setNodes(java.lang.String[]) -> Oqux
    void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
react.api.ActionAlreadyRunningException -> SCNo:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
react.api.ActionException -> HmcS:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
react.api.ActionHandle -> quXa:
    react.api.ActionHandle AUTOMATIC -> gEnW
    react.api.ActionHandle MANUAL -> Tylk
    react.api.ActionHandle MUTEX -> hsdy
    react.api.ActionHandle[] ENUM$VALUES -> oNFh
    3:7:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.api.ActionHandle[] values() -> values
    1:1:react.api.ActionHandle valueOf(java.lang.String) -> valueOf
react.api.ActionNotRunningException -> gVXr:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
react.api.ActionState -> uOAQ:
    react.api.ActionState IDLE -> JlQF
    react.api.ActionState RUNNING -> nJbj
    react.api.ActionState[] ENUM$VALUES -> maRh
    3:6:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.api.ActionState[] values() -> values
    1:1:react.api.ActionState valueOf(java.lang.String) -> valueOf
react.api.ActionTargetType -> RQMi:
    react.api.ActionTargetType POSITIONAL -> Vwbs
    react.api.ActionTargetType SYSTEM -> cuXY
    react.api.ActionTargetType[] ENUM$VALUES -> VgBf
    3:6:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.api.ActionTargetType[] values() -> values
    1:1:react.api.ActionTargetType valueOf(java.lang.String) -> valueOf
react.api.ActionType -> Lymd:
    react.api.ActionType FIX_LIGHTING -> NVYk
    react.api.ActionType UNLOCK_FLUID -> jXHj
    react.api.ActionType LOCK_FLUID -> STeq
    react.api.ActionType UNLOCK_HOPPER -> AGcQ
    react.api.ActionType LOCK_HOPPER -> pbKX
    react.api.ActionType UNLOCK_REDSTONE -> KfaU
    react.api.ActionType LOCK_REDSTONE -> Qgqf
    react.api.ActionType CULL_ENTITIES -> INyE
    react.api.ActionType COLLECT_GARBAGE -> qdkx
    react.api.ActionType PURGE_ENTITIES -> inVu
    react.api.ActionType PURGE_CHUNKS -> GADA
    java.lang.String name -> name
    java.lang.String description -> description
    react.api.ActionHandle handle -> vIik
    react.api.ActionTargetType target -> CMgx
    react.api.ActionType[] ENUM$VALUES -> kkku
    5:17:void <clinit>() -> <clinit>
    24:30:void <init>(java.lang.String,int,react.api.ActionHandle,react.api.ActionTargetType,java.lang.String,java.lang.String) -> <init>
    34:34:java.lang.String getName() -> getName
    39:39:java.lang.String getDescription() -> getDescription
    44:44:react.api.ActionHandle getHandle() -> HmcS
    49:49:react.api.ActionTargetType getTarget() -> rUwX
    1:1:react.api.ActionType[] values() -> values
    1:1:react.api.ActionType valueOf(java.lang.String) -> valueOf
react.api.ActivationRangeType -> SSnT:
    react.api.ActivationRangeType ANIMALS -> Cojx
    react.api.ActivationRangeType MONSTERS -> FpdT
    react.api.ActivationRangeType MISC -> QEoU
    react.api.ActivationRangeType[] ENUM$VALUES -> SKxG
    3:7:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.api.ActivationRangeType[] values() -> values
    1:1:react.api.ActivationRangeType valueOf(java.lang.String) -> valueOf
react.api.Address -> rVWi:
    int value() -> value
react.api.Async -> ivPx:
react.api.CPUBenchmark -> eYBv:
    org.bukkit.command.CommandSender sender -> sender
    int score -> MljP
    java.lang.Runnable onFinish -> McyF
    16:23:void <init>(org.bukkit.command.CommandSender) -> <init>
    27:29:void <init>(org.bukkit.command.CommandSender,java.lang.Runnable) -> <init>
    34:86:void run() -> run
    90:90:org.bukkit.command.CommandSender getSender() -> getSender
    95:95:int getScore() -> getScore
    100:100:java.lang.Runnable getOnFinish() -> quXa
    12:12:org.bukkit.command.CommandSender access$0(react.api.CPUBenchmark) -> Oqux
    13:13:int access$1(react.api.CPUBenchmark) -> uyTg
    14:14:java.lang.Runnable access$2(react.api.CPUBenchmark) -> jgsI
react.api.CPUBenchmark$1 -> eYBv$1:
    react.api.CPUBenchmark this$0 -> CMis
    1:34:void <init>(react.api.CPUBenchmark) -> <init>
    39:40:void run() -> run
react.api.CPUBenchmark$2 -> eYBv$2:
    react.api.CPUBenchmark this$0 -> CMis
    1:72:void <init>(react.api.CPUBenchmark) -> <init>
    77:84:void run() -> run
react.api.CPUResult -> bWhw:
    react.api.CPUResult ULTRA_SLOW -> xrVD
    react.api.CPUResult VERY_SLOW -> GtJn
    react.api.CPUResult SLOW -> ryTo
    react.api.CPUResult AVERAGE -> cBVK
    react.api.CPUResult GOOD -> dEYM
    react.api.CPUResult FAST -> oDwP
    react.api.CPUResult VERY_FAST -> feQd
    react.api.CPUResult ULTRA_FAST -> gyUr
    java.lang.String m -> nRtc
    react.api.CPUResult[] ENUM$VALUES -> yRtT
    3:12:void <clinit>() -> <clinit>
    16:19:void <init>(java.lang.String,int,java.lang.String) -> <init>
    24:24:java.lang.String toString() -> toString
    29:64:java.lang.String c(int) -> Oqux
    1:1:react.api.CPUResult[] values() -> values
    1:1:react.api.CPUResult valueOf(java.lang.String) -> valueOf
react.api.CacheBase -> tSmJ:
    react.glang.GMap cache -> fSml
    11:14:void <init>() -> <init>
    19:19:react.glang.GSet get(java.lang.Object) -> uyTg
    25:31:void put(java.lang.Object,java.lang.Object) -> put
    36:37:void clear(java.lang.Object) -> jgsI
    42:43:void clear() -> clear
    48:48:react.glang.GList k() -> gVXr
    54:54:boolean has(java.lang.Object) -> NoSy
react.api.Capabilities -> EKGK:
    react.api.Capabilities DUAL_WIELD -> nJdX
    react.api.Capabilities SCOREBOARD -> jhka
    react.api.Capabilities HOPPERS -> uOXn
    react.api.Capabilities ATTRIBUTES -> EusN
    react.api.Capabilities ENTITY_AI -> jGIg
    react.api.Capabilities ACTION_BAR -> Oamd
    react.api.Capabilities ENTITY_NAMES -> kJLi
    react.surge.util.ProtocolRange r -> tLUd
    java.lang.String n -> GRFn
    react.api.Capabilities[] ENUM$VALUES -> KweI
    10:18:void <clinit>() -> <clinit>
    23:27:void <init>(java.lang.String,int,java.lang.String,react.surge.util.Protocol,react.surge.util.Protocol) -> <init>
    32:32:java.lang.String toString() -> toString
    37:37:boolean isCapable() -> uOAQ
    42:43:void sendNotCapable(org.bukkit.command.CommandSender) -> Oqux
    47:48:void sendCapable(org.bukkit.command.CommandSender) -> uyTg
    1:1:react.api.Capabilities[] values() -> values
    1:1:react.api.Capabilities valueOf(java.lang.String) -> valueOf
react.api.ChunkIssue -> INbK:
    react.api.ChunkIssue ENTITY -> KVCH
    react.api.ChunkIssue HOPPER -> kIjq
    react.api.ChunkIssue REDSTONE -> RITo
    react.api.ChunkIssue FLUID -> wLlw
    react.api.ChunkIssue PHYSICS -> pPil
    react.api.ChunkIssue[] ENUM$VALUES -> maTK
    3:9:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.api.ChunkIssue[] values() -> values
    1:1:react.api.ChunkIssue valueOf(java.lang.String) -> valueOf
react.api.Clip -> pqtM:
    double min() -> min
    double max() -> max
react.api.CommandSenderActionSource -> qJcM:
    org.bukkit.command.CommandSender sender -> sender
    11:14:void <init>(org.bukkit.command.CommandSender) -> <init>
    18:18:org.bukkit.command.CommandSender getSender() -> getSender
    24:25:void sendResponse(java.lang.String) -> uyTg
    30:31:void sendResponseSuccess(java.lang.String) -> jgsI
    36:37:void sendResponseError(java.lang.String) -> NoSy
    42:43:void sendResponseActing(java.lang.String) -> gojx
react.api.ConsoleActionSource -> Plhk:
    7:7:void <init>() -> <init>
    12:13:void sendResponse(java.lang.String) -> uyTg
    18:19:void sendResponseSuccess(java.lang.String) -> jgsI
    24:25:void sendResponseError(java.lang.String) -> NoSy
    30:31:void sendResponseActing(java.lang.String) -> gojx
react.api.CullList -> OYDv:
    react.glang.GSet toCull -> HCge
    10:13:void <init>() -> <init>
    17:18:void add(org.bukkit.entity.Entity) -> gojx
    22:22:boolean hasNext() -> hasNext
    27:29:org.bukkit.entity.Entity pop() -> RQMi
react.api.DTest -> IpeW:
    3:3:void <init>() -> <init>
    7:58:int test() -> Lymd
react.api.EntityFlag -> rNFx:
    react.api.EntityFlag NAMED -> ylet
    react.api.EntityFlag TAMED -> Jtav
    react.api.EntityFlag STACKED -> QEpu
    react.api.EntityFlag RIDDEN -> ELAY
    react.api.EntityFlag LEASHED -> dojo
    java.lang.String m -> nRtc
    react.api.EntityFlag[] ENUM$VALUES -> YNJK
    8:14:void <clinit>() -> <clinit>
    18:21:void <init>(java.lang.String,int,java.lang.String) -> <init>
    25:35:react.glang.GSet getFlags(org.bukkit.entity.Entity) -> tBlP
    40:60:boolean is(org.bukkit.entity.Entity) -> RPkn
    66:66:java.lang.String toString() -> toString
    1:1:react.api.EntityFlag[] values() -> values
    1:1:react.api.EntityFlag valueOf(java.lang.String) -> valueOf
react.api.EntityGroup -> VDFk:
    react.glang.GSet entityTypes -> ivlp
    10:13:void <init>() -> <init>
    17:17:react.glang.GSet getEntityTypes() -> SSnT
react.api.EntitySample -> sHXl:
    react.glang.GMap counts -> VUdO
    react.glang.GMap sets -> OsSQ
    15:19:void <init>() -> <init>
    23:29:void <init>(org.bukkit.Chunk) -> <init>
    33:40:react.glang.GList getAll() -> rVWi
    45:45:react.glang.GList getTypes() -> ivPx
    50:57:int total() -> eYBv
    62:67:int get(org.bukkit.entity.EntityType) -> Oqux
    72:79:react.glang.GSet getSet(org.bukkit.entity.EntityType) -> uyTg
    84:96:void add(org.bukkit.entity.Entity) -> gojx
react.api.Experimental -> YnrT:
react.api.IAction -> xGHC:
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    react.api.ActionHandle getHandleType() -> OXdf
    void act(react.api.IActionSource,react.api.ISelector[]) -> uyTg
    void enact(react.api.IActionSource,react.api.ISelector[]) -> Oqux
    react.api.ActionState getState() -> biLe
    react.api.ActionTargetType getTarget() -> rUwX
    void setNodes(java.lang.String[]) -> Oqux
    java.lang.String[] getNodes() -> SCNo
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> Oqux
    double getProgress() -> getProgress
    void setProgress(double) -> setProgress
    react.api.ActionType getType() -> PmJd
    react.glang.GMap getDefaultSelectors() -> QpMe
    void setDefaultSelector(java.lang.Class,react.glang.AccessCallback) -> Oqux
    react.api.ISelector[] biselect(react.api.ISelector[]) -> Oqux
    react.api.IActionSource getCurrentSource() -> UcHV
    void completeAction() -> UADm
react.api.IActionSource -> wLUJ:
    void sendResponse(java.lang.String) -> uyTg
    void sendResponseSuccess(java.lang.String) -> jgsI
    void sendResponseError(java.lang.String) -> NoSy
    void sendResponseActing(java.lang.String) -> gojx
react.api.ICache -> BlTI:
    react.glang.GSet get(java.lang.Object) -> uyTg
    void put(java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Object) -> jgsI
    void clear() -> clear
    boolean has(java.lang.Object) -> NoSy
    react.glang.GList k() -> gVXr
react.api.ICommand -> iusX:
    java.lang.String getCommand() -> getCommand
    java.lang.String[] getAliases() -> bWhw
    java.lang.String[] getPermissions() -> tSmJ
    java.lang.String getUsage() -> getUsage
    java.lang.String getDescription() -> getDescription
    java.lang.String getDescriptionForParameter(java.lang.String) -> tBlP
    react.api.SideGate getSideGate() -> EKGK
    void registerParameterDescription(java.lang.String,java.lang.String) -> Oqux
    void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> Oqux
react.api.IRecord -> FooI:
    java.lang.String getRecordType() -> INbK
    long getRecordTime() -> pqtM
    react.json.JSONObject toJSON() -> qJcM
    java.lang.Object getRecordObject() -> Plhk
    void fromJSON(react.json.JSONObject) -> Oqux
react.api.IRecordBook -> EKIe:
    int getSize() -> getSize
    react.api.IRecord getRecord(long) -> Oqux
    long getOldestRecordTime() -> OYDv
    void addRecord(react.api.IRecord) -> Oqux
    long getLatestRecordTime() -> IpeW
    int countRecords(long,long) -> Oqux
    react.glang.GMap getRecords(long,long) -> uyTg
    int purgeRecordsBefore(long) -> uyTg
    void save() -> save
    java.io.File getFile() -> getFile
react.api.ISampler -> ERxn:
    java.lang.String getID() -> getID
    react.graph.IFormatter getFormatter() -> rNFx
    java.lang.String getName() -> getName
    java.lang.String getDescription() -> getDescription
    void setID(java.lang.String) -> setID
    void setName(java.lang.String) -> setName
    void setDescription(java.lang.String) -> setDescription
    react.surge.util.C getColor() -> VDFk
    react.surge.util.C getAltColor() -> sHXl
    void setColor(react.surge.util.C,react.surge.util.C) -> Oqux
    int getInterval() -> getInterval
    void setInterval(int) -> uyTg
    void sample() -> YnrT
    java.lang.String get() -> get
    void construct() -> xGHC
    void setValue(double) -> setValue
    double getValue() -> getValue
react.api.ISelector -> ckqS:
    react.api.SelectionMode getMode() -> wLUJ
    java.lang.Class getType() -> getType
    boolean can(java.lang.Object) -> gojx
    react.glang.GSet getList() -> BlTI
    react.glang.GSet getPossibilities() -> iusX
    int parse(org.bukkit.command.CommandSender,java.lang.String) -> tBlP
    java.lang.String getName() -> getName
react.api.Injection -> OqyC:
    react.api.InjectionMethod value() -> FooI
react.api.InjectionMethod -> ERyV:
    react.api.InjectionMethod SWAP -> DQQP
    react.api.InjectionMethod SUBSTRATE -> ymKM
    react.api.InjectionMethod RELOAD -> BJhq
    react.api.InjectionMethod[] ENUM$VALUES -> yJfk
    3:7:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.api.InjectionMethod[] values() -> values
    1:1:react.api.InjectionMethod valueOf(java.lang.String) -> valueOf
react.api.Language -> jVtB:
    java.lang.String value() -> value
react.api.MSampler -> FMlQ:
    6:6:void <init>() -> <init>
    10:10:react.surge.server.SuperSampler ss() -> EKIe
react.api.MonitorHeading -> jgtv:
    react.api.ISampler head -> vlQs
    react.glang.GList children -> MKJW
    java.lang.String name -> name
    13:18:void <init>(java.lang.String,react.api.ISampler) -> <init>
    22:23:void addSampler(react.api.ISampler) -> Oqux
    27:27:react.api.ISampler getHead() -> ERxn
    32:33:void setHead(react.api.ISampler) -> uyTg
    37:37:react.glang.GList getChildren() -> ckqS
    42:42:java.lang.String getHeadText() -> OqyC
    47:60:java.lang.String getChildText() -> ERyV
    65:65:java.lang.String getName() -> getName
    70:71:void setName(java.lang.String) -> setName
    75:76:void setChildren(react.glang.GList) -> Oqux
react.api.NoiseGenerator -> oMQp:
    int[] perm -> perm
    double offsetX -> offsetX
    double offsetY -> offsetY
    double offsetZ -> offsetZ
    6:8:void <init>() -> <init>
    22:22:int floor(double) -> floor
    27:27:double fade(double) -> fade
    32:32:double lerp(double,double,double) -> lerp
    37:40:double grad(int,double,double,double) -> grad
    52:52:double noise(double) -> noise
    66:66:double noise(double,double) -> noise
    double noise(double,double,double) -> noise
    98:98:double noise(double,int,double,double) -> noise
    119:119:double noise(double,int,double,double,boolean) -> noise
    140:140:double noise(double,double,int,double,double) -> noise
    163:163:double noise(double,double,int,double,double,boolean) -> noise
    186:186:double noise(double,double,double,int,double,double) -> noise
    211:229:double noise(double,double,double,int,double,double,boolean) -> noise
react.api.OctaveGenerator -> CDbR:
    react.api.NoiseGenerator[] octaves -> ETSt
    double xScale -> xScale
    double yScale -> yScale
    double zScale -> zScale
    9:16:void <init>(react.api.NoiseGenerator[]) -> <init>
    28:31:void setScale(double) -> setScale
    40:40:double getXScale() -> getXScale
    51:52:void setXScale(double) -> setXScale
    61:61:double getYScale() -> getYScale
    72:73:void setYScale(double) -> setYScale
    82:82:double getZScale() -> getZScale
    93:94:void setZScale(double) -> setZScale
    103:103:react.api.NoiseGenerator[] getOctaves() -> jVtB
    120:120:double noise(double,double,double) -> noise
    139:139:double noise(double,double,double,boolean) -> noise
    158:158:double noise(double,double,double,double) -> noise
    179:179:double noise(double,double,double,double,boolean) -> noise
    200:200:double noise(double,double,double,double,double) -> noise
    223:245:double noise(double,double,double,double,double,boolean) -> noise
react.api.PerlinNoiseGenerator -> yJNT:
    int[][] grad3 -> grad3
    react.api.PerlinNoiseGenerator instance -> CpQW
    13:14:void <clinit>() -> <clinit>
    16:24:void <init>() -> <init>
    34:35:void <init>(long) -> <init>
    43:63:void <init>(java.util.Random) -> <init>
    75:75:double getNoise(double) -> getNoise
    90:90:double getNoise(double,double) -> getNoise
    107:107:double getNoise(double,double,double) -> getNoise
    117:117:react.api.PerlinNoiseGenerator getInstance() -> FMlQ
    123:154:double noise(double,double,double) -> noise
    173:173:double getNoise(double,int,double,double) -> getNoise
    194:194:double getNoise(double,double,int,double,double) -> getNoise
    217:217:double getNoise(double,double,double,int,double,double) -> getNoise
react.api.PerlinOctaveGenerator -> lCgS:
    21:22:void <init>(long,int) -> <init>
    34:35:void <init>(java.util.Random,int) -> <init>
    39:46:react.api.NoiseGenerator[] createOctaves(java.util.Random,int) -> Oqux
react.api.Permissable -> Hutw:
    react.api.Permissable ACCESS -> AOuq
    react.api.Permissable MONITOR -> skYB
    react.api.Permissable MONITOR_TITLE -> GIYK
    react.api.Permissable MONITOR_ACTIONLOG -> hAFR
    react.api.Permissable MONITOR_MAP -> mPUV
    react.api.Permissable MONITOR_ENVIRONMENT -> Wihf
    react.api.Permissable MONITOR_GLASSES -> LOvr
    react.api.Permissable MONITOR_CHUNK_BLAME -> wLpe
    react.api.Permissable RAI_MONITOR -> PutU
    react.api.Permissable RAI_CONTROL -> SwNQ
    react.api.Permissable RAI_ACCESS -> qure
    react.api.Permissable RAI -> woSp
    react.api.Permissable ACT -> GAFo
    react.api.Permissable RELOAD -> nRvb
    java.lang.String node -> MRxT
    react.api.Permissable[] ENUM$VALUES -> UuCq
    7:22:void <clinit>() -> <clinit>
    26:37:void <init>(java.lang.String,int,java.lang.String) -> <init>
    41:41:boolean has(org.bukkit.command.CommandSender) -> jgsI
    46:46:java.lang.String getNode() -> jgtv
    1:1:react.api.Permissable[] values() -> values
    1:1:react.api.Permissable valueOf(java.lang.String) -> valueOf
react.api.PlayerActionSource -> UAFm:
    org.bukkit.entity.Player p -> Iypi
    11:14:void <init>(org.bukkit.entity.Player) -> <init>
    18:18:org.bukkit.entity.Player getPlayer() -> getPlayer
    24:25:void sendResponse(java.lang.String) -> uyTg
    30:31:void sendResponseSuccess(java.lang.String) -> jgsI
    36:37:void sendResponseError(java.lang.String) -> NoSy
    42:43:void sendResponseActing(java.lang.String) -> gojx
react.api.PluginSelfDeleter -> BdBi:
    org.bukkit.plugin.Plugin plugin -> plugin
    java.io.File f -> hkYQ
    java.lang.Runnable r -> RQfq
    27:32:void <init>(org.bukkit.plugin.Plugin,java.io.File,java.lang.Runnable) -> <init>
    38:164:void run() -> run
    168:182:void del(java.io.File) -> Oqux
react.api.RAIActionSource -> RkAy:
    5:5:void <init>() -> <init>
    10:11:void sendResponse(java.lang.String) -> uyTg
    16:17:void sendResponseSuccess(java.lang.String) -> jgsI
    22:23:void sendResponseError(java.lang.String) -> NoSy
    28:29:void sendResponseActing(java.lang.String) -> gojx
react.api.ReactCommand -> ejHY:
    java.lang.String command -> command
    java.lang.String[] aliases -> aliases
    java.lang.String[] permissions -> TFkd
    java.lang.String usage -> dMic
    java.lang.String description -> description
    react.glang.GMap parameterDescriptions -> HfNB
    react.api.SideGate sideGate -> KoVd
    15:18:void <init>() -> <init>
    23:23:java.lang.String getDescriptionForParameter(java.lang.String) -> tBlP
    29:30:void registerParameterDescription(java.lang.String,java.lang.String) -> Oqux
    35:35:java.lang.String getCommand() -> getCommand
    41:41:java.lang.String[] getAliases() -> bWhw
    47:47:java.lang.String[] getPermissions() -> tSmJ
    53:53:java.lang.String getUsage() -> getUsage
    59:59:java.lang.String getDescription() -> getDescription
    65:65:react.api.SideGate getSideGate() -> EKGK
react.api.ReactException -> VwOA:
    long serialVersionUID -> serialVersionUID
    7:8:void <init>(java.lang.String) -> <init>
    10:13:void <init>() -> <init>
react.api.ReactPlayer -> dwfE:
    react.glang.GMap keystore -> BKKO
    boolean monitoring -> monitoring
    boolean actionlogging -> nJfK
    boolean glasses -> klPp
    boolean mapping -> GQgq
    int monitorSelection -> kJMr
    int plays -> baWS
    boolean monitorPosted -> LPVg
    int monitorLastSelection -> CNNG
    int switchNotification -> yJiP
    int hotbarSlot -> cAxf
    boolean shift -> fSsR
    int scroll -> UBAx
    double lastHeight -> mijD
    boolean heightMovement -> JtgA
    org.bukkit.entity.Player p -> Iypi
    24:39:void <clinit>() -> <clinit>
    42:89:void <init>(org.bukkit.entity.Player) -> <init>
    95:102:void save() -> save
    108:115:void load() -> load
    119:119:boolean isMonitoring() -> oMQp
    124:124:boolean isMapping() -> CDbR
    129:129:org.bukkit.entity.Player getP() -> yJNT
    134:136:void setMonitoring(boolean) -> uyTg
    140:142:void setMapping(boolean) -> jgsI
    146:146:int getMonitorSelection() -> lCgS
    151:153:void setMonitorSelection(int) -> jgsI
    157:157:int getHotbarSlot() -> Hutw
    162:164:void setHotbarSlot(int) -> NoSy
    168:168:boolean isShifting() -> UAFm
    173:175:void setShifting(boolean) -> NoSy
    179:179:boolean isShift() -> BdBi
    184:186:void setShift(boolean) -> gojx
    190:190:int getScroll() -> RkAy
    195:197:void setScroll(int) -> gojx
    201:201:int getMonitorLastSelection() -> ejHY
    206:208:void setMonitorLastSelection(int) -> tBlP
    212:213:void setP(org.bukkit.entity.Player) -> Oqux
    217:217:double getLastHeight() -> VwOA
    222:224:void setLastHeight(double) -> Oqux
    228:228:boolean isHeightMovement() -> dwfE
    233:235:void setHeightMovement(boolean) -> tBlP
    239:239:int getSwitchNotification() -> DYIR
    244:246:void setSwitchNotification(int) -> RPkn
    250:250:boolean getMonitorPosted() -> CfeE
    255:257:void setMonitorPosted(boolean) -> RPkn
    261:261:int getPlays() -> WFjf
    266:268:void setPlays(int) -> KUIi
    272:272:boolean isGlasses() -> BJQd
    277:279:void setGlasses(boolean) -> KUIi
    283:283:boolean isActionlogging() -> kRFT
    288:290:void setActionlogging(boolean) -> JYut
react.api.Record -> DYIR:
    java.lang.String recordType -> eIAB
    long recordTime -> NxcG
    java.lang.Object object -> object
    11:15:void <init>(long,java.lang.String) -> <init>
    19:21:void <init>(long,java.lang.Object,java.lang.String) -> <init>
    26:26:java.lang.String getRecordType() -> INbK
    32:32:long getRecordTime() -> pqtM
    38:38:java.lang.Object getRecordObject() -> Plhk
    react.json.JSONObject toJSON() -> qJcM
    void fromJSON(react.json.JSONObject) -> Oqux
react.api.RecordBook -> CfeE:
    java.io.File recordFile -> nmNL
    react.json.JSONObject js -> Jcdx
    java.lang.String type -> type
    20:48:void <init>(java.lang.String,java.io.File) -> <init>
    55:62:void save() -> save
    67:67:int getSize() -> getSize
    73:74:void addRecord(react.api.IRecord) -> Oqux
    79:87:react.api.IRecord getRecord(long) -> Oqux
    react.api.IRecord createDummyRecord(long,java.lang.String) -> Oqux
    95:107:long getOldestRecordTime() -> OYDv
    113:125:long getLatestRecordTime() -> IpeW
    130:130:boolean within(long,long,long) -> Oqux
    136:144:int countRecords(long,long) -> Oqux
    150:162:react.glang.GMap getRecords(long,long) -> uyTg
    168:181:int purgeRecordsBefore(long) -> uyTg
    187:187:java.io.File getFile() -> getFile
    192:198:void write() -> write
    202:214:void read() -> read
react.api.Restricted -> WFjf:
react.api.SampledChunk -> BJQd:
    org.bukkit.Chunk c -> kRbY
    react.glang.GMap counts -> VUdO
    11:15:void <init>(org.bukkit.Chunk) -> <init>
    19:20:void dec() -> Tpex
    26:38:void hit(react.api.ChunkIssue,int) -> Oqux
    42:42:org.bukkit.Chunk getC() -> Ujwc
    47:47:react.glang.GMap getCounts() -> hamo
react.api.SampledType -> kRFT:
    react.api.SampledType ENTITY_TIME_LOCK -> AHIP
    react.api.SampledType TILE_TIME_LOCK -> wMSd
    react.api.SampledType ENTITY_TIME -> pkBk
    react.api.SampledType TILE_TIME -> QEur
    react.api.SampledType ENTITY_DROPTICK -> gNed
    react.api.SampledType TILE_DROPTICK -> axIl
    react.api.SampledType REDSTONE_TICK_USAGE -> JIsO
    react.api.SampledType REDSTONE_TICK -> UtfX
    react.api.SampledType REDSTONE_SECOND -> VDdj
    react.api.SampledType REDSTONE_TIME -> Fgyu
    react.api.SampledType HOPPER_TICK_USAGE -> uWnC
    react.api.SampledType HOPPER_TICK -> EvWi
    react.api.SampledType HOPPER_SECOND -> cRyT
    react.api.SampledType HOPPER_TIME -> RslK
    react.api.SampledType FLUID_TICK_USAGE -> aUcy
    react.api.SampledType FLUID_TICK -> OkDT
    react.api.SampledType FLUID_SECOND -> mGfD
    react.api.SampledType FLUID_TIME -> ifMj
    react.api.SampledType TPS -> yBXE
    react.api.SampledType TICK -> KxJI
    react.api.SampledType TIU -> ECTF
    react.api.SampledType MEM -> dNNB
    react.api.SampledType FREEMEM -> PSsd
    react.api.SampledType MAXMEM -> GHyK
    react.api.SampledType ALLOCMEM -> cRyf
    react.api.SampledType MAHS -> YpQX
    react.api.SampledType CHK_TIME -> JtfR
    react.api.SampledType EXPLOSION_TIME -> CWAQ
    react.api.SampledType CHK -> rVsx
    react.api.SampledType ATASK -> AHIe
    react.api.SampledType STASK -> WaYf
    react.api.SampledType CHKS -> uyot
    react.api.SampledType ENT -> fmhR
    react.api.SampledType ENTLIV -> NyFB
    react.api.SampledType ENTDROP -> pbSt
    react.api.SampledType ENTTILE -> YhBv
    java.lang.String node -> MRxT
    react.api.SampledType[] ENUM$VALUES -> UBDc
    6:43:void <clinit>() -> <clinit>
    49:49:react.api.ISampler get() -> Eljr
    55:55:java.lang.String toString() -> toString
    58:69:void <init>(java.lang.String,int,java.lang.String) -> <init>
    73:73:java.lang.String getNode() -> jgtv
    1:1:react.api.SampledType[] values() -> values
    1:1:react.api.SampledType valueOf(java.lang.String) -> valueOf
react.api.Sampler -> Tpex:
    double value -> value
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String description -> description
    react.surge.util.C color -> IqfG
    react.surge.util.C altColor -> wfgs
    int interval -> bYJt
    17:20:void <init>() -> <init>
    25:25:java.lang.String getID() -> getID
    31:31:java.lang.String getName() -> getName
    37:37:java.lang.String getDescription() -> getDescription
    43:43:react.surge.util.C getColor() -> VDFk
    49:49:react.surge.util.C getAltColor() -> sHXl
    55:55:int getInterval() -> getInterval
    void sample() -> YnrT
    void construct() -> xGHC
    java.lang.String get() -> get
    70:71:void setValue(double) -> setValue
    76:76:double getValue() -> getValue
    82:83:void setID(java.lang.String) -> setID
    88:89:void setName(java.lang.String) -> setName
    94:95:void setDescription(java.lang.String) -> setDescription
    100:102:void setColor(react.surge.util.C,react.surge.util.C) -> Oqux
    107:108:void setInterval(int) -> uyTg
react.api.Sector -> Ujwc:
    int value() -> value
react.api.SelectionException -> hamo:
    long serialVersionUID -> serialVersionUID
    7:8:void <init>(java.lang.String) -> <init>
react.api.SelectionMode -> Eljr:
    react.api.SelectionMode WHITELIST -> jiSr
    react.api.SelectionMode BLACKLIST -> Pdwx
    react.api.SelectionMode[] ENUM$VALUES -> WjNV
    3:6:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.api.SelectionMode[] values() -> values
    1:1:react.api.SelectionMode valueOf(java.lang.String) -> valueOf
react.api.Selector -> Tgtx:
    java.lang.Class objectType -> ohBI
    react.api.SelectionMode mode -> KxLy
    react.glang.GSet list -> LXlX
    react.glang.GSet possibilities -> DHcI
    int popoff -> URcq
    12:12:void <clinit>() -> <clinit>
    14:20:void <init>(java.lang.Class,react.api.SelectionMode) -> <init>
    25:25:react.api.SelectionMode getMode() -> wLUJ
    31:31:java.lang.Class getType() -> getType
    37:37:boolean can(java.lang.Object) -> gojx
    43:43:react.glang.GSet getList() -> BlTI
    49:49:react.glang.GSet getPossibilities() -> iusX
    int parse(org.bukkit.command.CommandSender,java.lang.String) -> tBlP
    57:93:react.api.ISelector createSelector(org.bukkit.command.CommandSender,java.lang.String) -> RPkn
    98:100:int pop() -> pop
react.api.SelectorEntityType -> qRtu:
    11:17:void <init>(react.api.SelectionMode) -> <init>
    21:22:void add(org.bukkit.entity.EntityType) -> jgsI
    27:60:int parse(org.bukkit.command.CommandSender,java.lang.String) -> tBlP
    65:113:react.glang.GSet parseNode(org.bukkit.command.CommandSender,java.lang.String) -> KUIi
    119:119:java.lang.String getName() -> getName
react.api.SelectorParseException -> PAuv:
    long serialVersionUID -> serialVersionUID
    7:8:void <init>(java.lang.String) -> <init>
react.api.SelectorPosition -> uyTp:
    19:20:void <init>() -> <init>
    24:25:void add(org.bukkit.Chunk) -> uyTg
    29:30:void add(org.bukkit.Chunk,int) -> Oqux
    34:38:void add(org.bukkit.World) -> tBlP
    42:46:void addAll() -> Tgtx
    51:94:int parse(org.bukkit.command.CommandSender,java.lang.String) -> tBlP
    99:333:react.glang.GSet parseNode(org.bukkit.command.CommandSender,java.lang.String) -> KUIi
    339:339:java.lang.String getName() -> getName
react.api.SelectorTime -> UbkF:
    9:10:void <init>() -> <init>
    14:16:void set(java.lang.Long) -> set
    20:20:long get() -> get
    26:81:int parse(org.bukkit.command.CommandSender,java.lang.String) -> tBlP
    87:87:java.lang.String getName() -> getName
react.api.Side -> CMVI:
    react.api.Side PLAYERS -> TGPh
    react.api.Side CONSOLE -> HUOq
    java.lang.String ss -> xGfp
    react.api.Side[] ENUM$VALUES -> kcdi
    6:9:void <clinit>() -> <clinit>
    13:16:void <init>(java.lang.String,int,java.lang.String) -> <init>
    20:20:java.lang.String ss() -> qRtu
    25:30:react.api.Side get(org.bukkit.command.CommandSender) -> NoSy
    1:1:react.api.Side[] values() -> values
    1:1:react.api.Side valueOf(java.lang.String) -> valueOf
react.api.SideGate -> AFoF:
    react.api.SideGate PLAYERS_ONLY -> woXB
    react.api.SideGate CONSOLES_ONLY -> wLtA
    react.api.SideGate ANYTHING -> sHwb
    int[] $SWITCH_TABLE$react$api$SideGate -> prsT
    react.api.SideGate[] ENUM$VALUES -> xGev
    3:7:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    11:34:boolean supports(react.api.Side) -> Oqux
    1:1:react.api.SideGate[] values() -> values
    1:1:react.api.SideGate valueOf(java.lang.String) -> valueOf
    3:3:int[] $SWITCH_TABLE$react$api$SideGate() -> PAuv
react.api.SimplexNoiseGenerator -> jEsj:
    double SQRT_3 -> SQRT_3
    double SQRT_5 -> SQRT_5
    double F2 -> F2
    double G2 -> G2
    double G22 -> G22
    double F3 -> F3
    double G3 -> G3
    double F4 -> F4
    double G4 -> G4
    double G42 -> G42
    double G43 -> G43
    double G44 -> G44
    int[][] grad4 -> grad4
    int[][] simplex -> simplex
    double offsetW -> offsetW
    react.api.SimplexNoiseGenerator instance -> XKLj
    15:30:void <clinit>() -> <clinit>
    34:35:void <init>() -> <init>
    45:46:void <init>(long) -> <init>
    56:58:void <init>(java.util.Random) -> <init>
    62:62:double dot(int[],double,double) -> dot
    67:67:double dot(int[],double,double,double) -> dot
    72:72:double dot(int[],double,double,double,double) -> dot
    85:85:double getNoise(double) -> getNoise
    100:100:double getNoise(double,double) -> getNoise
    117:117:double getNoise(double,double,double) -> getNoise
    136:136:double getNoise(double,double,double,double) -> getNoise
    142:297:double noise(double,double,double) -> noise
    303:385:double noise(double,double) -> noise
    404:563:double noise(double,double,double,double) -> noise
    573:573:react.api.SimplexNoiseGenerator getInstance() -> uyTp
react.api.SimplexOctaveGenerator -> dnvV:
    double wScale -> TrEf
    22:23:void <init>(long,int) -> <init>
    10:36:void <init>(java.util.Random,int) -> <init>
    41:43:void setScale(double) -> setScale
    52:52:double getWScale() -> getWScale
    63:64:void setWScale(double) -> setWScale
    86:86:double noise(double,double,double,double,double,double) -> noise
    111:134:double noise(double,double,double,double,double,double,boolean) -> noise
    139:146:react.api.NoiseGenerator[] createOctaves(java.util.Random,int) -> Oqux
react.api.SpecializedTickLimiter -> QpRA:
    double rMaxTime -> sHxO
    long rStartTime -> gFVl
    double rLastTime -> SvrL
    long rMark -> URdc
    double tMaxTime -> HCnP
    react.gmath.Average atimes -> aLty
    react.gmath.Average adropped -> NVaT
    int droppedTicks -> JSIC
    boolean entityTick -> sRNC
    16:30:void <init>(double,boolean) -> <init>
    35:74:void initTick() -> initTick
    79:92:boolean shouldContinue() -> shouldContinue
react.api.SploogeCounter -> eXfx:
    react.glang.GList sources -> qmjE
    react.glang.GList splooge -> xjNX
    react.glang.GSet destroy -> HLbE
    21:104:void <init>(int,int,org.bukkit.Location) -> <init>
    108:155:boolean isValid(org.bukkit.Location,org.bukkit.Location) -> Oqux
    160:160:int getManhattanDistance(org.bukkit.Location,org.bukkit.Location) -> uyTg
    void clipped(org.bukkit.Location) -> Oqux
    void finished() -> finished
    boolean isAllowedSplooge(org.bukkit.Location) -> uyTg
    boolean isAllowedSource(org.bukkit.Location) -> jgsI
    18:18:react.glang.GList access$0(react.api.SploogeCounter) -> Oqux
    17:17:react.glang.GList access$1(react.api.SploogeCounter) -> uyTg
    19:19:react.glang.GSet access$2(react.api.SploogeCounter) -> jgsI
react.api.SploogeCounter$1 -> eXfx$1:
    react.api.SploogeCounter this$0 -> pjfi
    java.util.Iterator val$it -> fSvk
    org.bukkit.Location val$start -> binG
    int val$maxDistance -> qLFl
    1:31:void <init>(react.api.SploogeCounter,java.util.Iterator,org.bukkit.Location,int) -> <init>
    36:102:void run() -> run
    31:31:react.api.SploogeCounter access$0(react.api.SploogeCounter$1) -> Oqux
react.api.SploogeCounter$1$1 -> eXfx$1$1:
    react.api.SploogeCounter$1 this$1 -> WHML
    1:89:void <init>(react.api.SploogeCounter$1) -> <init>
    94:100:void run() -> run
react.api.StackTraceList -> dECg:
    long serialVersionUID -> serialVersionUID
    5:5:void <init>() -> <init>
react.api.StackTraceRecord -> lCik:
    11:12:void <init>(long,react.glang.GList,java.lang.String) -> <init>
    17:32:react.json.JSONObject toJSON() -> qJcM
    38:49:void fromJSON(react.json.JSONObject) -> Oqux
react.api.StackTraceRecordBook -> YwiC:
    9:10:void <init>(java.lang.String,java.io.File) -> <init>
    15:15:react.api.StackTraceRecord createDummyRecord(long,java.lang.String) -> uyTg
    1:1:react.api.IRecord createDummyRecord(long,java.lang.String) -> Oqux
react.api.StackedEntity -> oUdB:
    org.bukkit.entity.LivingEntity entity -> fBuo
    int count -> count
    double rmx -> iMAG
    20:31:void <init>(org.bukkit.entity.LivingEntity,int) -> <init>
    36:41:double getMaxHealth(org.bukkit.entity.LivingEntity) -> Oqux
    46:46:int getAbsoluteMaxCount() -> UbkF
    51:51:int getMaxCount(org.bukkit.entity.LivingEntity) -> uyTg
    56:58:void update() -> update
    62:68:void signalSize() -> CMVI
    72:123:void updateHealth() -> AFoF
    127:128:void heal(double) -> uyTg
    132:133:void setHealth(double) -> setHealth
    137:137:int getEffectiveCount() -> jEsj
    142:142:int getEffectiveCount(double) -> jgsI
    147:147:double getEffectiveMaxHealth(int) -> JYut
    152:152:double getRealMaxHealth() -> dnvV
    157:157:double getHealth() -> getHealth
    162:168:void setMaxHealth(double) -> setMaxHealth
    173:182:void setMaxHealth(org.bukkit.entity.LivingEntity,double) -> Oqux
    186:186:double getMaxHealth() -> getMaxHealth
    191:191:org.bukkit.entity.LivingEntity getEntity() -> getEntity
    196:196:int getCount() -> getCount
react.api.TitleMonitor -> tutT:
    react.glang.GList headings -> uFqM
    12:15:void <init>() -> <init>
    19:20:void addHeading(react.api.MonitorHeading) -> Oqux
    24:24:int getMaxSelection() -> QpRA
    29:37:int left(int) -> gfyw
    42:50:int right(int) -> OXdf
    55:55:react.api.MonitorHeading getHeadFor(int) -> biLe
    60:78:java.lang.String getHotbarHeadFor(int,boolean,react.controller.MonitorController,react.api.ReactPlayer,int) -> Oqux
    83:100:java.lang.String getHotbarFor(int,boolean) -> Oqux
react.api.Unused -> NgIB:
react.binject.BlockInjector -> lULH:
    react.surge.util.Protocol protocol -> TXVN
    java.lang.Class blocksClass -> CFCC
    12:16:void <init>(react.surge.util.Protocol,java.lang.Class) -> <init>
    21:23:void register(int,java.lang.String,java.lang.String,java.lang.Object) -> Oqux
    29:56:void inject() -> eXfx
    61:61:react.surge.util.Protocol getVersion() -> dECg
react.binject.IBlockInjector -> cktB:
    void register(int,java.lang.String,java.lang.String,java.lang.Object) -> Oqux
    void add(int,java.lang.String,java.lang.Object) -> Oqux
    java.lang.Object get(java.lang.String) -> get
    void inject() -> eXfx
    react.surge.util.Protocol getVersion() -> dECg
react.binject.InjectedBlock -> OjLN:
    react.surge.util.Protocol getInjectProtocol() -> lCik
    java.lang.String getInjectKey() -> YwiC
    java.lang.String getInjectCKey() -> oUdB
    int getInjectId() -> tutT
react.binject.ReflectionUtil -> RIAg:
    6:6:void <init>() -> <init>
    10:17:java.lang.Object getOfT(java.lang.Object,java.lang.Class) -> Oqux
    22:22:java.lang.Object get(java.lang.Object,java.lang.String,java.lang.Class) -> Oqux
    27:34:java.lang.Object get(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Class) -> Oqux
    41:54:void setAccessible(java.lang.reflect.Field) -> Oqux
    60:68:void setStatic(java.lang.String,java.lang.Class,java.lang.Object) -> Oqux
    74:80:java.lang.Object get(java.lang.Object,java.lang.reflect.Field,java.lang.Class) -> Oqux
react.binject.V10.BlockInjector10 -> EJlB:
    16:17:void <init>(react.surge.util.Protocol,java.lang.Class) -> <init>
    22:22:net.minecraft.server.v1_10_R1.Block get(java.lang.String) -> RPkn
    28:35:void add(int,java.lang.String,net.minecraft.server.v1_10_R1.Block) -> Oqux
    1:1:java.lang.Object get(java.lang.String) -> get
    1:1:void add(int,java.lang.String,java.lang.Object) -> Oqux
react.binject.V11.BlockInjector11 -> AqbS:
    16:17:void <init>(react.surge.util.Protocol,java.lang.Class) -> <init>
    22:22:net.minecraft.server.v1_11_R1.Block get(java.lang.String) -> KUIi
    28:35:void add(int,java.lang.String,net.minecraft.server.v1_11_R1.Block) -> Oqux
    1:1:java.lang.Object get(java.lang.String) -> get
    1:1:void add(int,java.lang.String,java.lang.Object) -> Oqux
react.binject.V12.BlockInjector12 -> Jbko:
    16:17:void <init>(react.surge.util.Protocol,java.lang.Class) -> <init>
    22:22:net.minecraft.server.v1_12_R1.Block get(java.lang.String) -> JYut
    28:36:void add(int,java.lang.String,net.minecraft.server.v1_12_R1.Block) -> Oqux
    1:1:java.lang.Object get(java.lang.String) -> get
    1:1:void add(int,java.lang.String,java.lang.Object) -> Oqux
react.binject.V8.BlockInjector8 -> Vvmu:
    16:17:void <init>(react.surge.util.Protocol,java.lang.Class) -> <init>
    22:22:net.minecraft.server.v1_8_R3.Block get(java.lang.String) -> gfyw
    28:35:void add(int,java.lang.String,net.minecraft.server.v1_8_R3.Block) -> Oqux
    1:1:java.lang.Object get(java.lang.String) -> get
    1:1:void add(int,java.lang.String,java.lang.Object) -> Oqux
react.binject.V9.BlockInjector9 -> bhoU:
    16:17:void <init>(react.surge.util.Protocol,java.lang.Class) -> <init>
    22:22:net.minecraft.server.v1_9_R1.Block get(java.lang.String) -> OXdf
    28:35:void add(int,java.lang.String,net.minecraft.server.v1_9_R1.Block) -> Oqux
    1:1:java.lang.Object get(java.lang.String) -> get
    1:1:void add(int,java.lang.String,java.lang.Object) -> Oqux
react.cache.CachedEntity -> KDKR:
    java.util.UUID uid -> JAdo
    int type -> type
    int ticksLived -> ticksLived
    java.lang.String world -> USGO
    double x -> x
    double y -> y
    double z -> z
    double vx -> WjOG
    double vy -> jPBo
    double vz -> dgcL
    double dx -> scMs
    double dy -> qSvD
    double dz -> vSDy
    26:41:void <init>(org.bukkit.entity.Entity) -> <init>
    45:51:void apply(org.bukkit.entity.Entity) -> KUIi
    55:55:int getType() -> getType
    60:61:void setType(int) -> setType
    65:65:int getTicksLived() -> getTicksLived
    70:71:void setTicksLived(int) -> setTicksLived
    75:75:java.lang.String getWorld() -> NgIB
    80:81:void setWorld(java.lang.String) -> setWorld
    85:85:double getX() -> getX
    90:91:void setX(double) -> setX
    95:95:double getY() -> getY
    100:101:void setY(double) -> setY
    105:105:double getZ() -> getZ
    110:111:void setZ(double) -> setZ
    115:115:double getVx() -> lULH
    120:121:void setVx(double) -> NoSy
    125:125:double getVy() -> cktB
    130:131:void setVy(double) -> gojx
    135:135:double getVz() -> OjLN
    140:141:void setVz(double) -> tBlP
    145:145:double getDx() -> RIAg
    150:151:void setDx(double) -> RPkn
    155:155:double getDy() -> EJlB
    160:161:void setDy(double) -> KUIi
    165:165:double getDz() -> AqbS
    170:171:void setDz(double) -> JYut
    175:175:java.util.UUID getUid() -> Jbko
    181:206:int hashCode() -> hashCode
    212:255:boolean equals(java.lang.Object) -> equals
react.cache.CachedEntityAgeable -> eihN:
    int age -> psVm
    boolean ageLock -> CWFA
    boolean breed -> kJTV
    14:19:void <init>(org.bukkit.entity.Ageable) -> <init>
    24:30:void apply(org.bukkit.entity.Entity) -> KUIi
    34:34:int getAge() -> getAge
    39:40:void setAge(int) -> setAge
    44:44:boolean isAgeLock() -> Vvmu
    49:50:void setAgeLock(boolean) -> setAgeLock
    54:54:boolean isBreed() -> bhoU
    59:60:void setBreed(boolean) -> setBreed
    65:70:int hashCode() -> hashCode
    76:89:boolean equals(java.lang.Object) -> equals
react.cache.CachedEntityColorable -> RsRs:
    org.bukkit.DyeColor dye -> iUOe
    14:17:void <init>(org.bukkit.material.Colorable) -> <init>
    22:26:void apply(org.bukkit.entity.Entity) -> KUIi
    30:30:org.bukkit.DyeColor getDye() -> KDKR
    35:36:void setDye(org.bukkit.DyeColor) -> Oqux
    41:44:int hashCode() -> hashCode
    50:59:boolean equals(java.lang.Object) -> equals
react.cache.CachedEntityLiving -> TEsc:
    react.glang.GList potionEffects -> AjPr
    boolean canPickupItems -> Fpmw
    org.bukkit.inventory.ItemStack[] armorContents -> wMWL
    float fallDistance -> fallDistance
    int fireTicks -> fireTicks
    double health -> rFXM
    double maxHealth -> maxHealth
    int maxAir -> uPBR
    int air -> GANS
    26:37:void <init>(org.bukkit.entity.LivingEntity) -> <init>
    43:59:void apply(org.bukkit.entity.Entity) -> KUIi
    63:63:react.glang.GList getPotionEffects() -> eihN
    68:69:void setPotionEffects(react.glang.GList) -> uyTg
    73:73:boolean isCanPickupItems() -> RsRs
    78:79:void setCanPickupItems(boolean) -> setCanPickupItems
    83:83:org.bukkit.inventory.ItemStack[] getArmorContents() -> getArmorContents
    88:89:void setArmorContents(org.bukkit.inventory.ItemStack[]) -> setArmorContents
    93:93:float getFallDistance() -> getFallDistance
    98:99:void setFallDistance(float) -> setFallDistance
    103:103:int getFireTicks() -> getFireTicks
    108:109:void setFireTicks(int) -> setFireTicks
    113:113:double getHealth() -> getHealth
    118:119:void setHealth(double) -> setHealth
    123:123:double getMaxHealth() -> getMaxHealth
    128:129:void setMaxHealth(double) -> setMaxHealth
    133:133:int getMaxAir() -> TEsc
    138:139:void setMaxAir(int) -> rUwX
    143:143:int getAir() -> GrsM
    148:149:void setAir(int) -> PmJd
    154:168:int hashCode() -> hashCode
    174:204:boolean equals(java.lang.Object) -> equals
react.cache.CachedEntitySheep -> GrsM:
    boolean sheared -> LHLm
    12:15:void <init>(org.bukkit.entity.Sheep) -> <init>
    20:24:void apply(org.bukkit.entity.Entity) -> KUIi
    28:28:boolean isSheared() -> isSheared
    33:34:void setSheared(boolean) -> setSheared
    39:42:int hashCode() -> hashCode
    48:57:boolean equals(java.lang.Object) -> equals
react.cache.CachedItemDrop -> dgEi:
    org.bukkit.inventory.ItemStack is -> ArcN
    13:16:void <init>(org.bukkit.entity.Item) -> <init>
    21:24:void apply(org.bukkit.entity.Entity) -> KUIi
    29:32:int hashCode() -> hashCode
    38:52:boolean equals(java.lang.Object) -> equals
react.cache.EntityCache -> MuEj:
    7:7:void <init>() -> <init>
react.chronophysics.HopperDirection -> JRJK:
    react.chronophysics.HopperDirection DOWN -> afmV
    react.chronophysics.HopperDirection NORTH -> jaGe
    react.chronophysics.HopperDirection SOUTH -> NWGJ
    react.chronophysics.HopperDirection EAST -> rOMO
    react.chronophysics.HopperDirection WEST -> bsAt
    int direction -> direction
    int[] $SWITCH_TABLE$react$chronophysics$HopperDirection -> uWto
    react.chronophysics.HopperDirection[] ENUM$VALUES -> TGUm
    6:12:void <clinit>() -> <clinit>
    16:19:void <init>(java.lang.String,int,int) -> <init>
    23:37:org.bukkit.Location shift(org.bukkit.Location) -> NoSy
    43:43:boolean isLocked(org.bukkit.block.Hopper) -> Oqux
    49:64:react.chronophysics.HopperDirection getDirection(org.bukkit.block.Hopper) -> uyTg
    1:1:react.chronophysics.HopperDirection[] values() -> values
    1:1:react.chronophysics.HopperDirection valueOf(java.lang.String) -> valueOf
    6:6:int[] $SWITCH_TABLE$react$chronophysics$HopperDirection() -> dgEi
react.chronophysics.HopperWormhole -> mWnB:
    org.bukkit.block.Hopper source -> Rkbt
    react.glang.GList path -> RJAT
    org.bukkit.block.Hopper destination -> oVcy
    17:22:void <init>(org.bukkit.block.Hopper,react.glang.GList,org.bukkit.block.Hopper) -> <init>
    26:26:org.bukkit.block.Hopper getSource() -> MuEj
    31:31:react.glang.GList getPath() -> JRJK
    36:36:org.bukkit.block.Hopper getDestination() -> mWnB
    43:96:react.chronophysics.HopperWormhole findPath(org.bukkit.block.Hopper,int,int) -> Oqux
    102:107:int hashCode() -> hashCode
    113:141:boolean equals(java.lang.Object) -> equals
react.chronophysics.PsychopathicHopper -> vbgv:
    org.bukkit.block.Hopper h -> hAMt
    13:16:void <init>(org.bukkit.block.Hopper) -> <init>
    20:47:int addFrom(org.bukkit.inventory.Inventory,int) -> Oqux
    52:52:org.bukkit.inventory.Inventory getInventory() -> getInventory
    57:57:react.chronophysics.HopperDirection getDirection() -> vbgv
    62:62:boolean isLockedByRedstone() -> kYwO
react.command.CommandAct -> kYwO:
    40:50:void <init>() -> <init>
    55:159:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> Oqux
    163:182:void sendPage(org.bukkit.command.CommandSender,int,int) -> Oqux
    186:192:react.text.RTX getBeginningRTX() -> YUde
    197:280:void sendCommand(org.bukkit.command.CommandSender,react.api.ActionType) -> Oqux
    284:294:void sendHeader(org.bukkit.command.CommandSender,int,int) -> uyTg
    298:327:void sendFooter(org.bukkit.command.CommandSender,int,int) -> jgsI
    331:346:react.glang.GList getSortedCommands() -> GIAS
    351:358:int getPageSize(int) -> QpMe
    363:363:boolean isValidPage(int,int) -> Oqux
    368:377:react.glang.GList getPage(int,int) -> uyTg
react.command.CommandActionLog -> YUde:
    17:26:void <init>() -> <init>
    31:40:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> Oqux
react.command.CommandCPUScore -> GIAS:
    15:23:void <init>() -> <init>
    28:29:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> Oqux
react.command.CommandCapabilities -> bXNs:
    15:23:void <init>() -> <init>
    28:40:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> Oqux
react.command.CommandChunkBlame -> vHuQ:
    23:31:void <init>() -> <init>
    36:76:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> Oqux
react.command.CommandChunkBlame$1 -> vHuQ$1:
    react.command.CommandChunkBlame this$0 -> nJnt
    org.bukkit.command.CommandSender val$sender -> Fybb
    1:36:void <init>(react.command.CommandChunkBlame,org.bukkit.command.CommandSender) -> <init>
    41:74:void run() -> run
react.command.CommandChunkBlame$1$1 -> vHuQ$1$1:
    react.command.CommandChunkBlame$1 this$1 -> Kwpc
    org.bukkit.command.CommandSender val$sender -> Fybb
    java.lang.String val$i -> rqNw
    react.glang.GMap val$top -> Fpof
    int val$totalx -> WYOV
    1:65:void <init>(react.command.CommandChunkBlame$1,org.bukkit.command.CommandSender,java.lang.String,react.glang.GMap,int) -> <init>
    70:71:void run() -> run
react.command.CommandGlasses -> nSAF:
    16:25:void <init>() -> <init>
    30:32:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> Oqux
react.command.CommandHelp -> TEuA:
    27:36:void <init>() -> <init>
    41:42:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> Oqux
    46:65:void sendPage(org.bukkit.command.CommandSender,int,int) -> Oqux
    69:75:react.text.RTX getBeginningRTX() -> YUde
    80:140:void sendCommand(org.bukkit.command.CommandSender,react.api.ICommand) -> Oqux
    144:154:void sendHeader(org.bukkit.command.CommandSender,int,int) -> uyTg
    158:187:void sendFooter(org.bukkit.command.CommandSender,int,int) -> jgsI
    191:198:react.glang.GList getSortedCommands() -> GIAS
    203:210:int getPageSize(int) -> QpMe
    215:215:boolean isValidPage(int,int) -> Oqux
    220:229:react.glang.GList getPage(int,int) -> uyTg
react.command.CommandMap -> iTQq:
    17:26:void <init>() -> <init>
    31:40:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> Oqux
react.command.CommandMonitor -> AhrP:
    17:26:void <init>() -> <init>
    31:40:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> Oqux
react.command.CommandReload -> hkBK:
    18:26:void <init>() -> <init>
    31:46:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> Oqux
react.command.CommandReload$1 -> hkBK$1:
    react.command.CommandReload this$0 -> YEcB
    org.bukkit.command.CommandSender val$sender -> Fybb
    1:31:void <init>(react.command.CommandReload,org.bukkit.command.CommandSender) -> <init>
    36:44:void run() -> run
react.command.CommandReload$1$1 -> hkBK$1$1:
    react.command.CommandReload$1 this$1 -> yKNw
    org.bukkit.command.CommandSender val$sender -> Fybb
    1:36:void <init>(react.command.CommandReload$1,java.lang.String,int,org.bukkit.command.CommandSender) -> <init>
    41:42:void run() -> run
react.command.CommandStatus -> BRbu:
    27:35:void <init>() -> <init>
    40:48:void fire(org.bukkit.command.CommandSender,java.lang.String[]) -> Oqux
    52:61:org.bukkit.inventory.ItemStack makeBook() -> bXNs
    66:92:void addSpikePages(react.glang.GList) -> jgsI
    96:106:void addStatusPages(react.glang.GList) -> NoSy
    110:127:int findSlot(org.bukkit.entity.Player) -> uyTg
react.controller.ActionController -> gNLQ:
    int kiv -> uhuW
    react.glang.GMap actions -> dNRq
    react.glang.GMap pending -> BBaw
    react.glang.GList tasks -> uaFW
    20:20:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    29:70:void start() -> start
    74:75:void fire(react.api.ActionType,react.api.IActionSource,react.api.ISelector[]) -> Oqux
    79:100:boolean fireAction(react.api.ActionType,react.api.IActionSource,react.api.ISelector[]) -> uyTg
    105:105:react.api.IAction getAction(react.api.ActionType) -> Oqux
    110:111:void registerAction(react.api.IAction) -> Oqux
    117:117:void stop() -> stop
    122:187:void tick() -> tick
    191:191:react.glang.GList getActions() -> vHuQ
    196:203:react.glang.GList getActionNames() -> nSAF
react.controller.BenchmarkController -> WXOb:
    react.api.CPUBenchmark finished -> VVKn
    boolean done -> nubs
    int score -> MljP
    13:13:void <init>() -> <init>
    22:49:void start() -> start
    54:58:void stop() -> stop
    63:68:void tick() -> tick
    16:16:void access$0(react.controller.BenchmarkController,boolean) -> Oqux
    15:15:void access$1(react.controller.BenchmarkController,react.api.CPUBenchmark) -> Oqux
    15:15:react.api.CPUBenchmark access$2(react.controller.BenchmarkController) -> Oqux
react.controller.BenchmarkController$1 -> WXOb$1:
    react.controller.BenchmarkController this$0 -> oxfV
    1:26:void <init>(react.controller.BenchmarkController,java.lang.String,int) -> <init>
    31:47:void run() -> run
    26:26:react.controller.BenchmarkController access$0(react.controller.BenchmarkController$1) -> Oqux
react.controller.BenchmarkController$1$1 -> WXOb$1$1:
    react.controller.BenchmarkController$1 this$1 -> Gsrs
    1:31:void <init>(react.controller.BenchmarkController$1) -> <init>
    36:45:void run() -> run
    31:31:react.controller.BenchmarkController$1 access$0(react.controller.BenchmarkController$1$1) -> Oqux
react.controller.BenchmarkController$1$1$1 -> WXOb$1$1$1:
    react.controller.BenchmarkController$1$1 this$2 -> VVLd
    1:36:void <init>(react.controller.BenchmarkController$1$1) -> <init>
    41:42:void run() -> run
react.controller.BlockInjectController -> OGiX:
    react.glang.GMap rangeMapping -> Hvuw
    react.binject.IBlockInjector injector -> hALu
    boolean injected -> WGlv
    17:17:void <init>() -> <init>
    26:34:void start() -> start
    38:94:void startInjection() -> TEuA
    100:100:void stop() -> stop
    106:106:void tick() -> tick
    110:110:react.glang.GMap getRangeMapping() -> iTQq
    115:115:react.binject.IBlockInjector getInjector() -> AhrP
    120:120:boolean isInjected() -> hkBK
react.controller.ChronophyFluidController -> FMom:
    5:5:void <init>() -> <init>
    11:11:void start() -> start
    17:17:void stop() -> stop
    23:23:void tick() -> tick
react.controller.ChunkController -> tTUG:
    boolean firstTickList -> AYQd
    long firstTick -> Aiqs
    long lastTick -> Jtkv
    react.gmath.Average aCSMS -> vIto
    react.glang.GMap pluginLoads -> CyJL
    react.glang.GMap playerLoads -> BmUo
    int serverLoads -> pbVr
    21:21:void <init>() -> <init>
    34:42:void start() -> start
    46:59:void flushTickList() -> BRbu
    63:73:void tickNextTickList() -> gNLQ
    78:79:void stop() -> stop
    85:116:void tick() -> tick
    120:121:void on(org.bukkit.event.player.PlayerQuitEvent) -> Oqux
    126:167:void onLoad(org.bukkit.event.world.ChunkLoadEvent) -> Oqux
    171:171:boolean isFirstTickList() -> WXOb
    176:176:long getFirstTick() -> OGiX
    181:181:long getLastTick() -> FMom
    186:186:react.gmath.Average getaCSMS() -> tTUG
    191:191:react.glang.GMap getPluginLoads() -> SdwH
    196:196:react.glang.GMap getPlayerLoads() -> nRcT
    201:201:int getServerLoads() -> HBuA
    28:28:react.glang.GMap access$0(react.controller.ChunkController) -> Oqux
    29:29:int access$1(react.controller.ChunkController) -> uyTg
    29:29:void access$2(react.controller.ChunkController,int) -> Oqux
    27:27:react.glang.GMap access$3(react.controller.ChunkController) -> jgsI
react.controller.ChunkController$1 -> tTUG$1:
    react.controller.ChunkController this$0 -> uhtm
    org.bukkit.event.world.ChunkLoadEvent val$e -> LjRR
    1:130:void <init>(react.controller.ChunkController,org.bukkit.event.world.ChunkLoadEvent) -> <init>
    135:164:void run(org.bukkit.plugin.Plugin) -> jgsI
    1:1:void run(java.lang.Object) -> Oqux
react.controller.CommandController -> SdwH:
    react.glang.GList commands -> fBvo
    boolean k -> ECYw
    35:35:void <init>() -> <init>
    43:44:void start() -> start
    49:50:void stop() -> stop
    54:99:void begin() -> begin
    104:108:void tick() -> tick
    112:113:void msg(org.bukkit.command.CommandSender,java.lang.String) -> JYut
    117:118:void f(org.bukkit.command.CommandSender,java.lang.String) -> gfyw
    123:290:boolean onCommand(org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String,java.lang.String[]) -> onCommand
    296:313:void on(org.bukkit.event.player.PlayerCommandPreprocessEvent) -> Oqux
    317:317:react.glang.GList getCommands() -> ncdi
    322:323:void setCommands(react.glang.GList) -> gojx
    327:327:boolean isK() -> RPsA
    332:333:void setK(boolean) -> gfyw
react.controller.EntityCullController -> nRcT:
    react.glang.GSet flags -> iMBK
    react.glang.GSet defer -> eYfc
    react.glang.GMap maxs -> STrj
    19:19:void <init>() -> <init>
    28:32:void start() -> start
    38:38:void stop() -> stop
    44:44:void tick() -> tick
    48:168:void repopulateRules() -> QgbY
    172:180:int cull(org.bukkit.Chunk) -> jgsI
    185:285:int partialCull(org.bukkit.Chunk) -> NoSy
react.controller.EntityStackController -> HBuA:
    react.glang.GList stacks -> jiYk
    19:21:void <init>() -> <init>
    26:27:void start() -> start
    32:33:void stop() -> stop
    38:53:void tick() -> tick
    58:111:void stack(react.glang.GList) -> tBlP
    115:120:boolean isStacked(org.bukkit.entity.LivingEntity) -> jgsI
    125:138:react.api.StackedEntity getStack(org.bukkit.entity.LivingEntity) -> NoSy
    144:162:void on(org.bukkit.event.entity.EntityDamageEvent) -> Oqux
    166:181:void merge(react.api.StackedEntity,react.api.StackedEntity) -> Oqux
    185:236:void checkNear(org.bukkit.entity.LivingEntity) -> gojx
    241:263:void on(org.bukkit.event.entity.EntitySpawnEvent) -> Oqux
react.controller.EntityStackController$1 -> HBuA$1:
    react.controller.EntityStackController this$0 -> eIHs
    org.bukkit.event.entity.EntitySpawnEvent val$e -> KUng
    1:248:void <init>(react.controller.EntityStackController,java.lang.String,int,int,org.bukkit.event.entity.EntitySpawnEvent) -> <init>
    253:260:void run() -> run
react.controller.EventController -> ncdi:
    react.glang.GMap slots -> VDmJ
    15:15:void <init>() -> <init>
    22:29:void start() -> start
    34:35:void stop() -> stop
    40:85:void tick() -> tick
    90:91:void on(org.bukkit.event.player.PlayerJoinEvent) -> Oqux
    96:97:void on(org.bukkit.event.player.PlayerQuitEvent) -> Oqux
react.controller.ExplosiveController -> RPsA:
    boolean firstTickList -> AYQd
    long firstTick -> Aiqs
    long lastTick -> Jtkv
    react.gmath.Average aCSMS -> vIto
    14:14:void <init>() -> <init>
    24:29:void start() -> start
    33:46:void flushTickList() -> BRbu
    50:60:void tickNextTickList() -> gNLQ
    65:66:void stop() -> stop
    72:73:void tick() -> tick
    78:79:void onLoad(org.bukkit.event.entity.EntityExplodeEvent) -> Oqux
    84:85:void onLoad(org.bukkit.event.block.BlockExplodeEvent) -> Oqux
    89:89:boolean isFirstTickList() -> WXOb
    94:94:long getFirstTick() -> OGiX
    99:99:long getLastTick() -> FMom
    104:104:react.gmath.Average getaCSMS() -> tTUG
react.controller.FastDecayController -> QgbY:
    20:20:void <init>() -> <init>
    25:26:void start() -> start
    31:32:void stop() -> stop
    37:43:void on(org.bukkit.event.block.BlockBreakEvent) -> Oqux
    47:123:void checkBreak(org.bukkit.block.Block) -> jgsI
    127:135:void decay(org.bukkit.block.Block) -> NoSy
    141:141:void tick() -> tick
react.controller.FastDecayController$1 -> QgbY$1:
    react.controller.FastDecayController this$0 -> BlwH
    react.glang.GMap val$locs -> XmVm
    1:56:void <init>(react.controller.FastDecayController,int,int,org.bukkit.Location,react.glang.GMap) -> <init>
    61:61:boolean isAllowedSplooge(org.bukkit.Location) -> uyTg
    67:67:boolean isAllowedSource(org.bukkit.Location) -> jgsI
    73:92:void clipped(org.bukkit.Location) -> Oqux
    97:120:void finished() -> finished
    56:56:react.controller.FastDecayController access$0(react.controller.FastDecayController$1) -> Oqux
react.controller.FastDecayController$1$1 -> QgbY$1$1:
    react.controller.FastDecayController$1 this$1 -> ejjl
    react.glang.GMap val$locs -> XmVm
    int val$i -> oVfY
    1:101:void <init>(react.controller.FastDecayController$1,java.lang.String,int,int,react.glang.GMap,int) -> <init>
    106:116:void run() -> run
react.controller.FastDecayController$2 -> QgbY$2:
    react.controller.FastDecayController this$0 -> BlwH
    org.bukkit.block.Block val$b -> ceFF
    1:127:void <init>(react.controller.FastDecayController,org.bukkit.block.Block) -> <init>
    132:133:void run() -> run
react.controller.FeatureController -> XkvG:
    6:6:void <init>() -> <init>
    11:12:void start() -> start
    17:18:void stop() -> stop
    24:24:void tick() -> tick
react.controller.FluidController -> OGjG:
    react.glang.GSet ignore -> gOPE
    int flowsPerTick -> wgOY
    int flowsPerSecond -> UuOV
    react.gmath.Average aFST -> kckV
    react.gmath.Average aFSS -> Hnhv
    react.gmath.Average aFSMS -> vuLm
    boolean firstTickList -> AYQd
    long firstTick -> Aiqs
    long lastTick -> Jtkv
    react.glang.GSet frozen -> RbtU
    react.glang.GMap queue -> NyKr
    react.glang.GMap freezeTimes -> YVhI
    20:20:void <init>() -> <init>
    38:55:void start() -> start
    59:64:void releaseChunk(org.bukkit.Chunk) -> gojx
    68:76:void checkChunks() -> XkvG
    80:97:void checkChunk(org.bukkit.Chunk) -> tBlP
    101:107:void queue(org.bukkit.block.Block) -> gojx
    111:111:boolean isFrozen(org.bukkit.Chunk) -> RPkn
    116:117:void freeze(org.bukkit.Chunk) -> KUIi
    121:127:void unfreeze(org.bukkit.Chunk) -> JYut
    131:138:void freeze(org.bukkit.Chunk,long) -> Oqux
    143:144:void stop() -> stop
    149:155:void tick() -> tick
    159:168:void flushTickList() -> BRbu
    172:182:void tickNextTickList() -> gNLQ
    187:204:void on(org.bukkit.event.block.BlockPhysicsEvent) -> Oqux
    209:244:void on(org.bukkit.event.block.BlockFromToEvent) -> Oqux
    248:248:react.glang.GSet getIgnore() -> OGjG
    253:253:int getTransfersPerTick() -> tSsV
    258:258:int getTransfersPerSecond() -> hYbV
    263:263:react.gmath.Average getaFST() -> rNNU
    268:268:react.gmath.Average getaFSS() -> FpUA
    273:273:react.gmath.Average getaFSMS() -> SLFl
    278:278:boolean isFirstTickList() -> WXOb
    283:283:long getFirstTick() -> OGiX
    288:288:long getLastTick() -> FMom
    293:293:react.glang.GSet getFrozen() -> CUgX
    298:298:react.glang.GMap getQueue() -> myru
    303:303:react.glang.GMap getFreezeTimes() -> Bcef
react.controller.GlassController -> tSsV:
    react.glang.GMap q -> NhKC
    react.glang.GList g -> RQsR
    33:33:void <init>() -> <init>
    41:44:void start() -> start
    49:50:void stop() -> stop
    56:129:void tick() -> tick
    133:133:boolean isUsingGlasses(org.bukkit.entity.Player) -> jgsI
    138:138:boolean canUseGlasses(org.bukkit.entity.Player) -> NoSy
    143:159:void toggleGlasses(org.bukkit.entity.Player) -> gojx
    164:169:void on(org.bukkit.event.block.BlockPhysicsEvent) -> Oqux
    174:179:void on(org.bukkit.event.block.BlockFromToEvent) -> Oqux
    184:189:void on(org.bukkit.event.block.BlockBurnEvent) -> Oqux
    194:199:void on(org.bukkit.event.block.BlockFormEvent) -> Oqux
    204:209:void on(org.bukkit.event.block.BlockFadeEvent) -> Oqux
    214:226:void on(org.bukkit.event.inventory.InventoryMoveItemEvent) -> Oqux
    36:36:react.glang.GList access$0(react.controller.GlassController) -> Oqux
react.controller.GlassController$1 -> tSsV$1:
    react.controller.GlassController this$0 -> tCqn
    react.glang.GMap val$cc -> FptG
    1:84:void <init>(react.controller.GlassController,react.glang.GMap) -> <init>
    89:127:void run() -> run
react.controller.GlassController$1$1 -> tSsV$1$1:
    react.controller.GlassController$1 this$1 -> wxOy
    org.bukkit.Location val$i -> bGnV
    org.bukkit.entity.Player val$j -> DHiE
    1:106:void <init>(react.controller.GlassController$1,java.lang.String,int,int,org.bukkit.Location,org.bukkit.entity.Player) -> <init>
    111:116:void run() -> run
react.controller.GraphController -> hYbV:
    react.glang.GMap g -> mjQd
    react.glang.GMap gr -> LPaD
    28:28:void <init>() -> <init>
    36:68:void start() -> start
    73:79:void stop() -> stop
    84:95:void tick() -> tick
    100:117:void on(org.bukkit.event.player.PlayerJoinEvent) -> Oqux
    121:156:void toggleMapping(org.bukkit.entity.Player) -> tBlP
    160:160:react.glang.GMap getG() -> iBrf
    165:165:react.glang.GMap getGr() -> uqIc
    31:31:react.glang.GMap access$0(react.controller.GraphController) -> Oqux
    30:30:react.glang.GMap access$1(react.controller.GraphController) -> uyTg
react.controller.GraphController$1 -> hYbV$1:
    react.controller.GraphController this$0 -> Coxp
    1:48:void <init>(react.controller.GraphController,java.lang.String) -> <init>
    53:66:void run() -> run
react.controller.GraphController$2 -> hYbV$2:
    react.controller.GraphController this$0 -> Coxp
    1:84:void <init>(react.controller.GraphController) -> <init>
    89:93:void run() -> run
react.controller.GraphController$3 -> hYbV$3:
    react.controller.GraphController this$0 -> Coxp
    org.bukkit.event.player.PlayerJoinEvent val$e -> ebYf
    1:100:void <init>(react.controller.GraphController,java.lang.String,org.bukkit.event.player.PlayerJoinEvent) -> <init>
    105:115:void run() -> run
react.controller.HopperController -> rNNU:
    react.glang.GSet ignore -> gOPE
    int transfersPerTick -> hcRn
    int transfersPerSecond -> HoHk
    react.gmath.Average aHST -> msBu
    react.gmath.Average aHSS -> VpAI
    react.gmath.Average aHSMS -> mipl
    boolean firstTickList -> AYQd
    long firstTick -> Aiqs
    long lastTick -> Jtkv
    react.glang.GSet frozen -> RbtU
    react.glang.GMap queue -> NyKr
    react.glang.GMap freezeTimes -> YVhI
    20:20:void <init>() -> <init>
    38:52:void start() -> start
    56:61:void releaseChunk(org.bukkit.Chunk) -> gojx
    65:73:void checkChunks() -> XkvG
    77:94:void checkChunk(org.bukkit.Chunk) -> tBlP
    98:104:void queue(org.bukkit.block.Block) -> gojx
    108:108:boolean isFrozen(org.bukkit.Chunk) -> RPkn
    113:114:void freeze(org.bukkit.Chunk) -> KUIi
    118:124:void unfreeze(org.bukkit.Chunk) -> JYut
    128:135:void freeze(org.bukkit.Chunk,long) -> Oqux
    140:141:void stop() -> stop
    146:152:void tick() -> tick
    156:165:void flushTickList() -> BRbu
    169:179:void tickNextTickList() -> gNLQ
    184:203:void on(org.bukkit.event.inventory.InventoryMoveItemEvent) -> Oqux
    207:207:react.glang.GSet getIgnore() -> OGjG
    212:212:int getTransfersPerTick() -> tSsV
    217:217:int getTransfersPerSecond() -> hYbV
    222:222:react.gmath.Average getaHST() -> QxcC
    227:227:react.gmath.Average getaHSS() -> qlmI
    232:232:react.gmath.Average getaHSMS() -> CgIi
    237:237:boolean isFirstTickList() -> WXOb
    242:242:long getFirstTick() -> OGiX
    247:247:long getLastTick() -> FMom
    252:252:react.glang.GSet getFrozen() -> CUgX
    257:257:react.glang.GMap getQueue() -> myru
    262:262:react.glang.GMap getFreezeTimes() -> Bcef
react.controller.HopperOvertickController -> FpUA:
    react.glang.GList possiblePlunge -> rNmJ
    14:14:void <init>() -> <init>
    21:23:void start() -> start
    28:29:void stop() -> stop
    34:35:void tick() -> tick
    39:62:boolean plunge(org.bukkit.block.Hopper) -> jgsI
    68:87:void on(org.bukkit.event.inventory.InventoryMoveItemEvent) -> Oqux
react.controller.LanguageController -> SLFl:
    java.io.File languageFolder -> jXXF
    int oldVersion -> skbO
    java.io.File dlf -> ejkE
    31:34:void <init>() -> <init>
    40:76:void start() -> start
    80:156:void checkForLanguageUpdates() -> MIrV
    160:221:void downloadAll(boolean) -> OXdf
    225:261:void downloadLanguage(java.lang.String) -> biLe
    267:295:void check() -> check
    299:310:void loadLanguage(java.lang.String) -> rUwX
    315:315:java.io.File getFileForLanguage(java.lang.String) -> PmJd
    320:332:void writeDefaults() -> Keny
    338:338:void stop() -> stop
    344:344:void tick() -> tick
    34:34:void access$0(react.controller.LanguageController,int) -> Oqux
    263:263:void access$1(react.controller.LanguageController) -> Oqux
react.controller.LanguageController$1 -> SLFl$1:
    react.controller.LanguageController this$0 -> mHMt
    1:66:void <init>(react.controller.LanguageController) -> <init>
    71:72:void run() -> run
react.controller.LanguageController$2 -> SLFl$2:
    react.controller.LanguageController this$0 -> mHMt
    1:80:void <init>(react.controller.LanguageController) -> <init>
    87:154:void run() -> run
    80:80:react.controller.LanguageController access$0(react.controller.LanguageController$2) -> Oqux
react.controller.LanguageController$2$1 -> SLFl$2$1:
    react.controller.LanguageController$2 this$1 -> UdMW
    1:103:void <init>(react.controller.LanguageController$2) -> <init>
    109:109:void onDownloadUpdateProgress(react.gnet.download.Download,long,long,double) -> Oqux
    115:115:void onDownloadStateChanged(react.gnet.download.Download,react.gnet.download.DownloadState,react.gnet.download.DownloadState) -> Oqux
    121:121:void onDownloadStarted(react.gnet.download.Download) -> Oqux
    126:128:void onDownloadFinished(react.gnet.download.Download) -> uyTg
    134:134:void onDownloadFailed(react.gnet.download.Download) -> jgsI
react.controller.LanguageController$3 -> SLFl$3:
    react.controller.LanguageController this$0 -> mHMt
    1:193:void <init>(react.controller.LanguageController,java.lang.String,int) -> <init>
    198:218:void run() -> run
react.controller.LanguageController$3$1 -> SLFl$3$1:
    react.controller.LanguageController$3 this$1 -> QOOh
    1:198:void <init>(react.controller.LanguageController$3) -> <init>
    203:214:void run() -> run
react.controller.LanguageController$3$1$1 -> SLFl$3$1$1:
    react.controller.LanguageController$3$1 this$2 -> lEJq
    1:206:void <init>(react.controller.LanguageController$3$1,java.lang.String,int) -> <init>
    211:212:void run() -> run
react.controller.LanguageController$4 -> SLFl$4:
    react.controller.LanguageController this$0 -> mHMt
    java.io.File val$dld -> biqg
    1:227:void <init>(react.controller.LanguageController,java.io.File) -> <init>
    233:233:void onDownloadUpdateProgress(react.gnet.download.Download,long,long,double) -> Oqux
    239:239:void onDownloadStateChanged(react.gnet.download.Download,react.gnet.download.DownloadState,react.gnet.download.DownloadState) -> Oqux
    245:245:void onDownloadStarted(react.gnet.download.Download) -> Oqux
    250:251:void onDownloadFinished(react.gnet.download.Download) -> uyTg
    257:257:void onDownloadFailed(react.gnet.download.Download) -> jgsI
react.controller.MonitorController -> CUgX:
    int maxCooldown -> qnLo
    react.api.TitleMonitor titleMonitor -> xsBT
    react.glang.GMap posts -> HDTo
    react.slate.PhantomSlate sb -> MJsS
    boolean ready -> dFDv
    36:36:void <clinit>() -> <clinit>
    42:47:void <init>() -> <init>
    52:87:void start() -> start
    91:91:react.slate.PhantomSlate constructActionLogBoard() -> ArFm
    96:114:void toggleActionLog(org.bukkit.entity.Player) -> RPkn
    118:136:void toggleMonitoring(org.bukkit.entity.Player) -> KUIi
    141:151:void stop() -> stop
    155:174:void constructMonitor() -> WhrB
    178:183:float calcVolume(react.api.ReactPlayer) -> Oqux
    188:188:boolean canMonitor(org.bukkit.entity.Player) -> JYut
    193:193:boolean canActionLog(org.bukkit.entity.Player) -> gfyw
    198:203:boolean isMonitoring(org.bukkit.entity.Player) -> OXdf
    208:213:boolean isActionLogging(org.bukkit.entity.Player) -> biLe
    218:222:void startMonitoring(org.bukkit.entity.Player) -> rUwX
    226:237:void stopMonitoring(org.bukkit.entity.Player) -> PmJd
    241:246:void startActionLogging(org.bukkit.entity.Player) -> QpMe
    250:261:void stopActionLogging(org.bukkit.entity.Player) -> UADm
    267:267:void tick() -> tick
    271:274:void changePost(react.api.ReactPlayer) -> uyTg
    278:290:void processPlayer(react.api.ReactPlayer) -> jgsI
    295:295:void handleActionLog(org.bukkit.entity.Player) -> UcHV
    299:323:void handleTriggers(react.api.ReactPlayer) -> NoSy
    327:366:void handleScrolling(react.api.ReactPlayer) -> gojx
    370:398:void handleShifting(react.api.ReactPlayer) -> tBlP
    402:424:void handlePosting(react.api.ReactPlayer) -> RPkn
    428:446:java.lang.String prefixFor(react.api.ReactPlayer,int,int) -> Oqux
    451:465:java.lang.String prefixForSub(react.api.ReactPlayer,react.surge.util.C,int) -> Oqux
    470:477:void tickMonitor(react.api.ReactPlayer) -> KUIi
    481:481:react.api.TitleMonitor getTitleMonitor() -> FNOo
    487:496:void on(org.bukkit.event.player.PlayerJoinEvent) -> Oqux
    501:510:void on(org.bukkit.event.player.PlayerToggleSneakEvent) -> Oqux
    515:527:void onTick() -> hsUI
    531:553:void updateActionBoard() -> MJSk
    558:558:java.lang.String getTickName() -> TNgb
    89:89:react.slate.PhantomSlate access$0(react.controller.MonitorController) -> Oqux
    39:39:void access$1(react.controller.MonitorController,react.slate.PhantomSlate) -> Oqux
    40:40:void access$2(react.controller.MonitorController,boolean) -> Oqux
    40:40:boolean access$3(react.controller.MonitorController) -> uyTg
    39:39:react.slate.PhantomSlate access$4(react.controller.MonitorController) -> jgsI
react.controller.MonitorController$1 -> CUgX$1:
    react.controller.MonitorController this$0 -> AitQ
    1:67:void <init>(react.controller.MonitorController,java.lang.String) -> <init>
    72:85:void run() -> run
react.controller.MonitorController$2 -> CUgX$2:
    react.controller.MonitorController this$0 -> AitQ
    1:531:void <init>(react.controller.MonitorController) -> <init>
    536:551:void run() -> run
react.controller.PhysicsController -> myru:
    react.glang.GMap samples -> vAgI
    18:18:void <init>() -> <init>
    25:28:void start() -> start
    33:35:void stop() -> stop
    42:42:void tick() -> tick
    46:47:void onRedstone(org.bukkit.Chunk) -> gfyw
    51:52:void onHopper(org.bukkit.Chunk) -> OXdf
    56:57:void onFluid(org.bukkit.Chunk) -> biLe
    62:63:void on(org.bukkit.event.world.ChunkUnloadEvent) -> Oqux
    67:73:void hit(org.bukkit.Chunk,react.api.ChunkIssue,int) -> Oqux
    80:91:void onTick() -> hsUI
    96:96:java.lang.String getTickName() -> TNgb
    101:101:react.glang.GMap getSamples() -> NLvI
react.controller.PlayerController -> Bcef:
    react.glang.GList players -> tDQi
    react.glang.GSet save -> Lrfd
    15:15:void <init>() -> <init>
    23:26:void start() -> start
    31:41:void stop() -> stop
    46:63:void tick() -> tick
    67:75:boolean has(org.bukkit.entity.Player) -> SCNo
    80:93:void requestSave(org.bukkit.entity.Player,boolean) -> Oqux
    97:108:react.api.ReactPlayer getPlayer(org.bukkit.entity.Player) -> HmcS
    113:113:react.glang.GList getPlayers() -> hrsQ
    119:124:void on(org.bukkit.event.player.PlayerQuitEvent) -> Oqux
react.controller.PlayerController$1 -> Bcef$1:
    react.controller.PlayerController this$0 -> Rkfr
    react.glang.GList val$toSave -> cKUW
    1:51:void <init>(react.controller.PlayerController,react.glang.GList) -> <init>
    56:60:void run() -> run
react.controller.RAIController -> iBrf:
    react.rai.IRAI rai -> gXCH
    boolean raiEnabled -> GQuU
    18:18:void <init>() -> <init>
    26:37:void start() -> start
    42:43:void stop() -> stop
    48:56:void tick() -> tick
    20:20:react.rai.IRAI access$0(react.controller.RAIController) -> Oqux
react.controller.RAIController$1 -> iBrf$1:
    react.controller.RAIController this$0 -> vAjW
    1:48:void <init>(react.controller.RAIController) -> <init>
    53:54:void run() -> run
react.controller.ReactFremComputer -> uqIc:
    14:14:void <init>() -> <init>
    19:42:react.glang.GMap compute(long,long) -> jgsI
react.controller.ReactServerInfo -> QxcC:
    16:16:void <init>() -> <init>
    21:21:java.lang.String dgetMotd() -> QNOn
    27:27:int dgetGameProtocol() -> eijX
    33:33:java.lang.String dgetGameVersion() -> SLEd
    39:39:java.lang.String dgetReactVersion() -> xFpY
    45:45:int dgetMaxPlayers() -> dgKV
    51:58:react.glang.GList dgetConnectedPlayers() -> wwRh
    64:64:int dgetViewDistance() -> GPtm
    70:70:int dgetGamePort() -> RIDo
    76:76:java.lang.String dgetGameAddress() -> oLwN
    82:89:react.glang.GList dgetRemotePlugins() -> NUjF
    95:102:react.glang.GList dgetWorlds() -> ycem
    108:108:react.glang.GList dgetActions() -> qvAt
    114:114:react.glang.GList dgetSamplers() -> hsWh
react.controller.RedstoneController -> qlmI:
    react.glang.GSet ignore -> gOPE
    react.glang.GSet frozen -> RbtU
    react.glang.GMap queue -> NyKr
    react.glang.GMap freezeTimes -> YVhI
    int redstonePerTick -> fKlh
    int redstonePerSecond -> htXK
    react.gmath.Average aRST -> sRSX
    react.gmath.Average aRSS -> URnD
    react.gmath.Average aRSMS -> iMGI
    boolean firstTickList -> AYQd
    long firstTick -> Aiqs
    long lastTick -> Jtkv
    22:22:void <init>() -> <init>
    40:70:void start() -> start
    75:81:void stop() -> stop
    85:90:void releaseChunk(org.bukkit.Chunk) -> gojx
    95:101:void tick() -> tick
    105:113:void checkChunks() -> XkvG
    117:134:void checkChunk(org.bukkit.Chunk) -> tBlP
    138:144:void queue(org.bukkit.block.Block) -> gojx
    148:148:boolean isFrozen(org.bukkit.Chunk) -> RPkn
    153:154:void freeze(org.bukkit.Chunk) -> KUIi
    158:165:void flushTickList() -> BRbu
    169:179:void tickNextTickList() -> gNLQ
    183:189:void unfreeze(org.bukkit.Chunk) -> JYut
    193:200:void freeze(org.bukkit.Chunk,long) -> Oqux
    205:206:void on(org.bukkit.event.world.ChunkUnloadEvent) -> Oqux
    211:224:void on(org.bukkit.event.block.BlockPhysicsEvent) -> Oqux
    229:242:void on(org.bukkit.event.block.BlockFromToEvent) -> Oqux
    246:246:react.glang.GSet getIgnore() -> OGjG
    251:251:react.glang.GSet getFrozen() -> CUgX
    256:256:react.glang.GMap getQueue() -> myru
    261:261:react.glang.GMap getFreezeTimes() -> Bcef
    266:266:int getRedstonePerTick() -> LPEO
    271:271:int getRedstonePerSecond() -> HKgs
    276:276:react.gmath.Average getaRST() -> teXK
    281:281:react.gmath.Average getaRSS() -> kQkg
    286:286:react.gmath.Average getaRSMS() -> rhCS
    291:291:boolean isFirstTickList() -> WXOb
    296:296:long getFirstTick() -> OGiX
    301:301:long getLastTick() -> FMom
react.controller.RemoteController -> CgIi:
    react.remote.server.RemoteServer remoteServer -> VUpd
    12:12:void <init>() -> <init>
    19:30:void start() -> start
    36:58:void startRemoteServer() -> WqgG
    63:67:void stop() -> stop
    73:73:void tick() -> tick
    32:32:void access$0(react.controller.RemoteController) -> Oqux
react.controller.RemoteController$1 -> CgIi$1:
    react.controller.RemoteController this$0 -> pIJY
    1:19:void <init>(react.controller.RemoteController,java.lang.String,int) -> <init>
    24:28:void run() -> run
react.controller.RemoteController$2 -> CgIi$2:
    react.controller.RemoteController this$0 -> pIJY
    1:36:void <init>(react.controller.RemoteController,int) -> <init>
    41:41:react.remote.server.ServerInfo getServerInfo() -> nReH
    47:47:react.remote.server.IFrameComputer getFrameComputer() -> Fgdy
react.controller.SampleController -> MIrV:
    react.glang.GMap samplers -> fnQW
    react.surge.server.SuperSampler ss -> IPKD
    int cd -> uPIB
    28:34:void <init>() -> <init>
    38:64:boolean checkThreads() -> brGI
    69:74:void restartSuperSampler() -> HLIa
    78:79:void registerSampler(react.api.ISampler) -> jgsI
    83:83:react.api.ISampler getSampler(java.lang.String) -> QpMe
    88:131:void constructSamplers() -> TNkI
    136:163:void start() -> start
    168:171:void stop() -> stop
    177:177:void tick() -> tick
    181:181:react.surge.server.SuperSampler getSuperSampler() -> sbUP
    187:209:void onTick() -> hsUI
    214:214:java.lang.String getTickName() -> TNgb
    219:219:react.glang.GMap getSamplers() -> gWAa
    224:224:react.surge.server.SuperSampler getSs() -> ySEG
    229:229:int getCd() -> sPrF
    234:241:react.glang.GList getSamplerNames() -> jNgw
    25:25:react.surge.server.SuperSampler access$0(react.controller.SampleController) -> Oqux
react.controller.SampleController$1 -> MIrV$1:
    react.controller.SampleController this$0 -> cluw
    1:140:void <init>(react.controller.SampleController,java.lang.String,int) -> <init>
    145:149:void run() -> run
react.controller.SampleController$2 -> MIrV$2:
    react.controller.SampleController this$0 -> cluw
    1:152:void <init>(react.controller.SampleController,java.lang.String,int) -> <init>
    157:161:void run() -> run
react.controller.SecurityController -> Keny:
    java.lang.String ipa -> ylvA
    react.glang.GList failures -> Bujl
    12:12:void <clinit>() -> <clinit>
    9:9:void <init>() -> <init>
    17:25:void start() -> start
    29:37:void scanForIP(java.lang.String) -> UADm
    41:74:void checkForIP() -> LqfN
    78:91:void scan(java.lang.Runnable) -> Oqux
    97:97:void stop() -> stop
    103:103:void tick() -> tick
react.controller.SecurityController$1 -> Keny$1:
    react.controller.SecurityController this$0 -> nmVo
    1:17:void <init>(react.controller.SecurityController) -> <init>
    22:23:void run() -> run
react.controller.SecurityController$2 -> Keny$2:
    java.lang.String val$ip -> QyeJ
    1:29:void <init>(java.lang.String) -> <init>
    34:35:void run() -> run
react.controller.SecurityController$3 -> Keny$3:
    java.lang.Thread val$t -> LrfO
    1:47:void <init>(java.lang.Thread) -> <init>
    52:65:void run() -> run
react.controller.SmearTickController -> ArFm:
    react.glang.GMap etl -> tvxQ
    react.glang.GMap ttl -> QXCE
    20:20:void <init>() -> <init>
    28:44:void start() -> start
    49:62:void stop() -> stop
    69:76:void on(org.bukkit.event.world.WorldLoadEvent) -> Oqux
    83:90:void on(org.bukkit.event.world.WorldUnloadEvent) -> Oqux
    96:96:void tick() -> tick
    100:112:void witholdWorld(org.bukkit.World) -> RPkn
    116:128:void releaseWorld(org.bukkit.World) -> KUIi
    132:144:double getUniversalEntityTick() -> xytE
    149:161:double getUniversalEntityLimit() -> HLHN
    166:178:double getUniversalTileLimit() -> dDfF
    183:195:double getUniversalTileTick() -> ccee
    200:207:double getUniversalEntityDroppedTicks() -> pjMM
    212:219:double getUniversalTileDroppedTicks() -> aoAu
    224:225:void setEntityTickLimit(org.bukkit.World,double) -> Oqux
    229:230:void setTileTickLimit(org.bukkit.World,double) -> uyTg
    234:234:double getEntityTickLimit(org.bukkit.World) -> JYut
    239:239:double getTileTickLimit(org.bukkit.World) -> gfyw
    244:244:double getLastEntityTick(org.bukkit.World) -> OXdf
    249:249:double getLastTileTick(org.bukkit.World) -> biLe
    254:254:double getEntityDroppedTicks(org.bukkit.World) -> rUwX
    259:259:double getTileDroppedTicks(org.bukkit.World) -> PmJd
    264:281:java.lang.reflect.Field deepFindField(java.lang.Object,java.lang.String) -> Oqux
react.controller.SpikeController -> WhrB:
    react.glang.GMap spikes -> pIJL
    25:27:void <init>() -> <init>
    32:59:void start() -> start
    64:65:void stop() -> stop
    71:106:void onTick() -> hsUI
    111:111:java.lang.String getTickName() -> TNgb
    119:119:void tick() -> tick
    123:123:react.glang.GMap getSpikes() -> Nfji
    128:160:void whoFuckingDidThis(react.glang.Callback) -> Oqux
    27:27:react.glang.GMap access$0(react.controller.SpikeController) -> Oqux
react.controller.SpikeController$1 -> WhrB$1:
    react.controller.SpikeController this$0 -> KwsS
    1:34:void <init>(react.controller.SpikeController,java.lang.String) -> <init>
    39:57:void run() -> run
react.controller.SpikeController$1$1 -> WhrB$1$1:
    react.controller.SpikeController$1 this$1 -> VpDH
    1:39:void <init>(react.controller.SpikeController$1) -> <init>
    44:55:void run() -> run
react.controller.SpikeController$2 -> WhrB$2:
    react.controller.SpikeController this$0 -> KwsS
    react.glang.GMap val$vv -> nufd
    1:74:void <init>(react.controller.SpikeController,react.glang.GMap) -> <init>
    79:104:void run() -> run
react.controller.SpikeController$3 -> WhrB$3:
    react.controller.SpikeController this$0 -> KwsS
    java.lang.Thread val$t -> LrfO
    react.glang.Callback val$callback -> WsGI
    1:130:void <init>(react.controller.SpikeController,java.lang.Thread,react.glang.Callback) -> <init>
    135:158:void run() -> run
react.controller.TickTimeController -> FNOo:
    6:6:void <init>() -> <init>
    11:12:void start() -> start
    17:18:void stop() -> stop
    24:24:void tick() -> tick
react.event.ReactEvent -> hsUI:
    org.bukkit.event.HandlerList handlers -> mQBI
    8:8:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
    13:13:org.bukkit.event.HandlerList getHandlers() -> getHandlers
    18:18:org.bukkit.event.HandlerList getHandlerList() -> getHandlerList
react.event.ReactPlayerEvent -> MJSk:
    org.bukkit.entity.Player player -> player
    9:12:void <init>(org.bukkit.entity.Player) -> <init>
    16:16:org.bukkit.entity.Player getPlayer() -> getPlayer
react.event.ReactScrollEvent -> TNgb:
    react.event.ScrollDirection direction -> iCsd
    boolean cancellled -> WHRT
    int amount -> JAlT
    14:18:void <init>(org.bukkit.entity.Player,react.event.ScrollDirection,int) -> <init>
    22:22:react.event.ScrollDirection getDirection() -> nAao
    28:28:boolean isCancelled() -> isCancelled
    34:35:void setCancelled(boolean) -> setCancelled
    39:39:boolean isCancellled() -> PeBC
    44:44:int getAmount() -> getAmount
react.event.ScrollDirection -> NLvI:
    react.event.ScrollDirection DOWN -> mGpE
    react.event.ScrollDirection UP -> oyKL
    react.event.ScrollDirection[] ENUM$VALUES -> qeaa
    3:6:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.event.ScrollDirection[] values() -> values
    1:1:react.event.ScrollDirection valueOf(java.lang.String) -> valueOf
react.gbench.Profiler -> hrsQ:
    long nanos -> EwFT
    long startNano -> JmCb
    long millis -> oglK
    long startMillis -> CWLr
    double time -> MTJD
    boolean profiling -> RQvW
    14:18:void <init>() -> <init>
    22:25:void begin() -> begin
    29:39:void end() -> end
    43:49:void reset() -> reset
    53:73:java.lang.String getTime(int) -> UADm
    78:78:double getTicks() -> bhsf
    83:83:double getSeconds() -> getSeconds
    88:88:double getMinutes() -> TOKM
    93:93:double getHours() -> FpUe
    98:98:double getMilliseconds() -> Suyo
    103:103:long getNanoseconds() -> wndC
    108:108:long getNanos() -> bGSv
    113:113:long getStartNano() -> PJpV
    118:118:long getMillis() -> getMillis
    123:123:long getStartMillis() -> uOKb
    128:128:double getTime() -> WiXT
    133:133:boolean isProfiling() -> XtkO
react.gconcurrent.A -> QNOn:
    react.gconcurrent.ParallelPoolManager mgr -> gXDi
    5:5:void <clinit>() -> <clinit>
    7:17:void <init>() -> <init>
react.gconcurrent.A$1 -> QNOn$1:
    react.gconcurrent.A this$0 -> AjYE
    1:9:void <init>(react.gconcurrent.A) -> <init>
    14:15:void run() -> run
react.gconcurrent.Execution -> eijX:
    int id -> id
    int idx -> idx
    5:5:void <clinit>() -> <clinit>
    3:6:void <init>() -> <init>
    11:14:int hashCode() -> hashCode
    20:29:boolean equals(java.lang.Object) -> equals
react.gconcurrent.ParallelPoolManager -> SLEd:
    react.gconcurrent.QueueMode mode -> KNCo
    react.glang.GList threads -> TaNi
    int next -> EwFe
    int threadCount -> rGAr
    java.util.Queue squeue -> msHH
    java.lang.String key -> key
    react.gconcurrent.ThreadInformation info -> dVkQ
    int[] $SWITCH_TABLE$org$cyberpwn$gconcurrent$QueueMode -> RAUv
    22:23:void syncQueue(react.gconcurrent.Execution) -> Oqux
    long getNanoGate() -> woDi
    29:51:void tickSyncQueue() -> xWsn
    55:57:void <init>(java.lang.String,int,react.gconcurrent.QueueMode) -> <init>
    59:78:void <init>(int,react.gconcurrent.QueueMode) -> <init>
    82:97:long lock() -> Cfmx
    102:109:int getTotalQueueSize() -> KfVG
    114:115:void start() -> start
    119:123:void shutdown() -> shutdown
    127:128:void <init>(int) -> <init>
    132:133:void queue(react.gconcurrent.Execution) -> uyTg
    137:137:int getSize() -> getSize
    142:149:int getQueueSize() -> ggfE
    154:154:react.gconcurrent.ParallelThread[] getThreads() -> yuJW
    161:188:void updateThreadInformation() -> LrIy
    192:224:react.gconcurrent.ParallelThread nextThread() -> PmTk
    229:235:void createThreads(int) -> UcHV
    239:239:react.gconcurrent.QueueMode getMode() -> LaHi
    244:244:int getNext() -> Veta
    249:249:int getThreadCount() -> getThreadCount
    254:254:java.util.Queue getSqueue() -> WrIl
    259:259:java.lang.String getKey() -> getKey
    264:264:react.gconcurrent.ThreadInformation getAverageInfo() -> Bcio
    10:10:int[] $SWITCH_TABLE$org$cyberpwn$gconcurrent$QueueMode() -> bhwG
react.gconcurrent.ParallelThread -> xFpY:
    java.util.Queue queue -> fKpA
    react.gconcurrent.ThreadInformation info -> dVkQ
    11:17:void <init>(java.lang.String,int) -> <init>
    22:49:void run() -> run
    53:57:void conditionallySleep(double) -> gfyw
    63:70:void execute(react.gconcurrent.Execution) -> jgsI
    74:83:void execute() -> execute
    87:88:void queue(react.gconcurrent.Execution) -> uyTg
    92:92:java.util.Queue getQueue() -> NEKr
    97:97:react.gconcurrent.ThreadInformation getInfo() -> inKq
react.gconcurrent.QueueMode -> dgKV:
    react.gconcurrent.QueueMode ROUND_ROBIN -> axVR
    react.gconcurrent.QueueMode SMALLEST -> wEOj
    react.gconcurrent.QueueMode[] ENUM$VALUES -> MBeu
    4:7:void <clinit>() -> <clinit>
    4:4:void <init>(java.lang.String,int) -> <init>
    1:1:react.gconcurrent.QueueMode[] values() -> values
    1:1:react.gconcurrent.QueueMode valueOf(java.lang.String) -> valueOf
react.gconcurrent.S -> wwRh:
    react.gconcurrent.ParallelPoolManager mgr -> gXDi
    7:17:void <init>() -> <init>
react.gconcurrent.S$1 -> wwRh$1:
    react.gconcurrent.S this$0 -> tTvh
    1:9:void <init>(react.gconcurrent.S) -> <init>
    14:15:void run() -> run
react.gconcurrent.TICK -> GPtm:
    long tick -> RlIR
    long atick -> CFMC
    5:6:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
react.gconcurrent.ThreadInformation -> RIDo:
    double ticksPerSecond -> pIKn
    int queuedSize -> DkQU
    boolean processing -> DHlt
    double utilization -> lUqD
    react.gmath.Average ticksPerSecondAverage -> hJFC
    long tick -> RlIR
    int id -> id
    15:24:void <init>(int) -> <init>
    28:28:double getTicksPerSecond() -> myvr
    33:35:void setTicksPerSecond(double) -> OXdf
    39:39:int getQueuedSize() -> DYPx
    44:45:void setQueuedSize(int) -> SCNo
    49:49:boolean isProcessing() -> OGmp
    54:55:void setProcessing(boolean) -> biLe
    59:59:double getUtilization() -> mGTG
    64:65:void setUtilization(double) -> biLe
    69:69:double getTicksPerSecondAverage() -> QEbS
    74:74:long getTick() -> getTick
    79:80:void setTick(long) -> setTick
    84:84:long getTickLag() -> mGSK
    89:89:int getId() -> getId
react.gformat.F -> oLwN:
    java.text.NumberFormat NF -> tLfR
    java.text.DecimalFormat DF -> WbFs
    java.lang.String[] NAMES -> OHlg
    java.math.BigInteger THOUSAND -> nmWx
    java.util.NavigableMap MAP -> RIea
    24:35:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    39:56:java.lang.String capitalize(java.lang.String) -> capitalize
    61:68:java.lang.String capitalizeWords(java.lang.String) -> UcHV
    73:73:java.lang.String wrap(java.lang.String,int) -> wrap
    78:78:java.lang.String wrapWords(java.lang.String,int) -> Oqux
    83:83:java.lang.String wrap(java.lang.String,int,java.lang.String,boolean) -> wrap
    88:175:java.lang.String wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> wrap
    181:196:java.lang.String time(double,int) -> Oqux
    201:221:java.lang.String timeLong(long,int) -> Oqux
    226:226:java.lang.String b(int) -> b
    231:231:java.lang.String b(long) -> jgsI
    236:236:java.lang.String b(double) -> rUwX
    241:258:java.lang.String b(java.math.BigInteger) -> Oqux
    263:267:void instantiate() -> JQng
    279:279:java.lang.String fileSize(long) -> NoSy
    292:292:java.lang.String memSize(long) -> gojx
    305:306:java.lang.String stamp(long) -> tBlP
    322:349:java.lang.String ofSize(long,int) -> uyTg
    363:368:java.lang.String trim(java.lang.String,int) -> uyTg
    381:401:java.lang.String cname(java.lang.String) -> SCNo
    415:427:java.lang.String repeat(java.lang.String,int) -> repeat
    439:446:java.lang.String mem(long) -> RPkn
    459:477:java.lang.String memx(long) -> KUIi
    491:492:java.lang.String f(long) -> JYut
    504:505:java.lang.String f(int) -> HmcS
    519:528:java.lang.String f(double,int) -> uyTg
    544:553:java.lang.String fd(double,int) -> jgsI
    567:576:java.lang.String f(float,int) -> Oqux
    587:587:java.lang.String f(double) -> PmJd
    598:598:java.lang.String f(float) -> Oqux
    613:613:java.lang.String pc(double,int) -> NoSy
    628:628:java.lang.String pc(float,int) -> uyTg
    641:641:java.lang.String pc(double) -> QpMe
    654:654:java.lang.String pc(float) -> uyTg
    670:670:java.lang.String pc(int,int,int) -> Oqux
    684:684:java.lang.String pc(int,int) -> jgsI
    700:700:java.lang.String pc(long,long,int) -> Oqux
    714:714:java.lang.String pc(long,long) -> NoSy
    726:726:java.lang.String msSeconds(long) -> gfyw
    740:740:java.lang.String msSeconds(long,int) -> jgsI
    752:752:java.lang.String nsMs(long) -> OXdf
    766:766:java.lang.String nsMs(long,int) -> NoSy
    780:780:java.lang.String nsMsd(long,int) -> gojx
react.glang.AccessCallback -> NUjF:
    java.lang.Object get() -> get
react.glang.Adapter -> ycem:
    java.lang.Object adapt(java.lang.Object) -> tBlP
    java.lang.Object onAdapt(java.lang.Object) -> RPkn
react.glang.Callback -> qvAt:
    java.lang.Object t -> dEiA
    11:11:void <init>() -> <init>
    23:25:void run(java.lang.Object) -> Oqux
    35:35:void run() -> run
    44:44:java.lang.Object get() -> get
react.glang.FinalDouble -> hsWh:
    double i -> twYw
    18:21:void <init>(double) -> <init>
    30:30:double get() -> get
    41:42:void set(double) -> set
    52:53:void add(double) -> add
    63:64:void sub(double) -> UADm
react.glang.FinalFloat -> LPEO:
    float i -> i
    18:21:void <init>(float) -> <init>
    30:30:float get() -> get
    41:42:void set(float) -> set
    52:53:void add(float) -> add
    63:64:void sub(float) -> jgsI
react.glang.FinalInteger -> HKgs:
    int i -> i
    18:21:void <init>(int) -> <init>
    30:30:int get() -> get
    41:42:void set(int) -> set
    52:53:void add(int) -> add
    63:64:void sub(int) -> quXa
react.glang.FinalLong -> teXK:
    long i -> yBdJ
    18:21:void <init>(long) -> <init>
    30:30:long get() -> get
    41:42:void set(long) -> set
    52:53:void add(long) -> add
    63:64:void sub(long) -> biLe
react.glang.FinalString -> kQkg:
    java.lang.String string -> string
    18:21:void <init>(java.lang.String) -> <init>
    30:30:java.lang.String get() -> get
    41:42:void set(java.lang.String) -> set
react.glang.GAdapter -> rhCS:
    12:12:void <init>() -> <init>
    17:17:java.lang.Object adapt(java.lang.Object) -> tBlP
    java.lang.Object onAdapt(java.lang.Object) -> RPkn
react.glang.GBiset -> WqgG:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> AHUw
    java.lang.Object b -> APgA
    29:33:void <init>(java.lang.Object,java.lang.Object) -> <init>
    42:42:java.lang.Object getA() -> YUjY
    53:54:void setA(java.lang.Object) -> KUIi
    63:63:java.lang.Object getB() -> mqeq
    73:74:void setB(java.lang.Object) -> JYut
react.glang.GList -> nReH:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    33:40:react.glang.GList grepExplicit(int,int) -> NoSy
    45:52:react.glang.GList grepDistance(int,int) -> gojx
    57:57:java.lang.Object getAt(int) -> getAt
    62:62:java.lang.Object getAt(java.lang.Integer) -> uyTg
    73:79:void <init>(java.util.Set) -> <init>
    89:95:void <init>(java.util.Collection) -> <init>
    105:111:void <init>(java.util.Iterator) -> <init>
    121:123:void <init>(java.lang.Object[]) -> <init>
    134:142:void <init>(java.util.List) -> <init>
    151:178:java.lang.Object mostCommon() -> Aqir
    188:190:react.glang.GList shuffleCopy() -> WXTs
    198:199:void shuffle() -> cdIN
    210:236:react.glang.GList split() -> NwnQ
    248:248:boolean hasIndex(int) -> gVXr
    258:259:java.lang.Object pickRandom() -> dgKl
    270:277:react.glang.GList stringList() -> AXWu
    288:292:void forEach(react.glang.Callback) -> uyTg
    301:301:int last() -> last
    315:320:int getIndexOrLast(int) -> uOAQ
    336:336:react.glang.GList cropFrom(int) -> RQMi
    341:373:react.glang.GList split(int) -> Lymd
    389:389:react.glang.GList cropTo(int) -> SSnT
    406:416:react.glang.GList crop(int,int) -> tBlP
    427:431:react.glang.GList removeDuplicates() -> leqw
    442:446:void removeAll(java.lang.Object) -> gfyw
    455:455:boolean hasDuplicates() -> UlBP
    463:464:void sort() -> sort
    468:470:react.glang.GList sortCopy() -> STYo
    484:490:void push(java.lang.Object,int) -> Oqux
    501:505:void add(java.lang.Object[]) -> add
    516:517:react.glang.GList qadd(java.lang.Object) -> OXdf
    528:532:void add(java.util.List) -> Oqux
    544:576:java.lang.String toString(java.lang.String) -> toString
    586:588:react.glang.GList reverse() -> lwTL
    597:597:java.lang.String toString() -> toString
    607:614:react.glang.GList copy() -> BRjF
    626:627:react.glang.GList qdel(java.lang.Object) -> biLe
    637:644:java.lang.Object pop() -> pop
    652:653:void removeLast() -> woCM
    662:669:java.lang.Object popLast() -> gyEx
    674:683:java.lang.Object popRandom() -> EvEn
react.glang.GListAdapter -> Fgdy:
    14:14:void <init>() -> <init>
    25:37:java.util.List adapt(java.util.List) -> uyTg
    java.lang.Object onAdapt(java.lang.Object) -> RPkn
react.glang.GMap -> brGI:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>() -> <init>
    17:23:void <init>(java.util.Map) -> <init>
    32:39:react.glang.GMap copy() -> xrIk
    53:54:react.glang.GMap qput(java.lang.Object,java.lang.Object) -> Oqux
    64:81:react.glang.GMap flip() -> fvGP
    87:94:java.lang.String toString() -> toString
    106:111:react.glang.GMap append(react.glang.GMap) -> Oqux
    121:121:react.glang.GList k() -> gVXr
    131:131:react.glang.GSet kset() -> qCAl
    141:141:react.glang.GList v() -> NoaH
    151:151:react.glang.GSet vset() -> DbDV
    164:168:void putNVD(java.lang.Object,java.lang.Object) -> uyTg
    176:176:boolean contains(java.lang.Object) -> contains
    188:198:react.glang.GList get(react.glang.GList) -> RPkn
    209:219:react.glang.GMap removeDuplicateValues() -> AOge
    233:242:void put(react.glang.GList,react.glang.GList) -> Oqux
    251:267:react.glang.GList sortK() -> PKTO
    277:293:react.glang.GList sortV() -> sbXi
react.glang.GQuadraset -> HLIa:
    java.lang.Object a -> AHUw
    java.lang.Object b -> APgA
    java.lang.Object c -> jqln
    java.lang.Object d -> YhLm
    10:16:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    20:20:java.lang.Object getA() -> YUjY
    25:26:void setA(java.lang.Object) -> KUIi
    30:30:java.lang.Object getB() -> mqeq
    35:36:void setB(java.lang.Object) -> JYut
    40:40:java.lang.Object getC() -> cdME
    45:46:void setC(java.lang.Object) -> rUwX
    50:50:java.lang.Object getD() -> TqSU
    55:56:void setD(java.lang.Object) -> PmJd
react.glang.GSet -> TNkI:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>() -> <init>
    17:18:void <init>(java.util.Collection) -> <init>
    22:23:void <init>(int,float) -> <init>
    27:28:void <init>(int) -> <init>
react.glang.GTriset -> sbUP:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> AHUw
    java.lang.Object b -> APgA
    java.lang.Object c -> jqln
    12:17:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    21:21:java.lang.Object getA() -> YUjY
    26:27:void setA(java.lang.Object) -> KUIi
    31:31:java.lang.Object getB() -> mqeq
    36:37:void setB(java.lang.Object) -> JYut
    41:41:java.lang.Object getC() -> cdME
    46:47:void setC(java.lang.Object) -> rUwX
react.gmath.Average -> gWAa:
    double[] values -> aDpD
    double average -> mXro
    boolean dirty -> mPbk
    9:15:void <init>(int) -> <init>
    19:21:void put(double) -> UcHV
    25:31:double getAverage() -> getAverage
    36:45:void calculateAverage() -> gggQ
react.gmath.DoubleArrayUtils -> ySEG:
    3:3:void <init>() -> <init>
    7:13:void shiftRight(double[],double) -> Oqux
    17:19:void wrapRight(double[]) -> Oqux
    23:27:void fill(double[],double) -> fill
react.gmath.M -> sPrF:
    int precision -> NyQm
    int modulus -> vtrg
    float[] sin -> gGDo
    15:329:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    19:19:double clip(double,double,double) -> Oqux
    31:36:boolean r(java.lang.Double) -> uyTg
    51:51:double tps(long,int) -> tBlP
    63:63:double ticksFromNS(long) -> rUwX
    75:101:java.lang.String toRoman(int) -> rVWi
    115:127:java.lang.String repeat(java.lang.String,int) -> repeat
    132:132:int rand(int,int) -> RPkn
    144:216:int fromRoman(java.lang.String) -> HmcS
    226:226:long ns() -> miYF
    236:236:long ms() -> lTry
    248:248:float sin(float) -> sin
    260:260:float cos(float) -> cos
    272:282:int max(int[]) -> max
    294:304:int min(int[]) -> min
    320:320:boolean within(int,int,int) -> uyTg
    333:333:float sinLookup(int) -> ivPx
react.gnet.client.Client -> jNgw:
    int port -> port
    java.lang.String address -> address
    react.gnet.packet.PacketHandler handler -> OtDb
    java.net.Socket socket -> socket
    20:25:void <init>(java.lang.String,int) -> <init>
    29:35:void connect() -> connect
    39:40:void disconnect() -> disconnect
    45:45:int getPort() -> getPort
    51:51:java.lang.String getAddress() -> getAddress
    57:68:react.gnet.packet.IPacket sendPacket(react.gnet.packet.IPacket) -> Oqux
    74:74:react.gnet.packet.PacketHandler getHandler() -> MIyv
react.gnet.client.IClient -> LqfN:
    int getPort() -> getPort
    java.lang.String getAddress() -> getAddress
    react.gnet.packet.IPacket sendPacket(react.gnet.packet.IPacket) -> Oqux
    react.gnet.packet.PacketHandler getHandler() -> MIyv
react.gnet.download.Download -> xytE:
    react.gnet.download.DownloadState state -> qveR
    react.gnet.download.DownloadType type -> Oscl
    react.gnet.download.DownloadStatus status -> afts
    react.gnet.download.DownloadMonitor monitor -> xivv
    java.net.URL url -> url
    java.io.File file -> Ulcm
    int bufferSize -> bufferSize
    byte[] buffer -> buffer
    25:34:void <init>(react.gnet.download.DownloadMonitor,java.net.URL,java.io.File,int) -> <init>
    38:83:void start() -> start
    87:87:react.gnet.download.DownloadState getState() -> IiDA
    92:92:react.gnet.download.DownloadType getType() -> qJpK
    97:97:react.gnet.download.DownloadStatus getStatus() -> xqhG
    102:102:react.gnet.download.DownloadMonitor getMonitor() -> PSbe
    107:107:java.net.URL getUrl() -> getUrl
    112:112:java.io.File getFile() -> getFile
    117:117:int getBufferSize() -> getBufferSize
react.gnet.download.DownloadMonitor -> HLHN:
    void onDownloadStateChanged(react.gnet.download.Download,react.gnet.download.DownloadState,react.gnet.download.DownloadState) -> Oqux
    void onDownloadStarted(react.gnet.download.Download) -> Oqux
    void onDownloadFinished(react.gnet.download.Download) -> uyTg
    void onDownloadFailed(react.gnet.download.Download) -> jgsI
    void onDownloadUpdateProgress(react.gnet.download.Download,long,long,double) -> Oqux
react.gnet.download.DownloadState -> dDfF:
    react.gnet.download.DownloadState IDLE -> ndkO
    react.gnet.download.DownloadState DOWNLOADING -> rOTp
    react.gnet.download.DownloadState FAILED -> bPew
    react.gnet.download.DownloadState FINISHED -> KohR
    react.gnet.download.DownloadState[] $VALUES -> TjBV
    3:3:react.gnet.download.DownloadState[] values() -> values
    3:3:react.gnet.download.DownloadState valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:8:void <clinit>() -> <clinit>
react.gnet.download.DownloadStatus -> ccee:
    long bytesDownloaded -> JSRx
    long bytesTotal -> dgmj
    long bytesPerSecond -> NElk
    long timeElapsed -> hRXP
    11:16:void <init>() -> <init>
    20:20:double getPercentCompleted() -> Gjjk
    25:25:long getBytesDownloaded() -> UcRr
    30:31:void setBytesDownloaded(long) -> PmJd
    35:35:long getBytesTotal() -> WOep
    40:41:void setBytesTotal(long) -> QpMe
    45:45:long getBytesPerSecond() -> AaJx
    50:51:void setBytesPerSecond(long) -> UADm
    55:55:long getTimeElapsed() -> Ussn
    60:61:void setTimeElapsed(long) -> UcHV
react.gnet.download.DownloadType -> pjMM:
    react.gnet.download.DownloadType DETERMINATE -> tLhv
    react.gnet.download.DownloadType INDETERMINATE -> vSPV
    react.gnet.download.DownloadType[] $VALUES -> BvOE
    3:3:react.gnet.download.DownloadType[] values() -> values
    3:3:react.gnet.download.DownloadType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
react.gnet.packet.IPacket -> aoAu:
    int getId() -> getId
    react.gnet.packet.PacketBinding getBinding() -> DYRO
    java.lang.String getPacketName() -> rFBu
react.gnet.packet.IncompatablePacketException -> Nfji:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
react.gnet.packet.PacketBinding -> nAao:
    react.gnet.packet.PacketBinding SERVER_BOUND -> BSjc
    react.gnet.packet.PacketBinding CLIENT_BOUND -> XJxw
    react.gnet.packet.PacketBinding[] $VALUES -> hIfo
    3:3:react.gnet.packet.PacketBinding[] values() -> values
    3:3:react.gnet.packet.PacketBinding valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
react.gnet.packet.PacketException -> PeBC:
    long serialVersionUID -> serialVersionUID
    11:12:void <init>(java.lang.String) -> <init>
react.gnet.packet.PacketHandler -> bhsf:
    react.glang.GList accept -> Iqrb
    react.gnet.packet.PacketBinding side -> yCGd
    react.gnet.streams.OSS out -> PUCc
    react.gnet.streams.ISS in -> APiV
    14:18:void <init>(react.gnet.packet.PacketBinding,react.gnet.streams.OSS,react.gnet.streams.ISS) -> <init>
    22:24:void redirect(react.gnet.streams.OSS,react.gnet.streams.ISS) -> Oqux
    28:34:void accept(react.gnet.packet.IPacket) -> uyTg
    38:46:react.gnet.packet.IPacket findPacket(int) -> eYBv
    51:66:react.gnet.packet.IPacket read() -> dgNg
    71:77:void write(react.gnet.packet.IPacket) -> jgsI
react.gnet.packet.UnhandledPacketException -> TOKM:
    long serialVersionUID -> serialVersionUID
    9:10:void <init>(java.lang.String) -> <init>
react.gnet.server.IServer -> FpUe:
    int getPort() -> getPort
    react.gnet.packet.PacketHandler getHandler() -> MIyv
    react.gnet.packet.IPacket onPacketReceived(react.gnet.packet.IPacket) -> NoSy
react.gnet.server.Server -> Suyo:
    int port -> port
    java.net.ServerSocket socket -> lERI
    react.gnet.packet.PacketHandler handler -> OtDb
    20:24:void <init>(int) -> <init>
    29:29:react.gnet.packet.PacketHandler getHandler() -> MIyv
    37:84:void run() -> run
    88:91:void pstart() -> SKkC
    95:96:void pstop() -> xiWT
    101:101:int getPort() -> getPort
    react.gnet.packet.IPacket onPacketReceived(react.gnet.packet.IPacket) -> NoSy
react.gnet.streams.ISS -> wndC:
    java.io.InputStream in -> in
    react.gnet.streams.StreamBuilder bu -> aERW
    boolean built -> AsLt
    byte[] readBuffer -> UBOq
    31:257:void <init>(java.io.InputStream) -> <init>
    46:47:void <init>(byte[]) -> <init>
    58:59:react.gnet.streams.ISS buffer(int) -> bWhw
    64:72:react.glang.GList readStringList() -> FyKO
    77:85:react.glang.GList readDoubleList() -> WaIQ
    90:98:react.glang.GList readLongList() -> Jkdb
    103:113:react.glang.GList readStreamableList(react.gnet.streams.writable.Streamable) -> Oqux
    125:126:react.gnet.streams.ISS decrypt(javax.crypto.Cipher) -> Oqux
    136:137:react.gnet.streams.ISS gzip() -> IOOh
    142:147:void build() -> ObCJ
    152:154:int read() -> read
    166:173:boolean readBoolean() -> readBoolean
    185:192:byte readByte() -> readByte
    204:212:short readShort() -> readShort
    224:232:char readChar() -> readChar
    244:254:int readInt() -> readInt
    269:270:void readFully(byte[]) -> readFully
    286:303:void readFully(byte[],int,int) -> readFully
    308:308:int read(byte[]) -> read
    314:360:int read(byte[],int,int) -> read
    372:373:long readLong() -> readLong
    385:385:float readFloat() -> readFloat
    397:397:double readDouble() -> readDouble
    409:417:java.lang.String readString() -> readString
    429:430:void read(react.gnet.streams.writable.Streamable) -> uyTg
    435:436:void close() -> close
react.gnet.streams.OSS -> bGSv:
    java.io.OutputStream out -> out
    java.io.OutputStream gen -> dFKO
    react.gnet.streams.StreamBuilder bu -> aERW
    boolean built -> AsLt
    byte[] writeBuffer -> rOTU
    20:130:void <init>(java.io.OutputStream) -> <init>
    30:31:void <init>() -> <init>
    35:36:react.gnet.streams.OSS buffer(int) -> tSmJ
    41:42:react.gnet.streams.OSS gzip(int) -> EKGK
    47:48:react.gnet.streams.OSS encrypt(javax.crypto.Cipher) -> uyTg
    53:58:void build() -> ObCJ
    62:63:void writeBoolean(boolean) -> writeBoolean
    67:68:void writeByte(int) -> writeByte
    72:74:void writeShort(int) -> writeShort
    78:80:void writeChar(int) -> writeChar
    84:88:void writeInt(int) -> writeInt
    92:98:void writeStringList(react.glang.GList) -> KUIi
    102:108:void writeDoubleList(react.glang.GList) -> JYut
    112:118:void writeLongList(react.glang.GList) -> gfyw
    122:128:void writeStreamableList(react.glang.GList) -> OXdf
    134:142:void writeLong(long) -> writeLong
    146:147:void writeFloat(float) -> writeFloat
    151:152:void writeDouble(double) -> writeDouble
    156:165:void writeString(java.lang.String) -> writeString
    170:170:void db() -> XAkJ
    175:177:void write(int) -> write
    188:191:void write(react.gnet.streams.writable.Streamable) -> jgsI
    195:201:byte[] getBytes() -> getBytes
    207:208:void close() -> close
    213:214:void flush() -> flush
react.gnet.streams.StreamBuilder -> PJpV:
    react.glang.GList constructors -> eHlj
    19:21:void <init>() -> <init>
    25:32:java.io.InputStream constructInput(java.io.InputStream) -> Oqux
    37:44:java.io.OutputStream constructOutput(java.io.OutputStream) -> Oqux
    49:50:void bind(react.gnet.streams.StreamConstructor) -> Oqux
    54:55:void bindGZIP(int) -> INbK
    59:60:void bindGZIP() -> nuOX
    64:65:void bindCipher(javax.crypto.Cipher) -> jgsI
    69:70:void bindBuffer(int) -> pqtM
    74:75:void bindBuffer() -> Btox
react.gnet.streams.StreamConstructor -> uOKb:
    java.io.InputStream constructInput(java.io.InputStream) -> Oqux
    java.io.OutputStream constructOutput(java.io.OutputStream) -> Oqux
react.gnet.streams.constructors.BufferedStreamConstructor -> WiXT:
    int bufferSize -> bufferSize
    16:18:void <init>(int) -> <init>
    22:23:void <init>() -> <init>
    28:28:java.io.BufferedInputStream constructInput(java.io.InputStream) -> uyTg
    34:34:java.io.BufferedOutputStream constructOutput(java.io.OutputStream) -> uyTg
    11:11:java.io.OutputStream constructOutput(java.io.OutputStream) -> Oqux
    11:11:java.io.InputStream constructInput(java.io.InputStream) -> Oqux
react.gnet.streams.constructors.CipherStreamConstructor -> XtkO:
    javax.crypto.Cipher cipher -> kBOW
    18:20:void <init>(javax.crypto.Cipher) -> <init>
    25:25:javax.crypto.CipherInputStream constructInput(java.io.InputStream) -> jgsI
    31:31:javax.crypto.CipherOutputStream constructOutput(java.io.OutputStream) -> jgsI
    13:13:java.io.OutputStream constructOutput(java.io.OutputStream) -> Oqux
    13:13:java.io.InputStream constructInput(java.io.InputStream) -> Oqux
react.gnet.streams.constructors.GZipStreamConstructor -> woDi:
    int compressionLevel -> nKWv
    16:18:void <init>(int) -> <init>
    22:23:void <init>() -> <init>
    28:28:react.gnet.streams.overlays.CGZIPInputStream constructInput(java.io.InputStream) -> NoSy
    34:34:react.gnet.streams.overlays.CGZIPOutputStream constructOutput(java.io.OutputStream) -> NoSy
    11:11:java.io.OutputStream constructOutput(java.io.OutputStream) -> Oqux
    11:11:java.io.InputStream constructInput(java.io.InputStream) -> Oqux
react.gnet.streams.overlays.CGZIPInputStream -> xWsn:
    12:14:void <init>(java.io.InputStream) -> <init>
react.gnet.streams.overlays.CGZIPOutputStream -> Cfmx:
    12:14:void <init>(java.io.OutputStream,int) -> <init>
react.gnet.streams.writable.Streamable -> KfVG:
    void toBytes(react.gnet.streams.OSS) -> Oqux
    void fromBytes(react.gnet.streams.ISS) -> Oqux
react.graph.ColossalView -> ggfE:
    react.papyrus.BufferedFrame view -> NFLh
    react.glang.GMap buffers -> aESL
    react.glang.GMap graphs -> xrfv
    double level -> PeeG
    double targetLevel -> eYnv
    int maxX -> qwDd
    int maxY -> IaPo
    17:23:void <init>() -> <init>
    27:32:void clear() -> clear
    36:47:void triggerGraphsInView() -> xPIA
    51:77:void render() -> nBKR
    81:98:void scroll(int) -> qJcM
    102:112:void recompile() -> wDUG
    116:118:void addGraph(react.graph.Point,react.graph.Point,react.graph.IGraph) -> Oqux
    122:122:react.papyrus.BufferedFrame getView() -> NocQ
    127:127:react.glang.GMap getBuffers() -> IiDl
    132:132:react.glang.GMap getGraphs() -> Dads
    137:137:double getLevel() -> maKT
    142:142:double getTargetLevel() -> VMGW
    147:147:int getMaxX() -> hPxp
    152:152:int getMaxY() -> XuPm
react.graph.ColossalView$Builder -> ggfE$Oqux:
    react.glang.GList graphs -> xaej
    159:162:void <init>() -> <init>
    166:167:void add(react.graph.IGraph,react.graph.GraphSize) -> Oqux
    171:191:react.graph.ColossalView compute() -> CgTD
react.graph.CubicleIterator -> yuJW:
    int[][] mapping -> hlJP
    int xCubes -> TPNn
    int yCubes -> LaiL
    8:22:void <init>() -> <init>
    26:42:react.graph.Point positionFor(int) -> Plhk
    47:130:void insert(react.graph.GraphSize,int) -> Oqux
    134:145:void print() -> print
react.graph.GraphSampleLine -> LrIy:
    double lx -> qfCV
    double ly -> cTJK
    react.api.ISampler sampler -> AGwT
    react.graph.IFormatter formatter -> QXGY
    byte graphColor -> IjEG
    byte backgroundColor -> qwHV
    byte borderColor -> JuXN
    byte textColor -> Cpbw
    int ticksLeftTitle -> Lajw
    int ticksOutTitle -> tnnd
    double nextPoint -> hJKB
    31:41:void <init>(react.api.ISampler,react.graph.IFormatter,long) -> <init>
    45:46:void sample() -> YnrT
    51:183:void onRender(react.papyrus.BufferedFrame) -> Oqux
    187:220:int getHeightForText(react.papyrus.BufferedFrame) -> uyTg
    226:254:int getHue(int,int,int) -> jgsI
    259:281:void scaleFor(react.glang.GList) -> biLe
    285:285:react.graph.IFormatter getFormatter() -> rNFx
    290:291:void setFormatter(react.graph.IFormatter) -> Oqux
    295:295:byte getGraphColor() -> mOgi
    300:301:void setGraphColor(byte) -> Oqux
    305:305:byte getBackgroundColor() -> mrLR
    310:311:void setBackgroundColor(byte) -> uyTg
    315:315:byte getBorderColor() -> inPS
    320:321:void setBorderColor(byte) -> jgsI
    325:325:byte getTextColor() -> qmWJ
    330:331:void setTextColor(byte) -> NoSy
    335:335:react.api.ISampler getSampler() -> aLej
react.graph.GraphSize -> PmTk:
    react.graph.GraphSize WIDE -> tMLk
    react.graph.GraphSize FULL -> NqCk
    react.graph.GraphSize SQUARE -> BTMk
    int[] $SWITCH_TABLE$react$graph$GraphSize -> dhQl
    react.graph.GraphSize[] ENUM$VALUES -> gNuo
    3:7:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    11:21:react.graph.Point toPoint() -> SfAf
    1:1:react.graph.GraphSize[] values() -> values
    1:1:react.graph.GraphSize valueOf(java.lang.String) -> valueOf
    3:3:int[] $SWITCH_TABLE$react$graph$GraphSize() -> JASy
react.graph.GraphText -> LaHi:
    java.lang.String text -> text
    byte fontColor -> wNET
    byte backgroundColor -> qwHV
    boolean wrote -> PLVQ
    20:26:void <init>(java.lang.String,byte) -> <init>
    31:49:void onRender(react.papyrus.BufferedFrame) -> Oqux
    53:53:java.lang.String getText() -> getText
    58:59:void setText(java.lang.String) -> setText
    63:63:byte getFontColor() -> SvaD
    68:69:void setFontColor(byte) -> gojx
    73:73:byte getBackgroundColor() -> mrLR
    78:79:void setBackgroundColor(byte) -> uyTg
react.graph.GraphingInstance -> Veta:
    org.bukkit.entity.Player player -> player
    org.bukkit.inventory.ItemStack item -> item
    react.glang.GList graphs -> xaej
    react.graph.ColossalView view -> CWPh
    react.papyrus.Papyrus papyrus -> CEmv
    react.papyrus.IRenderer renderer -> qTca
    boolean mapping -> GQgq
    react.glang.GList msgs -> UAsF
    react.surge.sched.Task waiter -> uOnc
    react.surge.sched.Task waiter2 -> LalT
    int shift -> fUFI
    boolean notif -> VEUN
    47:115:void <init>(org.bukkit.entity.Player) -> <init>
    120:125:void on(org.bukkit.event.player.PlayerToggleSneakEvent) -> Oqux
    130:134:void on(org.bukkit.event.player.PlayerQuitEvent) -> Oqux
    138:142:void send(java.lang.String) -> quXa
    148:148:void on(org.bukkit.event.player.AsyncPlayerChatEvent) -> Oqux
    153:165:void on(react.event.ReactScrollEvent) -> Oqux
    170:175:void on(org.bukkit.event.player.PlayerSwapHandItemsEvent) -> Oqux
    179:187:void destroy() -> destroy
    191:200:void toggle() -> Tych
    204:205:void setGraphs(react.glang.GList) -> rUwX
    209:222:void enable() -> enable
    226:231:void disable() -> disable
    235:239:void disableNoSave() -> oVNW
    243:259:void compile() -> vRRF
    40:40:boolean access$0(react.graph.GraphingInstance) -> Oqux
    41:41:react.glang.GList access$1(react.graph.GraphingInstance) -> uyTg
    45:45:boolean access$2(react.graph.GraphingInstance) -> jgsI
    45:45:void access$3(react.graph.GraphingInstance,boolean) -> Oqux
    44:44:int access$4(react.graph.GraphingInstance) -> NoSy
    44:44:void access$5(react.graph.GraphingInstance,int) -> Oqux
    37:37:react.graph.ColossalView access$6(react.graph.GraphingInstance) -> gojx
react.graph.GraphingInstance$1 -> Veta$1:
    react.graph.GraphingInstance this$0 -> WPgw
    org.bukkit.entity.Player val$player -> CEoi
    1:51:void <init>(react.graph.GraphingInstance,java.lang.String,int,org.bukkit.entity.Player) -> <init>
    56:73:void run() -> run
react.graph.GraphingInstance$2 -> Veta$2:
    react.graph.GraphingInstance this$0 -> WPgw
    1:76:void <init>(react.graph.GraphingInstance,java.lang.String,int) -> <init>
    81:100:void run() -> run
react.graph.GraphingInstance$3 -> Veta$3:
    react.graph.GraphingInstance this$0 -> WPgw
    1:106:void <init>(react.graph.GraphingInstance) -> <init>
    111:113:void draw(react.papyrus.BufferedFrame,org.bukkit.map.MapCanvas,org.bukkit.map.MapView) -> Oqux
react.graph.IFormatter -> WrIl:
    java.lang.String from(double) -> SCNo
react.graph.IGraph -> Bcio:
    java.lang.String getName() -> getName
    react.graph.PlotBoard getPlotBoard() -> skLF
    long getTimeViewport() -> ThbN
    void render(react.papyrus.BufferedFrame) -> jgsI
    double getMax() -> getMax
    void setMax(double) -> HmcS
react.graph.NormalGraph -> bhwG:
    java.lang.String name -> name
    react.graph.PlotBoard plotBoard -> MCKU
    long timeViewport -> QiIr
    double max -> max
    12:18:void <init>(java.lang.String,long) -> <init>
    23:23:java.lang.String getName() -> getName
    29:29:react.graph.PlotBoard getPlotBoard() -> skLF
    35:35:long getTimeViewport() -> ThbN
    41:42:void render(react.papyrus.BufferedFrame) -> jgsI
    47:47:double getMax() -> getMax
    53:54:void setMax(double) -> HmcS
    void onRender(react.papyrus.BufferedFrame) -> Oqux
react.graph.PlotBoard -> NEKr:
    react.glang.GMap plots -> neLo
    int maxRecordings -> LGwd
    12:16:void <init>() -> <init>
    20:24:void clean() -> clean
    28:28:long getInaccurateTimeSpan() -> tLLM
    33:33:long getAccurateTimeSpan() -> xqjH
    38:50:long getMedian(long,long) -> gojx
    55:55:long getMinimumAccuracyRange() -> KfYU
    60:70:double getMaxValue() -> SmpI
    75:85:double getMinValue() -> JQsc
    90:90:react.glang.GList sort(react.glang.GMap) -> uyTg
    95:105:long earilestRecording() -> Ditd
    110:120:long latestRecording() -> UlFn
    125:126:void reduceBefore(long) -> SCNo
    130:148:void reduceBetween(long,long) -> tBlP
    152:152:boolean before(long,long) -> RPkn
    157:157:boolean after(long,long) -> KUIi
    162:162:boolean within(long,long,long) -> Oqux
    167:177:react.glang.GMap getBetween(long,long) -> JYut
    182:184:void plot(long,double) -> Oqux
    188:188:boolean hasAt(long) -> HmcS
    193:193:double getAt(long) -> quXa
    198:198:int getSize() -> getSize
react.graph.Point -> inKq:
    int x -> x
    int y -> y
    8:12:void <init>() -> <init>
    14:18:void <init>(int,int) -> <init>
    23:23:java.lang.String toString() -> toString
react.graph.PointedGraph -> myvr:
    int iid -> sAWg
    react.graph.IGraph graph -> JArD
    react.graph.GraphSize size -> VgXM
    int id -> id
    5:5:void <clinit>() -> <clinit>
    10:15:void <init>(react.graph.IGraph,react.graph.GraphSize) -> <init>
    19:19:react.graph.IGraph getGraph() -> qvGO
    24:25:void setGraph(react.graph.IGraph) -> Oqux
    29:29:react.graph.GraphSize getSize() -> erdL
    34:35:void setSize(react.graph.GraphSize) -> Oqux
    39:39:int getId() -> getId
    45:50:int hashCode() -> hashCode
    56:74:boolean equals(java.lang.Object) -> equals
react.graph.RenderMaxType -> DYPx:
    react.graph.RenderMaxType UNLIMITED -> mahp
    react.graph.RenderMaxType LIMITED -> WPhg
    react.graph.RenderMaxType[] ENUM$VALUES -> CWRK
    3:6:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.graph.RenderMaxType[] values() -> values
    1:1:react.graph.RenderMaxType valueOf(java.lang.String) -> valueOf
react.json.HTTP -> OGmp:
    java.lang.String CRLF -> JArQ
    35:35:void <init>() -> <init>
    93:127:react.json.JSONObject toJSONObject(java.lang.String) -> gVXr
    162:198:java.lang.String toString(react.json.JSONObject) -> uyTg
react.json.HTTPTokener -> mGTG:
    45:46:void <init>(java.lang.String) -> <init>
    58:87:java.lang.String nextToken() -> nextToken
react.json.JSONArray -> QEbS:
    java.util.ArrayList myArrayList -> JRsa
    93:96:void <init>() -> <init>
    108:143:void <init>(react.json.JSONTokener) -> <init>
    157:158:void <init>(java.lang.String) -> <init>
    166:177:void <init>(java.util.Collection) -> <init>
    187:199:void <init>(java.lang.Object) -> <init>
    204:204:java.util.Iterator iterator() -> iterator
    218:223:java.lang.Object get(int) -> get
    239:247:boolean getBoolean(int) -> getBoolean
    262:268:double getDouble(int) -> getDouble
    286:294:java.lang.Enum getEnum(java.lang.Class,int) -> Oqux
    309:315:java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    331:337:java.math.BigInteger getBigInteger(int) -> OYDv
    352:358:int getInt(int) -> getInt
    374:379:react.json.JSONArray getJSONArray(int) -> IpeW
    394:399:react.json.JSONObject getJSONObject(int) -> rNFx
    414:420:long getLong(int) -> getLong
    435:440:java.lang.String getString(int) -> getString
    452:452:boolean isNull(int) -> isNull
    468:479:java.lang.String join(java.lang.String) -> uOAQ
    489:489:int length() -> length
    501:501:java.lang.Object opt(int) -> VDFk
    515:515:boolean optBoolean(int) -> sHXl
    533:536:boolean optBoolean(int,boolean) -> uyTg
    551:551:double optDouble(int) -> YnrT
    569:572:double optDouble(int,double) -> Oqux
    587:587:int optInt(int) -> xGHC
    605:608:int optInt(int,int) -> KUIi
    623:623:java.lang.Enum optEnum(java.lang.Class,int) -> uyTg
    642:664:java.lang.Enum optEnum(java.lang.Class,int,java.lang.Enum) -> Oqux
    683:686:java.math.BigInteger optBigInteger(int,java.math.BigInteger) -> Oqux
    705:708:java.math.BigDecimal optBigDecimal(int,java.math.BigDecimal) -> Oqux
    722:723:react.json.JSONArray optJSONArray(int) -> wLUJ
    737:738:react.json.JSONObject optJSONObject(int) -> BlTI
    752:752:long optLong(int) -> iusX
    770:773:long optLong(int,long) -> Oqux
    788:788:java.lang.String optString(int) -> FooI
    803:804:java.lang.String optString(int,java.lang.String) -> Oqux
    816:817:react.json.JSONArray put(boolean) -> rUwX
    830:831:react.json.JSONArray put(java.util.Collection) -> Oqux
    845:848:react.json.JSONArray put(double) -> quXa
    860:861:react.json.JSONArray put(int) -> EKIe
    873:874:react.json.JSONArray put(long) -> gVXr
    887:888:react.json.JSONArray put(java.util.Map) -> Oqux
    902:903:react.json.JSONArray put(java.lang.Object) -> QpMe
    921:922:react.json.JSONArray put(int,boolean) -> jgsI
    939:940:react.json.JSONArray put(int,java.util.Collection) -> Oqux
    958:959:react.json.JSONArray put(int,double) -> uyTg
    977:978:react.json.JSONArray put(int,int) -> JYut
    996:997:react.json.JSONArray put(int,long) -> uyTg
    1015:1016:react.json.JSONArray put(int,java.util.Map) -> Oqux
    1037:1053:react.json.JSONArray put(int,java.lang.Object) -> Oqux
    1066:1066:java.lang.Object remove(int) -> remove
    1079:1109:boolean similar(java.lang.Object) -> UADm
    1126:1135:react.json.JSONObject toJSONObject(react.json.JSONArray) -> Oqux
    1153:1156:java.lang.String toString() -> toString
    1174:1177:java.lang.String toString(int) -> toString
    1192:1192:java.io.Writer write(java.io.Writer) -> Oqux
    1212:1247:java.io.Writer write(java.io.Writer,int,int) -> Oqux
react.json.JSONException -> mGSK:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> vdSF
    22:23:void <init>(java.lang.String) -> <init>
    33:35:void <init>(java.lang.Throwable) -> <init>
    47:47:java.lang.Throwable getCause() -> getCause
react.json.JSONML -> JQng:
    37:37:void <init>() -> <init>
    57:279:java.lang.Object parse(react.json.XMLTokener,boolean,react.json.JSONArray) -> Oqux
    301:301:react.json.JSONArray toJSONArray(java.lang.String) -> RQMi
    320:320:react.json.JSONArray toJSONArray(react.json.XMLTokener) -> Oqux
    340:340:react.json.JSONObject toJSONObject(react.json.XMLTokener) -> uyTg
    360:360:react.json.JSONObject toJSONObject(java.lang.String) -> gVXr
    379:456:java.lang.String toString(react.json.JSONArray) -> uyTg
    472:552:java.lang.String toString(react.json.JSONObject) -> uyTg
react.json.JSONObject -> YUjY:
    java.util.Map map -> map
    java.lang.Object NULL -> QiJb
    153:153:void <clinit>() -> <clinit>
    158:161:void <init>() -> <init>
    179:189:void <init>(react.json.JSONObject,java.lang.String[]) -> <init>
    202:248:void <init>(react.json.JSONTokener) -> <init>
    261:277:void <init>(java.util.Map) -> <init>
    302:304:void <init>(java.lang.Object) -> <init>
    322:334:void <init>(java.lang.Object,java.lang.String[]) -> <init>
    350:351:void <init>(java.lang.String) -> <init>
    365:400:void <init>(java.lang.String,java.util.Locale) -> <init>
    423:435:react.json.JSONObject accumulate(java.lang.String,java.lang.Object) -> Oqux
    455:467:react.json.JSONObject append(java.lang.String,java.lang.Object) -> uyTg
    480:499:java.lang.String doubleToString(double) -> gVXr
    513:522:java.lang.Object get(java.lang.String) -> get
    539:547:java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    562:570:boolean getBoolean(java.lang.String) -> getBoolean
    585:591:java.math.BigInteger getBigInteger(java.lang.String) -> Lymd
    607:613:java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    629:635:double getDouble(java.lang.String) -> getDouble
    651:657:int getInt(java.lang.String) -> getInt
    672:677:react.json.JSONArray getJSONArray(java.lang.String) -> SSnT
    691:696:react.json.JSONObject getJSONObject(java.lang.String) -> rVWi
    711:717:long getLong(java.lang.String) -> getLong
    728:741:java.lang.String[] getNames(react.json.JSONObject) -> jgsI
    751:767:java.lang.String[] getNames(java.lang.Object) -> UcHV
    781:786:java.lang.String getString(java.lang.String) -> getString
    798:798:boolean has(java.lang.String) -> has
    815:841:react.json.JSONObject increment(java.lang.String) -> ivPx
    855:855:boolean isNull(java.lang.String) -> eYBv
    865:865:java.util.Iterator keys() -> keys
    875:875:java.util.Set keySet() -> keySet
    885:885:int length() -> length
    897:903:react.json.JSONArray names() -> KfYW
    917:937:java.lang.String numberToString(java.lang.Number) -> Oqux
    949:949:java.lang.Object opt(java.lang.String) -> bWhw
    963:963:java.lang.Enum optEnum(java.lang.Class,java.lang.String) -> Oqux
    982:1004:java.lang.Enum optEnum(java.lang.Class,java.lang.String,java.lang.Enum) -> Oqux
    1018:1018:boolean optBoolean(java.lang.String) -> tSmJ
    1036:1039:boolean optBoolean(java.lang.String,boolean) -> Oqux
    1054:1054:double optDouble(java.lang.String) -> EKGK
    1072:1075:java.math.BigInteger optBigInteger(java.lang.String,java.math.BigInteger) -> Oqux
    1094:1097:java.math.BigDecimal optBigDecimal(java.lang.String,java.math.BigDecimal) -> Oqux
    1116:1119:double optDouble(java.lang.String,double) -> Oqux
    1134:1134:int optInt(java.lang.String) -> INbK
    1152:1155:int optInt(java.lang.String,int) -> jgsI
    1169:1170:react.json.JSONArray optJSONArray(java.lang.String) -> pqtM
    1183:1184:react.json.JSONObject optJSONObject(java.lang.String) -> qJcM
    1198:1198:long optLong(java.lang.String) -> Plhk
    1216:1219:long optLong(java.lang.String,long) -> Oqux
    1234:1234:java.lang.String optString(java.lang.String) -> OYDv
    1249:1250:java.lang.String optString(java.lang.String,java.lang.String) -> uyTg
    1255:1305:void populateMap(java.lang.Object) -> SCNo
    1320:1321:react.json.JSONObject put(java.lang.String,boolean) -> uyTg
    1337:1338:react.json.JSONObject put(java.lang.String,java.util.Collection) -> Oqux
    1354:1355:react.json.JSONObject put(java.lang.String,double) -> uyTg
    1371:1372:react.json.JSONObject put(java.lang.String,int) -> NoSy
    1388:1389:react.json.JSONObject put(java.lang.String,long) -> uyTg
    1405:1406:react.json.JSONObject put(java.lang.String,java.util.Map) -> Oqux
    1425:1437:react.json.JSONObject put(java.lang.String,java.lang.Object) -> jgsI
    1455:1463:react.json.JSONObject putOnce(java.lang.String,java.lang.Object) -> NoSy
    1482:1486:react.json.JSONObject putOpt(java.lang.String,java.lang.Object) -> gojx
    1501:1510:java.lang.String quote(java.lang.String) -> quote
    1517:1577:java.io.Writer quote(java.lang.String,java.io.Writer) -> Oqux
    1590:1590:java.lang.Object remove(java.lang.String) -> IpeW
    1605:1640:boolean similar(java.lang.Object) -> UADm
    1655:1707:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    1720:1736:void testValidity(java.lang.Object) -> HmcS
    1751:1760:react.json.JSONArray toJSONArray(react.json.JSONArray) -> jgsI
    1779:1782:java.lang.String toString() -> toString
    1802:1805:java.lang.String toString(int) -> toString
    1835:1879:java.lang.String valueToString(java.lang.Object) -> valueToString
    1898:1932:java.lang.Object wrap(java.lang.Object) -> wrap
    1947:1947:java.io.Writer write(java.io.Writer) -> Oqux
    1952:1995:java.io.Writer writeValue(java.io.Writer,java.lang.Object,int,int) -> Oqux
    2000:2004:void indent(java.io.Writer,int) -> Oqux
    2019:2068:java.io.Writer write(java.io.Writer,int,int) -> Oqux
react.json.JSONObject$Null -> YUjY$Oqux:
    102:102:void <init>() -> <init>
    114:114:java.lang.Object clone() -> clone
    128:128:boolean equals(java.lang.Object) -> equals
    138:138:java.lang.String toString() -> toString
    102:102:void <init>(react.json.JSONObject$Null) -> <init>
react.json.JSONString -> mqeq:
    java.lang.String toJSONString() -> toJSONString
react.json.JSONStringer -> Aqir:
    69:70:void <init>() -> <init>
    83:83:java.lang.String toString() -> toString
react.json.JSONTokener -> WXTs:
    long character -> SoQE
    boolean eof -> eof
    long index -> eIQD
    long line -> YhQR
    char previous -> nTKT
    java.io.Reader reader -> reader
    boolean usePrevious -> nSjT
    59:68:void <init>(java.io.Reader) -> <init>
    78:79:void <init>(java.io.InputStream) -> <init>
    89:90:void <init>(java.lang.String) -> <init>
    99:107:void back() -> gggr
    119:131:int dehexchar(char) -> Oqux
    136:136:boolean end() -> uqRC
    147:153:boolean more() -> TiCi
    164:198:char next() -> next
    213:218:char next(char) -> uyTg
    233:250:java.lang.String next(int) -> ERxn
    263:266:char nextClean() -> mGWL
    287:334:java.lang.String nextString(char) -> jgsI
    349:361:java.lang.String nextTo(char) -> NoSy
    376:388:java.lang.String nextTo(java.lang.String) -> rNFx
    403:441:java.lang.Object nextValue() -> JtXK
    458:479:char skipTo(char) -> gojx
    491:491:react.json.JSONException syntaxError(java.lang.String) -> VDFk
    501:501:java.lang.String toString() -> toString
react.json.JSONWriter -> cdIN:
    int maxdepth -> Djtk
    boolean comma -> DQcT
    char mode -> XvOh
    react.json.JSONObject[] stack -> dyQl
    int top -> top
    java.io.Writer writer -> writer
    97:104:void <init>(java.io.Writer) -> <init>
    117:141:react.json.JSONWriter append(java.lang.String) -> sHXl
    157:164:react.json.JSONWriter array() -> HvbQ
    180:193:react.json.JSONWriter end(char,char) -> Oqux
    206:206:react.json.JSONWriter endArray() -> HmsQ
    219:219:react.json.JSONWriter endObject() -> XdPl
    235:258:react.json.JSONWriter key(java.lang.String) -> YnrT
    274:285:react.json.JSONWriter object() -> ctqJ
    299:310:void pop(char) -> tBlP
    322:329:void push(react.json.JSONObject) -> NoSy
    342:342:react.json.JSONWriter value(boolean) -> PmJd
    356:356:react.json.JSONWriter value(double) -> uOAQ
    369:369:react.json.JSONWriter value(long) -> uOAQ
    385:385:react.json.JSONWriter value(java.lang.Object) -> quXa
react.json.XML -> NwnQ:
    java.lang.Character AMP -> GkpO
    java.lang.Character APOS -> vdUx
    java.lang.Character BANG -> NpeO
    java.lang.Character EQ -> oVpa
    java.lang.Character GT -> DcHV
    java.lang.Character LT -> jrUi
    java.lang.Character QUEST -> kKFD
    java.lang.Character QUOT -> KNIx
    java.lang.Character SLASH -> vmFt
    40:64:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    82:107:java.lang.String escape(java.lang.String) -> escape
    120:132:void noSpace(java.lang.String) -> xGHC
    150:339:boolean parse(react.json.XMLTokener,react.json.JSONObject,java.lang.String) -> Oqux
    358:399:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    420:426:react.json.JSONObject toJSONObject(java.lang.String) -> gVXr
    439:439:java.lang.String toString(java.lang.Object) -> toString
    454:579:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
react.json.XMLTokener -> dgKl:
    java.util.HashMap entity -> UJed
    45:51:void <clinit>() -> <clinit>
    61:62:void <init>(java.lang.String) -> <init>
    75:88:java.lang.String nextCDATA() -> JcYE
    108:133:java.lang.Object nextContent() -> imqd
    149:166:java.lang.Object nextEntity(char) -> RPkn
    186:239:java.lang.Object nextMeta() -> iwCm
    261:334:java.lang.Object nextToken() -> CVRu
    354:420:boolean skipPast(java.lang.String) -> wLUJ
react.papyrus.BufferedFrame -> AXWu:
    byte[][] frame -> Iqvd
    int width -> width
    int height -> height
    20:21:void <init>() -> <init>
    23:29:void <init>(int,int) -> <init>
    33:83:void drawText(int,int,org.bukkit.map.MapFont,byte,java.lang.String) -> Oqux
    90:97:void write(byte) -> tBlP
    101:112:react.papyrus.BufferedFrame scale(double,double,int) -> Oqux
    120:127:void fromBufferedImage(java.awt.image.BufferedImage) -> Oqux
    131:145:java.awt.image.BufferedImage toBufferedImage() -> SnTF
    153:160:void writeRainbowMul() -> Mtqs
    167:174:void writeRainbowAdd() -> Oafh
    181:191:void writeSparks() -> BuSN
    195:201:boolean write(int,int,byte) -> Oqux
    206:228:int write(react.papyrus.BufferedFrame,int,int) -> Oqux
    233:250:void write(react.papyrus.BufferedFrame) -> NoSy
    254:254:byte[][] getRawFrame() -> OQFU
    259:259:int getWidth() -> getWidth
    264:264:int getHeight() -> getHeight
react.papyrus.FrameColor -> leqw:
    java.awt.Color[] colors -> colors
    byte TRANSPARENT -> TRANSPARENT
    byte LIGHT_GREEN -> LIGHT_GREEN
    byte LIGHT_BROWN -> LIGHT_BROWN
    byte GRAY_1 -> GRAY_1
    byte RED -> RED
    byte PALE_BLUE -> PALE_BLUE
    byte GRAY_2 -> GRAY_2
    byte DARK_GREEN -> DARK_GREEN
    byte WHITE -> WHITE
    byte LIGHT_GRAY -> LIGHT_GRAY
    byte BROWN -> BROWN
    byte DARK_GRAY -> DARK_GRAY
    byte BLUE -> BLUE
    byte DARK_BROWN -> DARK_BROWN
    11:25:void <clinit>() -> <clinit>
    9:9:void <init>() -> <init>
    29:29:java.awt.Color c(int,int,int) -> NoSy
    34:41:double getDistance(java.awt.Color,java.awt.Color) -> Oqux
    46:50:java.awt.image.BufferedImage resizeImage(java.awt.Image) -> resizeImage
    55:68:byte[] imageToBytes(java.awt.Image) -> imageToBytes
    73:73:byte matchColor(int,int,int) -> matchColor
    78:97:byte matchColor(java.awt.Color) -> matchColor
    103:109:java.awt.Color getColor(byte) -> getColor
react.papyrus.IPapyrus -> UlBP:
    org.bukkit.map.MapView getView() -> dfsK
    react.papyrus.BufferedFrame getFrameBuffer() -> AqoD
    void addRenderer(react.papyrus.IRenderer) -> Oqux
    void clearRenderers() -> eYUV
    react.glang.GList getRenderers() -> kJES
    void removeRenderer(react.papyrus.IRenderer) -> uyTg
    void destroy() -> destroy
    org.bukkit.inventory.ItemStack makeMapItem() -> NgUT
react.papyrus.IRenderer -> STYo:
    void draw(react.papyrus.BufferedFrame,org.bukkit.map.MapCanvas,org.bukkit.map.MapView) -> Oqux
react.papyrus.Papyrus -> lwTL:
    org.bukkit.map.MapView map -> EKxG
    react.papyrus.BufferedFrame frameBuffer -> IrXC
    react.papyrus.BufferedFrame lastFrameBuffer -> uOpV
    react.glang.GList renderers -> jPRR
    21:34:void <init>(org.bukkit.World) -> <init>
    39:39:org.bukkit.map.MapView getView() -> dfsK
    45:45:react.papyrus.BufferedFrame getFrameBuffer() -> AqoD
    51:52:void addRenderer(react.papyrus.IRenderer) -> Oqux
    57:58:void clearRenderers() -> eYUV
    63:63:react.glang.GList getRenderers() -> kJES
    69:70:void removeRenderer(react.papyrus.IRenderer) -> uyTg
    76:108:void render(org.bukkit.map.MapView,org.bukkit.map.MapCanvas,org.bukkit.entity.Player) -> render
    114:114:void destroy() -> destroy
    120:122:org.bukkit.inventory.ItemStack makeMapItem() -> NgUT
    17:17:react.papyrus.BufferedFrame access$0(react.papyrus.Papyrus) -> Oqux
    19:19:react.glang.GList access$1(react.papyrus.Papyrus) -> uyTg
    18:18:react.papyrus.BufferedFrame access$2(react.papyrus.Papyrus) -> jgsI
react.papyrus.Papyrus$1 -> lwTL$1:
    react.papyrus.Papyrus this$0 -> cSmv
    org.bukkit.map.MapCanvas val$c -> QXMB
    org.bukkit.map.MapView val$v -> WQLd
    1:78:void <init>(react.papyrus.Papyrus,org.bukkit.map.MapCanvas,org.bukkit.map.MapView) -> <init>
    83:105:void run() -> run
react.papyrus.ReactFont -> BRjF:
    int spaceSize -> TrWT
    java.lang.String fontChars -> jicq
    int[][] fontData -> wEVP
    react.papyrus.ReactFont Font -> VNJI
    17:281:void <clinit>() -> <clinit>
    288:289:void <init>() -> <init>
    291:334:void <init>(boolean) -> <init>
react.rai.Goal -> woCM:
    react.glang.GList subgoals -> wVWK
    java.lang.String tag -> YEno
    11:15:void <init>(java.lang.String) -> <init>
    20:20:react.glang.GList getSubgoals() -> JIdh
    26:44:void propigate() -> wUVm
    49:50:void addGoal(react.rai.IGoal) -> Oqux
    55:65:react.glang.GList getFailingSubgoals() -> DHSs
    71:71:boolean isFailing() -> dfpw
    77:77:java.lang.String getTag() -> getTag
    83:92:void update() -> update
    boolean onCheckFailing() -> pjUM
    void onPropigated() -> Uswh
react.rai.Goal$1 -> woCM$1:
    react.rai.Goal this$0 -> FynB
    react.rai.IGoal val$i -> qegE
    1:33:void <init>(react.rai.Goal,react.rai.IGoal) -> <init>
    38:39:void run() -> run
react.rai.IGoal -> gyEx:
    react.glang.GList getSubgoals() -> JIdh
    void propigate() -> wUVm
    void onPropigated() -> Uswh
    java.lang.String getTag() -> getTag
    react.glang.GList getFailingSubgoals() -> DHSs
    boolean isFailing() -> dfpw
    boolean onCheckFailing() -> pjUM
    void update() -> update
    void addGoal(react.rai.IGoal) -> Oqux
react.rai.IRAI -> EvEn:
    react.glang.GList getGoals() -> xGXg
    void tick() -> tick
    void addGoal(react.rai.IGoal) -> Oqux
    react.glang.GList getEvents() -> JsxY
    void callEvent(react.rai.RAIEvent) -> Oqux
    react.glang.GList getListeners() -> cSNB
react.rai.RAI -> xrIk:
    react.glang.GList goals -> gFgP
    react.glang.GList events -> FhlP
    react.glang.GList logEvents -> vctW
    react.glang.GList listeners -> ceNr
    long since -> dgps
    react.rai.RAI instance -> KDve
    21:30:void <init>() -> <init>
    35:35:react.glang.GList getGoals() -> xGXg
    41:42:void addGoal(react.rai.IGoal) -> Oqux
    47:69:void tick() -> tick
    74:74:react.glang.GList getEvents() -> JsxY
    80:87:void callEvent(react.rai.RAIEvent) -> Oqux
    92:92:react.glang.GList getListeners() -> cSNB
react.rai.RAIEvent -> fvGP:
    react.rai.RAIEventType type -> FGIs
    java.lang.String[] pars -> jGaA
    java.lang.String ovt -> lpJc
    9:14:void <init>(react.rai.RAIEventType,java.lang.String[]) -> <init>
    19:19:java.lang.String toString() -> toString
    24:24:react.rai.RAIEventType getType() -> JlHu
    29:29:java.lang.String[] getPars() -> qdgM
    34:34:java.lang.String getOvt() -> DiwA
react.rai.RAIEventType -> qCAl:
    react.rai.RAIEventType FIRE_ACTION -> CNcB
    react.rai.RAIEventType NOTE_GOAL_FAILING -> lfwa
    react.rai.RAIEventType NOTE_GOAL_FIXED -> uPTO
    java.lang.String[] msgs -> HECG
    react.rai.RAIEventType[] ENUM$VALUES -> ynBg
    5:9:void <clinit>() -> <clinit>
    13:16:void <init>(java.lang.String,int,java.lang.String[]) -> <init>
    20:20:int getSize() -> getSize
    25:25:int pickRandom() -> BKAD
    30:41:java.lang.String formatFor(int,java.lang.String[]) -> Oqux
    1:1:react.rai.RAIEventType[] values() -> values
    1:1:react.rai.RAIEventType valueOf(java.lang.String) -> valueOf
react.rai.goals.GoalReducedChunkLoad -> NoaH:
    boolean failing -> IrXv
    24:27:void <init>() -> <init>
    34:60:boolean onCheckFailing() -> pjUM
    66:79:void onPropigated() -> Uswh
react.rai.goals.GoalReducedChunkLoad$1 -> NoaH$1:
    react.rai.goals.GoalReducedChunkLoad this$0 -> qmyy
    1:42:void <init>(react.rai.goals.GoalReducedChunkLoad) -> <init>
    47:56:void run() -> run
react.rai.goals.GoalReducedChunkLoad$2 -> NoaH$2:
    react.rai.goals.GoalReducedChunkLoad this$0 -> qmyy
    1:68:void <init>(react.rai.goals.GoalReducedChunkLoad) -> <init>
    73:76:void run() -> run
react.rai.goals.GoalReducedEntityCounts -> DbDV:
    boolean failing -> IrXv
    28:31:void <init>() -> <init>
    38:85:boolean onCheckFailing() -> pjUM
    91:134:void onPropigated() -> Uswh
    24:24:boolean access$0(react.rai.goals.GoalReducedEntityCounts) -> Oqux
react.rai.goals.GoalReducedEntityCounts$1 -> DbDV$1:
    react.rai.goals.GoalReducedEntityCounts this$0 -> cCOS
    1:67:void <init>(react.rai.goals.GoalReducedEntityCounts) -> <init>
    72:81:void run() -> run
react.rai.goals.GoalReducedEntityCounts$2 -> DbDV$2:
    react.rai.goals.GoalReducedEntityCounts this$0 -> cCOS
    org.bukkit.Chunk val$lx -> DRIH
    1:119:void <init>(react.rai.goals.GoalReducedEntityCounts,org.bukkit.Chunk) -> <init>
    124:131:void run() -> run
react.rai.goals.GoalStableChunkTime -> AOge:
    boolean failing -> IrXv
    27:30:void <init>() -> <init>
    35:72:boolean onCheckFailing() -> pjUM
    78:128:void onPropigated() -> Uswh
react.rai.goals.GoalStableChunkTime$1 -> AOge$1:
    react.rai.goals.GoalStableChunkTime this$0 -> Osip
    1:54:void <init>(react.rai.goals.GoalStableChunkTime) -> <init>
    59:68:void run() -> run
react.rai.goals.GoalStableChunkTime$2 -> AOge$2:
    react.rai.goals.GoalStableChunkTime this$0 -> Osip
    java.lang.Object val$i -> MutW
    1:111:void <init>(react.rai.goals.GoalStableChunkTime,java.lang.Object) -> <init>
    116:121:void run() -> run
react.rai.goals.GoalStableEntityTime -> PKTO:
    boolean failing -> IrXv
    21:24:void <init>() -> <init>
    30:30:void onPropigated() -> Uswh
    35:35:void letUp() -> xaKN
    40:77:boolean onCheckFailing() -> pjUM
    17:17:boolean access$0(react.rai.goals.GoalStableEntityTime) -> Oqux
react.rai.goals.GoalStableEntityTime$1 -> PKTO$1:
    react.rai.goals.GoalStableEntityTime this$0 -> kJfJ
    1:59:void <init>(react.rai.goals.GoalStableEntityTime) -> <init>
    64:73:void run() -> run
react.rai.goals.GoalStableFluidTime -> sbXi:
    boolean failing -> IrXv
    react.glang.GMap reocc -> rynM
    31:35:void <init>() -> <init>
    40:83:void onPropigated() -> Uswh
    88:125:boolean onCheckFailing() -> pjUM
    27:27:react.glang.GMap access$0(react.rai.goals.GoalStableFluidTime) -> Oqux
    26:26:boolean access$1(react.rai.goals.GoalStableFluidTime) -> uyTg
react.rai.goals.GoalStableFluidTime$1 -> sbXi$1:
    react.rai.goals.GoalStableFluidTime this$0 -> USYK
    org.bukkit.Chunk val$lx -> DRIH
    1:66:void <init>(react.rai.goals.GoalStableFluidTime,org.bukkit.Chunk) -> <init>
    71:80:void run() -> run
react.rai.goals.GoalStableFluidTime$2 -> sbXi$2:
    react.rai.goals.GoalStableFluidTime this$0 -> USYK
    1:107:void <init>(react.rai.goals.GoalStableFluidTime) -> <init>
    112:121:void run() -> run
react.rai.goals.GoalStableHopperTime -> cdME:
    boolean failing -> IrXv
    react.glang.GMap reocc -> rynM
    31:35:void <init>() -> <init>
    40:84:void onPropigated() -> Uswh
    89:125:boolean onCheckFailing() -> pjUM
    27:27:react.glang.GMap access$0(react.rai.goals.GoalStableHopperTime) -> Oqux
    26:26:boolean access$1(react.rai.goals.GoalStableHopperTime) -> uyTg
react.rai.goals.GoalStableHopperTime$1 -> cdME$1:
    react.rai.goals.GoalStableHopperTime this$0 -> Cgvj
    org.bukkit.Chunk val$lx -> DRIH
    1:66:void <init>(react.rai.goals.GoalStableHopperTime,org.bukkit.Chunk) -> <init>
    71:81:void run() -> run
react.rai.goals.GoalStableHopperTime$2 -> cdME$2:
    react.rai.goals.GoalStableHopperTime this$0 -> Cgvj
    1:107:void <init>(react.rai.goals.GoalStableHopperTime) -> <init>
    112:121:void run() -> run
react.rai.goals.GoalStableRedstoneTime -> TqSU:
    boolean failing -> IrXv
    react.glang.GMap reocc -> rynM
    31:35:void <init>() -> <init>
    40:84:void onPropigated() -> Uswh
    89:126:boolean onCheckFailing() -> pjUM
    27:27:react.glang.GMap access$0(react.rai.goals.GoalStableRedstoneTime) -> Oqux
    26:26:boolean access$1(react.rai.goals.GoalStableRedstoneTime) -> uyTg
react.rai.goals.GoalStableRedstoneTime$1 -> TqSU$1:
    react.rai.goals.GoalStableRedstoneTime this$0 -> KooE
    org.bukkit.Chunk val$lx -> DRIH
    1:66:void <init>(react.rai.goals.GoalStableRedstoneTime,org.bukkit.Chunk) -> <init>
    71:81:void run() -> run
react.rai.goals.GoalStableRedstoneTime$2 -> TqSU$2:
    react.rai.goals.GoalStableRedstoneTime this$0 -> KooE
    1:108:void <init>(react.rai.goals.GoalStableRedstoneTime) -> <init>
    113:122:void run() -> run
react.rai.goals.GoalStableTickTime -> gggQ:
    boolean failing -> IrXv
    20:23:void <init>() -> <init>
    29:29:void onPropigated() -> Uswh
    34:58:boolean onCheckFailing() -> pjUM
    16:16:boolean access$0(react.rai.goals.GoalStableTickTime) -> Oqux
react.rai.goals.GoalStableTickTime$1 -> gggQ$1:
    react.rai.goals.GoalStableTickTime this$0 -> NWVL
    1:40:void <init>(react.rai.goals.GoalStableTickTime) -> <init>
    45:54:void run() -> run
react.remote.client.RemoteClient -> miYF:
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String token -> kAuK
    boolean authenticated -> jjGS
    react.remote.server.ServerInfo info -> DAHJ
    react.glang.GMap frems -> PCfy
    31:39:void <init>(java.lang.String,int) -> <init>
    43:47:void cleanFrames(int) -> ckqS
    51:51:react.glang.GMap getFrames() -> nAjb
    56:75:int computeFrames() -> eHSG
    80:92:boolean clearToken() -> lMFm
    97:110:boolean updateServerInfo() -> erfN
    115:129:boolean refreshToken() -> SKoR
    134:145:boolean authenticate(java.lang.String,java.lang.String) -> jgsI
    150:150:java.lang.String getUsername() -> getUsername
    155:155:java.lang.String getPassword() -> getPassword
    160:160:java.lang.String getToken() -> yAjI
    165:165:boolean isAuthenticated() -> fShh
    170:170:react.remote.server.ServerInfo getInfo() -> uXDr
react.remote.client.packet.CPacketClearToken -> lTry:
    java.lang.String token -> kAuK
    14:15:void <init>() -> <init>
    19:22:void <init>(java.lang.String) -> <init>
    27:28:void toBytes(react.gnet.streams.OSS) -> Oqux
    33:34:void fromBytes(react.gnet.streams.ISS) -> Oqux
    38:38:java.lang.String getToken() -> yAjI
    43:44:void setToken(java.lang.String) -> BlTI
react.remote.client.packet.CPacketComputeFrames -> MIyv:
    java.lang.String token -> kAuK
    14:15:void <init>() -> <init>
    19:22:void <init>(java.lang.String) -> <init>
    27:28:void toBytes(react.gnet.streams.OSS) -> Oqux
    33:34:void fromBytes(react.gnet.streams.ISS) -> Oqux
    38:38:java.lang.String getToken() -> yAjI
    43:44:void setToken(java.lang.String) -> BlTI
react.remote.client.packet.CPacketGetInfo -> IiDA:
    java.lang.String token -> kAuK
    14:15:void <init>() -> <init>
    19:22:void <init>(java.lang.String) -> <init>
    27:28:void toBytes(react.gnet.streams.OSS) -> Oqux
    33:34:void fromBytes(react.gnet.streams.ISS) -> Oqux
    38:38:java.lang.String getToken() -> yAjI
    43:44:void setToken(java.lang.String) -> BlTI
react.remote.client.packet.CPacketGetToken -> qJpK:
    java.lang.String username -> username
    java.lang.String password -> password
    15:16:void <init>() -> <init>
    20:24:void <init>(java.lang.String,java.lang.String) -> <init>
    29:31:void toBytes(react.gnet.streams.OSS) -> Oqux
    36:38:void fromBytes(react.gnet.streams.ISS) -> Oqux
    42:42:java.lang.String getUsername() -> getUsername
    47:48:void setUsername(java.lang.String) -> setUsername
    52:52:java.lang.String getPassword() -> getPassword
    57:58:void setPassword(java.lang.String) -> setPassword
react.remote.client.packet.CPacketRefreshToken -> xqhG:
    java.lang.String token -> kAuK
    14:15:void <init>() -> <init>
    19:22:void <init>(java.lang.String) -> <init>
    27:28:void toBytes(react.gnet.streams.OSS) -> Oqux
    33:34:void fromBytes(react.gnet.streams.ISS) -> Oqux
    38:38:java.lang.String getToken() -> yAjI
    43:44:void setToken(java.lang.String) -> BlTI
react.remote.client.packet.ClientPacket -> PSbe:
    int id -> id
    java.lang.String name -> name
    16:19:void <init>(react.remote.client.packet.ClientPacketType) -> <init>
    void toBytes(react.gnet.streams.OSS) -> Oqux
    void fromBytes(react.gnet.streams.ISS) -> Oqux
    30:30:int getId() -> getId
    36:36:react.gnet.packet.PacketBinding getBinding() -> DYRO
    42:42:java.lang.String getPacketName() -> rFBu
react.remote.client.packet.ClientPacketType -> Gjjk:
    react.remote.client.packet.ClientPacketType GET_TOKEN -> Hwdv
    react.remote.client.packet.ClientPacketType REFRESH_TOKEN -> pACg
    react.remote.client.packet.ClientPacketType CLEAR_TOKEN -> inrc
    react.remote.client.packet.ClientPacketType GET_INFO -> PfJv
    react.remote.client.packet.ClientPacketType COMPUTE_FRAMES -> UBVX
    react.remote.client.packet.ClientPacketType[] $VALUES -> rymb
    3:3:react.remote.client.packet.ClientPacketType[] values() -> values
    3:3:react.remote.client.packet.ClientPacketType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:9:void <clinit>() -> <clinit>
react.remote.server.IFrameComputer -> UcRr:
    react.glang.GMap compute(long,long) -> jgsI
react.remote.server.KnownUser -> WOep:
    java.lang.String username -> username
    java.lang.String password -> password
    9:12:void <init>(java.lang.String,java.lang.String) -> <init>
    16:16:java.lang.String getUsername() -> getUsername
    21:22:void setUsername(java.lang.String) -> setUsername
    26:26:java.lang.String getPassword() -> getPassword
    31:32:void setPassword(java.lang.String) -> setPassword
react.remote.server.RemotePlugin -> AaJx:
    java.lang.String name -> name
    java.lang.String version -> version
    java.lang.String author -> author
    16:18:void <init>() -> <init>
    21:25:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    30:33:void toBytes(react.gnet.streams.OSS) -> Oqux
    38:41:void fromBytes(react.gnet.streams.ISS) -> Oqux
    45:45:java.lang.String getName() -> getName
    50:51:void setName(java.lang.String) -> setName
    55:55:java.lang.String getVersion() -> getVersion
    60:61:void setVersion(java.lang.String) -> setVersion
    65:65:java.lang.String getAuthor() -> getAuthor
    70:71:void setAuthor(java.lang.String) -> setAuthor
react.remote.server.RemoteServer -> Ussn:
    react.glang.GList users -> aNJA
    react.glang.GMap session -> qDGR
    react.glang.GMap lastCompute -> uaUF
    29:38:void <init>(int) -> <init>
    react.remote.server.ServerInfo getServerInfo() -> nReH
    44:45:void registerUser(react.remote.server.KnownUser) -> Oqux
    49:57:boolean isValidUser(react.remote.server.KnownUser) -> uyTg
    62:70:react.remote.server.KnownUser getUser(java.lang.String) -> iusX
    76:163:react.gnet.packet.IPacket onPacketReceived(react.gnet.packet.IPacket) -> NoSy
    react.remote.server.IFrameComputer getFrameComputer() -> Fgdy
    170:171:void markLastCompute(react.remote.server.KnownUser) -> jgsI
    175:180:long getLastCompute(react.remote.server.KnownUser) -> NoSy
    185:186:void createSession(react.remote.server.KnownUser,java.lang.String) -> Oqux
    190:191:void deleteSession(react.remote.server.KnownUser) -> gojx
    195:195:java.lang.String createToken() -> UQwh
react.remote.server.ServerInfo -> DYRO:
    java.lang.String motd -> kBTw
    int gameProtocol -> dgsn
    java.lang.String gameVersion -> lpKj
    java.lang.String reactVersion -> QFjf
    int maxPlayers -> maxPlayers
    react.glang.GList connectedPlayers -> Xdpt
    int viewDistance -> viewDistance
    int gamePort -> wVYG
    java.lang.String gameAddress -> dhUD
    react.glang.GList remotePlugins -> yTRU
    react.glang.GList worlds -> WjbO
    react.glang.GList actions -> NqIt
    react.glang.GList samplers -> ejyW
    26:26:react.remote.server.ServerInfo empty() -> nBOX
    109:123:void <init>() -> <init>
    128:141:void toBytes(react.gnet.streams.OSS) -> Oqux
    146:159:void fromBytes(react.gnet.streams.ISS) -> Oqux
    java.lang.String dgetMotd() -> QNOn
    int dgetGameProtocol() -> eijX
    java.lang.String dgetGameVersion() -> SLEd
    java.lang.String dgetReactVersion() -> xFpY
    int dgetMaxPlayers() -> dgKV
    react.glang.GList dgetConnectedPlayers() -> wwRh
    int dgetViewDistance() -> GPtm
    int dgetGamePort() -> RIDo
    java.lang.String dgetGameAddress() -> oLwN
    react.glang.GList dgetRemotePlugins() -> NUjF
    react.glang.GList dgetWorlds() -> ycem
    react.glang.GList dgetActions() -> qvAt
    react.glang.GList dgetSamplers() -> hsWh
    189:189:java.lang.String getMotd() -> getMotd
    194:194:int getGameProtocol() -> pYVg
    199:199:java.lang.String getGameVersion() -> Tpwc
    204:204:java.lang.String getReactVersion() -> sjnx
    209:209:int getMaxPlayers() -> getMaxPlayers
    214:214:react.glang.GList getConnectedPlayers() -> eriV
    219:219:int getViewDistance() -> getViewDistance
    224:224:int getGamePort() -> HwGm
    229:229:java.lang.String getGameAddress() -> wMHi
    234:234:react.glang.GList getRemotePlugins() -> eiva
    239:239:react.glang.GList getWorlds() -> RcAV
    244:244:react.glang.GList getActions() -> vHuQ
    249:249:react.glang.GList getSamplers() -> KoNL
react.remote.server.ServerInfo$1 -> DYRO$1:
    27:27:void <init>() -> <init>
    31:31:react.glang.GList dgetWorlds() -> ycem
    37:37:int dgetViewDistance() -> GPtm
    43:43:react.glang.GList dgetRemotePlugins() -> NUjF
    49:49:java.lang.String dgetReactVersion() -> xFpY
    55:55:java.lang.String dgetMotd() -> QNOn
    61:61:int dgetMaxPlayers() -> dgKV
    67:67:java.lang.String dgetGameVersion() -> SLEd
    73:73:int dgetGameProtocol() -> eijX
    79:79:int dgetGamePort() -> RIDo
    85:85:java.lang.String dgetGameAddress() -> oLwN
    91:91:react.glang.GList dgetConnectedPlayers() -> wwRh
    97:97:react.glang.GList dgetActions() -> qvAt
    103:103:react.glang.GList dgetSamplers() -> hsWh
react.remote.server.packet.ComputedFrame -> rFBu:
    react.glang.GMap values -> EwPk
    14:16:void <init>() -> <init>
    21:23:void toBytes(react.gnet.streams.OSS) -> Oqux
    28:36:void fromBytes(react.gnet.streams.ISS) -> Oqux
    40:40:react.glang.GMap getValues() -> OsIh
    45:46:void setValues(react.glang.GMap) -> jgsI
react.remote.server.packet.SPacketOk -> dgNg:
    boolean ok -> NEth
    14:15:void <init>() -> <init>
    19:22:void <init>(boolean) -> <init>
    27:28:void toBytes(react.gnet.streams.OSS) -> Oqux
    33:34:void fromBytes(react.gnet.streams.ISS) -> Oqux
    38:38:boolean isOk() -> PTIq
    43:44:void setOk(boolean) -> QpMe
react.remote.server.packet.SPacketSendFrames -> SKkC:
    react.glang.GMap frames -> kBWa
    15:17:void <init>() -> <init>
    21:24:void <init>(react.glang.GMap) -> <init>
    29:31:void toBytes(react.gnet.streams.OSS) -> Oqux
    36:44:void fromBytes(react.gnet.streams.ISS) -> Oqux
    48:48:react.glang.GMap getFrames() -> nAjb
    53:54:void setFrames(react.glang.GMap) -> NoSy
react.remote.server.packet.SPacketSendInfo -> xiWT:
    react.remote.server.ServerInfo info -> DAHJ
    13:15:void <init>() -> <init>
    19:22:void <init>(react.remote.server.ServerInfo) -> <init>
    27:28:void toBytes(react.gnet.streams.OSS) -> Oqux
    33:34:void fromBytes(react.gnet.streams.ISS) -> Oqux
    38:38:react.remote.server.ServerInfo getInfo() -> uXDr
    43:44:void setInfo(react.remote.server.ServerInfo) -> Oqux
react.remote.server.packet.SPacketSendToken -> FyKO:
    java.lang.String token -> kAuK
    14:15:void <init>() -> <init>
    19:22:void <init>(java.lang.String) -> <init>
    27:28:void toBytes(react.gnet.streams.OSS) -> Oqux
    33:34:void fromBytes(react.gnet.streams.ISS) -> Oqux
    38:38:java.lang.String getToken() -> yAjI
    43:44:void setToken(java.lang.String) -> BlTI
react.remote.server.packet.ServerPacket -> WaIQ:
    int id -> id
    java.lang.String name -> name
    16:19:void <init>(react.remote.server.packet.ServerPacketType) -> <init>
    void toBytes(react.gnet.streams.OSS) -> Oqux
    void fromBytes(react.gnet.streams.ISS) -> Oqux
    30:30:int getId() -> getId
    36:36:react.gnet.packet.PacketBinding getBinding() -> DYRO
    42:42:java.lang.String getPacketName() -> rFBu
react.remote.server.packet.ServerPacketType -> Jkdb:
    react.remote.server.packet.ServerPacketType SEND_TOKEN -> fCjK
    react.remote.server.packet.ServerPacketType SEND_INFO -> XmfK
    react.remote.server.packet.ServerPacketType SEND_FRAMES -> jqxV
    react.remote.server.packet.ServerPacketType OK -> SUfC
    react.remote.server.packet.ServerPacketType[] $VALUES -> bjbQ
    3:3:react.remote.server.packet.ServerPacketType[] values() -> values
    3:3:react.remote.server.packet.ServerPacketType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:8:void <clinit>() -> <clinit>
react.sampler.SampleAsyncQueue -> IOOh:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleAsyncQueue$1 -> IOOh$1:
    react.sampler.SampleAsyncQueue this$0 -> FXQW
    1:20:void <init>(react.sampler.SampleAsyncQueue) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleChunkTime -> ObCJ:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleChunkTime$1 -> ObCJ$1:
    react.sampler.SampleChunkTime this$0 -> KhAb
    1:20:void <init>(react.sampler.SampleChunkTime) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleChunksLoaded -> XAkJ:
    react.graph.IFormatter formatter -> QXGY
    17:27:void <init>() -> <init>
    32:38:void construct() -> xGHC
    43:44:void sample() -> YnrT
    49:49:java.lang.String get() -> get
    55:55:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleChunksLoaded$1 -> XAkJ$1:
    react.sampler.SampleChunksLoaded this$0 -> OYwr
    1:19:void <init>(react.sampler.SampleChunksLoaded) -> <init>
    24:24:java.lang.String from(double) -> SCNo
react.sampler.SampleChunksLoadedPerSecond -> nuOX:
    react.gmath.Average a -> THFX
    react.graph.IFormatter formatter -> QXGY
    16:29:void <init>() -> <init>
    34:40:void construct() -> xGHC
    45:47:void sample() -> YnrT
    52:52:java.lang.String get() -> get
    58:58:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleChunksLoadedPerSecond$1 -> nuOX$1:
    react.sampler.SampleChunksLoadedPerSecond this$0 -> vSXO
    1:21:void <init>(react.sampler.SampleChunksLoadedPerSecond) -> <init>
    26:26:java.lang.String from(double) -> SCNo
react.sampler.SampleEntitiesDrops -> Btox:
    react.graph.IFormatter formatter -> QXGY
    17:27:void <init>() -> <init>
    32:38:void construct() -> xGHC
    43:44:void sample() -> YnrT
    49:49:java.lang.String get() -> get
    55:55:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleEntitiesDrops$1 -> Btox$1:
    react.sampler.SampleEntitiesDrops this$0 -> HxGx
    1:19:void <init>(react.sampler.SampleEntitiesDrops) -> <init>
    24:24:java.lang.String from(double) -> SCNo
react.sampler.SampleEntitiesLiving -> xPIA:
    react.graph.IFormatter formatter -> QXGY
    17:27:void <init>() -> <init>
    32:38:void construct() -> xGHC
    43:44:void sample() -> YnrT
    49:49:java.lang.String get() -> get
    55:55:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleEntitiesLiving$1 -> xPIA$1:
    react.sampler.SampleEntitiesLiving this$0 -> SxGf
    1:19:void <init>(react.sampler.SampleEntitiesLiving) -> <init>
    24:24:java.lang.String from(double) -> SCNo
react.sampler.SampleEntitiesTiles -> nBKR:
    react.graph.IFormatter formatter -> QXGY
    17:27:void <init>() -> <init>
    32:38:void construct() -> xGHC
    43:44:void sample() -> YnrT
    49:49:java.lang.String get() -> get
    55:55:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleEntitiesTiles$1 -> nBKR$1:
    react.sampler.SampleEntitiesTiles this$0 -> pbhG
    1:19:void <init>(react.sampler.SampleEntitiesTiles) -> <init>
    24:24:java.lang.String from(double) -> SCNo
react.sampler.SampleEntitiesTotal -> wDUG:
    react.graph.IFormatter formatter -> QXGY
    17:27:void <init>() -> <init>
    32:38:void construct() -> xGHC
    43:44:void sample() -> YnrT
    49:49:java.lang.String get() -> get
    55:55:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleEntitiesTotal$1 -> wDUG$1:
    react.sampler.SampleEntitiesTotal this$0 -> WPnc
    1:19:void <init>(react.sampler.SampleEntitiesTotal) -> <init>
    24:24:java.lang.String from(double) -> SCNo
react.sampler.SampleEntityDroppedTicks -> NocQ:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleEntityDroppedTicks$1 -> NocQ$1:
    react.sampler.SampleEntityDroppedTicks this$0 -> toTi
    1:20:void <init>(react.sampler.SampleEntityDroppedTicks) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleEntityTime -> IiDl:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleEntityTime$1 -> IiDl$1:
    react.sampler.SampleEntityTime this$0 -> iMRe
    1:20:void <init>(react.sampler.SampleEntityTime) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleEntityTimeLock -> Dads:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleEntityTimeLock$1 -> Dads$1:
    react.sampler.SampleEntityTimeLock this$0 -> dWTj
    1:20:void <init>(react.sampler.SampleEntityTimeLock) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleExplosionTime -> maKT:
    react.graph.IFormatter formatter -> QXGY
    17:27:void <init>() -> <init>
    32:38:void construct() -> xGHC
    43:44:void sample() -> YnrT
    49:49:java.lang.String get() -> get
    55:55:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleExplosionTime$1 -> maKT$1:
    react.sampler.SampleExplosionTime this$0 -> QGND
    1:19:void <init>(react.sampler.SampleExplosionTime) -> <init>
    24:24:java.lang.String from(double) -> SCNo
react.sampler.SampleFluidPerSecond -> VMGW:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleFluidPerSecond$1 -> VMGW$1:
    react.sampler.SampleFluidPerSecond this$0 -> VMjw
    1:20:void <init>(react.sampler.SampleFluidPerSecond) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleFluidPerTick -> hPxp:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    46:53:void sample() -> YnrT
    58:58:java.lang.String get() -> get
    64:64:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleFluidPerTick$1 -> hPxp$1:
    react.sampler.SampleFluidPerTick this$0 -> ekYU
    1:20:void <init>(react.sampler.SampleFluidPerTick) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleFluidTickTime -> XuPm:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleFluidTickTime$1 -> XuPm$1:
    react.sampler.SampleFluidTickTime this$0 -> MSqv
    1:20:void <init>(react.sampler.SampleFluidTickTime) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleFluidTickUtilization -> CgTD:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    46:53:void sample() -> YnrT
    58:58:java.lang.String get() -> get
    64:64:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleFluidTickUtilization$1 -> CgTD$1:
    react.sampler.SampleFluidTickUtilization this$0 -> THGI
    1:20:void <init>(react.sampler.SampleFluidTickUtilization) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleHopperPerSecond -> mOgi:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleHopperPerSecond$1 -> mOgi$1:
    react.sampler.SampleHopperPerSecond this$0 -> wNJX
    1:20:void <init>(react.sampler.SampleHopperPerSecond) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleHopperPerTick -> mrLR:
    react.graph.IFormatter formatter -> QXGY
    18:29:void <init>() -> <init>
    34:40:void construct() -> xGHC
    47:54:void sample() -> YnrT
    59:59:java.lang.String get() -> get
    65:65:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleHopperPerTick$1 -> mrLR$1:
    react.sampler.SampleHopperPerTick this$0 -> HECy
    1:20:void <init>(react.sampler.SampleHopperPerTick) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleHopperTickTime -> inPS:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleHopperTickTime$1 -> inPS$1:
    react.sampler.SampleHopperTickTime this$0 -> oNcD
    1:20:void <init>(react.sampler.SampleHopperTickTime) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleHopperTickUtilization -> qmWJ:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    46:53:void sample() -> YnrT
    58:58:java.lang.String get() -> get
    64:64:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleHopperTickUtilization$1 -> qmWJ$1:
    react.sampler.SampleHopperTickUtilization this$0 -> NgwT
    1:20:void <init>(react.sampler.SampleHopperTickUtilization) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleMemoryAllocated -> aLej:
    react.graph.IFormatter formatter -> QXGY
    17:27:void <init>() -> <init>
    32:38:void construct() -> xGHC
    43:44:void sample() -> YnrT
    49:49:java.lang.String get() -> get
    55:55:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleMemoryAllocated$1 -> aLej$1:
    react.sampler.SampleMemoryAllocated this$0 -> oWSq
    1:19:void <init>(react.sampler.SampleMemoryAllocated) -> <init>
    24:24:java.lang.String from(double) -> SCNo
react.sampler.SampleMemoryAllocationPerSecond -> SfAf:
    react.graph.IFormatter formatter -> QXGY
    17:27:void <init>() -> <init>
    32:38:void construct() -> xGHC
    43:44:void sample() -> YnrT
    49:49:java.lang.String get() -> get
    55:55:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleMemoryAllocationPerSecond$1 -> SfAf$1:
    react.sampler.SampleMemoryAllocationPerSecond this$0 -> bPmw
    1:19:void <init>(react.sampler.SampleMemoryAllocationPerSecond) -> <init>
    24:24:java.lang.String from(double) -> SCNo
react.sampler.SampleMemoryFree -> JASy:
    react.graph.IFormatter formatter -> QXGY
    17:27:void <init>() -> <init>
    32:38:void construct() -> xGHC
    43:44:void sample() -> YnrT
    49:49:java.lang.String get() -> get
    55:55:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleMemoryFree$1 -> JASy$1:
    react.sampler.SampleMemoryFree this$0 -> cLBT
    1:19:void <init>(react.sampler.SampleMemoryFree) -> <init>
    24:24:java.lang.String from(double) -> SCNo
react.sampler.SampleMemoryMax -> SvaD:
    react.graph.IFormatter formatter -> QXGY
    17:27:void <init>() -> <init>
    32:38:void construct() -> xGHC
    43:44:void sample() -> YnrT
    49:49:java.lang.String get() -> get
    55:55:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleMemoryMax$1 -> SvaD$1:
    react.sampler.SampleMemoryMax this$0 -> bjaR
    1:19:void <init>(react.sampler.SampleMemoryMax) -> <init>
    24:24:java.lang.String from(double) -> SCNo
react.sampler.SampleMemoryUse -> Tych:
    react.graph.IFormatter formatter -> QXGY
    17:27:void <init>() -> <init>
    32:38:void construct() -> xGHC
    43:44:void sample() -> YnrT
    49:49:java.lang.String get() -> get
    55:55:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleMemoryUse$1 -> Tych$1:
    react.sampler.SampleMemoryUse this$0 -> xanK
    1:19:void <init>(react.sampler.SampleMemoryUse) -> <init>
    24:24:java.lang.String from(double) -> SCNo
react.sampler.SampleRedstonePerSecond -> oVNW:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleRedstonePerSecond$1 -> oVNW$1:
    react.sampler.SampleRedstonePerSecond this$0 -> tgDY
    1:20:void <init>(react.sampler.SampleRedstonePerSecond) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleRedstonePerTick -> vRRF:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    46:53:void sample() -> YnrT
    58:58:java.lang.String get() -> get
    64:64:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleRedstonePerTick$1 -> vRRF$1:
    react.sampler.SampleRedstonePerTick this$0 -> rhqO
    1:20:void <init>(react.sampler.SampleRedstonePerTick) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleRedstoneTickTime -> skLF:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleRedstoneTickTime$1 -> skLF$1:
    react.sampler.SampleRedstoneTickTime this$0 -> VWAJ
    1:20:void <init>(react.sampler.SampleRedstoneTickTime) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleRedstoneTickUtilization -> ThbN:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    46:53:void sample() -> YnrT
    58:58:java.lang.String get() -> get
    64:64:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleRedstoneTickUtilization$1 -> ThbN$1:
    react.sampler.SampleRedstoneTickUtilization this$0 -> Voqd
    1:20:void <init>(react.sampler.SampleRedstoneTickUtilization) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleSyncQueue -> tLLM:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleSyncQueue$1 -> tLLM$1:
    react.sampler.SampleSyncQueue this$0 -> XBsV
    1:20:void <init>(react.sampler.SampleSyncQueue) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleTickTime -> xqjH:
    react.graph.IFormatter formatter -> QXGY
    react.gmath.Average aa -> QaCV
    17:29:void <init>() -> <init>
    34:40:void construct() -> xGHC
    45:47:void sample() -> YnrT
    52:52:java.lang.String get() -> get
    58:58:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleTickTime$1 -> xqjH$1:
    react.sampler.SampleTickTime this$0 -> xbQw
    1:21:void <init>(react.sampler.SampleTickTime) -> <init>
    26:26:java.lang.String from(double) -> SCNo
react.sampler.SampleTickUtilization -> KfYU:
    react.graph.IFormatter formatter -> QXGY
    react.gmath.Average aa -> QaCV
    17:29:void <init>() -> <init>
    34:40:void construct() -> xGHC
    45:47:void sample() -> YnrT
    52:52:java.lang.String get() -> get
    58:58:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleTickUtilization$1 -> KfYU$1:
    react.sampler.SampleTickUtilization this$0 -> BnIQ
    1:21:void <init>(react.sampler.SampleTickUtilization) -> <init>
    26:26:java.lang.String from(double) -> SCNo
react.sampler.SampleTicksPerSecond -> SmpI:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:55:java.lang.String get() -> get
    61:61:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleTicksPerSecond$1 -> SmpI$1:
    react.sampler.SampleTicksPerSecond this$0 -> XKct
    1:20:void <init>(react.sampler.SampleTicksPerSecond) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleTileDroppedTicks -> JQsc:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleTileDroppedTicks$1 -> JQsc$1:
    react.sampler.SampleTileDroppedTicks this$0 -> MKeP
    1:20:void <init>(react.sampler.SampleTileDroppedTicks) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleTileTime -> Ditd:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleTileTime$1 -> Ditd$1:
    react.sampler.SampleTileTime this$0 -> ahAw
    1:20:void <init>(react.sampler.SampleTileTime) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.sampler.SampleTileTimeLock -> UlFn:
    react.graph.IFormatter formatter -> QXGY
    18:28:void <init>() -> <init>
    33:39:void construct() -> xGHC
    44:45:void sample() -> YnrT
    50:50:java.lang.String get() -> get
    56:56:react.graph.IFormatter getFormatter() -> rNFx
react.sampler.SampleTileTimeLock$1 -> UlFn$1:
    react.sampler.SampleTileTimeLock this$0 -> NVxf
    1:20:void <init>(react.sampler.SampleTileTimeLock) -> <init>
    25:25:java.lang.String from(double) -> SCNo
react.security.checkpoints.SecurityCheckpointAlpha -> qvGO:
    33:33:void <init>() -> <init>
    37:74:void finishScan() -> jWcn
    78:148:void doScan(java.lang.Runnable) -> uyTg
    152:181:byte[] readResource(java.io.File,java.lang.String) -> Oqux
    186:217:react.glang.GMap scan(java.io.File) -> uyTg
    150:150:byte[] access$0(java.io.File,java.lang.String) -> uyTg
react.security.checkpoints.SecurityCheckpointAlpha$1 -> qvGO$1:
    java.lang.Runnable val$r -> FPCK
    1:78:void <init>(java.lang.Runnable) -> <init>
    85:146:void run() -> run
react.security.checkpoints.SecurityCheckpointAlpha$1$1 -> qvGO$1$1:
    react.security.checkpoints.SecurityCheckpointAlpha$1 this$1 -> rXPP
    java.lang.Runnable val$r -> FPCK
    1:137:void <init>(react.security.checkpoints.SecurityCheckpointAlpha$1,java.lang.Runnable) -> <init>
    142:144:void run() -> run
react.security.ipsec.IPSecAlpha -> erdL:
    java.lang.String ip -> pskh
    12:17:void <init>() -> <init>
    24:36:void run() -> run
    40:40:java.lang.String getIp() -> getIp
react.security.locks.SecurityLockAlpha -> KfYW:
    15:49:void <init>() -> <init>
react.security.locks.SecurityLockAlpha$1 -> KfYW$1:
    react.security.locks.SecurityLockAlpha this$0 -> cBsL
    java.io.File val$f -> XSti
    1:22:void <init>(react.security.locks.SecurityLockAlpha,java.io.File) -> <init>
    27:40:void run() -> run
react.slate.IndividualSlate -> gggr:
    10:13:void <init>(java.lang.String,org.bukkit.entity.Player) -> <init>
    21:22:void addViewer(org.bukkit.entity.Player) -> quXa
react.slate.PhantomSlate -> uqRC:
    react.glang.GList lines -> xYaN
    react.glang.GList viewers -> sksi
    java.lang.String name -> name
    org.bukkit.scoreboard.Scoreboard slate -> CFVv
    26:33:void <init>(java.lang.String) -> <init>
    38:38:react.glang.GList getLines() -> QWMT
    44:45:void set(int,java.lang.String) -> uyTg
    50:51:void setLines(react.glang.GList) -> PmJd
    56:56:java.lang.String get(int) -> get
    62:68:void update() -> update
    73:74:void setName(java.lang.String) -> setName
    79:79:java.lang.String getName() -> getName
    85:86:void build() -> ObCJ
    91:95:void addViewer(org.bukkit.entity.Player) -> quXa
    100:102:void removeViewer(org.bukkit.entity.Player) -> gVXr
    107:107:react.glang.GList getViewers() -> NNCk
    113:113:boolean isViewing(org.bukkit.entity.Player) -> uOAQ
    119:120:void addLine(java.lang.String) -> FooI
    125:126:void clearLines() -> aTyI
react.slate.Slate -> TiCi:
    void build() -> ObCJ
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    react.glang.GList getLines() -> QWMT
    void set(int,java.lang.String) -> uyTg
    void setLines(react.glang.GList) -> PmJd
    java.lang.String get(int) -> get
    void addViewer(org.bukkit.entity.Player) -> quXa
    void addLine(java.lang.String) -> FooI
    void clearLines() -> aTyI
    void removeViewer(org.bukkit.entity.Player) -> gVXr
    react.glang.GList getViewers() -> NNCk
    boolean isViewing(org.bukkit.entity.Player) -> uOAQ
    void update() -> update
react.slate.SlateUtil -> mGWL:
    18:18:void <init>() -> <init>
    27:27:org.bukkit.scoreboard.ScoreboardManager getManager() -> dwtb
    37:37:org.bukkit.scoreboard.Scoreboard newBoard() -> lnlF
    51:61:org.bukkit.scoreboard.Objective newObjective(org.bukkit.scoreboard.Scoreboard,java.lang.String) -> Oqux
    66:76:org.bukkit.scoreboard.Objective newHeadObjective(org.bukkit.scoreboard.Scoreboard,java.lang.String) -> uyTg
    90:100:org.bukkit.scoreboard.Objective newTabObjective(org.bukkit.scoreboard.Scoreboard,java.lang.String) -> jgsI
    115:121:void setScore(java.lang.String,int,org.bukkit.scoreboard.Objective) -> Oqux
    134:146:org.bukkit.scoreboard.Scoreboard buildSlate(java.lang.String,react.glang.GList) -> Oqux
    160:172:org.bukkit.scoreboard.Scoreboard buildTabSlate(java.lang.String,react.glang.GList) -> uyTg
    177:187:java.lang.String convertJSON(java.lang.String) -> EKIe
    192:208:java.lang.String[] convertJSON(java.lang.String[]) -> uyTg
    213:214:void setTabTitle(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> Oqux
react.surge.Main -> JtXK:
    react.glang.GList plugins -> APqc
    react.glang.GMap pluginInstances -> mjaw
    react.glang.GList controllerSet -> pcKM
    react.glang.GMap anchors -> hSBl
    react.glang.GList classes -> XeUt
    java.lang.reflect.Field nsField -> QXQV
    java.lang.reflect.Field thField -> lhAA
    react.glang.GList tracks -> aMlc
    long nsf -> mjbF
    42:46:void <clinit>() -> <clinit>
    50:79:void <init>() -> <init>
    85:85:void onControllerRegistry() -> HnUa
    90:109:long getNanoSync() -> ivbv
    114:115:void requestResetNanos() -> pbFT
    119:127:void requestReload() -> Thfb
    131:134:void requestReload(java.lang.Runnable) -> jgsI
    139:153:int getThreadCount() -> getThreadCount
    162:194:void onStart(react.surge.util.Protocol) -> Oqux
    201:218:void onStop() -> NUtJ
    224:224:void onPostInit() -> EdlK
    230:230:void onPreInit() -> bOoO
    234:245:void shutDownAmps() -> TOXC
    249:458:void initializeAmps() -> mjBV
    463:496:void doScan() -> bjCG
    500:522:void scanForPoolDefiners() -> VxBL
    526:542:void scanForRawEvents() -> ObJw
    546:562:void scanForDynamicTrack() -> tmuL
    566:587:void scanForAmps() -> baPu
    592:603:void onTick() -> hsUI
react.surge.Main$1 -> JtXK$1:
    1:119:void <init>() -> <init>
    125:125:void run() -> run
react.surge.PluginAmp -> HvbQ:
    react.surge.control.AmpedPlugin plugin -> gyqb
    boolean connected -> connected
    int masterTask -> WsTr
    17:21:void <init>(react.surge.control.AmpedPlugin) -> <init>
    25:25:react.surge.control.AmpedPlugin getPluginInstance() -> IXJC
    30:30:boolean isConnected() -> isConnected
    35:55:void connect() -> connect
    59:71:void masterTick() -> YgXd
    75:79:void disconnect() -> disconnect
    83:93:int startTask(int,java.lang.Runnable) -> Oqux
    98:108:int startRepeatingTask(int,int,java.lang.Runnable) -> Oqux
    113:114:void stopTask(int) -> OqyC
    57:57:void access$0(react.surge.PluginAmp) -> Oqux
react.surge.PluginAmp$1 -> HvbQ$1:
    react.surge.PluginAmp this$0 -> pRIN
    1:37:void <init>(react.surge.PluginAmp) -> <init>
    42:44:void run() -> run
react.surge.PluginAmp$2 -> HvbQ$2:
    react.surge.PluginAmp this$0 -> pRIN
    1:47:void <init>(react.surge.PluginAmp) -> <init>
    52:53:void run() -> run
react.surge.Surge -> HmsQ:
    react.surge.PluginAmp amp -> yvVD
    react.glang.GList tickComponents -> YNfn
    react.glang.GList atickComponents -> mkBl
    react.surge.sched.TaskManager taskmgr -> yKaS
    react.surge.hotload.HotloadManager hotloadmgr -> bsTV
    java.lang.Thread mainThread -> IXiy
    20:147:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    29:30:void register(org.bukkit.event.Listener) -> Oqux
    34:35:void unregister(org.bukkit.event.Listener) -> unregister
    39:39:java.io.File folder(java.lang.String) -> ERxn
    44:44:java.io.File folder() -> iTbx
    49:51:java.io.File getPluginJarFile() -> dwyA
    56:58:java.io.File getPluginJarFileUnsafe(org.bukkit.plugin.Plugin) -> NoSy
    63:65:void startup() -> startup
    69:69:java.lang.Thread getServerThread() -> NDtn
    74:74:react.glang.GList getTickComponents() -> NUwA
    79:79:react.glang.GList getAsyncTickComponents() -> CVVk
    84:91:void registerTicked(react.surge.sched.IMasterTickComponent) -> Oqux
    95:102:void unregisterTicked(react.surge.sched.IMasterTickComponent) -> uyTg
    106:111:react.surge.PluginAmp createAmp(react.surge.control.AmpedPlugin) -> Oqux
    116:116:boolean isMainThread() -> isMainThread
    121:122:void stopAmp() -> JlOI
    126:126:boolean hasAmp() -> iDBW
    131:131:react.surge.PluginAmp getAmp() -> tTbY
    136:136:react.surge.sched.TaskManager getTaskManager() -> sjqP
    141:141:react.surge.hotload.HotloadManager getHotloadManager() -> biaG
react.surge.cluster.Cluster -> XdPl:
    react.surge.cluster.ClusterType type -> eYyV
    java.lang.Object t -> dEiA
    8:12:void <init>(react.surge.cluster.ClusterType,java.lang.Object) -> <init>
    17:17:react.surge.cluster.ClusterType getType() -> YfvX
    23:24:void set(java.lang.Object) -> set
    29:29:java.lang.Object get() -> get
react.surge.cluster.ClusterBoolean -> ctqJ:
    7:8:void <init>(java.lang.Boolean) -> <init>
react.surge.cluster.ClusterDouble -> JcYE:
    7:8:void <init>(java.lang.Double) -> <init>
react.surge.cluster.ClusterInt -> imqd:
    7:8:void <init>(java.lang.Integer) -> <init>
react.surge.cluster.ClusterLong -> iwCm:
    7:8:void <init>(java.lang.Long) -> <init>
react.surge.cluster.ClusterString -> CVRu:
    7:8:void <init>(java.lang.String) -> <init>
react.surge.cluster.ClusterStringList -> SnTF:
    9:10:void <init>(java.util.List) -> <init>
react.surge.cluster.ClusterType -> Mtqs:
    react.surge.cluster.ClusterType INT -> Fhts
    react.surge.cluster.ClusterType BOOLEAN -> sAcI
    react.surge.cluster.ClusterType STRING -> PToo
    react.surge.cluster.ClusterType STRING_LIST -> bkGM
    react.surge.cluster.ClusterType DOUBLE -> dFYF
    react.surge.cluster.ClusterType LONG -> Gcgn
    react.surge.cluster.ClusterType[] ENUM$VALUES -> rPAt
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.surge.cluster.ClusterType[] values() -> values
    1:1:react.surge.cluster.ClusterType valueOf(java.lang.String) -> valueOf
react.surge.cluster.ConfigurationDataInput -> Oafh:
    int[] $SWITCH_TABLE$surge$cluster$ClusterType -> jXjr
    12:12:void <init>() -> <init>
    17:127:void read(react.surge.cluster.IConfigurable,java.io.File) -> Oqux
    132:257:react.surge.cluster.DataCluster fillDefaults(react.surge.cluster.IConfigurable) -> Oqux
    12:12:int[] $SWITCH_TABLE$surge$cluster$ClusterType() -> PTKv
react.surge.cluster.ConfigurationDataOutput -> BuSN:
    12:12:void <init>() -> <init>
    17:143:void write(react.surge.cluster.IConfigurable,java.io.File) -> uyTg
react.surge.cluster.DataCluster -> OQFU:
    react.glang.GMap clusters -> LkGu
    17:20:void <init>() -> <init>
    24:24:react.glang.GList keys() -> YgVi
    29:33:void fromJson(react.json.JSONObject) -> gojx
    37:44:react.json.JSONObject toJson() -> cttb
    49:56:org.bukkit.configuration.file.FileConfiguration toFileConfiguration() -> klKJ
    61:100:void fromFileConfiguration(org.bukkit.configuration.file.FileConfiguration) -> Oqux
    104:104:boolean contains(java.lang.String) -> contains
    109:109:react.surge.cluster.ClusterType getType(java.lang.String) -> ckqS
    114:114:int getInt(java.lang.String) -> getInt
    119:119:java.lang.Object get(java.lang.String) -> get
    124:129:long getLong(java.lang.String) -> getLong
    134:134:java.lang.String getString(java.lang.String) -> getString
    139:139:double getDouble(java.lang.String) -> getDouble
    144:144:boolean getBoolean(java.lang.String) -> getBoolean
    150:150:java.util.List getStringList(java.lang.String) -> getStringList
    156:190:void trySet(java.lang.String,java.lang.Object) -> tBlP
    194:195:void set(java.lang.String,int) -> gojx
    199:200:void set(java.lang.String,boolean) -> jgsI
    204:205:void set(java.lang.String,double) -> jgsI
    209:210:void set(java.lang.String,long) -> jgsI
    214:215:void set(java.lang.String,java.lang.String) -> set
    219:220:void set(java.lang.String,java.util.List) -> Oqux
react.surge.cluster.ICluster -> dfsK:
    react.surge.cluster.ClusterType getType() -> YfvX
    void set(java.lang.Object) -> set
    java.lang.Object get() -> get
react.surge.cluster.IConfigurable -> AqoD:
react.surge.cluster.IDataInput -> eYUV:
    react.surge.cluster.DataCluster read(java.io.File) -> jgsI
react.surge.cluster.IDataOutput -> kJES:
    void write(react.surge.cluster.DataCluster,java.io.File) -> Oqux
react.surge.cluster.Key -> NgUT:
    java.lang.String value() -> value
react.surge.cluster.KeyPointer -> JIdh:
    int value() -> value
react.surge.cluster.KeyStore -> wUVm:
react.surge.cluster.ReflectedConfigurationException -> DHSs:
    long serialVersionUID -> serialVersionUID
    3:3:void <init>() -> <init>
react.surge.cluster.YamlDataInput -> dfpw:
    8:8:void <init>() -> <init>
    13:27:react.surge.cluster.DataCluster read(java.io.File) -> jgsI
react.surge.cluster.YamlDataOutput -> pjUM:
    6:6:void <init>() -> <init>
    13:20:void write(react.surge.cluster.DataCluster,java.io.File) -> Oqux
react.surge.collection.GSound -> Uswh:
    java.lang.String sound -> Bdxd
    org.bukkit.Sound iSound -> EndK
    java.lang.Float volume -> FOcn
    java.lang.Float pitch -> RItp
    16:21:void <init>(java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    23:28:void <init>(java.lang.String) -> <init>
    30:35:void <init>(org.bukkit.Sound,java.lang.Float,java.lang.Float) -> <init>
    37:42:void <init>(org.bukkit.Sound) -> <init>
    46:57:void play(org.bukkit.entity.Player) -> RQMi
    61:72:void play(org.bukkit.Location) -> gojx
    76:89:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> Oqux
    93:93:java.lang.String getSound() -> JAXr
    98:99:void setSound(java.lang.String) -> OqyC
    103:103:org.bukkit.Sound getiSound() -> MRri
    108:109:void setiSound(org.bukkit.Sound) -> Oqux
    113:113:java.lang.Float getVolume() -> uFdA
    118:119:void setVolume(java.lang.Float) -> Oqux
    123:123:java.lang.Float getPitch() -> rEkF
    128:129:void setPitch(java.lang.Float) -> uyTg
react.surge.control.AmpedPlugin -> xGXg:
    react.glang.GList controllers -> bkFu
    react.gconcurrent.ParallelPoolManager pp -> BLGd
    react.surge.server.CoreTickThread ctt -> RAeT
    24:50:void <init>() -> <init>
    void doScan() -> bjCG
    long getNanoSync() -> ivbv
    int getThreadCount() -> getThreadCount
    61:66:void onLoad() -> onLoad
    71:80:void onEnable() -> onEnable
    85:97:void onDisable() -> onDisable
    102:102:react.glang.GList getControllers() -> ejYh
    108:109:void registerController(react.surge.control.IController) -> Oqux
    114:125:void onTick() -> hsUI
    130:130:java.lang.String getTickName() -> TNgb
    136:136:react.gconcurrent.ParallelPoolManager getThreadPool() -> kbxm
    142:257:void destroyOldThreads() -> Wqtc
    void onControllerRegistry() -> HnUa
    void onStart(react.surge.util.Protocol) -> Oqux
    void onStop() -> NUtJ
    void onPostInit() -> EdlK
    void onPreInit() -> bOoO
react.surge.control.AmpedPlugin$1 -> xGXg$1:
    react.surge.control.AmpedPlugin this$0 -> UvCT
    1:38:void <init>(react.surge.control.AmpedPlugin,java.lang.String,int,react.gconcurrent.QueueMode) -> <init>
    43:43:long getNanoGate() -> woDi
react.surge.control.AmpedPlugin$2 -> xGXg$2:
    react.surge.control.AmpedPlugin this$0 -> UvCT
    1:155:void <init>(react.surge.control.AmpedPlugin) -> <init>
    160:250:void run() -> run
react.surge.control.Control -> JsxY:
react.surge.control.Controller -> cSNB:
    7:10:void <init>() -> <init>
react.surge.control.Disable -> JlHu:
react.surge.control.Enable -> qdgM:
react.surge.control.IController -> DiwA:
    void start() -> start
    void stop() -> stop
    void tick() -> tick
react.surge.control.Instance -> BKAD:
react.surge.control.Plugin -> xaKN:
react.surge.control.SurgePlugin -> nAjb:
    void onStart(react.surge.util.Protocol) -> Oqux
    void onStop() -> NUtJ
    void onPostInit() -> EdlK
    void onPreInit() -> bOoO
    void onControllerRegistry() -> HnUa
    void registerController(react.surge.control.IController) -> Oqux
    react.glang.GList getControllers() -> ejYh
    react.gconcurrent.ParallelPoolManager getThreadPool() -> kbxm
react.surge.hotload.HotloadManager -> eHSG:
    react.glang.GMap filemods -> tEGE
    react.glang.GMap filesizes -> GJVn
    react.glang.GMap fileacts -> Rcgs
    18:23:void <init>() -> <init>
    27:31:void track(java.io.File,java.lang.Runnable) -> Oqux
    35:38:void untrack(java.io.File) -> NoSy
    42:45:void untrackall() -> anpp
    50:86:void onTick() -> hsUI
    91:91:java.lang.String getTickName() -> TNgb
    14:14:react.glang.GMap access$0(react.surge.hotload.HotloadManager) -> Oqux
    15:15:react.glang.GMap access$1(react.surge.hotload.HotloadManager) -> uyTg
    16:16:react.glang.GMap access$2(react.surge.hotload.HotloadManager) -> jgsI
react.surge.hotload.HotloadManager$1 -> eHSG$1:
    react.surge.hotload.HotloadManager this$0 -> xasO
    1:55:void <init>(react.surge.hotload.HotloadManager) -> <init>
    60:84:void run() -> run
react.surge.nms.NMSClass -> lMFm:
    boolean init -> gGQc
    int version -> version
    java.lang.Class PacketPlayOutPlayerListHeaderFooter -> jYLK
    java.lang.Class IChatBaseComponent -> APud
    java.lang.Class ChatSerializer -> PUOn
    java.lang.Class PacketPlayOutPlayerInfo -> cKeL
    java.lang.Class PlayerInfoData -> GJTx
    java.lang.Class EnumPlayerInfoAction -> UJmE
    java.lang.Class GameProfile -> THJb
    java.lang.Class EnumGamemode -> Muxx
    java.lang.Class TileEntitySkull -> hdEl
    java.lang.Class LoadingCache -> mbTN
    6:131:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
react.surge.nms.NMSX -> erfN:
    react.surge.nms.NMSX bountifulAPI -> HgMq
    boolean useOldMethods -> AbYS
    java.lang.String nmsver -> cdyc
    java.lang.Object eTimes -> vvBs
    java.lang.Object eTitle -> GSJF
    java.lang.Object eSubtitle -> giVo
    20:459:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    26:28:java.lang.String getVersion() -> getVersion
    35:45:void setAi(org.bukkit.entity.LivingEntity,boolean) -> Oqux
    56:70:java.lang.Class getCBNMSClass(java.lang.String) -> ERyV
    75:89:java.lang.Class getCBClass(java.lang.String) -> jVtB
    96:104:java.lang.Object serializeChat(java.lang.String) -> FMlQ
    109:114:java.lang.reflect.Field setAccessible(java.lang.reflect.Field) -> uyTg
    119:121:java.lang.reflect.Method setAccessible(java.lang.reflect.Method) -> Oqux
    131:131:java.lang.String getBukkitVersion() -> getBukkitVersion
    141:141:java.lang.String nmsPackage() -> brTp
    151:151:java.lang.String craftPackage() -> SKvC
    166:178:void showPickup(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> Oqux
    184:193:void sendPacket(org.bukkit.entity.Player,java.lang.Object) -> Oqux
    197:207:java.lang.Class getNMSClass(java.lang.String) -> jgtv
    217:275:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> Oqux
    279:280:void clearTitle(org.bukkit.entity.Player) -> Lymd
    284:316:void sendTabTitle(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> uyTg
    320:375:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> Oqux
    379:405:void sendActionBar(org.bukkit.entity.Player,java.lang.String,int) -> Oqux
    409:410:void sendActionBarToAllPlayers(java.lang.String) -> oMQp
    414:418:void sendActionBarToAllPlayers(java.lang.String,int) -> tBlP
    422:427:java.lang.String getEntityName(org.bukkit.entity.Entity) -> JYut
    434:447:int ping(org.bukkit.entity.Player) -> SSnT
react.surge.nms.NMSX$1 -> erfN$1:
    org.bukkit.entity.Player val$player -> CEoi
    1:382:void <init>(org.bukkit.entity.Player) -> <init>
    387:388:void run() -> run
react.surge.nms.NMSX$2 -> erfN$2:
    org.bukkit.entity.Player val$player -> CEoi
    java.lang.String val$message -> hciK
    1:395:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    401:402:void run() -> run
react.surge.nms.PacketUtil -> SKoR:
    6:6:void <init>() -> <init>
    20:45:react.surge.nms.PacketUtil$V getVersion() -> vIik
    50:64:void sendTitle(org.bukkit.entity.Player,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String) -> Oqux
    68:82:void clearTitle(org.bukkit.entity.Player) -> Lymd
    86:100:void sendActionBar(org.bukkit.entity.Player,java.lang.String) -> Oqux
react.surge.nms.PacketUtil$V -> SKoR$Oqux:
    react.surge.nms.PacketUtil$V R17 -> qncF
    react.surge.nms.PacketUtil$V R18 -> klqT
    react.surge.nms.PacketUtil$V R19 -> kJmt
    react.surge.nms.PacketUtil$V R111 -> opmO
    react.surge.nms.PacketUtil$V R110 -> gFrj
    react.surge.nms.PacketUtil$V R112 -> eQmv
    react.surge.nms.PacketUtil$V[] ENUM$VALUES -> huKH
    8:15:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    1:1:react.surge.nms.PacketUtil$V[] values() -> values
    1:1:react.surge.nms.PacketUtil$V valueOf(java.lang.String) -> valueOf
react.surge.nms.Title -> yAjI:
    java.lang.String title -> title
    java.lang.String subTitle -> keBQ
    java.lang.String action -> action
    java.lang.Integer fadeIn -> VhGI
    java.lang.Integer fadeOut -> oplt
    java.lang.Integer stayTime -> TGls
    14:19:void <init>() -> <init>
    21:29:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    31:38:void <init>(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    40:46:void <init>(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer) -> <init>
    52:60:void send(org.bukkit.entity.Player) -> rVWi
    64:64:java.lang.String getTitle() -> getTitle
    69:70:void setTitle(java.lang.String) -> setTitle
    74:74:java.lang.String getSubTitle() -> bHBE
    79:80:void setSubTitle(java.lang.String) -> CDbR
    84:84:java.lang.String getAction() -> getAction
    89:90:void setAction(java.lang.String) -> setAction
    94:94:java.lang.Integer getFadeIn() -> CMgx
    99:100:void setFadeIn(java.lang.Integer) -> jgsI
    104:104:java.lang.Integer getFadeOut() -> doih
    109:110:void setFadeOut(java.lang.Integer) -> NoSy
    114:114:java.lang.Integer getStayTime() -> yKCp
    119:120:void setStayTime(java.lang.Integer) -> gojx
react.surge.nms.VersionBukkit -> fShh:
    react.surge.nms.VersionBukkit VU -> QiWD
    react.surge.nms.VersionBukkit V7 -> ynJR
    react.surge.nms.VersionBukkit V8 -> XTYB
    react.surge.nms.VersionBukkit V9 -> PLaP
    react.surge.nms.VersionBukkit V11 -> hAdL
    react.surge.nms.VersionBukkit V111 -> YNjo
    react.surge.nms.VersionBukkit V112 -> hBEP
    react.surge.nms.VersionBukkit[] ENUM$VALUES -> IYOV
    5:13:void <clinit>() -> <clinit>
    5:5:void <init>(java.lang.String,int) -> <init>
    17:22:boolean tc() -> uhjH
    27:32:boolean uc() -> RtGt
    37:67:react.surge.nms.VersionBukkit get() -> gEnW
    1:1:react.surge.nms.VersionBukkit[] values() -> values
    1:1:react.surge.nms.VersionBukkit valueOf(java.lang.String) -> valueOf
react.surge.sched.IBursterator -> uXDr:
    void burst(java.lang.Object) -> gVXr
    void setTimeLock(double) -> RQMi
    double getEstimatedTimeUse() -> Tylk
    int flush() -> hsdy
    int flush(react.gbench.Profiler) -> Oqux
    void queue(java.lang.Object) -> uOAQ
    void queue(java.util.List) -> jgsI
    void queue(java.lang.Object[]) -> Oqux
react.surge.sched.ICancellable -> UQwh:
    void cancel() -> cancel
react.surge.sched.IMasterTickComponent -> nBOX:
    void onTick() -> hsUI
    java.lang.String getTickName() -> TNgb
react.surge.sched.ITask -> pYVg:
    int getId() -> getId
    void run() -> run
    boolean isRepeating() -> oNFh
    java.lang.String getName() -> getName
    double getComputeTime() -> JlQF
    double getTotalComputeTime() -> nJbj
    double getActiveTime() -> maRh
    boolean hasCompleted() -> Vwbs
react.surge.sched.Task -> Tpwc:
    int id -> id
    java.lang.String name -> name
    boolean repeating -> qwSM
    double computeTime -> xrui
    double totalComputeTime -> oVyV
    double activeTime -> qTnw
    boolean completed -> completed
    react.gbench.Profiler profiler -> LryO
    react.gbench.Profiler activeProfiler -> Kouk
    int ticks -> EetM
    20:42:void <init>(java.lang.String) -> <init>
    44:67:void <init>(java.lang.String,int) -> <init>
    69:97:void <init>(java.lang.String,int,int) -> <init>
    101:110:void setup(java.lang.String,boolean) -> NoSy
    115:121:void cancel() -> cancel
    126:126:int getId() -> getId
    132:132:boolean isRepeating() -> oNFh
    138:138:java.lang.String getName() -> getName
    144:144:double getComputeTime() -> JlQF
    150:150:boolean hasCompleted() -> Vwbs
    156:156:double getTotalComputeTime() -> nJbj
    162:162:double getActiveTime() -> maRh
    17:17:react.gbench.Profiler access$0(react.surge.sched.Task) -> Oqux
    15:15:void access$1(react.surge.sched.Task,boolean) -> Oqux
    16:16:react.gbench.Profiler access$2(react.surge.sched.Task) -> uyTg
    14:14:void access$3(react.surge.sched.Task,double) -> Oqux
    12:12:void access$4(react.surge.sched.Task,double) -> uyTg
    14:14:double access$5(react.surge.sched.Task) -> jgsI
    13:13:void access$6(react.surge.sched.Task,double) -> jgsI
    13:13:double access$7(react.surge.sched.Task) -> NoSy
    12:12:double access$8(react.surge.sched.Task) -> gojx
react.surge.sched.Task$1 -> Tpwc$1:
    react.surge.sched.Task this$0 -> THMV
    1:25:void <init>(react.surge.sched.Task) -> <init>
    30:40:void run() -> run
react.surge.sched.Task$2 -> Tpwc$2:
    react.surge.sched.Task this$0 -> THMV
    1:49:void <init>(react.surge.sched.Task) -> <init>
    54:65:void run() -> run
react.surge.sched.Task$3 -> Tpwc$3:
    react.surge.sched.Task this$0 -> THMV
    int val$total -> DssA
    1:74:void <init>(react.surge.sched.Task,int) -> <init>
    79:95:void run() -> run
react.surge.sched.TaskLater -> sjnx:
    int id -> id
    java.lang.String name -> name
    boolean repeating -> qwSM
    double computeTime -> xrui
    double totalComputeTime -> oVyV
    double activeTime -> qTnw
    boolean completed -> completed
    react.gbench.Profiler profiler -> LryO
    react.gbench.Profiler activeProfiler -> Kouk
    int ticks -> EetM
    22:23:void <init>(java.lang.String) -> <init>
    25:48:void <init>(java.lang.String,int) -> <init>
    52:61:void setup(java.lang.String,boolean) -> NoSy
    66:72:void cancel() -> cancel
    77:77:int getId() -> getId
    83:83:boolean isRepeating() -> oNFh
    89:89:java.lang.String getName() -> getName
    95:95:double getComputeTime() -> JlQF
    101:101:boolean hasCompleted() -> Vwbs
    107:107:double getTotalComputeTime() -> nJbj
    113:113:double getActiveTime() -> maRh
    17:17:react.gbench.Profiler access$0(react.surge.sched.TaskLater) -> Oqux
    12:12:void access$1(react.surge.sched.TaskLater,double) -> Oqux
    13:13:double access$2(react.surge.sched.TaskLater) -> uyTg
    12:12:double access$3(react.surge.sched.TaskLater) -> jgsI
    13:13:void access$4(react.surge.sched.TaskLater,double) -> uyTg
    16:16:react.gbench.Profiler access$5(react.surge.sched.TaskLater) -> NoSy
    14:14:double access$6(react.surge.sched.TaskLater) -> gojx
    14:14:void access$7(react.surge.sched.TaskLater,double) -> jgsI
react.surge.sched.TaskLater$1 -> sjnx$1:
    react.surge.sched.TaskLater this$0 -> TGkp
    1:30:void <init>(react.surge.sched.TaskLater) -> <init>
    35:46:void run() -> run
react.surge.sched.TaskManager -> eriV:
    react.glang.GList tasks -> uaFW
    react.glang.GMap taskProfiles -> kubE
    11:15:void <init>() -> <init>
    19:20:void add(react.surge.sched.ITask) -> Oqux
    25:35:void onTick() -> hsUI
    39:40:void putFinishingTask(react.surge.sched.ITask) -> uyTg
    44:53:void putTask(react.surge.sched.ITask) -> jgsI
    58:58:java.lang.String getTickName() -> TNgb
    63:63:react.glang.GList getTasks() -> cuXY
    68:68:react.glang.GMap getTaskProfiles() -> VgBf
react.surge.sched.TaskProfile -> HwGm:
    double activeTime -> qTnw
    double computeTickTime -> qwWF
    double computeTime -> xrui
    9:14:void <init>() -> <init>
    18:18:double getActiveTime() -> maRh
    23:24:void setActiveTime(double) -> Lymd
    28:28:double getComputeTickTime() -> NVYk
    33:34:void setComputeTickTime(double) -> SSnT
    38:38:double getComputeTime() -> JlQF
    43:44:void setComputeTime(double) -> rVWi
react.surge.server.AsyncTick -> wMHi:
react.surge.server.CPS -> eiva:
    react.glang.GMap keys -> lyHn
    23:23:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    27:41:react.glang.GList identify(java.lang.String) -> yJNT
    46:99:void scan() -> jXHj
    103:133:java.lang.String readResource(java.io.File,java.lang.String) -> jgsI
react.surge.server.CoreTickThread -> RcAV:
    boolean r -> r
    9:14:void <init>() -> <init>
    19:63:void run() -> run
react.surge.server.MemoryMonitor -> KoNL:
    long memoryFree -> IGoQ
    long memoryUsed -> Okcn
    long memoryMax -> NhaM
    long lastMemoryUsed -> kKQc
    long memoryUsedAfterGC -> dNlo
    long allocated -> sJXQ
    long collected -> Rtlx
    long collections -> giXr
    long sms -> fney
    long memoryAllocatedPerTick -> ynMM
    long memoryCollectedPerTick -> vKPa
    long memoryFullyAllocatedPerTick -> iwnc
    long mah -> hJWy
    long mahs -> gGVP
    22:39:void <init>() -> <init>
    void onAllocationSet() -> STeq
    46:98:void run() -> run
    102:102:long getMemoryFree() -> AGcQ
    107:107:long getMemoryUsed() -> getMemoryUsed
    112:112:long getMemoryMax() -> pbKX
    117:117:long getLastMemoryUsed() -> KfaU
    122:122:long getMemoryUsedAfterGC() -> Qgqf
    127:127:long getAllocated() -> getAllocated
    132:132:long getCollected() -> INyE
    137:137:long getCollections() -> qdkx
    142:142:long getSms() -> inVu
    147:147:long getMemoryAllocatedPerTick() -> GADA
    152:152:long getMemoryCollectedPerTick() -> kkku
    157:157:long getMemoryFullyAllocatedPerTick() -> Cojx
    162:162:long getMah() -> FpdT
    167:167:long getMahs() -> QEoU
react.surge.server.SuperSampler -> OsIh:
    react.gmath.Average ticksPerSecondL -> qvtr
    react.gmath.Average tickTimeL -> htlG
    react.gmath.Average mahL -> FOgu
    double ticksPerSecond -> pIKn
    double ticksPerSecondRaw -> lhFr
    double tickTime -> TrdC
    double tickTimeRaw -> GdMm
    boolean running -> running
    boolean frozen -> MwAR
    double tickUtilizationRaw -> ebqC
    double tickUtilization -> aEbm
    double leftoverTickTime -> foFR
    long memoryUse -> QOej
    long memoryAllocated -> VFEC
    long memoryCollected -> Iipt
    long mahs -> gGVP
    int totalChunks -> dNlJ
    int totalEntities -> tDiK
    int totalDrops -> OAOl
    int totalTiles -> Wawt
    int totalLiving -> dONB
    int chunksLoaded -> IXpR
    int chunksUnloaded -> vdaU
    react.surge.server.WorldMonitor worldMonitor -> qnch
    react.surge.server.TPSMonitor tpsMonitor -> qoEI
    react.surge.server.MemoryMonitor memoryMonitor -> WIGe
    java.lang.StackTraceElement[] lockStack -> GclJ
    react.glang.GMap spikes -> pIJL
    36:122:void <init>() -> <init>
    126:131:void start() -> start
    135:140:void stop() -> stop
    145:149:void onTick() -> hsUI
    154:154:java.lang.String getTickName() -> TNgb
    159:159:react.gmath.Average getTicksPerSecondL() -> SKxG
    164:164:double getTicksPerSecond() -> myvr
    169:169:double getTicksPerSecondRaw() -> MljP
    174:174:boolean isRunning() -> isRunning
    179:179:react.surge.server.TPSMonitor getTpsMonitor() -> McyF
    184:184:react.gmath.Average getTickTimeL() -> CMis
    189:189:double getTickTime() -> xrVD
    194:194:double getTickTimeRaw() -> GtJn
    199:199:double getTickUtilizationRaw() -> ryTo
    204:204:double getTickUtilization() -> cBVK
    209:209:double getLeftoverTickTime() -> dEYM
    214:214:react.surge.server.MemoryMonitor getMemoryMonitor() -> oDwP
    219:219:long getMemoryUse() -> feQd
    224:224:long getMemoryAllocated() -> gyUr
    229:229:long getMemoryCollected() -> nRtc
    234:234:react.gmath.Average getMahL() -> yRtT
    239:239:long getMahs() -> QEoU
    244:244:int getTotalChunks() -> fSml
    249:249:int getTotalEntities() -> nJdX
    254:254:int getTotalDrops() -> jhka
    259:259:int getTotalTiles() -> uOXn
    264:264:int getTotalLiving() -> EusN
    269:269:react.surge.server.WorldMonitor getWorldMonitor() -> jGIg
    274:274:int getChunksLoaded() -> Oamd
    279:279:int getChunksUnloaded() -> kJLi
    284:285:void setTicksPerSecondL(react.gmath.Average) -> Oqux
    289:290:void setTickTimeL(react.gmath.Average) -> uyTg
    294:295:void setMahL(react.gmath.Average) -> jgsI
    299:300:void setTicksPerSecond(double) -> OXdf
    304:305:void setTicksPerSecondRaw(double) -> ivPx
    309:310:void setTickTime(double) -> eYBv
    314:315:void setTickTimeRaw(double) -> bWhw
    319:320:void setRunning(boolean) -> UADm
    324:325:void setTickUtilizationRaw(double) -> tSmJ
    329:330:void setTickUtilization(double) -> EKGK
    334:335:void setLeftoverTickTime(double) -> INbK
    339:340:void setMemoryUse(long) -> RQMi
    344:345:void setMemoryAllocated(long) -> Lymd
    349:350:void setMemoryCollected(long) -> SSnT
    354:355:void setMahs(long) -> rVWi
    359:360:void setTotalChunks(int) -> ERyV
    364:365:void setTotalEntities(int) -> jVtB
    369:370:void setTotalDrops(int) -> FMlQ
    374:375:void setTotalTiles(int) -> jgtv
    379:380:void setTotalLiving(int) -> oMQp
    384:385:void setChunksLoaded(int) -> CDbR
    389:390:void setChunksUnloaded(int) -> yJNT
    394:395:void setWorldMonitor(react.surge.server.WorldMonitor) -> Oqux
    399:400:void setTpsMonitor(react.surge.server.TPSMonitor) -> Oqux
    404:405:void setMemoryMonitor(react.surge.server.MemoryMonitor) -> Oqux
    409:409:boolean isFrozen() -> isFrozen
    414:414:java.lang.StackTraceElement[] getLockStack() -> tLUd
    419:419:react.glang.GMap getSpikes() -> Nfji
    31:31:void access$0(react.surge.server.SuperSampler,int) -> Oqux
    33:33:void access$1(react.surge.server.SuperSampler,int) -> uyTg
    34:34:void access$2(react.surge.server.SuperSampler,int) -> jgsI
    32:32:void access$3(react.surge.server.SuperSampler,int) -> NoSy
    35:35:void access$4(react.surge.server.SuperSampler,int) -> gojx
    36:36:void access$5(react.surge.server.SuperSampler,int) -> tBlP
    37:37:void access$6(react.surge.server.SuperSampler,int) -> RPkn
    19:19:void access$7(react.surge.server.SuperSampler,double) -> Oqux
    21:21:void access$8(react.surge.server.SuperSampler,double) -> uyTg
    15:15:react.gmath.Average access$9(react.surge.server.SuperSampler) -> Oqux
    19:19:double access$10(react.surge.server.SuperSampler) -> uyTg
    16:16:react.gmath.Average access$11(react.surge.server.SuperSampler) -> jgsI
    21:21:double access$12(react.surge.server.SuperSampler) -> NoSy
    18:18:void access$13(react.surge.server.SuperSampler,double) -> jgsI
    20:20:void access$14(react.surge.server.SuperSampler,double) -> NoSy
    24:24:void access$15(react.surge.server.SuperSampler,double) -> gojx
    20:20:double access$16(react.surge.server.SuperSampler) -> gojx
    25:25:void access$17(react.surge.server.SuperSampler,double) -> tBlP
    25:25:double access$18(react.surge.server.SuperSampler) -> tBlP
    26:26:void access$19(react.surge.server.SuperSampler,double) -> RPkn
    23:23:void access$20(react.surge.server.SuperSampler,boolean) -> Oqux
    42:42:react.glang.GMap access$21(react.surge.server.SuperSampler) -> RPkn
    27:27:void access$22(react.surge.server.SuperSampler,long) -> Oqux
    28:28:void access$23(react.surge.server.SuperSampler,long) -> uyTg
    29:29:void access$24(react.surge.server.SuperSampler,long) -> jgsI
    17:17:react.gmath.Average access$25(react.surge.server.SuperSampler) -> KUIi
    30:30:void access$26(react.surge.server.SuperSampler,long) -> NoSy
react.surge.server.SuperSampler$1 -> OsIh$1:
    react.surge.server.SuperSampler this$0 -> suKV
    1:71:void <init>(react.surge.server.SuperSampler) -> <init>
    76:83:void updated(int,int,int,int,int,int,int) -> Oqux
react.surge.server.SuperSampler$2 -> OsIh$2:
    react.surge.server.SuperSampler this$0 -> suKV
    1:86:void <init>(react.surge.server.SuperSampler) -> <init>
    91:101:void onTicked() -> GRFn
    106:107:void onSpike() -> KweI
react.surge.server.SuperSampler$3 -> OsIh$3:
    react.surge.server.SuperSampler this$0 -> suKV
    1:110:void <init>(react.surge.server.SuperSampler) -> <init>
    115:120:void onAllocationSet() -> STeq
react.surge.server.TPSMonitor -> PTIq:
    double tickTimeMS -> EoKA
    double rawTicksPerSecond -> NOQR
    react.gbench.Profiler tickProfiler -> vvGW
    react.gbench.Profiler tickTimeProfiler -> lMvN
    boolean ticked -> IXsM
    java.lang.Thread$State lastState -> gaKL
    double actualTickTimeMS -> YydJ
    double ltt -> Fqlm
    long lastTick -> Jtkv
    boolean frozen -> MwAR
    java.lang.StackTraceElement[] lockedStack -> dXAM
    22:38:void <init>() -> <init>
    void onTicked() -> GRFn
    void onSpike() -> KweI
    47:121:void run() -> run
    125:153:void processState(java.lang.Thread$State) -> Oqux
    157:157:double getTickTimeMS() -> KVCH
    162:162:double getRawTicksPerSecond() -> kIjq
    167:167:react.gbench.Profiler getTickProfiler() -> RITo
    172:172:boolean isTicked() -> wLlw
    177:178:void markTick() -> pPil
    182:182:react.gbench.Profiler getTickTimeProfiler() -> maTK
    187:187:java.lang.Thread$State getLastState() -> HCge
    192:192:double getActualTickTimeMS() -> ylet
    197:197:double getLtt() -> Jtav
    202:202:long getLastTick() -> FMom
    207:207:boolean isFrozen() -> isFrozen
    212:212:java.lang.StackTraceElement[] getLockedStack() -> QEpu
react.surge.server.WorldMonitor -> jWcn:
    boolean chunksChanged -> IXsP
    boolean dropChanged -> qngd
    boolean tileChanged -> nnOV
    boolean livingChanged -> Uuhd
    boolean totalChanged -> MnRC
    boolean updated -> Yhbp
    int totalChunks -> dNlJ
    int totalDrops -> OAOl
    int totalTiles -> Wawt
    int totalLiving -> dONB
    int totalEntities -> tDiK
    int chunksLoaded -> IXpR
    int chunksUnloaded -> vdaU
    long ms -> ObJw
    25:44:void <init>() -> <init>
    49:69:void run() -> run
    void updated(int,int,int,int,int,int,int) -> Oqux
    76:81:void on(org.bukkit.event.world.ChunkLoadEvent) -> uyTg
    86:91:void on(org.bukkit.event.world.ChunkUnloadEvent) -> Oqux
    96:97:void on(org.bukkit.event.entity.EntitySpawnEvent) -> Oqux
    102:103:void on(org.bukkit.event.entity.EntityDeathEvent) -> Oqux
    108:109:void on(org.bukkit.event.player.PlayerDropItemEvent) -> Oqux
    114:115:void on(org.bukkit.event.player.PlayerPickupItemEvent) -> Oqux
    120:121:void on(org.bukkit.event.entity.EntityPickupItemEvent) -> Oqux
    126:127:void on(org.bukkit.event.block.BlockPlaceEvent) -> Oqux
    132:133:void on(org.bukkit.event.block.BlockBreakEvent) -> Oqux
    137:138:void doUpdate() -> ELAY
    142:193:void sample() -> YnrT
    197:203:void sampleTotalCount() -> dojo
    207:213:void sampleLivingCount() -> YNJK
    217:226:void sampleTileCount() -> ivlp
    230:236:void sampleDropCount() -> VUdO
    240:246:void sampleChunkCount() -> OsSQ
react.surge.text.PhantomSpinner -> QWMT:
    react.surge.text.ProgressSpinner s -> kJqx
    react.surge.text.ProgressSpinner c -> IGrL
    15:19:void <init>(react.surge.util.C,react.surge.util.C,react.surge.util.C) -> <init>
    24:24:java.lang.String toString() -> toString
react.surge.text.ProgressSpinner -> NNCk:
    java.lang.String[] chars -> elEH
    int index -> index
    react.surge.text.ProgressSpinner DEFAULT -> jHOe
    react.surge.text.ProgressSpinner NETWORK -> AYmM
    react.surge.text.ProgressSpinner CIRCLES -> wFEG
    react.surge.text.ProgressSpinner RANDOMS -> FrLj
    react.surge.text.ProgressSpinner MERGERS -> yKjL
    70:75:void <clinit>() -> <clinit>
    25:29:void <init>(java.lang.String[]) -> <init>
    36:37:void <init>() -> <init>
    45:55:java.lang.String toString() -> toString
    60:60:java.lang.String[] getChars() -> DQQP
    65:65:int getIndex() -> getIndex
react.surge.util.Anchor -> aTyI:
    int value() -> value
react.surge.util.Area -> dwtb:
    org.bukkit.Location location -> axiR
    java.lang.Double radius -> Swpv
    25:25:boolean within(org.bukkit.Location,org.bukkit.Location,double) -> Oqux
    37:41:void <init>(org.bukkit.Location,java.lang.Double) -> <init>
    45:45:react.surge.util.Cuboid toCuboid() -> ymKM
    57:61:void <init>(org.bukkit.Location,java.lang.Integer) -> <init>
    75:83:java.lang.Double distance(org.bukkit.Location) -> tBlP
    97:97:java.lang.Double slowDistance(org.bukkit.Location) -> RPkn
    109:109:boolean isWithin(org.bukkit.Location) -> KUIi
    119:119:boolean hasEntities() -> hasEntities
    131:141:org.bukkit.entity.Entity[] getNearbyEntities(org.bukkit.entity.EntityType) -> NoSy
    153:163:org.bukkit.entity.Entity[] getNearbyEntities(java.lang.Class) -> Oqux
    176:205:org.bukkit.entity.Entity[] getNearbyEntities() -> BJhq
    216:226:org.bukkit.entity.Player[] getNearbyPlayers() -> yJfk
    236:236:org.bukkit.Location getLocation() -> getLocation
    247:248:void setLocation(org.bukkit.Location) -> JYut
    257:257:java.lang.Double getRadius() -> vlQs
    268:269:void setRadius(java.lang.Double) -> jgsI
    278:283:org.bukkit.Location random() -> MKJW
react.surge.util.Axis -> lnlF:
    react.surge.util.Axis X -> OlEr
    react.surge.util.Axis Y -> Tabj
    react.surge.util.Axis Z -> uYPL
    int x -> x
    int y -> y
    int z -> z
    react.surge.util.Axis[] ENUM$VALUES -> suML
    5:9:void <clinit>() -> <clinit>
    15:20:void <init>(java.lang.String,int,int,int,int) -> <init>
    24:24:org.bukkit.util.Vector positive() -> ETSt
    29:29:org.bukkit.util.Vector negative() -> CpQW
    1:1:react.surge.util.Axis[] values() -> values
    1:1:react.surge.util.Axis valueOf(java.lang.String) -> valueOf
react.surge.util.BlastResistance -> HnUa:
    react.surge.util.BlastResistance BARRIER -> WPxo
    react.surge.util.BlastResistance BEDROCK -> GdNi
    react.surge.util.BlastResistance COMMAND -> tDjh
    react.surge.util.BlastResistance ENDER_PORTAL -> TYSH
    react.surge.util.BlastResistance ENDER_PORTAL_FRAME -> rGYX
    react.surge.util.BlastResistance ANVIL -> DIfC
    react.surge.util.BlastResistance ENCHANTMENT_TABLE -> jPbo
    react.surge.util.BlastResistance OBSIDIAN -> wFGh
    react.surge.util.BlastResistance ENDER_CHEST -> aWIw
    react.surge.util.BlastResistance WATER -> oqUQ
    react.surge.util.BlastResistance LAVA -> OtYb
    react.surge.util.BlastResistance STATIONARY_WATER -> jHRp
    react.surge.util.BlastResistance DRAGON_EGG -> Mmrh
    react.surge.util.BlastResistance ENDER_STONE -> Ypty
    react.surge.util.BlastResistance COAL_BLOCK -> tpCU
    react.surge.util.BlastResistance DIAMOND_BLOCK -> tgQk
    react.surge.util.BlastResistance EMERALD_BLOCK -> AYlv
    react.surge.util.BlastResistance GOLD_BLOCK -> eASi
    react.surge.util.BlastResistance IRON_BLOCK -> YheM
    react.surge.util.BlastResistance REDSTONE_BLOCK -> ipDK
    react.surge.util.BlastResistance BRICK -> ETxJ
    react.surge.util.BlastResistance BRICK_STAIRS -> MeaP
    react.surge.util.BlastResistance HARD_CLAY -> VFHd
    react.surge.util.BlastResistance STONE -> oXBP
    react.surge.util.BlastResistance SMOOTH_BRICK -> dNpO
    react.surge.util.BlastResistance SMOOTH_STAIRS -> UKVN
    react.surge.util.BlastResistance DOUBLE_STONE_SLAB2 -> usFD
    react.surge.util.BlastResistance STONE_SLAB2 -> ynPN
    react.surge.util.BlastResistance IRON_DOOR -> aWIY
    react.surge.util.BlastResistance IRON_DOOR_BLOCK -> vBbp
    react.surge.util.BlastResistance IRON_TRAPDOOR -> RuQW
    react.surge.util.BlastResistance MOB_SPAWNER -> RRlt
    react.surge.util.BlastResistance WEB -> lEgK
    react.surge.util.BlastResistance DISPENSER -> RRmV
    react.surge.util.BlastResistance DROPPER -> WYlc
    react.surge.util.BlastResistance FURNACE -> pRRv
    react.surge.util.BlastResistance BURNING_FURNACE -> IPdN
    react.surge.util.BlastResistance BEACON -> fLey
    react.surge.util.BlastResistance COAL_ORE -> BmsM
    react.surge.util.BlastResistance COCOA -> JujW
    react.surge.util.BlastResistance DIAMOND_ORE -> mjlW
    react.surge.util.BlastResistance EMERALD_ORE -> xHiE
    react.surge.util.BlastResistance FENCE -> SEOw
    react.surge.util.BlastResistance FENCE_GATE -> KFIl
    react.surge.util.BlastResistance ACACIA_FENCE_GATE -> TXvX
    react.surge.util.BlastResistance BIRCH_FENCE_GATE -> mtAk
    react.surge.util.BlastResistance DARK_OAK_FENCE_GATE -> wFJN
    react.surge.util.BlastResistance SPRUCE_FENCE_GATE -> yeas
    react.surge.util.BlastResistance JUNGLE_FENCE_GATE -> XKpl
    react.surge.util.BlastResistance ACACIA_FENCE -> vJvR
    react.surge.util.BlastResistance BIRCH_FENCE -> ubFj
    react.surge.util.BlastResistance DARK_OAK_FENCE -> cvcv
    react.surge.util.BlastResistance SPRUCE_FENCE -> hAnM
    react.surge.util.BlastResistance JUNGLE_FENCE -> GSRO
    react.surge.util.BlastResistance ACACIA_WOOD_STAIRS -> DIgn
    react.surge.util.BlastResistance BIRCH_WOOD_STAIRS -> YOTw
    react.surge.util.BlastResistance DARK_OAK_WOOD_STAIRS -> wxmQ
    react.surge.util.BlastResistance SPRUCE_WOOD_STAIRS -> eAUv
    react.surge.util.BlastResistance JUNGLE_WOOD_STAIRS -> mkOw
    react.surge.util.BlastResistance QUARTZ_STAIRS -> ipEb
    react.surge.util.BlastResistance COBBLESTONE_STAIRS -> BKpl
    react.surge.util.BlastResistance SANDSTONE_STAIRS -> whMG
    react.surge.util.BlastResistance NETHER_BRICK_STAIRS -> cTbB
    react.surge.util.BlastResistance WOOD_STAIRS -> jYTu
    react.surge.util.BlastResistance RED_SANDSTONE_STAIRS -> KVkb
    react.surge.util.BlastResistance ACACIA_DOOR -> UJvd
    react.surge.util.BlastResistance BIRCH_DOOR -> JvLe
    react.surge.util.BlastResistance DARK_OAK_DOOR -> LHlt
    react.surge.util.BlastResistance SPRUCE_DOOR -> ECxb
    react.surge.util.BlastResistance JUNGLE_DOOR -> ahML
    react.surge.util.BlastResistance GOLD_ORE -> oFbC
    react.surge.util.BlastResistance HOPPER -> oFai
    react.surge.util.BlastResistance IRON_ORE -> AcBs
    react.surge.util.BlastResistance LAPIS_BLOCK -> dNrJ
    react.surge.util.BlastResistance LAPIS_ORE -> oyfU
    react.surge.util.BlastResistance QUARTZ_ORE -> ubFQ
    react.surge.util.BlastResistance REDSTONE_ORE -> vBeQ
    react.surge.util.BlastResistance TRAP_DOOR -> ayOS
    react.surge.util.BlastResistance WOOD -> jsGb
    react.surge.util.BlastResistance CHEST -> Uukh
    react.surge.util.BlastResistance TRAPPED_CHEST -> UCHL
    react.surge.util.BlastResistance WORKBENCH -> NqXR
    react.surge.util.BlastResistance CAULDRON -> kSgI
    react.surge.util.BlastResistance LOG -> XfCj
    react.surge.util.BlastResistance LOG_2 -> RmCa
    react.surge.util.BlastResistance BOOKSHELF -> JTLc
    react.surge.util.BlastResistance BANNER -> FjCd
    react.surge.util.BlastResistance STANDING_BANNER -> uXvf
    react.surge.util.BlastResistance WALL_BANNER -> XUEV
    react.surge.util.BlastResistance JACK_O_LANTERN -> dpwp
    react.surge.util.BlastResistance MELON_BLOCK -> cLRj
    react.surge.util.BlastResistance SKULL -> IXxy
    react.surge.util.BlastResistance PUMPKIN -> vTIp
    react.surge.util.BlastResistance SIGN -> GdVK
    react.surge.util.BlastResistance SIGN_POST -> DAYA
    react.surge.util.BlastResistance WALL_SIGN -> OJJn
    react.surge.util.BlastResistance QUARTZ_BLOCK -> elLY
    react.surge.util.BlastResistance NOTE_BLOCK -> EwbM
    react.surge.util.BlastResistance RED_SANDSTONE -> Kgnt
    react.surge.util.BlastResistance SANDSTONE -> whNP
    react.surge.util.BlastResistance WOOL -> LjrV
    react.surge.util.BlastResistance MONSTER_EGG -> oGEH
    react.surge.util.BlastResistance RAILS -> jbIJ
    react.surge.util.BlastResistance ACTIVATOR_RAIL -> XedX
    react.surge.util.BlastResistance DETECTOR_RAIL -> jHUu
    react.surge.util.BlastResistance POWERED_RAIL -> htrf
    react.surge.util.BlastResistance CLAY -> WYpi
    react.surge.util.BlastResistance DIRT -> qLhn
    react.surge.util.BlastResistance GRASS -> jYWU
    react.surge.util.BlastResistance GRAVEL -> yUAj
    react.surge.util.BlastResistance SPONGE -> oXFI
    react.surge.util.BlastResistance BREWING_STAND -> sRsH
    react.surge.util.BlastResistance STONE_BUTTON -> ubKR
    react.surge.util.BlastResistance WOOD_BUTTON -> VVoy
    react.surge.util.BlastResistance CAKE_BLOCK -> uXxj
    react.surge.util.BlastResistance ICE -> FHCE
    react.surge.util.BlastResistance PACKED_ICE -> FPSM
    react.surge.util.BlastResistance LEVER -> EnrP
    react.surge.util.BlastResistance MYCEL -> kCLM
    react.surge.util.BlastResistance PISTON_BASE -> HNIP
    react.surge.util.BlastResistance PISTON_EXTENSION -> bIQj
    react.surge.util.BlastResistance PISTON_MOVING_PIECE -> XUFm
    react.surge.util.BlastResistance PISTON_STICKY_BASE -> UTNX
    react.surge.util.BlastResistance GOLD_PLATE -> Takq
    react.surge.util.BlastResistance IRON_PLATE -> LbfB
    react.surge.util.BlastResistance STONE_PLATE -> iVWQ
    react.surge.util.BlastResistance WOOD_PLATE -> YiLO
    react.surge.util.BlastResistance SAND -> sBQn
    react.surge.util.BlastResistance SOUL_SAND -> gPQV
    react.surge.util.BlastResistance CACTUS -> AjuL
    react.surge.util.BlastResistance LADDER -> JSle
    react.surge.util.BlastResistance NETHERRACK -> oyjT
    react.surge.util.BlastResistance GLASS -> xHnr
    react.surge.util.BlastResistance THIN_GLASS -> RmFm
    react.surge.util.BlastResistance STAINED_GLASS -> yedu
    react.surge.util.BlastResistance STAINED_GLASS_PANE -> qnoO
    react.surge.util.BlastResistance GLOWSTONE -> GuXS
    react.surge.util.BlastResistance REDSTONE_LAMP_OFF -> iVVf
    react.surge.util.BlastResistance REDSTONE_LAMP_ON -> cnWN
    react.surge.util.BlastResistance SEA_LANTERN -> dOWk
    react.surge.util.BlastResistance BED_BLOCK -> qLkV
    react.surge.util.BlastResistance DAYLIGHT_DETECTOR -> XDES
    react.surge.util.BlastResistance DAYLIGHT_DETECTOR_INVERTED -> iogh
    react.surge.util.BlastResistance HUGE_MUSHROOM_1 -> LABb
    react.surge.util.BlastResistance HUGE_MUSHROOM_2 -> xscH
    react.surge.util.BlastResistance LEAVES -> BKuq
    react.surge.util.BlastResistance LEAVES_2 -> JSnC
    react.surge.util.BlastResistance SNOW -> ayRm
    int br -> kCNI
    react.surge.util.BlastResistance[] ENUM$VALUES -> IbNv
    10:159:void <clinit>() -> <clinit>
    163:166:void <init>(java.lang.String,int,int) -> <init>
    170:170:int getBlastResistance() -> AOuq
    175:190:int get(org.bukkit.Material) -> Oqux
    1:1:react.surge.util.BlastResistance[] values() -> values
    1:1:react.surge.util.BlastResistance valueOf(java.lang.String) -> valueOf
react.surge.util.Blocks -> ivbv:
    11:11:void <init>() -> <init>
    22:22:org.bukkit.Location getCenter(org.bukkit.block.Block) -> tBlP
react.surge.util.C -> pbFT:
    react.surge.util.C BLACK -> XThY
    react.surge.util.C DARK_BLUE -> GSXS
    react.surge.util.C DARK_GREEN -> JLAD
    react.surge.util.C DARK_AQUA -> PMRC
    react.surge.util.C DARK_RED -> QrXA
    react.surge.util.C DARK_PURPLE -> jQMC
    react.surge.util.C GOLD -> ipKd
    react.surge.util.C GRAY -> LAEa
    react.surge.util.C DARK_GRAY -> mjuY
    react.surge.util.C BLUE -> JSpX
    react.surge.util.C GREEN -> QjHB
    react.surge.util.C AQUA -> TQNA
    react.surge.util.C RED -> IbOo
    react.surge.util.C LIGHT_PURPLE -> VWTG
    react.surge.util.C YELLOW -> WITx
    react.surge.util.C WHITE -> aqEg
    react.surge.util.C MAGIC -> rXbf
    react.surge.util.C BOLD -> Lsge
    react.surge.util.C STRIKETHROUGH -> ExEU
    react.surge.util.C UNDERLINE -> urla
    react.surge.util.C ITALIC -> rYBx
    react.surge.util.C RESET -> qxCX
    char COLOR_CHAR -> COLOR_CHAR
    java.util.regex.Pattern STRIP_COLOR_PATTERN -> STRIP_COLOR_PATTERN
    int intCode -> FPTU
    char code -> QYEJ
    boolean isFormat -> tNHG
    java.lang.String toString -> MUHi
    java.util.Map BY_ID -> sSTl
    java.util.Map BY_CHAR -> KxuU
    java.util.Map dyeChatMap -> JBma
    java.util.Map chatHexMap -> FGbq
    java.util.Map dyeHexMap -> eIke
    int[] $SWITCH_TABLE$surge$util$C -> Wbeu
    react.surge.util.C[] ENUM$VALUES -> slem
    19:727:void <clinit>() -> <clinit>
    334:335:void <init>(java.lang.String,int,char,int) -> <init>
    337:343:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    347:347:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
    357:357:char getChar() -> getChar
    363:363:java.lang.String toString() -> toString
    373:373:org.bukkit.DyeColor dye() -> skYB
    378:378:java.lang.String hex() -> GIYK
    388:388:boolean isFormat() -> isFormat
    398:398:boolean isColor() -> isColor
    413:418:react.surge.util.C getByChar(char) -> KUIi
    434:442:react.surge.util.C getByChar(java.lang.String) -> lCgS
    455:460:java.lang.String stripColor(java.lang.String) -> stripColor
    472:477:react.surge.util.C dyeToChat(org.bukkit.DyeColor) -> uyTg
    482:490:org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) -> Oqux
    496:501:java.lang.String chatToHex(org.bukkit.ChatColor) -> uyTg
    506:511:java.lang.String dyeToHex(org.bukkit.DyeColor) -> jgsI
    516:537:org.bukkit.Color hexToColor(java.lang.String) -> Hutw
    542:555:org.bukkit.Color rgbToColor(java.lang.String) -> UAFm
    560:578:java.lang.String generateColorTable() -> hAFR
    588:588:org.bukkit.ChatColor chatColor() -> mPUV
    605:614:java.lang.String translateAlternateColorCodes(char,java.lang.String) -> translateAlternateColorCodes
    619:627:react.surge.util.C fromItemMeta(byte) -> RPkn
    632:679:byte getItemMeta() -> Wihf
    692:717:java.lang.String getLastColors(java.lang.String) -> getLastColors
    1:1:react.surge.util.C[] values() -> values
    1:1:react.surge.util.C valueOf(java.lang.String) -> valueOf
    332:332:void <init>(java.lang.String,int,char,int,react.surge.util.C) -> <init>
    337:337:void <init>(java.lang.String,int,char,int,boolean,react.surge.util.C) -> <init>
    17:17:int[] $SWITCH_TABLE$surge$util$C() -> LOvr
react.surge.util.C$1 -> pbFT$1:
    1:23:void <init>(java.lang.String,int,char,int) -> <init>
    27:27:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$10 -> pbFT$2:
    1:122:void <init>(java.lang.String,int,char,int) -> <init>
    126:126:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$11 -> pbFT$3:
    1:133:void <init>(java.lang.String,int,char,int) -> <init>
    137:137:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$12 -> pbFT$4:
    1:144:void <init>(java.lang.String,int,char,int) -> <init>
    148:148:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$13 -> pbFT$5:
    1:155:void <init>(java.lang.String,int,char,int) -> <init>
    159:159:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$14 -> pbFT$6:
    1:166:void <init>(java.lang.String,int,char,int) -> <init>
    170:170:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$15 -> pbFT$7:
    1:177:void <init>(java.lang.String,int,char,int) -> <init>
    181:181:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$16 -> pbFT$8:
    1:188:void <init>(java.lang.String,int,char,int) -> <init>
    192:192:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$17 -> pbFT$9:
    1:199:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    203:203:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$18 -> pbFT$10:
    1:210:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    214:214:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$19 -> pbFT$11:
    1:221:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    225:225:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$2 -> pbFT$12:
    1:34:void <init>(java.lang.String,int,char,int) -> <init>
    38:38:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$20 -> pbFT$13:
    1:232:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    236:236:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$21 -> pbFT$14:
    1:243:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    247:247:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$22 -> pbFT$15:
    1:255:void <init>(java.lang.String,int,char,int) -> <init>
    259:259:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$3 -> pbFT$16:
    1:45:void <init>(java.lang.String,int,char,int) -> <init>
    49:49:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$4 -> pbFT$17:
    1:56:void <init>(java.lang.String,int,char,int) -> <init>
    60:60:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$5 -> pbFT$18:
    1:67:void <init>(java.lang.String,int,char,int) -> <init>
    71:71:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$6 -> pbFT$19:
    1:78:void <init>(java.lang.String,int,char,int) -> <init>
    82:82:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$7 -> pbFT$20:
    1:89:void <init>(java.lang.String,int,char,int) -> <init>
    93:93:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$8 -> pbFT$21:
    1:100:void <init>(java.lang.String,int,char,int) -> <init>
    104:104:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.C$9 -> pbFT$22:
    1:111:void <init>(java.lang.String,int,char,int) -> <init>
    115:115:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
react.surge.util.CDou -> Thfb:
    double number -> iNGg
    double max -> max
    8:12:void <init>(double) -> <init>
    16:18:react.surge.util.CDou set(double) -> pqtM
    23:25:react.surge.util.CDou add(double) -> qJcM
    30:32:react.surge.util.CDou sub(double) -> Plhk
    37:37:double get() -> get
    42:48:void circ() -> wLpe
react.surge.util.CMD -> NUtJ:
    java.lang.String command -> command
    org.bukkit.command.CommandSender sender -> sender
    boolean virtual -> AQfa
    25:30:void <init>(java.lang.String) -> <init>
    39:40:react.surge.util.CMD virtual() -> PutU
    51:53:void execute(org.bukkit.command.CommandSender) -> gojx
    60:77:void execute() -> execute
react.surge.util.CNum -> EdlK:
    int number -> number
    int max -> max
    8:12:void <init>(int) -> <init>
    16:18:react.surge.util.CNum set(int) -> lCgS
    23:25:react.surge.util.CNum add(int) -> Hutw
    30:32:react.surge.util.CNum sub(int) -> UAFm
    37:37:int get() -> get
    42:48:void circ() -> wLpe
    52:52:int getMax() -> getMax
    57:59:void setMax(int) -> BdBi
react.surge.util.Chunks -> bOoO:
    12:12:void <init>() -> <init>
    23:23:react.glang.GList getLoadedChunks(org.bukkit.World) -> QpMe
    33:40:react.glang.GList getLoadedChunks() -> SwNQ
    54:54:react.glang.GList getRadius(org.bukkit.Chunk,int) -> uyTg
    72:72:boolean unload(org.bukkit.Chunk,boolean,boolean) -> Oqux
    86:86:boolean unload(org.bukkit.Chunk,boolean) -> Oqux
    98:98:boolean unload(org.bukkit.Chunk) -> rUwX
    114:124:int unload(react.glang.GList,boolean,boolean) -> Oqux
    138:138:int unload(react.glang.GList,boolean) -> Oqux
    150:150:int unload(react.glang.GList) -> QpMe
    166:166:boolean isLoaded(java.lang.String,int,int) -> Oqux
    182:190:boolean isLoaded(org.bukkit.World,int,int) -> uyTg
    201:205:void load(react.glang.GList) -> UADm
react.surge.util.Cuboid -> TOXC:
    java.lang.String worldName -> iUwR
    int x1 -> PgDL
    int y1 -> dNxb
    int z1 -> bjub
    int x2 -> OJMm
    int y2 -> xsiG
    int z2 -> vBnY
    int[] $SWITCH_TABLE$surge$util$Axis -> IQOg
    int[] $SWITCH_TABLE$surge$util$Cuboid$CuboidDirection -> QYHE
    42:56:void <init>(org.bukkit.Location,org.bukkit.Location) -> <init>
    60:70:int depth(react.surge.util.Axis) -> Oqux
    83:89:void set(org.bukkit.Location,org.bukkit.Location) -> jgsI
    93:93:boolean hasPlayers() -> qure
    98:110:react.glang.GList getPlayers() -> hrsQ
    115:166:react.glang.GList getEntities() -> woSp
    177:178:void <init>(org.bukkit.Location) -> <init>
    188:189:void <init>(react.surge.util.Cuboid) -> <init>
    209:218:void <init>(org.bukkit.World,int,int,int,int,int,int) -> <init>
    238:247:void <init>(java.lang.String,int,int,int,int,int,int) -> <init>
    249:258:void <init>(java.util.Map) -> <init>
    263:271:java.util.Map serialize() -> serialize
    276:276:react.surge.util.Cuboid flatten(int) -> RkAy
    287:287:org.bukkit.Location getLowerNE() -> GAFo
    298:298:org.bukkit.Location getUpperSW() -> nRvb
    308:311:org.bukkit.Location getCenter() -> getCenter
    323:328:org.bukkit.World getWorld() -> getWorld
    338:338:int getSizeX() -> MRxT
    348:348:int getSizeY() -> UuCq
    358:358:int getSizeZ() -> Iypi
    368:368:int getLowerX() -> hkYQ
    378:378:int getLowerY() -> RQfq
    388:388:int getLowerZ() -> TFkd
    398:398:int getUpperX() -> dMic
    408:408:int getUpperY() -> HfNB
    418:418:int getUpperZ() -> KoVd
    428:438:org.bukkit.block.Block[] corners() -> BKKO
    454:469:react.surge.util.Cuboid expand(react.surge.util.Cuboid$CuboidDirection,int) -> Oqux
    484:484:react.surge.util.Cuboid shift(react.surge.util.Cuboid$CuboidDirection,int) -> uyTg
    500:514:react.surge.util.Cuboid outset(react.surge.util.Cuboid$CuboidDirection,int) -> jgsI
    530:530:react.surge.util.Cuboid inset(react.surge.util.Cuboid$CuboidDirection,int) -> NoSy
    546:546:boolean contains(int,int,int) -> gojx
    558:558:boolean contains(org.bukkit.block.Block) -> RPkn
    570:570:boolean contains(org.bukkit.Location) -> gfyw
    580:580:int volume() -> nJfK
    591:601:byte averageLightLevel() -> klPp
    612:612:react.surge.util.Cuboid contract() -> GQgq
    626:666:react.surge.util.Cuboid contract(react.surge.util.Cuboid$CuboidDirection) -> Oqux
    680:695:react.surge.util.Cuboid getFace(react.surge.util.Cuboid$CuboidDirection) -> uyTg
    708:715:boolean containsOnly(org.bukkit.Material) -> uyTg
    727:739:react.surge.util.Cuboid getBoundingCuboid(react.surge.util.Cuboid) -> Oqux
    755:755:org.bukkit.block.Block getRelativeBlock(int,int,int) -> tBlP
    775:775:org.bukkit.block.Block getRelativeBlock(org.bukkit.World,int,int,int) -> Oqux
    786:800:java.util.List getChunks() -> kJMr
    815:819:void fill(int,byte) -> Oqux
    843:843:java.util.Iterator iterator() -> iterator
    854:854:react.surge.util.Cuboid clone() -> baWS
    865:865:java.lang.String toString() -> toString
    961:970:int hashCode() -> hashCode
    976:1036:boolean equals(java.lang.Object) -> equals
    1:1:java.lang.Object clone() -> clone
    27:27:int[] $SWITCH_TABLE$surge$util$Axis() -> LPVg
    27:27:int[] $SWITCH_TABLE$surge$util$Cuboid$CuboidDirection() -> CNNG
react.surge.util.Cuboid$1 -> TOXC$1:
    react.surge.util.Cuboid this$0 -> SNKr
    1:98:void <init>(react.surge.util.Cuboid) -> <init>
    103:108:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> gfyw
    1:1:java.lang.Object onAdapt(java.lang.Object) -> RPkn
react.surge.util.Cuboid$CuboidDirection -> TOXC$Oqux:
    react.surge.util.Cuboid$CuboidDirection North -> wxug
    react.surge.util.Cuboid$CuboidDirection East -> YFkj
    react.surge.util.Cuboid$CuboidDirection South -> lgtp
    react.surge.util.Cuboid$CuboidDirection West -> HMkj
    react.surge.util.Cuboid$CuboidDirection Up -> vdqS
    react.surge.util.Cuboid$CuboidDirection Down -> uPmN
    react.surge.util.Cuboid$CuboidDirection Horizontal -> qMQp
    react.surge.util.Cuboid$CuboidDirection Vertical -> rXdx
    react.surge.util.Cuboid$CuboidDirection Both -> DuEf
    react.surge.util.Cuboid$CuboidDirection Unknown -> cwMv
    int[] $SWITCH_TABLE$surge$util$Cuboid$CuboidDirection -> QYHE
    react.surge.util.Cuboid$CuboidDirection[] ENUM$VALUES -> UTSD
    916:928:void <clinit>() -> <clinit>
    916:916:void <init>(java.lang.String,int) -> <init>
    932:953:react.surge.util.Cuboid$CuboidDirection opposite() -> yJiP
    1:1:react.surge.util.Cuboid$CuboidDirection[] values() -> values
    1:1:react.surge.util.Cuboid$CuboidDirection valueOf(java.lang.String) -> valueOf
    916:916:int[] $SWITCH_TABLE$surge$util$Cuboid$CuboidDirection() -> CNNG
react.surge.util.Cuboid$CuboidIterator -> TOXC$uyTg:
    org.bukkit.World w -> UdtD
    int baseX -> xshN
    int baseY -> PgFn
    int baseZ -> gaWH
    int x -> x
    int y -> y
    int z -> z
    int sizeX -> raUt
    int sizeY -> iDxj
    int sizeZ -> GJjC
    react.surge.util.Cuboid this$0 -> SNKr
    875:885:void <init>(react.surge.util.Cuboid,org.bukkit.World,int,int,int,int,int,int) -> <init>
    890:890:boolean hasNext() -> hasNext
    896:906:org.bukkit.block.Block next() -> next
    913:913:void remove() -> remove
    1:1:java.lang.Object next() -> next
react.surge.util.CuboidException -> mjBV:
    long serialVersionUID -> serialVersionUID
    12:13:void <init>(java.lang.String) -> <init>
react.surge.util.D -> bjCG:
    react.glang.GList buffer -> NrAB
    10:10:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    14:18:void flush() -> flush
    22:33:void log(java.lang.String,java.lang.String) -> NoSy
    37:38:void l(java.lang.Object,java.lang.String) -> uyTg
    42:43:void s(java.lang.Object,java.lang.String) -> jgsI
    47:48:void v(java.lang.Object,java.lang.String) -> NoSy
    52:53:void w(java.lang.Object,java.lang.String) -> gojx
    57:58:void f(java.lang.Object,java.lang.String) -> tBlP
    62:69:void l(java.lang.String) -> BdBi
    73:80:void s(java.lang.String) -> RkAy
    84:91:void v(java.lang.String) -> ejHY
    95:102:void w(java.lang.String) -> VwOA
    106:113:void f(java.lang.String) -> dwfE
react.surge.util.DMSRequire -> VxBL:
    react.surge.util.DMSRequirement value() -> cAxf
react.surge.util.DMSRequirement -> ObJw:
    react.surge.util.DMSRequirement SQL -> rXcq
    react.surge.util.DMSRequirement[] ENUM$VALUES -> UBoG
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.surge.util.DMSRequirement[] values() -> values
    1:1:react.surge.util.DMSRequirement valueOf(java.lang.String) -> valueOf
react.surge.util.Depend -> tmuL:
    react.surge.util.Depend VAULT -> HMkH
    react.surge.util.Depend FAWE -> rGcA
    react.surge.util.Depend WORLDEDIT -> fVAx
    react.surge.util.Depend PROTOLIB -> msgy
    react.surge.util.Depend CITIZENS -> IjaL
    java.lang.String name -> name
    react.surge.util.Depend[] ENUM$VALUES -> BUMJ
    5:11:void <clinit>() -> <clinit>
    15:18:void <init>(java.lang.String,int,java.lang.String) -> <init>
    22:22:boolean exists() -> exists
    1:1:react.surge.util.Depend[] values() -> values
    1:1:react.surge.util.Depend valueOf(java.lang.String) -> valueOf
react.surge.util.Dimension -> baPu:
    int width -> width
    int height -> height
    int depth -> depth
    24:29:void <init>(int,int,int) -> <init>
    39:44:void <init>(int,int) -> <init>
    53:68:react.surge.util.DimensionFace getPane() -> fSsR
    73:73:int getWidth() -> getWidth
    78:78:int getHeight() -> getHeight
    83:83:int getDepth() -> getDepth
react.surge.util.DimensionFace -> IXJC:
    react.surge.util.DimensionFace X -> USqI
    react.surge.util.DimensionFace Y -> kBlx
    react.surge.util.DimensionFace Z -> GJgw
    react.surge.util.DimensionFace[] ENUM$VALUES -> oNya
    8:23:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    1:1:react.surge.util.DimensionFace[] values() -> values
    1:1:react.surge.util.DimensionFace valueOf(java.lang.String) -> valueOf
react.surge.util.Direction -> YgXd:
    react.surge.util.Direction U -> jsPK
    react.surge.util.Direction D -> bHte
    react.surge.util.Direction N -> EoVg
    react.surge.util.Direction S -> vCNK
    react.surge.util.Direction E -> mHse
    react.surge.util.Direction W -> dWnf
    int x -> x
    int y -> y
    int z -> z
    react.surge.util.Cuboid$CuboidDirection f -> lVub
    int[] $SWITCH_TABLE$surge$util$Direction -> IrtO
    react.surge.util.Direction[] ENUM$VALUES -> jbRQ
    14:21:void <clinit>() -> <clinit>
    28:34:void <init>(java.lang.String,int,int,int,int,react.surge.util.Cuboid$CuboidDirection) -> <init>
    38:56:react.surge.util.Direction reverse() -> UBAx
    61:61:int x() -> mijD
    66:66:int y() -> JtgA
    71:71:int z() -> z
    76:76:react.surge.util.Cuboid$CuboidDirection f() -> eIAB
    81:81:react.glang.GList news() -> NxcG
    86:86:react.glang.GList udnews() -> nmNL
    91:101:react.surge.util.Direction facing(org.bukkit.entity.Player) -> ivPx
    115:147:react.surge.util.Direction fromByte(byte) -> KUIi
    158:176:byte byteValue() -> byteValue
    1:1:react.surge.util.Direction[] values() -> values
    1:1:react.surge.util.Direction valueOf(java.lang.String) -> valueOf
    14:14:int[] $SWITCH_TABLE$surge$util$Direction() -> Jcdx
react.surge.util.DynamicConfiguration -> iTbx:
react.surge.util.DynamicTracker -> dwyA:
react.surge.util.Embedded -> NDtn:
    react.glang.GList get() -> kRbY
    void add(java.lang.Object) -> add
react.surge.util.FU -> NUwA:
    long ONE_KB -> ONE_KB
    long ONE_MB -> ONE_MB
    long ONE_GB -> ONE_GB
    java.io.File[] EMPTY_FILE_ARRAY -> EMPTY_FILE_ARRAY
    95:95:void <clinit>() -> <clinit>
    74:75:void <init>() -> <init>
    110:123:java.lang.String byteCountToDisplaySize(long) -> byteCountToDisplaySize
    139:145:void touch(java.io.File) -> touch
    159:159:java.io.File[] convertFileCollectionToFileArray(java.util.Collection) -> convertFileCollectionToFileArray
    179:195:java.io.File toFile(java.net.URL) -> toFile
    222:239:java.io.File[] toFiles(java.net.URL[]) -> toFiles
    256:263:java.net.URL[] toURLs(java.io.File[]) -> toURLs
    290:299:void copyFileToDirectory(java.io.File,java.io.File) -> copyFileToDirectory
    324:325:void copyFile(java.io.File,java.io.File) -> copyFile
    353:385:void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    401:430:void doCopyFile(java.io.File,java.io.File,boolean) -> Oqux
    458:475:void copyDirectoryToDirectory(java.io.File,java.io.File) -> copyDirectoryToDirectory
    503:504:void copyDirectory(java.io.File,java.io.File) -> copyDirectory
    534:555:void copyDirectory(java.io.File,java.io.File,boolean) -> copyDirectory
    572:610:void doCopyDirectory(java.io.File,java.io.File,boolean) -> uyTg
    636:663:void copyURLToFile(java.net.URL,java.io.File) -> copyURLToFile
    676:687:void deleteDirectory(java.io.File) -> deleteDirectory
    699:734:void cleanDirectory(java.io.File) -> cleanDirectory
    753:776:boolean waitFor(java.io.File,int) -> waitFor
    799:807:java.lang.String readFileToString(java.io.File,java.lang.String) -> readFileToString
    823:831:byte[] readFileToByteArray(java.io.File) -> readFileToByteArray
    855:863:java.util.List readLines(java.io.File,java.lang.String) -> readLines
    886:894:void writeStringToFile(java.io.File,java.lang.String,java.lang.String) -> writeStringToFile
    909:917:void writeByteArrayToFile(java.io.File,byte[]) -> writeByteArrayToFile
    942:943:void writeLines(java.io.File,java.lang.String,java.util.Collection) -> writeLines
    970:978:void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String) -> writeLines
    1000:1015:void forceDelete(java.io.File) -> forceDelete
    1030:1037:void forceDeleteOnExit(java.io.File) -> forceDeleteOnExit
    1051:1058:void deleteDirectoryOnExit(java.io.File) -> gojx
    1072:1107:void cleanDirectoryOnExit(java.io.File) -> tBlP
    1123:1138:void forceMkdir(java.io.File) -> forceMkdir
    1152:1184:long sizeOfDirectory(java.io.File) -> sizeOfDirectory
    1207:1215:boolean isFileNewer(java.io.File,java.io.File) -> isFileNewer
    1236:1240:boolean isFileNewer(java.io.File,java.util.Date) -> isFileNewer
    1260:1268:boolean isFileNewer(java.io.File,long) -> isFileNewer
react.surge.util.Fingerprint -> CVVk:
    5:5:void <init>() -> <init>
    9:14:java.lang.String randomFingerprint(java.lang.String) -> DYIR
react.surge.util.Health -> JlOI:
    double hp -> QXiC
    19:22:void <init>(double) -> <init>
    31:31:int getFlatHearts() -> AHIP
    41:41:double getHearts() -> wMSd
    51:51:double getHalfHearts() -> pkBk
    61:61:int getFlatHalfHearts() -> QEur
react.surge.util.IO -> iDBW:
    char DIR_SEPARATOR_UNIX -> DIR_SEPARATOR_UNIX
    char DIR_SEPARATOR_WINDOWS -> DIR_SEPARATOR_WINDOWS
    char DIR_SEPARATOR -> DIR_SEPARATOR
    java.lang.String LINE_SEPARATOR_UNIX -> LINE_SEPARATOR_UNIX
    java.lang.String LINE_SEPARATOR_WINDOWS -> LINE_SEPARATOR_WINDOWS
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    97:122:void <clinit>() -> <clinit>
    129:130:void <init>() -> <init>
    146:154:void closeQuietly(java.io.Reader) -> closeQuietly
    169:177:void closeQuietly(java.io.Writer) -> closeQuietly
    192:200:void closeQuietly(java.io.InputStream) -> closeQuietly
    215:223:void closeQuietly(java.io.OutputStream) -> closeQuietly
    243:245:byte[] toByteArray(java.io.InputStream) -> toByteArray
    265:267:byte[] toByteArray(java.io.Reader) -> toByteArray
    293:295:byte[] toByteArray(java.io.Reader,java.lang.String) -> toByteArray
    315:315:byte[] toByteArray(java.lang.String) -> toByteArray
    338:340:char[] toCharArray(java.io.InputStream) -> toCharArray
    366:368:char[] toCharArray(java.io.InputStream,java.lang.String) -> toCharArray
    388:390:char[] toCharArray(java.io.Reader) -> toCharArray
    412:414:java.lang.String toString(java.io.InputStream) -> toString
    439:441:java.lang.String toString(java.io.InputStream,java.lang.String) -> toString
    460:462:java.lang.String toString(java.io.Reader) -> toString
    480:480:java.lang.String toString(byte[]) -> toString
    503:508:java.lang.String toString(byte[],java.lang.String) -> toString
    532:533:java.util.List readLines(java.io.InputStream) -> readLines
    559:565:java.util.List readLines(java.io.InputStream,java.lang.String) -> readLines
    587:595:java.util.List readLines(java.io.Reader) -> readLines
    610:611:java.io.InputStream toInputStream(java.lang.String) -> toInputStream
    632:633:java.io.InputStream toInputStream(java.lang.String,java.lang.String) -> toInputStream
    654:658:void write(byte[],java.io.OutputStream) -> write
    679:683:void write(byte[],java.io.Writer) -> write
    709:719:void write(byte[],java.io.Writer,java.lang.String) -> write
    740:744:void write(char[],java.io.Writer) -> write
    766:770:void write(char[],java.io.OutputStream) -> write
    797:807:void write(char[],java.io.OutputStream,java.lang.String) -> write
    826:830:void write(java.lang.String,java.io.Writer) -> write
    851:855:void write(java.lang.String,java.io.OutputStream) -> write
    880:890:void write(java.lang.String,java.io.OutputStream,java.lang.String) -> write
    909:913:void write(java.lang.StringBuffer,java.io.Writer) -> write
    934:938:void write(java.lang.StringBuffer,java.io.OutputStream) -> write
    963:973:void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String) -> write
    997:1014:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream) -> writeLines
    1041:1064:void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String) -> writeLines
    1084:1101:void writeLines(java.util.Collection,java.lang.String,java.io.Writer) -> writeLines
    1132:1137:int copy(java.io.InputStream,java.io.OutputStream) -> copy
    1160:1168:long copyLarge(java.io.InputStream,java.io.OutputStream) -> copyLarge
    1192:1194:void copy(java.io.InputStream,java.io.Writer) -> copy
    1222:1230:void copy(java.io.InputStream,java.io.Writer,java.lang.String) -> copy
    1260:1265:int copy(java.io.Reader,java.io.Writer) -> copy
    1288:1296:long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    1324:1328:void copy(java.io.Reader,java.io.OutputStream) -> copy
    1360:1370:void copy(java.io.Reader,java.io.OutputStream,java.lang.String) -> copy
    1394:1415:boolean contentEquals(java.io.InputStream,java.io.InputStream) -> contentEquals
    1439:1460:boolean contentEquals(java.io.Reader,java.io.Reader) -> contentEquals
react.surge.util.Items -> tTbY:
    15:15:void <init>() -> <init>
    26:26:boolean is(org.bukkit.inventory.ItemStack) -> Oqux
    40:40:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material) -> Oqux
    55:55:boolean is(org.bukkit.inventory.ItemStack,react.surge.util.MaterialBlock) -> Oqux
    71:71:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,byte) -> Oqux
    87:87:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,int) -> Oqux
    99:99:boolean hasMeta(org.bukkit.inventory.ItemStack) -> uyTg
    111:111:boolean hasName(org.bukkit.inventory.ItemStack) -> jgsI
    123:123:boolean hasLore(org.bukkit.inventory.ItemStack) -> NoSy
    137:137:boolean hasName(org.bukkit.inventory.ItemStack,java.lang.String) -> Oqux
    151:151:boolean hasLore(org.bukkit.inventory.ItemStack,java.util.List) -> Oqux
    165:165:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment) -> Oqux
    181:186:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment,int) -> Oqux
    198:203:boolean hasEnchantments(org.bukkit.inventory.ItemStack) -> gojx
    216:221:react.surge.util.MaterialBlock toMaterialBlock(org.bukkit.inventory.ItemStack) -> tBlP
    233:233:boolean isBroken(org.bukkit.inventory.ItemStack) -> RPkn
    245:245:boolean hasDurability(org.bukkit.inventory.ItemStack) -> KUIi
    257:267:double getDurabilityPercent(org.bukkit.inventory.ItemStack) -> JYut
    280:293:void setDurabilityPercent(org.bukkit.inventory.ItemStack,double) -> Oqux
    304:309:short getMaxDurability(org.bukkit.inventory.ItemStack) -> gfyw
    321:326:short getDurability(org.bukkit.inventory.ItemStack) -> OXdf
    339:345:void setDurability(org.bukkit.inventory.ItemStack,short) -> Oqux
    357:363:void setDurability(org.bukkit.inventory.ItemStack,int) -> Oqux
    375:381:void damage(org.bukkit.inventory.ItemStack,int) -> uyTg
    395:438:boolean isMergable(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack) -> Oqux
react.surge.util.MSound -> sjqP:
    react.surge.util.MSound AMBIENCE_CAVE -> JuwW
    react.surge.util.MSound AMBIENCE_RAIN -> rGfN
    react.surge.util.MSound AMBIENCE_THUNDER -> vvVR
    react.surge.util.MSound ANVIL_BREAK -> urrP
    react.surge.util.MSound ANVIL_LAND -> VFUk
    react.surge.util.MSound ANVIL_USE -> nTkH
    react.surge.util.MSound ARROW_HIT -> vdsL
    react.surge.util.MSound BURP -> Hxbe
    react.surge.util.MSound CHEST_CLOSE -> yUJx
    react.surge.util.MSound CHEST_OPEN -> drCR
    react.surge.util.MSound CLICK -> hBYB
    react.surge.util.MSound DOOR_CLOSE -> kCRB
    react.surge.util.MSound DOOR_OPEN -> foVv
    react.surge.util.MSound DRINK -> IasT
    react.surge.util.MSound EAT -> ahYC
    react.surge.util.MSound EXPLODE -> lVtw
    react.surge.util.MSound FALL_BIG -> Trqy
    react.surge.util.MSound FALL_SMALL -> dGMV
    react.surge.util.MSound FIRE -> ffdp
    react.surge.util.MSound FIRE_IGNITE -> HyAw
    react.surge.util.MSound FIZZ -> LcKW
    react.surge.util.MSound FUSE -> xQes
    react.surge.util.MSound GLASS -> BCkw
    react.surge.util.MSound HURT_FLESH -> lqHC
    react.surge.util.MSound ITEM_BREAK -> rXef
    react.surge.util.MSound ITEM_PICKUP -> OlTg
    react.surge.util.MSound LAVA -> bjyj
    react.surge.util.MSound LAVA_POP -> DuFl
    react.surge.util.MSound LEVEL_UP -> drAi
    react.surge.util.MSound MINECART_BASE -> nwNS
    react.surge.util.MSound MINECART_INSIDE -> kdre
    react.surge.util.MSound NOTE_BASS -> lgvH
    react.surge.util.MSound NOTE_PIANO -> BCnK
    react.surge.util.MSound NOTE_BASS_DRUM -> gHHq
    react.surge.util.MSound NOTE_STICKS -> YPAq
    react.surge.util.MSound NOTE_BASS_GUITAR -> msnD
    react.surge.util.MSound NOTE_SNARE_DRUM -> JnIq
    react.surge.util.MSound NOTE_PLING -> Dthi
    react.surge.util.MSound ORB_PICKUP -> KqMX
    react.surge.util.MSound PISTON_EXTEND -> LcNg
    react.surge.util.MSound PISTON_RETRACT -> THbl
    react.surge.util.MSound PORTAL -> CaCi
    react.surge.util.MSound PORTAL_TRAVEL -> ULGL
    react.surge.util.MSound PORTAL_TRIGGER -> MfQs
    react.surge.util.MSound SHOOT_ARROW -> iMlx
    react.surge.util.MSound SPLASH -> ixae
    react.surge.util.MSound SPLASH2 -> mIYN
    react.surge.util.MSound STEP_GRASS -> nemm
    react.surge.util.MSound STEP_GRAVEL -> Tjcn
    react.surge.util.MSound STEP_LADDER -> BfSH
    react.surge.util.MSound STEP_SAND -> yDJp
    react.surge.util.MSound STEP_SNOW -> AboC
    react.surge.util.MSound STEP_STONE -> VNfq
    react.surge.util.MSound STEP_WOOD -> ipRE
    react.surge.util.MSound STEP_WOOL -> Okub
    react.surge.util.MSound SWIM -> JCTn
    react.surge.util.MSound WATER -> fUfU
    react.surge.util.MSound WOOD_CLICK -> AALX
    react.surge.util.MSound BAT_DEATH -> sJiS
    react.surge.util.MSound BAT_HURT -> SWAO
    react.surge.util.MSound BAT_IDLE -> hRyt
    react.surge.util.MSound BAT_LOOP -> cwPw
    react.surge.util.MSound BAT_TAKEOFF -> nvnk
    react.surge.util.MSound BLAZE_BREATH -> RKMQ
    react.surge.util.MSound BLAZE_DEATH -> Hxcl
    react.surge.util.MSound BLAZE_HIT -> XeoW
    react.surge.util.MSound CAT_HISS -> XvqH
    react.surge.util.MSound CAT_HIT -> jIAN
    react.surge.util.MSound CAT_MEOW -> qMUC
    react.surge.util.MSound CAT_PURR -> YiUo
    react.surge.util.MSound CAT_PURREOW -> daDu
    react.surge.util.MSound CHICKEN_IDLE -> jIDU
    react.surge.util.MSound CHICKEN_HURT -> RvDE
    react.surge.util.MSound CHICKEN_EGG_POP -> GJnm
    react.surge.util.MSound CHICKEN_WALK -> iVbJ
    react.surge.util.MSound COW_IDLE -> OtjH
    react.surge.util.MSound COW_HURT -> kmia
    react.surge.util.MSound COW_WALK -> iWCR
    react.surge.util.MSound CREEPER_HISS -> THdY
    react.surge.util.MSound CREEPER_DEATH -> qVHh
    react.surge.util.MSound ENDERDRAGON_DEATH -> nnaa
    react.surge.util.MSound ENDERDRAGON_GROWL -> XesB
    react.surge.util.MSound ENDERDRAGON_HIT -> xHyj
    react.surge.util.MSound ENDERDRAGON_WINGS -> AtRB
    react.surge.util.MSound ENDERMAN_DEATH -> aEyF
    react.surge.util.MSound ENDERMAN_HIT -> OtkA
    react.surge.util.MSound ENDERMAN_IDLE -> sKNA
    react.surge.util.MSound ENDERMAN_TELEPORT -> JnKJ
    react.surge.util.MSound ENDERMAN_SCREAM -> NWsO
    react.surge.util.MSound ENDERMAN_STARE -> FHKk
    react.surge.util.MSound GHAST_SCREAM -> euHe
    react.surge.util.MSound GHAST_SCREAM2 -> KqMg
    react.surge.util.MSound GHAST_CHARGE -> HhEF
    react.surge.util.MSound GHAST_DEATH -> SgcR
    react.surge.util.MSound GHAST_FIREBALL -> pJTL
    react.surge.util.MSound GHAST_MOAN -> JCWF
    react.surge.util.MSound IRONGOLEM_DEATH -> uQRs
    react.surge.util.MSound IRONGOLEM_HIT -> jbUY
    react.surge.util.MSound IRONGOLEM_THROW -> Okwo
    react.surge.util.MSound IRONGOLEM_WALK -> jIBh
    react.surge.util.MSound MAGMACUBE_WALK -> urtY
    react.surge.util.MSound MAGMACUBE_WALK2 -> kvXs
    react.surge.util.MSound MAGMACUBE_JUMP -> AQoJ
    react.surge.util.MSound PIG_IDLE -> nTmm
    react.surge.util.MSound PIG_DEATH -> dFpg
    react.surge.util.MSound PIG_WALK -> Yqej
    react.surge.util.MSound SHEEP_IDLE -> ULHA
    react.surge.util.MSound SHEEP_SHEAR -> ethP
    react.surge.util.MSound SHEEP_WALK -> NFqt
    react.surge.util.MSound SILVERFISH_HIT -> usXn
    react.surge.util.MSound SILVERFISH_KILL -> rjPH
    react.surge.util.MSound SILVERFISH_IDLE -> TjiU
    react.surge.util.MSound SILVERFISH_WALK -> XwVf
    react.surge.util.MSound SKELETON_IDLE -> bbpX
    react.surge.util.MSound SKELETON_DEATH -> TYhC
    react.surge.util.MSound SKELETON_HURT -> HhHW
    react.surge.util.MSound SKELETON_WALK -> LQpY
    react.surge.util.MSound SLIME_ATTACK -> touR
    react.surge.util.MSound SLIME_WALK -> sJnq
    react.surge.util.MSound SLIME_WALK2 -> bbpQ
    react.surge.util.MSound SPIDER_IDLE -> orGh
    react.surge.util.MSound SPIDER_DEATH -> Taxa
    react.surge.util.MSound SPIDER_WALK -> Howc
    react.surge.util.MSound WITHER_DEATH -> ynbx
    react.surge.util.MSound WITHER_HURT -> FsCo
    react.surge.util.MSound WITHER_IDLE -> FGnk
    react.surge.util.MSound WITHER_SHOOT -> KqPK
    react.surge.util.MSound WITHER_SPAWN -> Mesb
    react.surge.util.MSound WOLF_BARK -> CGVn
    react.surge.util.MSound WOLF_DEATH -> rXkv
    react.surge.util.MSound WOLF_GROWL -> NXUl
    react.surge.util.MSound WOLF_HOWL -> iMrD
    react.surge.util.MSound WOLF_HURT -> xboC
    react.surge.util.MSound WOLF_PANT -> pkwo
    react.surge.util.MSound WOLF_SHAKE -> dhtx
    react.surge.util.MSound WOLF_WALK -> MneP
    react.surge.util.MSound WOLF_WHINE -> xspF
    react.surge.util.MSound ZOMBIE_METAL -> BDSg
    react.surge.util.MSound ZOMBIE_WOOD -> DdKU
    react.surge.util.MSound ZOMBIE_WOODBREAK -> IYhA
    react.surge.util.MSound ZOMBIE_IDLE -> HVeE
    react.surge.util.MSound ZOMBIE_DEATH -> gsAR
    react.surge.util.MSound ZOMBIE_HURT -> UnKw
    react.surge.util.MSound ZOMBIE_INFECT -> bAMN
    react.surge.util.MSound ZOMBIE_UNFECT -> AcTA
    react.surge.util.MSound ZOMBIE_REMEDY -> GeDV
    react.surge.util.MSound ZOMBIE_WALK -> iyEu
    react.surge.util.MSound ZOMBIE_PIG_IDLE -> TIFf
    react.surge.util.MSound ZOMBIE_PIG_ANGRY -> oiUh
    react.surge.util.MSound ZOMBIE_PIG_DEATH -> bANF
    react.surge.util.MSound ZOMBIE_PIG_HURT -> cfSd
    react.surge.util.MSound DIG_WOOL -> ULIn
    react.surge.util.MSound DIG_GRASS -> Chwm
    react.surge.util.MSound DIG_GRAVEL -> dWtT
    react.surge.util.MSound DIG_SAND -> apmq
    react.surge.util.MSound DIG_SNOW -> ORiA
    react.surge.util.MSound DIG_STONE -> ORjl
    react.surge.util.MSound DIG_WOOD -> cfVa
    react.surge.util.MSound FIREWORK_BLAST -> VqRa
    react.surge.util.MSound FIREWORK_BLAST2 -> DAig
    react.surge.util.MSound FIREWORK_LARGE_BLAST -> KqRr
    react.surge.util.MSound FIREWORK_LARGE_BLAST2 -> uHgG
    react.surge.util.MSound FIREWORK_TWINKLE -> MMEh
    react.surge.util.MSound FIREWORK_TWINKLE2 -> cMDc
    react.surge.util.MSound FIREWORK_LAUNCH -> MMEr
    react.surge.util.MSound SUCCESSFUL_HIT -> rHOW
    react.surge.util.MSound HORSE_ANGRY -> oFtv
    react.surge.util.MSound HORSE_ARMOR -> KqRt
    react.surge.util.MSound HORSE_BREATHE -> Ummx
    react.surge.util.MSound HORSE_DEATH -> wqPq
    react.surge.util.MSound HORSE_GALLOP -> ViBT
    react.surge.util.MSound HORSE_HIT -> pBHr
    react.surge.util.MSound HORSE_IDLE -> Akde
    react.surge.util.MSound HORSE_JUMP -> cLdU
    react.surge.util.MSound HORSE_LAND -> nDSB
    react.surge.util.MSound HORSE_SADDLE -> lppV
    react.surge.util.MSound HORSE_SOFT -> gGnd
    react.surge.util.MSound HORSE_WOOD -> PfpX
    react.surge.util.MSound DONKEY_ANGRY -> aONq
    react.surge.util.MSound DONKEY_DEATH -> SEfL
    react.surge.util.MSound DONKEY_HIT -> nCrI
    react.surge.util.MSound DONKEY_IDLE -> TPyU
    react.surge.util.MSound HORSE_SKELETON_DEATH -> Ijjj
    react.surge.util.MSound HORSE_SKELETON_HIT -> HMuW
    react.surge.util.MSound HORSE_SKELETON_IDLE -> BDUk
    react.surge.util.MSound HORSE_ZOMBIE_DEATH -> yMBm
    react.surge.util.MSound HORSE_ZOMBIE_HIT -> XMCp
    react.surge.util.MSound HORSE_ZOMBIE_IDLE -> wOLo
    react.surge.util.MSound VILLAGER_DEATH -> rHMo
    react.surge.util.MSound VILLAGER_HAGGLE -> hlsP
    react.surge.util.MSound VILLAGER_HIT -> gGmi
    react.surge.util.MSound VILLAGER_IDLE -> jPvR
    react.surge.util.MSound VILLAGER_NO -> qflW
    react.surge.util.MSound VILLAGER_YES -> LbsP
    java.lang.String pre19sound -> Wssl
    java.lang.String post19sound -> tFGJ
    org.bukkit.Sound resolvedSound -> hJsg
    react.surge.util.MSound[] ENUM$VALUES -> sluo
    8:203:void <clinit>() -> <clinit>
    207:213:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    217:229:org.bukkit.Sound bukkitSound() -> gNed
    1:1:react.surge.util.MSound[] values() -> values
    1:1:react.surge.util.MSound valueOf(java.lang.String) -> valueOf
react.surge.util.MaterialBlock -> biaG:
    org.bukkit.Material material -> KhdK
    java.lang.Byte data -> OuQX
    27:31:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    33:37:void <init>(org.bukkit.Material) -> <init>
    41:42:void <init>(org.bukkit.Location) -> <init>
    44:48:void <init>(org.bukkit.block.BlockState) -> <init>
    50:54:void <init>(org.bukkit.block.Block) -> <init>
    56:60:void <init>() -> <init>
    64:64:org.bukkit.Material getMaterial() -> getMaterial
    69:70:void setMaterial(org.bukkit.Material) -> setMaterial
    74:74:java.lang.Byte getData() -> axIl
    79:80:void setData(java.lang.Byte) -> Oqux
    85:90:java.lang.String toString() -> toString
    96:100:int hashCode() -> hashCode
    106:134:boolean equals(java.lang.Object) -> equals
react.surge.util.P -> YfvX:
    25:25:void <init>() -> <init>
    36:36:boolean isOnline(java.lang.String) -> CfeE
    48:48:org.bukkit.entity.Player getPlayer(java.lang.String) -> getPlayer
    58:58:org.bukkit.entity.Player getAnyPlayer() -> JIsO
    68:68:boolean isAnyOnline() -> UtfX
    80:80:react.glang.GList inWorld(org.bukkit.World) -> UADm
    92:104:react.glang.GList inChunk(org.bukkit.Chunk) -> PmJd
    118:118:react.glang.GList inArea(org.bukkit.Location,double) -> Oqux
    132:132:react.glang.GList inArea(org.bukkit.Location,int) -> Oqux
    143:144:void disable(org.bukkit.entity.Player) -> eYBv
    154:155:void enable(org.bukkit.entity.Player) -> bWhw
    168:168:org.bukkit.Location targetBlock(org.bukkit.entity.Player,int) -> Oqux
    182:182:org.bukkit.entity.Entity targetEntity(org.bukkit.entity.Player,int) -> uyTg
    194:195:boolean hasInventoryOpen(org.bukkit.entity.Player) -> tSmJ
    211:243:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Player,double,double) -> Oqux
    257:266:int getTotalExperience(org.bukkit.entity.Player) -> EKGK
    281:289:void setTotalExperience(org.bukkit.entity.Player,int) -> jgsI
    300:300:boolean canFindPlayer(java.lang.String) -> WFjf
    312:328:org.bukkit.entity.Player findPlayer(java.lang.String) -> BJQd
    338:345:react.glang.GList onlinePlayers() -> VDdj
    357:357:org.bukkit.Location getCrotchLocation(org.bukkit.entity.Player) -> INbK
    368:371:void clear(org.bukkit.entity.Player) -> pqtM
    381:385:void clearEffects(org.bukkit.entity.Player) -> qJcM
    398:399:void heal(org.bukkit.entity.Player,double) -> Oqux
    409:410:void heal(org.bukkit.entity.Player) -> Plhk
    421:422:void resetMaxHeath(org.bukkit.entity.Player) -> OYDv
    432:433:void resetHunger(org.bukkit.entity.Player) -> IpeW
    443:444:void kill(org.bukkit.entity.Player) -> rNFx
    455:455:react.surge.util.Shape getShape(org.bukkit.entity.Player) -> VDFk
    467:467:org.bukkit.Location getHand(org.bukkit.entity.Player) -> sHXl
    483:492:org.bukkit.Location getHand(org.bukkit.entity.Player,float,float) -> Oqux
react.surge.util.P$1 -> YfvX$1:
    1:92:void <init>() -> <init>
    97:102:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> gfyw
    1:1:java.lang.Object onAdapt(java.lang.Object) -> RPkn
react.surge.util.P$2 -> YfvX$2:
    java.lang.Double val$doff -> LJEP
    org.bukkit.entity.Player val$e -> qVPI
    org.bukkit.entity.Entity[] val$result -> nLfG
    1:224:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Player,org.bukkit.entity.Entity[]) -> <init>
    229:240:void onTrace(org.bukkit.Location) -> OXdf
react.surge.util.PE -> PTKv:
    react.surge.util.PE ABSORPTION -> Ocnb
    react.surge.util.PE BLINDNESS -> drMA
    react.surge.util.PE CONFUSION -> GeIY
    react.surge.util.PE DAMAGE_RESISTANCE -> tNWW
    react.surge.util.PE FAST_DIGGING -> iMvU
    react.surge.util.PE FIRE_RESISTANCE -> eSLu
    react.surge.util.PE GLOWING -> KyfQ
    react.surge.util.PE HARM -> KyfW
    react.surge.util.PE HEAL -> wOOa
    react.surge.util.PE HEALTH_BOOST -> DcpP
    react.surge.util.PE HUNGER -> tWGW
    react.surge.util.PE INCREASE_DAMAGE -> Glvx
    react.surge.util.PE INVISIBILITY -> oXXc
    react.surge.util.PE JUMP -> WcUW
    react.surge.util.PE LEVITATION -> lqSI
    react.surge.util.PE LUCK -> tVgA
    react.surge.util.PE NIGHT_VISION -> gacF
    react.surge.util.PE POISON -> NaLD
    react.surge.util.PE REGENERATION -> rQAC
    react.surge.util.PE SATURATION -> FsFm
    react.surge.util.PE SLOW -> WcVF
    react.surge.util.PE SLOW_DIGGING -> XLep
    react.surge.util.PE SPEED -> kmnQ
    react.surge.util.PE UNLUCK -> mkdP
    react.surge.util.PE WATER_BREATHING -> jIIR
    react.surge.util.PE WEAKNESS -> WRTK
    react.surge.util.PE WITHER -> Abuw
    192:215:void <clinit>() -> <clinit>
    50:51:void <init>(java.util.Map) -> <init>
    55:56:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> <init>
    60:61:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean) -> <init>
    65:66:void <init>(org.bukkit.potion.PotionEffectType,int,int) -> <init>
    71:71:java.util.Map serialize() -> serialize
    77:79:boolean apply(org.bukkit.entity.LivingEntity) -> apply
    85:85:boolean equals(java.lang.Object) -> equals
    91:91:int getAmplifier() -> getAmplifier
    97:97:int getDuration() -> getDuration
    103:103:org.bukkit.potion.PotionEffectType getType() -> getType
    109:109:boolean isAmbient() -> isAmbient
    115:115:boolean hasParticles() -> hasParticles
    121:121:int hashCode() -> hashCode
    127:127:java.lang.String toString() -> toString
    132:132:react.surge.util.PE defaulted(org.bukkit.potion.PotionEffectType) -> Oqux
    144:144:react.surge.util.PE d(int) -> ejHY
    156:156:react.surge.util.PE a(int) -> VwOA
    166:166:org.bukkit.potion.PotionEffect c() -> Fgyu
    177:178:void c(org.bukkit.entity.LivingEntity) -> tBlP
    182:183:void crm(org.bukkit.entity.LivingEntity) -> RPkn
    187:188:void rm(org.bukkit.entity.LivingEntity) -> KUIi
react.surge.util.ParticleEffect -> YgVi:
    react.surge.util.ParticleEffect EXPLOSION_NORMAL -> LIdF
    react.surge.util.ParticleEffect EXPLOSION_LARGE -> qpAJ
    react.surge.util.ParticleEffect EXPLOSION_HUGE -> UwAt
    react.surge.util.ParticleEffect FIREWORKS_SPARK -> gaav
    react.surge.util.ParticleEffect WATER_BUBBLE -> PERC
    react.surge.util.ParticleEffect WATER_SPLASH -> wFaD
    react.surge.util.ParticleEffect WATER_WAKE -> Olag
    react.surge.util.ParticleEffect SUSPENDED -> lXCl
    react.surge.util.ParticleEffect SUSPENDED_DEPTH -> AlIr
    react.surge.util.ParticleEffect CRIT -> rHRt
    react.surge.util.ParticleEffect CRIT_MAGIC -> Ocpg
    react.surge.util.ParticleEffect SMOKE_NORMAL -> PwuW
    react.surge.util.ParticleEffect SMOKE_LARGE -> yewt
    react.surge.util.ParticleEffect SPELL -> sKVE
    react.surge.util.ParticleEffect SPELL_INSTANT -> mswW
    react.surge.util.ParticleEffect SPELL_MOB -> mkfm
    react.surge.util.ParticleEffect SPELL_MOB_AMBIENT -> fgTK
    react.surge.util.ParticleEffect SPELL_WITCH -> Sglv
    react.surge.util.ParticleEffect DRIP_WATER -> WIfG
    react.surge.util.ParticleEffect DRIP_LAVA -> wWbM
    react.surge.util.ParticleEffect VILLAGER_ANGRY -> EDqo
    react.surge.util.ParticleEffect VILLAGER_HAPPY -> rHRQ
    react.surge.util.ParticleEffect TOWN_AURA -> LlHo
    react.surge.util.ParticleEffect NOTE -> tNXO
    react.surge.util.ParticleEffect PORTAL -> OSOL
    react.surge.util.ParticleEffect ENCHANTMENT_TABLE -> sTGB
    react.surge.util.ParticleEffect FLAME -> RujT
    react.surge.util.ParticleEffect LAVA -> pBKx
    react.surge.util.ParticleEffect FOOTSTEP -> ShMA
    react.surge.util.ParticleEffect CLOUD -> lOQN
    react.surge.util.ParticleEffect REDSTONE -> ENBl
    react.surge.util.ParticleEffect SNOWBALL -> knQO
    react.surge.util.ParticleEffect SNOW_SHOVEL -> MTxa
    react.surge.util.ParticleEffect SLIME -> orMJ
    react.surge.util.ParticleEffect HEART -> sJsh
    react.surge.util.ParticleEffect BARRIER -> aGBS
    react.surge.util.ParticleEffect ITEM_CRACK -> ritL
    react.surge.util.ParticleEffect BLOCK_CRACK -> xART
    react.surge.util.ParticleEffect BLOCK_DUST -> aNqU
    react.surge.util.ParticleEffect WATER_DROP -> OdQT
    react.surge.util.ParticleEffect ITEM_TAKE -> xRTC
    react.surge.util.ParticleEffect MOB_APPEARANCE -> gXrp
    react.surge.util.ParticleEffect DRAGON_BREATH -> fpFl
    react.surge.util.ParticleEffect END_ROD -> tFKJ
    react.surge.util.ParticleEffect DAMAGE_INDICATOR -> gixL
    react.surge.util.ParticleEffect SWEEP_ATTACK -> sdjL
    java.util.Map NAME_MAP -> vvdT
    java.util.Map ID_MAP -> Jvfd
    java.lang.String name -> name
    int id -> id
    int requiredVersion -> QHVn
    java.util.List properties -> lqXK
    react.surge.util.ParticleEffect[] ENUM$VALUES -> JfEq
    54:452:void <clinit>() -> <clinit>
    466:472:void <init>(java.lang.String,int,java.lang.String,int,int,react.surge.util.ParticleEffect$ParticleProperty[]) -> <init>
    481:481:java.lang.String getName() -> getName
    491:491:int getId() -> getId
    501:501:int getRequiredVersion() -> uWnC
    511:511:boolean hasProperty(react.surge.util.ParticleEffect$ParticleProperty) -> Oqux
    521:525:boolean isSupported() -> isSupported
    537:545:react.surge.util.ParticleEffect fromName(java.lang.String) -> kRFT
    557:565:react.surge.util.ParticleEffect fromId(int) -> dwfE
    577:578:boolean isWater(org.bukkit.Location) -> biLe
    591:601:boolean isLongDistance(org.bukkit.Location,java.util.List) -> Oqux
    615:615:boolean isDataCorrect(react.surge.util.ParticleEffect,react.surge.util.ParticleEffect$ParticleData) -> Oqux
    629:629:boolean isColorCorrect(react.surge.util.ParticleEffect,react.surge.util.ParticleEffect$ParticleColor) -> Oqux
    665:681:void display(float,int,org.bukkit.Location,double) -> Oqux
    715:728:void display(float,int,org.bukkit.Location,java.util.List) -> Oqux
    761:762:void display(float,int,org.bukkit.Location,org.bukkit.entity.Player[]) -> Oqux
    790:807:void display(org.bukkit.util.Vector,float,org.bukkit.Location,double) -> Oqux
    834:851:void display(org.bukkit.util.Vector,float,org.bukkit.Location,java.util.List) -> Oqux
    876:877:void display(org.bukkit.util.Vector,float,org.bukkit.Location,org.bukkit.entity.Player[]) -> Oqux
    899:912:void display(react.surge.util.ParticleEffect$ParticleColor,org.bukkit.Location,double) -> Oqux
    934:947:void display(react.surge.util.ParticleEffect$ParticleColor,org.bukkit.Location,java.util.List) -> Oqux
    968:969:void display(react.surge.util.ParticleEffect$ParticleColor,org.bukkit.Location,org.bukkit.entity.Player[]) -> Oqux
    1004:1020:void display(react.surge.util.ParticleEffect$ParticleData,float,int,org.bukkit.Location,double) -> Oqux
    1055:1068:void display(react.surge.util.ParticleEffect$ParticleData,float,int,org.bukkit.Location,java.util.List) -> Oqux
    1102:1103:void display(react.surge.util.ParticleEffect$ParticleData,float,int,org.bukkit.Location,org.bukkit.entity.Player[]) -> Oqux
    1130:1143:void display(react.surge.util.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,double) -> Oqux
    1169:1182:void display(react.surge.util.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,java.util.List) -> Oqux
    1207:1208:void display(react.surge.util.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,org.bukkit.entity.Player[]) -> Oqux
    1:1:react.surge.util.ParticleEffect[] values() -> values
    1:1:react.surge.util.ParticleEffect valueOf(java.lang.String) -> valueOf
react.surge.util.ParticleEffect$BlockData -> YgVi$Oqux:
    1364:1369:void <init>(org.bukkit.Material,byte) -> <init>
react.surge.util.ParticleEffect$ItemData -> YgVi$uyTg:
    1335:1336:void <init>(org.bukkit.Material,byte) -> <init>
react.surge.util.ParticleEffect$NoteColor -> YgVi$jgsI:
    int note -> note
    1562:1573:void <init>(int) -> <init>
    1583:1583:float getValueX() -> EvWi
    1594:1594:float getValueY() -> cRyT
    1605:1605:float getValueZ() -> RslK
react.surge.util.ParticleEffect$OrdinaryColor -> YgVi$NoSy:
    int red -> red
    int green -> green
    int blue -> blue
    1435:1464:void <init>(int,int,int) -> <init>
    1474:1475:void <init>(org.bukkit.Color) -> <init>
    1484:1484:int getRed() -> getRed
    1494:1494:int getGreen() -> getGreen
    1504:1504:int getBlue() -> getBlue
    1515:1515:float getValueX() -> EvWi
    1526:1526:float getValueY() -> cRyT
    1537:1537:float getValueZ() -> RslK
react.surge.util.ParticleEffect$ParticleColor -> YgVi$gojx:
    1383:1383:void <init>() -> <init>
    float getValueX() -> EvWi
    float getValueY() -> cRyT
    float getValueZ() -> RslK
react.surge.util.ParticleEffect$ParticleColorException -> YgVi$tBlP:
    long serialVersionUID -> serialVersionUID
    1659:1660:void <init>(java.lang.String) -> <init>
react.surge.util.ParticleEffect$ParticleData -> YgVi$RPkn:
    org.bukkit.Material material -> KhdK
    byte data -> lWeY
    int[] packetData -> WRYD
    1265:1270:void <init>(org.bukkit.Material,byte) -> <init>
    1279:1279:org.bukkit.Material getMaterial() -> getMaterial
    1289:1289:byte getData() -> getData
    1299:1299:int[] getPacketData() -> aUcy
    1309:1309:java.lang.String getPacketDataString() -> OkDT
react.surge.util.ParticleEffect$ParticleDataException -> YgVi$KUIi:
    long serialVersionUID -> serialVersionUID
    1633:1634:void <init>(java.lang.String) -> <init>
react.surge.util.ParticleEffect$ParticlePacket -> YgVi$JYut:
    int version -> version
    java.lang.Class enumParticle -> ULRq
    java.lang.reflect.Constructor packetConstructor -> lWcx
    java.lang.reflect.Method getHandle -> TkSO
    java.lang.reflect.Field playerConnection -> nnlS
    java.lang.reflect.Method sendPacket -> HFMc
    boolean initialized -> initialized
    react.surge.util.ParticleEffect effect -> GTKw
    float offsetX -> fMcQ
    float offsetY -> jtBc
    float offsetZ -> mkhy
    float speed -> GdkN
    int amount -> JAlT
    boolean longDistance -> RvMM
    react.surge.util.ParticleEffect$ParticleData data -> FGty
    java.lang.Object packet -> yoKs
    1745:1764:void <init>(react.surge.util.ParticleEffect,float,float,float,float,int,boolean,react.surge.util.ParticleEffect$ParticleData) -> <init>
    1788:1789:void <init>(react.surge.util.ParticleEffect,org.bukkit.util.Vector,float,boolean,react.surge.util.ParticleEffect$ParticleData) -> <init>
    1806:1811:void <init>(react.surge.util.ParticleEffect,react.surge.util.ParticleEffect$ParticleColor,boolean) -> <init>
    1826:1862:void initialize() -> initialize
    1871:1875:int getVersion() -> getVersion
    1887:1887:boolean isInitialized() -> isInitialized
    1900:1939:void initializePacket(org.bukkit.Location) -> rUwX
    1956:1965:void sendTo(org.bukkit.Location,org.bukkit.entity.Player) -> Oqux
    1980:1988:void sendTo(org.bukkit.Location,java.util.List) -> uyTg
    2004:2018:void sendTo(org.bukkit.Location,double) -> uyTg
react.surge.util.ParticleEffect$ParticlePacket$PacketInstantiationException -> YgVi$JYut$Oqux:
    long serialVersionUID -> serialVersionUID
    2071:2072:void <init>(java.lang.String,java.lang.Throwable) -> <init>
react.surge.util.ParticleEffect$ParticlePacket$PacketSendingException -> YgVi$JYut$uyTg:
    long serialVersionUID -> serialVersionUID
    2098:2099:void <init>(java.lang.String,java.lang.Throwable) -> <init>
react.surge.util.ParticleEffect$ParticlePacket$VersionIncompatibleException -> YgVi$JYut$jgsI:
    long serialVersionUID -> serialVersionUID
    2044:2045:void <init>(java.lang.String,java.lang.Throwable) -> <init>
react.surge.util.ParticleEffect$ParticleProperty -> YgVi$gfyw:
    react.surge.util.ParticleEffect$ParticleProperty REQUIRES_WATER -> vKoJ
    react.surge.util.ParticleEffect$ParticleProperty REQUIRES_DATA -> FXwK
    react.surge.util.ParticleEffect$ParticleProperty DIRECTIONAL -> XoMW
    react.surge.util.ParticleEffect$ParticleProperty COLORABLE -> YaOH
    react.surge.util.ParticleEffect$ParticleProperty[] ENUM$VALUES -> aXDq
    1219:1236:void <clinit>() -> <clinit>
    1219:1219:void <init>(java.lang.String,int) -> <init>
    1:1:react.surge.util.ParticleEffect$ParticleProperty[] values() -> values
    1:1:react.surge.util.ParticleEffect$ParticleProperty valueOf(java.lang.String) -> valueOf
react.surge.util.ParticleEffect$ParticleVersionException -> YgVi$OXdf:
    long serialVersionUID -> serialVersionUID
    1685:1686:void <init>(java.lang.String) -> <init>
react.surge.util.Paste -> cttb:
    15:15:void <init>() -> <init>
    28:36:java.lang.String paste(java.lang.String) -> Tpex
react.surge.util.Persist -> klKJ:
react.surge.util.PluginUtil -> JAXr:
    61:61:void <init>() -> <init>
    72:74:void enable(org.bukkit.plugin.Plugin) -> gojx
    81:85:void enableAll() -> mGfD
    95:99:void disable(org.bukkit.plugin.Plugin) -> tBlP
    106:110:void disableAll() -> ifMj
    121:121:java.lang.String getFormattedName(org.bukkit.plugin.Plugin) -> RPkn
    135:142:java.lang.String getFormattedName(org.bukkit.plugin.Plugin,boolean) -> Oqux
    154:159:org.bukkit.plugin.Plugin getPluginByName(java.lang.String) -> Ujwc
    169:172:java.util.List getPluginNames(boolean) -> UcHV
    184:187:java.lang.String getPluginVersion(java.lang.String) -> hamo
    200:222:java.lang.String getUsages(org.bukkit.plugin.Plugin) -> KUIi
    237:316:java.util.List findByCommand(java.lang.String) -> Eljr
    337:338:void load(org.bukkit.plugin.Plugin) -> JYut
    342:364:java.lang.String getPluginFileName(java.lang.String) -> Tgtx
    369:391:java.lang.String getPluginFileNameUnsafe(java.lang.String,org.bukkit.plugin.Plugin) -> Oqux
    404:456:void load(java.lang.String) -> load
    468:473:void reload(org.bukkit.plugin.Plugin) -> gfyw
    480:484:void reloadAll() -> yBXE
    496:622:void unload(org.bukkit.plugin.Plugin) -> OXdf
react.surge.util.PoolCount -> MRri:
react.surge.util.PoolDescriber -> uFdA:
react.surge.util.PoolNanoThrottle -> rEkF:
react.surge.util.PositionalSelector -> ejYh:
    react.glang.GSet allowedChunks -> qUrK
    11:14:void <init>() -> <init>
    18:20:void <init>(org.bukkit.Chunk) -> <init>
    22:25:void <init>(org.bukkit.World) -> <init>
    29:30:void addWorld(org.bukkit.World) -> addWorld
    34:35:void addAllWorlds() -> KxJI
    39:40:void addChunk(org.bukkit.Chunk) -> QpMe
    44:44:react.glang.GSet getAllowedChunks() -> ECTF
react.surge.util.Protocol -> kbxm:
    react.surge.util.Protocol LATEST -> qEQV
    react.surge.util.Protocol R1_12_2 -> THmb
    react.surge.util.Protocol R1_12_2_PRE -> AJJN
    react.surge.util.Protocol R1_12_1 -> Cqpv
    react.surge.util.Protocol R1_12 -> YjAL
    react.surge.util.Protocol R1_11_2 -> rrgS
    react.surge.util.Protocol R1_11_1 -> gYUo
    react.surge.util.Protocol R1_11 -> cCxK
    react.surge.util.Protocol R1_10_2 -> gXtq
    react.surge.util.Protocol R1_10_1 -> oFyn
    react.surge.util.Protocol R1_10 -> MoPn
    react.surge.util.Protocol R1_9_4 -> BwbG
    react.surge.util.Protocol R1_9_3 -> wNto
    react.surge.util.Protocol R1_9_2 -> TYrM
    react.surge.util.Protocol R1_9_1 -> pRrM
    react.surge.util.Protocol R1_9 -> Efxa
    react.surge.util.Protocol R1_8_9 -> IcES
    react.surge.util.Protocol R1_8_8 -> Octo
    react.surge.util.Protocol R1_8_7 -> jIQM
    react.surge.util.Protocol R1_8_6 -> HqCc
    react.surge.util.Protocol R1_8_5 -> wFdq
    react.surge.util.Protocol R1_8_4 -> KWhn
    react.surge.util.Protocol R1_8_3 -> mAXK
    react.surge.util.Protocol R1_8_2 -> XMNU
    react.surge.util.Protocol R1_8_1 -> whgW
    react.surge.util.Protocol R1_8 -> DBQx
    react.surge.util.Protocol R1_7_10 -> aXIC
    react.surge.util.Protocol R1_7_9 -> cLkK
    react.surge.util.Protocol R1_7_8 -> XnoG
    react.surge.util.Protocol R1_7_7 -> FXyT
    react.surge.util.Protocol R1_7_6 -> aXGP
    react.surge.util.Protocol R1_7_5 -> heMO
    react.surge.util.Protocol R1_7_4 -> FGwg
    react.surge.util.Protocol R1_7_3 -> daQQ
    react.surge.util.Protocol R1_7_2 -> sBgY
    react.surge.util.Protocol R1_7_1 -> OJbX
    react.surge.util.Protocol B1_6_4 -> DJbr
    react.surge.util.Protocol B1_6_3 -> wiGU
    react.surge.util.Protocol B1_6_2 -> WRYn
    react.surge.util.Protocol B1_6_1 -> EoiW
    react.surge.util.Protocol B1_5_2 -> UUFB
    react.surge.util.Protocol B1_5_1 -> bIgv
    react.surge.util.Protocol B1_5 -> cLkT
    react.surge.util.Protocol B1_4_7 -> RSkc
    react.surge.util.Protocol B1_4_6 -> edWG
    react.surge.util.Protocol B1_4_5 -> BoTE
    react.surge.util.Protocol B1_4_4 -> Hxte
    react.surge.util.Protocol B1_4_2 -> wiKM
    react.surge.util.Protocol B1_3_2 -> sCLL
    react.surge.util.Protocol B1_3_1 -> qDuS
    react.surge.util.Protocol B1_2_5 -> txrl
    react.surge.util.Protocol B1_2_4 -> Gmae
    react.surge.util.Protocol EARLIEST -> tyTI
    react.surge.util.Protocol UNKNOWN -> qMfe
    int version -> version
    java.lang.String packageVersion -> FQMS
    java.lang.String versionName -> OmIb
    boolean netty -> LlPf
    react.surge.util.Protocol[] ENUM$VALUES -> NPTB
    5:60:void <clinit>() -> <clinit>
    69:70:void <init>(java.lang.String,int,int,java.lang.String,boolean) -> <init>
    74:75:void <init>(java.lang.String,int,int) -> <init>
    79:80:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    84:85:void <init>(java.lang.String,int,int,java.lang.String,java.lang.String) -> <init>
    87:98:void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,boolean) -> <init>
    104:113:boolean hasPackageSupport() -> dNNB
    118:118:java.lang.String getPackageVersion() -> PSsd
    124:124:java.lang.String toString() -> toString
    129:137:react.surge.util.Protocol getSupportedNMSVersion() -> GHyK
    142:150:react.surge.util.Protocol getProtocolVersion() -> cRyf
    155:155:react.surge.util.ProtocolRange to(react.surge.util.Protocol) -> uyTg
    160:160:boolean isServerVersion() -> YpQX
    165:165:java.lang.String getVersionString() -> getVersionString
    170:170:boolean isNettySupported() -> JtfR
    175:175:boolean isActualVersion() -> CWAQ
    180:185:int getVersion() -> getVersion
    190:195:int getCVersion() -> rVsx
    200:200:int getMetaVersion() -> AHIe
    1:1:react.surge.util.Protocol[] values() -> values
    1:1:react.surge.util.Protocol valueOf(java.lang.String) -> valueOf
react.surge.util.ProtocolRange -> Wqtc:
    react.surge.util.Protocol from -> gQJe
    react.surge.util.Protocol to -> plfW
    8:12:void <init>(react.surge.util.Protocol,react.surge.util.Protocol) -> <init>
    16:16:react.surge.util.Protocol getFrom() -> WaYf
    21:21:react.surge.util.Protocol getTo() -> uyot
    26:26:boolean contains(react.surge.util.Protocol) -> jgsI
    32:32:java.lang.String toString() -> toString
react.surge.util.Range -> anpp:
    double min -> min
    double max -> max
    21:25:void <init>(double,double) -> <init>
    37:38:void <init>(int,int) -> <init>
    50:51:void <init>(long,long) -> <init>
    60:60:double randomNext() -> fmhR
    70:70:int randomNextInt() -> NyFB
    80:80:long randomNextLong() -> pbSt
    92:92:boolean isWithin(double) -> OYDv
    104:104:boolean isWithin(int) -> DYIR
    116:116:boolean isWithin(long) -> ivPx
    121:121:double getMin() -> getMin
    126:127:void setMin(double) -> IpeW
    131:131:double getMax() -> getMax
    136:137:void setMax(double) -> HmcS
react.surge.util.RawEvent -> brTp:
react.surge.util.RayTrace -> SKvC:
    org.bukkit.Location start -> eBSi
    org.bukkit.util.Vector direction -> Frob
    java.lang.Double maxDistance -> fMgQ
    java.lang.Double distanceCovered -> FQNB
    java.lang.Double step -> TACn
    java.lang.Boolean stop -> Uegb
    36:44:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double) -> <init>
    51:65:void trace() -> YhBv
    73:74:void stop() -> stop
    85:85:void onTrace(org.bukkit.Location) -> OXdf
    89:89:org.bukkit.Location getStart() -> UBDc
    94:95:void setStart(org.bukkit.Location) -> PmJd
    99:99:org.bukkit.util.Vector getDirection() -> getDirection
    104:105:void setDirection(org.bukkit.util.Vector) -> setDirection
    109:109:java.lang.Double getMaxDistance() -> IqfG
    114:115:void setMaxDistance(java.lang.Double) -> NoSy
    119:119:java.lang.Double getDistanceCovered() -> wfgs
    124:125:void setDistanceCovered(java.lang.Double) -> gojx
    129:129:java.lang.Double getStep() -> bYJt
    134:135:void setStep(java.lang.Double) -> tBlP
react.surge.util.ReflectionUtils -> vIik:
    34:37:void <init>() -> <init>
    57:66:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    90:90:java.lang.reflect.Constructor getConstructor(java.lang.String,react.surge.util.ReflectionUtils$PackageType,java.lang.Class[]) -> Oqux
    120:120:java.lang.Object instantiateObject(java.lang.Class,java.lang.Object[]) -> Oqux
    156:156:java.lang.Object instantiateObject(java.lang.String,react.surge.util.ReflectionUtils$PackageType,java.lang.Object[]) -> Oqux
    178:187:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    213:213:java.lang.reflect.Method getMethod(java.lang.String,react.surge.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Class[]) -> Oqux
    243:243:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    275:275:java.lang.Object invokeMethod(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Object[]) -> Oqux
    311:311:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,react.surge.util.ReflectionUtils$PackageType,java.lang.String,java.lang.Object[]) -> Oqux
    331:333:java.lang.reflect.Field getField(java.lang.Class,boolean,java.lang.String) -> Oqux
    359:359:java.lang.reflect.Field getField(java.lang.String,react.surge.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> Oqux
    386:386:java.lang.Object getValue(java.lang.Object,java.lang.Class,boolean,java.lang.String) -> Oqux
    418:418:java.lang.Object getValue(java.lang.Object,java.lang.String,react.surge.util.ReflectionUtils$PackageType,boolean,java.lang.String) -> Oqux
    445:445:java.lang.Object getValue(java.lang.Object,boolean,java.lang.String) -> Oqux
    474:475:void setValue(java.lang.Object,java.lang.Class,boolean,java.lang.String,java.lang.Object) -> Oqux
    508:509:void setValue(java.lang.Object,java.lang.String,react.surge.util.ReflectionUtils$PackageType,boolean,java.lang.String,java.lang.Object) -> Oqux
    535:536:void setValue(java.lang.Object,boolean,java.lang.String,java.lang.Object) -> Oqux
react.surge.util.ReflectionUtils$DataType -> vIik$Oqux:
    react.surge.util.ReflectionUtils$DataType BYTE -> orSg
    react.surge.util.ReflectionUtils$DataType SHORT -> LJLU
    react.surge.util.ReflectionUtils$DataType INTEGER -> rXwv
    react.surge.util.ReflectionUtils$DataType LONG -> XwcC
    react.surge.util.ReflectionUtils$DataType CHARACTER -> qMdu
    react.surge.util.ReflectionUtils$DataType FLOAT -> RSmi
    react.surge.util.ReflectionUtils$DataType DOUBLE -> xIhb
    react.surge.util.ReflectionUtils$DataType BOOLEAN -> LkoJ
    java.util.Map CLASS_MAP -> HyVB
    java.lang.Class primitive -> HguW
    java.lang.Class reference -> Eomk
    react.surge.util.ReflectionUtils$DataType[] ENUM$VALUES -> yLoM
    650:671:void <clinit>() -> <clinit>
    681:685:void <init>(java.lang.String,int,java.lang.Class,java.lang.Class) -> <init>
    694:694:java.lang.Class getPrimitive() -> jiSr
    704:704:java.lang.Class getReference() -> Pdwx
    716:716:react.surge.util.ReflectionUtils$DataType fromClass(java.lang.Class) -> uyTg
    728:729:java.lang.Class getPrimitive(java.lang.Class) -> jgsI
    741:742:java.lang.Class getReference(java.lang.Class) -> NoSy
    754:760:java.lang.Class[] getPrimitive(java.lang.Class[]) -> Oqux
    772:778:java.lang.Class[] getReference(java.lang.Class[]) -> uyTg
    790:796:java.lang.Class[] getPrimitive(java.lang.Object[]) -> uyTg
    808:814:java.lang.Class[] getReference(java.lang.Object[]) -> jgsI
    828:842:boolean compare(java.lang.Class[],java.lang.Class[]) -> Oqux
    1:1:react.surge.util.ReflectionUtils$DataType[] values() -> values
    1:1:react.surge.util.ReflectionUtils$DataType valueOf(java.lang.String) -> valueOf
react.surge.util.ReflectionUtils$PackageType -> vIik$uyTg:
    react.surge.util.ReflectionUtils$PackageType MINECRAFT_SERVER -> heQo
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT -> nLoi
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_BLOCK -> noSq
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CHUNKIO -> snAk
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_COMMAND -> JTjS
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_CONVERSATIONS -> MoVK
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENCHANTMENS -> TcHm
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_ENTITY -> PpOA
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_EVENT -> hurI
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_GENERATOR -> vKvD
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_HELP -> IRHS
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_INVENTORY -> UDHv
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_MAP -> BLqL
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_METADATA -> kwKh
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_POTION -> WJMb
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_PROJECTILES -> drVS
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCHEDULER -> PNJY
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_SCOREBOARD -> KWki
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UPDATER -> bkng
    react.surge.util.ReflectionUtils$PackageType CRAFTBUKKIT_UTIL -> qUxN
    java.lang.String path -> path
    react.surge.util.ReflectionUtils$PackageType[] ENUM$VALUES -> bJLg
    547:568:void <clinit>() -> <clinit>
    578:581:void <init>(java.lang.String,int,java.lang.String) -> <init>
    593:594:void <init>(java.lang.String,int,react.surge.util.ReflectionUtils$PackageType,java.lang.String) -> <init>
    603:603:java.lang.String getPath() -> getPath
    618:618:java.lang.Class getClass(java.lang.String) -> getClass
    625:625:java.lang.String toString() -> toString
    635:635:java.lang.String getServerVersion() -> getServerVersion
    1:1:react.surge.util.ReflectionUtils$PackageType[] values() -> values
    1:1:react.surge.util.ReflectionUtils$PackageType valueOf(java.lang.String) -> valueOf
react.surge.util.Refreshable -> bHBE:
    void refresh() -> refresh
react.surge.util.SQLOperation -> CMgx:
    react.surge.util.SQLOperation LOAD -> MVBd
    react.surge.util.SQLOperation SAVE -> xIkA
    react.surge.util.SQLOperation[] ENUM$VALUES -> UvlC
    3:5:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.surge.util.SQLOperation[] values() -> values
    1:1:react.surge.util.SQLOperation valueOf(java.lang.String) -> valueOf
react.surge.util.ServerState -> doih:
    react.surge.util.ServerState START -> Uvkb
    react.surge.util.ServerState ENABLE -> QQMd
    react.surge.util.ServerState DISABLE -> Dcxj
    react.surge.util.ServerState STOP -> NrXE
    react.surge.util.ServerState RUNNING -> uABY
    react.surge.util.ServerState[] ENUM$VALUES -> yMNh
    3:37:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:react.surge.util.ServerState[] values() -> values
    1:1:react.surge.util.ServerState valueOf(java.lang.String) -> valueOf
react.surge.util.Shape -> yKCp:
    org.bukkit.Location location -> axiR
    org.bukkit.util.Vector offset -> YjGR
    org.bukkit.util.Vector size -> OBVU
    27:32:void <init>(org.bukkit.Location,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    44:45:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    55:56:void <init>(org.bukkit.Location) -> <init>
    67:80:boolean isWithinShape(org.bukkit.Location) -> QpMe
    90:94:org.bukkit.Location randomLocation() -> WjNV
    104:104:org.bukkit.Location randomSurface() -> ohBI
    114:114:org.bukkit.Location getCenter() -> getCenter
    119:119:org.bukkit.Location getLocation() -> getLocation
    124:124:org.bukkit.util.Vector getOffset() -> KxLy
    129:129:org.bukkit.util.Vector getSize() -> LXlX
react.surge.util.SnowLevel -> uhjH:
    byte level -> ygBC
    18:21:void <init>(byte) -> <init>
    30:40:byte getLevel() -> DHcI
    51:52:void setLevel(byte) -> JYut
react.surge.util.SuperCaller -> RtGt:
    void run() -> run
react.surge.util.T -> gEnW:
    15:17:void <init>() -> <init>
    void onStop(long,double) -> uyTg
    32:35:void stop() -> stop
react.surge.util.TXT -> Tylk:
    12:12:void <init>() -> <init>
    25:25:java.lang.String repeat(java.lang.String,int) -> repeat
    39:47:react.glang.GList wrap(java.lang.String,int) -> RPkn
    67:67:java.lang.String makeTag(react.surge.util.C,react.surge.util.C,react.surge.util.C,react.surge.util.C,java.lang.String) -> Oqux
    85:85:java.lang.String makeTag(react.surge.util.C,react.surge.util.C,react.surge.util.C,java.lang.String) -> Oqux
    99:99:java.lang.String line(react.surge.util.C,int) -> Oqux
    113:113:java.lang.String underline(react.surge.util.C,int) -> uyTg
    135:140:java.lang.String getLine(react.surge.util.C,int,double,java.lang.String,java.lang.String,java.lang.String) -> Oqux
react.surge.util.Tag -> hsdy:
    java.lang.String value() -> value
react.surge.util.Timer -> oNFh:
    long tns -> SqEw
    long cns -> OcxV
    19:23:void <init>() -> <init>
    30:31:void start() -> start
    38:40:void stop() -> stop
    49:49:long getTime() -> getTime
    59:59:long getLastRun() -> URcq
react.surge.util.VectorMath -> JlQF:
    int[] $SWITCH_TABLE$surge$util$Axis -> IQOg
    int[] $SWITCH_TABLE$org$bukkit$block$BlockFace -> ojEM
    17:17:void <init>() -> <init>
    21:31:org.bukkit.util.Vector scaleStatic(react.surge.util.Axis,org.bukkit.util.Vector,double) -> Oqux
    36:41:org.bukkit.util.Vector scaleX(org.bukkit.util.Vector,double) -> Oqux
    46:51:org.bukkit.util.Vector scaleY(org.bukkit.util.Vector,double) -> uyTg
    56:61:org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector,double) -> jgsI
    66:68:org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) -> Oqux
    73:76:boolean isLookingNear(org.bukkit.Location,org.bukkit.Location,double) -> uyTg
    81:81:org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) -> uyTg
    86:86:org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) -> jgsI
    91:91:org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) -> NoSy
    96:96:org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) -> gojx
    101:101:org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) -> tBlP
    106:106:org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) -> RPkn
    111:111:double round(double,int) -> gojx
    116:119:org.bukkit.util.Vector clip(org.bukkit.util.Vector,int) -> Oqux
    124:137:org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector,org.bukkit.util.Vector,double) -> Oqux
    150:235:react.glang.GList split(org.bukkit.block.BlockFace) -> Oqux
    249:249:org.bukkit.util.Vector direction(org.bukkit.Location,org.bukkit.Location) -> NoSy
    254:254:org.bukkit.util.Vector directionNoNormal(org.bukkit.Location,org.bukkit.Location) -> gojx
    268:268:org.bukkit.util.Vector toVector(float,float) -> Oqux
    281:282:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> Oqux
    296:299:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector,double) -> Oqux
    310:325:org.bukkit.util.Vector reverse(org.bukkit.util.Vector) -> KUIi
    337:340:double getSpeed(org.bukkit.util.Vector) -> JYut
    354:361:react.glang.GList shift(org.bukkit.util.Vector,react.glang.GList) -> Oqux
    373:415:org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) -> gfyw
    429:441:org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector,float) -> Oqux
    455:467:org.bukkit.util.Vector angleRight(org.bukkit.util.Vector,float) -> uyTg
    481:490:org.bukkit.util.Vector angleUp(org.bukkit.util.Vector,float) -> jgsI
    504:513:org.bukkit.util.Vector angleDown(org.bukkit.util.Vector,float) -> NoSy
    526:574:org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) -> OXdf
    17:17:int[] $SWITCH_TABLE$surge$util$Axis() -> LPVg
    17:17:int[] $SWITCH_TABLE$org$bukkit$block$BlockFace() -> TGPh
react.surge.util.VectorMath$1 -> JlQF$1:
    org.bukkit.util.Vector val$vector -> mIjx
    1:354:void <init>(org.bukkit.util.Vector) -> <init>
    359:359:org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) -> biLe
    1:1:java.lang.Object onAdapt(java.lang.Object) -> RPkn
react.surge.util.W -> nJbj:
    29:29:void <init>() -> <init>
    40:48:boolean visible(org.bukkit.block.Block) -> KUIi
    61:64:void colorArmor(org.bukkit.inventory.ItemStack,org.bukkit.Color) -> Oqux
    75:86:org.bukkit.entity.Entity getEntity(int) -> CfeE
    101:114:int count(org.bukkit.entity.Player,react.surge.util.MaterialBlock) -> Oqux
    131:131:boolean has(org.bukkit.entity.Player,react.surge.util.MaterialBlock,int) -> Oqux
    143:143:int getChunkX(org.bukkit.block.Block) -> JYut
    155:155:int getChunkY(org.bukkit.block.Block) -> gfyw
    168:169:void dropXp(org.bukkit.Location,int) -> uyTg
    180:180:int getChunkZ(org.bukkit.block.Block) -> OXdf
    196:203:void take(org.bukkit.entity.Player,react.surge.util.MaterialBlock,int) -> uyTg
    219:227:int getManhattanDistance(org.bukkit.Location,org.bukkit.Location,boolean) -> Oqux
    232:239:react.glang.GList news(org.bukkit.Location) -> UADm
    256:264:int getManhattanDistance(org.bukkit.block.Block,org.bukkit.block.Block,boolean) -> Oqux
    276:276:react.glang.GList getBlocks(org.bukkit.Chunk) -> UADm
    288:288:org.bukkit.World getSyncWorld(org.bukkit.World) -> UcHV
    300:300:org.bukkit.World toSync(org.bukkit.World) -> SCNo
    312:312:org.bukkit.block.Block toSync(org.bukkit.block.Block) -> biLe
    324:324:org.bukkit.Location toSync(org.bukkit.Location) -> UcHV
    336:336:org.bukkit.Chunk toSync(org.bukkit.Chunk) -> UcHV
    352:419:react.surge.util.MaterialBlock getMaterialBlock(java.lang.String) -> qRtu
    433:445:org.bukkit.block.Block[] getRelative(org.bukkit.block.Block,org.bukkit.block.BlockFace[]) -> Oqux
    460:461:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData) -> Oqux
    478:479:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData,boolean) -> Oqux
    493:494:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int) -> Oqux
    511:512:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int,boolean) -> Oqux
    525:526:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData) -> Oqux
    541:542:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData,boolean) -> Oqux
    558:568:int getHighestPotionLevel(org.bukkit.potion.PotionEffectType,java.util.Collection) -> Oqux
    580:587:react.glang.GList chunkFaces(org.bukkit.Chunk) -> SCNo
    599:608:react.glang.GList blockFaces(org.bukkit.block.Block) -> rUwX
    620:634:org.bukkit.Location simulateFall(org.bukkit.Location) -> SCNo
    648:663:react.glang.GList chunkRadius(org.bukkit.Chunk,int) -> jgsI
    677:689:react.glang.GList blockRadius(org.bukkit.block.Block,int) -> Oqux
    711:743:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Entity,double,double) -> Oqux
    761:768:boolean isLookingAt(org.bukkit.entity.Entity,org.bukkit.entity.Entity,double,double) -> Oqux
    782:782:double differenceOfVectors(org.bukkit.util.Vector,org.bukkit.util.Vector) -> Oqux
react.surge.util.W$1 -> nJbj$1:
    java.lang.Double val$doff -> LJEP
    org.bukkit.entity.Entity val$e -> jQcd
    org.bukkit.entity.Entity[] val$result -> nLfG
    1:724:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Entity,org.bukkit.entity.Entity[]) -> <init>
    729:740:void onTrace(org.bukkit.Location) -> OXdf
react.surge.util.Worlds -> maRh:
    12:12:void <init>() -> <init>
    21:21:react.glang.GList getWorlds() -> RcAV
    33:33:boolean hasWorld(java.lang.String) -> PAuv
    45:45:org.bukkit.World getWorld(java.lang.String) -> getWorld
react.surge.util.package-info -> Vwbs:
react.text.ColoredString -> cuXY:
    react.surge.util.C c -> puYA
    java.lang.String s -> qMgS
    23:27:void <init>(react.surge.util.C,java.lang.String) -> <init>
    32:32:java.lang.String toString() -> toString
    37:37:react.surge.util.C getC() -> HUOq
    42:43:void setC(react.surge.util.C) -> uyTg
    47:47:java.lang.String getS() -> xGfp
    52:53:void setS(java.lang.String) -> uyTp
react.text.RTEX -> VgBf:
    react.glang.GList extras -> yLma
    22:25:void <init>(react.text.ColoredString[]) -> <init>
    27:30:void <init>() -> <init>
    34:34:react.glang.GList getExtras() -> kcdi
    44:58:react.json.JSONObject toJSON() -> qJcM
react.text.RTX -> NVYk:
    react.json.JSONArray base -> HVui
    22:26:void <init>() -> <init>
    36:37:void add(react.json.JSONObject) -> tBlP
    47:51:void addText(java.lang.String) -> addText
    63:67:void addText(java.lang.String,react.surge.util.C) -> uyTg
    81:90:void addTextHover(java.lang.String,react.text.RTEX,react.surge.util.C) -> Oqux
    104:114:void addTextSuggestedCommand(java.lang.String,java.lang.String,react.surge.util.C) -> Oqux
    128:138:void addTextOpenURL(java.lang.String,java.lang.String,react.surge.util.C) -> uyTg
    154:164:void addTextFireCommand(java.lang.String,java.lang.String,react.surge.util.C) -> jgsI
    182:196:void addTextSuggestedHoverCommand(java.lang.String,react.text.RTEX,java.lang.String,react.surge.util.C) -> Oqux
    212:226:void addTextOpenHoverURL(java.lang.String,react.text.RTEX,java.lang.String,react.surge.util.C) -> uyTg
    242:256:void addTextFireHoverCommand(java.lang.String,react.text.RTEX,java.lang.String,react.surge.util.C) -> jgsI
    265:265:react.json.JSONArray toJSON() -> woXB
    276:277:void tellRawTo(org.bukkit.entity.Player) -> YnrT
react.text.RawText -> jXHj:
    java.lang.String COLOR_BLACK -> jHvH
    java.lang.String COLOR_DARK_BLUE -> Hgvw
    java.lang.String COLOR_DARK_GREEN -> emKp
    java.lang.String COLOR_DARK_AQUA -> WIpJ
    java.lang.String COLOR_DARK_RED -> CPXF
    java.lang.String COLOR_DARK_PURPLE -> EpPk
    java.lang.String COLOR_GOLD -> liPN
    java.lang.String COLOR_GRAY -> mcbF
    java.lang.String COLOR_DARK_GRAY -> RnFV
    java.lang.String COLOR_BLUE -> VWmo
    java.lang.String COLOR_GREEN -> aFld
    java.lang.String COLOR_AQUA -> TYxi
    java.lang.String COLOR_RED -> WJQY
    java.lang.String COLOR_LIGHT_PURPLE -> kChU
    java.lang.String COLOR_YELLOW -> VWoK
    java.lang.String COLOR_WHITE -> vvlL
    java.lang.String COLOR_NONE -> XVEe
    java.lang.String HEAD_TEXT -> KXPW
    java.lang.String HEAD_COLOR -> SpiJ
    java.lang.String HEAD_BOLD -> XDbk
    java.lang.String HEAD_ITALIC -> Dlma
    java.lang.String HEAD_UNDERLINED -> gbQC
    java.lang.String HEAD_STRIKETHROUGH -> MxIX
    java.lang.String HEAD_OBFUSCATED -> XnuJ
    java.lang.String HEAD_CLICK_EVENT -> jIVL
    java.lang.String HEAD_HOVER_EVENT -> GKab
    java.lang.String HEAD_ACTION -> yVCC
    java.lang.String HEAD_VALUE -> ubfl
    java.lang.String HEAD_EXTRA -> hmbs
    java.lang.String HEAD_ACTION_SHOW_TEXT -> mdAc
    java.lang.String HEAD_ACTION_COMMAND -> snDH
    java.util.ArrayList components -> IcIw
    47:50:void <init>() -> <init>
    54:54:react.text.RawText addText(java.lang.String) -> UbkF
    59:59:react.text.RawText addText(java.lang.String,java.lang.String) -> gojx
    66:108:react.text.RawText addText(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean) -> Oqux
    113:113:react.text.RawText addTextWithCommand(java.lang.String,java.lang.String,java.lang.String) -> Oqux
    120:164:react.text.RawText addTextWithCommand(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean) -> Oqux
    169:169:react.text.RawText addTextWithHover(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> Oqux
    176:232:react.text.RawText addTextWithHover(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean) -> Oqux
    237:237:react.text.RawText addTextWithHoverCommand(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> Oqux
    244:302:react.text.RawText addTextWithHoverCommand(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean) -> Oqux
    307:313:java.lang.String compile() -> wLtA
    318:319:void tellRawTo(org.bukkit.plugin.java.JavaPlugin,org.bukkit.entity.Player) -> Oqux
